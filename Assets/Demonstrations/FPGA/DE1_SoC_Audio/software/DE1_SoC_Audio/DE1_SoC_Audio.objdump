
DE1_SoC_Audio.elf:     file format elf32-littlenios2
DE1_SoC_Audio.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x05080238

Program Header:
    LOAD off    0x00001000 vaddr 0x05080000 paddr 0x05080000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x05080020 paddr 0x05080020 align 2**12
         filesz 0x00016690 memsz 0x00016690 flags r-x
    LOAD off    0x000176b0 vaddr 0x050966b0 paddr 0x05098298 align 2**12
         filesz 0x00001be8 memsz 0x00001be8 flags rw-
    LOAD off    0x00019e80 vaddr 0x05099e80 paddr 0x05099e80 align 2**12
         filesz 0x00000000 memsz 0x0000018c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  05080000  05080000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  05080020  05080020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00015358  05080238  05080238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00001120  05095590  05095590  00016590  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001be8  050966b0  05098298  000176b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000018c  05099e80  05099e80  00019e80  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00000000  00000000  00019298  2**0
                  CONTENTS
  7 .onchip_memory2 00000000  0509a00c  0509a00c  00019298  2**0
                  CONTENTS
  8 .comment      0000002d  00000000  00000000  00019298  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000011f8  00000000  00000000  000192c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_info   000336a5  00000000  00000000  0001a4c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 0000ca28  00000000  00000000  0004db65  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line   0001af7d  00000000  00000000  0005a58d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_frame  00002ecc  00000000  00000000  0007550c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str    00004552  00000000  00000000  000783d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loc    0002354e  00000000  00000000  0007c92a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_alt_sim_info 00000060  00000000  00000000  0009fe78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 000026b0  00000000  00000000  0009fed8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .thread_model 00000003  00000000  00000000  000a62e0  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  000a62e3  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  000a62ef  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  000a62f0  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  000a62f1  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  000a62f5  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  000a62f9  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  000a62fd  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  000a6306  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  000a630f  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000a  00000000  00000000  000a6318  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000010  00000000  00000000  000a6322  2**0
                  CONTENTS, READONLY
 30 .jdi          0000506c  00000000  00000000  000a6332  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
05080000 l    d  .entry	00000000 .entry
05080020 l    d  .exceptions	00000000 .exceptions
05080238 l    d  .text	00000000 .text
05095590 l    d  .rodata	00000000 .rodata
050966b0 l    d  .rwdata	00000000 .rwdata
05099e80 l    d  .bss	00000000 .bss
00000000 l    d  .sdram	00000000 .sdram
0509a00c l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 e:/DE1_SoC_Audio/software/DE1_SoC_Audio_bsp//obj/HAL/src/crt0.o
05080280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
05099e84 l     O .bss	00000004 sum.1
05099e88 l     O .bss	00000002 cnt.0
00000000 l    df *ABS*	00000000 AUDIO.c
05099ebc l     O .bss	00000028 reg_file
00000000 l    df *ABS*	00000000 I2C.c
00000000 l    df *ABS*	00000000 LED.c
00000000 l    df *ABS*	00000000 SEG7.c
050966b0 l     O .rwdata	00000010 szMap
00000000 l    df *ABS*	00000000 debug.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
05096080 l     O .rodata	00000010 blanks.1
05096070 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 vfprintf.c
05086ce4 l     F .text	000000c0 __sbprintf
050960a0 l     O .rodata	00000010 blanks.1
05096090 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
05087094 l     F .text	000001fc quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
05088ce4 l     F .text	00000008 __fp_lock
05088cf8 l     F .text	00000008 __fp_unlock
05088d00 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
050966c0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0509614c l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
05096280 l     O .rodata	00000010 blanks.1
05096270 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 vfprintf.c
0508d3c8 l     F .text	000000f4 __sprint_r.part.0
0508e824 l     F .text	000000c0 __sbprintf
050962a0 l     O .rodata	00000010 blanks.1
05096290 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
0508eacc l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
05092a34 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
05092b40 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
05092ba4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
05092e30 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
05092f10 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
05093078 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
05093164 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
05093338 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0509828c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
050935b0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
050936e4 l     F .text	00000034 alt_dev_reg
05097200 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
050939dc l     F .text	0000020c altera_avalon_jtag_uart_irq
05093be8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0509422c l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
05094604 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
05094a7c l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
05094ba8 l     F .text	0000003c alt_get_errno
05094be4 l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
05099eb8 g     O .bss	00000004 alt_instruction_exception_handler
05080630 g     F .text	00000054 display_time_elapsed
0508b8d8 g     F .text	00000070 _mprec_log10
05081b3c g     F .text	00000128 I2C_Read
0508b9c4 g     F .text	00000060 __any_on
0508ef24 g     F .text	00000058 _isatty_r
05096158 g     O .rodata	00000028 __mprec_tinytens
05093274 g     F .text	0000007c alt_main
05082928 g     F .text	000000cc _puts_r
050803d0 g     F .text	0000005c button_monitor_isr
05099f0c g     O .bss	00000100 alt_irq
0508f070 g     F .text	00000064 _lseek_r
05098298 g       *ABS*	00000000 __flash_rwdata_start
0509164c g     F .text	00000080 .hidden __eqdf2
05080284 g     F .text	00000038 ui_is_mic_record
0509a00c g       *ABS*	00000000 __alt_heap_start
0508f9d8 g     F .text	00000060 _kill_r
05080d44 g     F .text	00000188 AUDIO_Init
050828f0 g     F .text	00000038 printf
0508f3a4 g     F .text	0000006c _wcrtomb_r
0508f548 g     F .text	00000098 _signal_r
05080f88 g     F .text	00000074 AUDIO_AdcEnableHighPassFilter
0508c0bc g     F .text	0000005c __sseek
05089038 g     F .text	00000010 __sinit
0508f244 g     F .text	00000148 __swbuf_r
0508ef7c g     F .text	00000074 _setlocale_r
05088e68 g     F .text	00000068 __sfmoreglue
05093314 g     F .text	00000024 __malloc_unlock
0508a6a8 g     F .text	0000012c memmove
05089024 g     F .text	00000014 _cleanup
05081810 g     F .text	000000f4 aduio_RegWrite
05081a10 g     F .text	0000002c AUDIO_FifoClear
0508a8c4 g     F .text	000000a4 _Balloc
050821d4 g     F .text	00000030 LED_AllOff
050916cc g     F .text	000000e8 .hidden __gtdf2
05094f9c g     F .text	00000024 altera_nios2_gen2_irq_init
050819c0 g     F .text	00000050 AUDIO_AdcFifoGetData
05081ee4 g     F .text	00000130 i2c_write
05080000 g     F .entry	0000001c __reset
05089a90 g     F .text	00000008 __localeconv_l
05080684 g     F .text	00000098 show_power
05080020 g       *ABS*	00000000 __flash_exceptions_start
0508eec4 g     F .text	00000060 _fstat_r
05099e98 g     O .bss	00000004 errno
0508c034 g     F .text	00000008 __seofread
0508c2e0 g     F .text	000010e8 ___svfiprintf_internal_r
05099ea8 g     O .bss	00000004 alt_argv
050a0260 g       *ABS*	00000000 _gp
05093580 g     F .text	00000030 usleep
05092c90 g     F .text	00000020 getpid
05080884 g     F .text	00000068 show_menu
05097080 g     O .rwdata	00000180 alt_fd_list
05094fc0 g     F .text	00000090 alt_find_dev
0508a5a8 g     F .text	00000100 memcpy
0508216c g     F .text	00000038 LED_Display
05088cec g     F .text	0000000c _cleanup_r
05092898 g     F .text	000000b8 .hidden __floatsidf
0508042c g     F .text	0000007c button_monitor_start
05094b2c g     F .text	0000007c alt_io_redirect
050917b4 g     F .text	000000e8 .hidden __ltdf2
05095590 g       *ABS*	00000000 __DTOR_END__
050829f4 g     F .text	00000010 puts
05095288 g     F .text	00000098 alt_exception_cause_generated_bad_addr
0508b830 g     F .text	000000a8 __ratio
0508e808 g     F .text	0000001c __vfiprintf_internal
050804a8 g     F .text	00000188 init_audio
05093de4 g     F .text	00000220 altera_avalon_jtag_uart_read
050828c0 g     F .text	00000030 _printf_r
05082800 g     F .text	00000064 .hidden __udivsi3
05092e6c g     F .text	000000a4 isatty
0508f5e0 g     F .text	000000c4 _raise_r
05081700 g     F .text	00000088 AUDIO_EnableByPass
0508e9a0 g     F .text	00000064 __assert_func
050961a8 g     O .rodata	000000c8 __mprec_tens
05086da4 g     F .text	000000c0 vsnprintf
050951f8 g     F .text	00000090 alt_icache_flush
05081c64 g     F .text	0000017c I2C_MultipleRead
05099e94 g     O .bss	00000004 __malloc_top_pad
0508fa38 g     F .text	00000004 _getpid_r
050814e0 g     F .text	00000110 AUDIO_SetLineInVol
05089a98 g     F .text	0000000c _localeconv_r
0508ad10 g     F .text	000000b0 __i2b
05089498 g     F .text	000004b8 __sfvwrite_r
0508f6a4 g     F .text	000000bc __sigtramp_r
05082278 g     F .text	00000060 SEG7_Clear
0508bf88 g     F .text	00000058 _sbrk_r
05082684 g     F .text	00000088 myprintf_dword_array
0508f124 g     F .text	00000064 _read_r
05098280 g     O .rwdata	00000004 alt_max_fd
0508eb8c g     F .text	00000070 _fclose_r
05088c60 g     F .text	00000084 fflush
050810b4 g     F .text	000000d8 AUDIO_DacEnableZeroCross
05099e90 g     O .bss	00000004 __malloc_max_sbrked_mem
05092cb0 g     F .text	00000180 alt_irq_register
05090500 g     F .text	000008f0 .hidden __adddf3
0508b5c4 g     F .text	00000108 __b2d
0508ffcc g     F .text	00000534 .hidden __umoddi3
050931a0 g     F .text	000000d4 lseek
05098260 g     O .rwdata	00000004 _global_impure_ptr
0508ba24 g     F .text	00000564 _realloc_r
0509a00c g       *ABS*	00000000 __bss_end
05094994 g     F .text	000000e8 alt_iic_isr_register
05094e94 g     F .text	00000108 alt_tick
0508fa3c g     F .text	00000590 .hidden __udivdi3
0508ee28 g     F .text	00000024 _fputwc_r
05096180 g     O .rodata	00000028 __mprec_bigtens
0508aac4 g     F .text	00000138 __s2b
0508f4d4 g     F .text	00000018 abort
05092950 g     F .text	00000090 .hidden __floatunsidf
05080f14 g     F .text	00000074 AUDIO_MicBoost
0508b2e4 g     F .text	00000058 __mcmp
05089058 g     F .text	00000014 __fp_lock_all
05094948 g     F .text	0000004c alt_ic_irq_enabled
05081a3c g     F .text	00000100 I2C_Write
05082338 g     F .text	00000070 SEG7_Number
05094df0 g     F .text	000000a4 alt_alarm_stop
05099ea0 g     O .bss	00000004 alt_irq_active
050800fc g     F .exceptions	000000c8 alt_irq_handler
05097058 g     O .rwdata	00000028 alt_dev_null
05081de0 g     F .text	0000008c i2c_start
050945b8 g     F .text	0000004c alt_dcache_flush_all
0508abfc g     F .text	00000064 __hi0bits
05092818 g     F .text	00000080 .hidden __fixdfsi
05098298 g       *ABS*	00000000 __ram_rwdata_end
05098278 g     O .rwdata	00000008 alt_dev_list
050935ec g     F .text	000000f8 write
050966b0 g       *ABS*	00000000 __ram_rodata_end
05092be0 g     F .text	000000b0 fstat
05092f4c g     F .text	0000012c kill
050917b4 g     F .text	000000e8 .hidden __ledf2
05082590 g     F .text	0000006c myprintf
0508b014 g     F .text	00000148 __pow5mult
0508d4d4 g     F .text	00001334 ___vfiprintf_internal_r
05082864 g     F .text	0000005c .hidden __umodsi3
05081788 g     F .text	00000088 AUDIO_EnableSiteTone
0509a00c g       *ABS*	00000000 end
050821a4 g     F .text	00000030 LED_AllOn
0509391c g     F .text	000000c0 altera_avalon_jtag_uart_init
050801c4 g     F .exceptions	00000074 alt_instruction_exception_entry
05095590 g       *ABS*	00000000 __CTOR_LIST__
050ce200 g       *ABS*	00000000 __alt_stack_pointer
050942a8 g     F .text	00000084 alt_avalon_timer_sc_init
050929e0 g     F .text	00000054 .hidden __clzsi2
05094004 g     F .text	00000228 altera_avalon_jtag_uart_write
05089048 g     F .text	00000004 __sfp_lock_acquire
0508a4d8 g     F .text	000000d0 memchr
05084bd4 g     F .text	000020f4 ___vfprintf_internal_r
05082a04 g     F .text	00000054 _sprintf_r
0508919c g     F .text	000002fc _free_r
05096404 g     O .rodata	00000180 _ctype_b
0508eff0 g     F .text	0000000c __locale_mb_cur_max
05095470 g     F .text	00000120 __call_exitprocs
05098268 g     O .rwdata	00000004 __malloc_sbrk_base
05080238 g     F .text	0000004c _start
05099eb0 g     O .bss	00000004 _alt_tick_rate
0508b15c g     F .text	00000188 __lshift
05099eb4 g     O .bss	00000004 _alt_nticks
0508f81c g     F .text	000000a0 signal
05093374 g     F .text	000000fc read
05093754 g     F .text	00000064 alt_sys_init
0508c120 g     F .text	000001c0 __ssprint_r
050953e0 g     F .text	00000090 __register_exitproc
0508118c g     F .text	00000088 AUDIO_DacEnableSoftMute
0508adc0 g     F .text	00000254 __multiply
05093c88 g     F .text	00000068 altera_avalon_jtag_uart_close
050966b0 g       *ABS*	00000000 __ram_rwdata_start
05095590 g       *ABS*	00000000 __ram_rodata_start
05099ee4 g     O .bss	00000028 __malloc_current_mallinfo
0508b6cc g     F .text	00000164 __d2b
050802f4 g     F .text	00000038 ui_is_dac_zero_cross
050937b8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
05095158 g     F .text	000000a0 alt_get_fd
05094460 g     F .text	00000158 alt_busy_sleep
0508e948 g     F .text	00000058 _close_r
05095368 g     F .text	00000078 memcmp
05093878 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0509a00c g       *ABS*	00000000 __alt_stack_base
050938c8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
05086f30 g     F .text	00000164 __swsetup_r
0508071c g     F .text	00000058 init
05090df0 g     F .text	0000085c .hidden __divdf3
05088ed0 g     F .text	00000154 __sfp
0508b948 g     F .text	0000007c __copybits
05080ffc g     F .text	000000b8 AUDIO_DacDeemphasisControl
05096ae4 g     O .rwdata	00000408 __malloc_av_
05089054 g     F .text	00000004 __sinit_lock_release
05086e64 g     F .text	000000cc _vsnprintf_r
05081e6c g     F .text	00000078 i2c_stop
0509189c g     F .text	00000674 .hidden __muldf3
0508bfe0 g     F .text	00000054 __sread
050822d8 g     F .text	00000060 SEG7_Full
05095050 g     F .text	00000108 alt_find_file
05082474 g     F .text	000000e8 SEG7_Decimal
05094640 g     F .text	000000a8 alt_dev_llist_insert
050932f0 g     F .text	00000024 __malloc_lock
050934c8 g     F .text	000000b8 sbrk
05082b54 g     F .text	00002080 ___svfprintf_internal_r
05081374 g     F .text	0000008c AUDIO_SetInputSource
05088c00 g     F .text	00000060 _fflush_r
0508ea18 g     F .text	000000b4 _calloc_r
05080ecc g     F .text	00000048 AUDIO_InterfaceActive
05099e80 g       *ABS*	00000000 __bss_start
0508a7d4 g     F .text	000000f0 memset
050808ec g     F .text	00000458 main
05099eac g     O .bss	00000004 alt_envp
05099e8c g     O .bss	00000004 __malloc_max_total_mem
05093818 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
05082014 g     F .text	00000158 i2c_read
0508f38c g     F .text	00000018 __swbuf
05099e80 g     O .bss	00000004 record_sample_rate
0508c118 g     F .text	00000008 __sclose
050ce200 g       *ABS*	00000000 __alt_heap_limit
0508ebfc g     F .text	00000070 fclose
05087290 g     F .text	00001748 _dtoa_r
05089cf8 g     F .text	000007e0 _malloc_r
0508f4a4 g     F .text	00000030 __ascii_wctomb
05098284 g     O .rwdata	00000004 alt_errno
0508ec6c g     F .text	00000020 _fiprintf_r
0508f8bc g     F .text	00000060 _init_signal
05089950 g     F .text	00000098 _fwalk
0508032c g     F .text	000000a4 ui_get_sample_rate
0508f0d4 g     F .text	0000000c _mbtowc_r
0508270c g     F .text	00000080 .hidden __divsi3
05089080 g     F .text	0000011c _malloc_trim_r
05095590 g       *ABS*	00000000 __CTOR_END__
0508129c g     F .text	000000d8 AUDIO_LineInMute
0508f188 g     F .text	000000b8 strcmp
05081214 g     F .text	00000088 AUDIO_MicMute
05095590 g       *ABS*	00000000 __flash_rodata_start
05095590 g       *ABS*	00000000 __DTOR_LIST__
0509164c g     F .text	00000080 .hidden __nedf2
05093718 g     F .text	0000003c alt_irq_init
05093470 g     F .text	00000058 alt_release_fd
05082a58 g     F .text	00000064 sprintf
05096584 g     O .rodata	00000100 .hidden __clz_tab
050823a8 g     F .text	000000cc SEG7_Hex
0508255c g     F .text	00000034 debug_output
05099e9c g     O .bss	00000004 _PathLocale
05095320 g     F .text	00000014 atexit
05080774 g     F .text	00000110 dump_record_data
0508e8e4 g     F .text	00000064 _write_r
0508effc g     F .text	00000074 setlocale
05098264 g     O .rwdata	00000004 _impure_ptr
05099ea4 g     O .bss	00000004 alt_argc
050889d8 g     F .text	00000228 __sflush_r
0509474c g     F .text	00000064 _do_dtors
05081988 g     F .text	00000038 AUDIO_AdcFifoNotEmpty
05080020 g       .exceptions	00000000 alt_irq_entry
0508f0e0 g     F .text	00000044 __ascii_mbtowc
0508b568 g     F .text	0000005c __ulp
0508906c g     F .text	00000014 __fp_unlock_all
050802bc g     F .text	00000038 ui_is_mic_boost
0508193c g     F .text	0000004c AUDIO_DacFifoSetData
05098270 g     O .rwdata	00000008 alt_fs_list
050825fc g     F .text	00000088 myprintf_hex_array
05080020 g       *ABS*	00000000 __ram_exceptions_start
05081400 g     F .text	000000e0 AUDIO_SetSampleRate
05089aa4 g     F .text	0000000c localeconv
05080000 g       *ABS*	00000000 __alt_mem_onchip_memory2
05089c60 g     F .text	00000098 __swhatbuf_r
050947e4 g     F .text	00000050 alt_ic_isr_register
05098298 g       *ABS*	00000000 _edata
0509a00c g       *ABS*	00000000 _end
050815f0 g     F .text	00000110 AUDIO_SetLineOutVol
0508ecc4 g     F .text	00000164 __fputwc
05080238 g       *ABS*	00000000 __ram_exceptions_end
05093cf0 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
050948bc g     F .text	0000008c alt_ic_irq_disable
0508c03c g     F .text	00000080 __swrite
0509826c g     O .rwdata	00000004 __malloc_trim_threshold
05095334 g     F .text	00000034 exit
05082204 g     F .text	00000074 LED_LightCount
0508ec8c g     F .text	00000038 fiprintf
0508f240 g     F .text	00000004 _vfiprintf_r
050899e8 g     F .text	000000a8 _fwalk_reent
0508b33c g     F .text	0000022c __mdiff
0508278c g     F .text	00000074 .hidden __modsi3
050ce200 g       *ABS*	00000000 __alt_data_end
05080020 g     F .exceptions	00000000 alt_exception
0508904c g     F .text	00000004 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_sdram
05096300 g     O .rodata	00000101 _ctype_
050927c4 g     F .text	00000054 .hidden __unorddf2
05092b6c g     F .text	00000038 _exit
0509432c g     F .text	00000134 alt_alarm_start
05089ab0 g     F .text	000001b0 __smakebuf_r
05082abc g     F .text	00000098 strlen
0508f4ec g     F .text	0000005c _init_signal_r
05094c9c g     F .text	00000154 open
05081904 g     F .text	00000038 AUDIO_DacFifoNotFull
050916cc g     F .text	000000e8 .hidden __gedf2
0508ea04 g     F .text	00000014 __assert
0508d4bc g     F .text	00000018 __sprint_r
050947b0 g     F .text	00000034 alt_icache_flush_all
05098288 g     O .rwdata	00000004 alt_priority_mask
05094834 g     F .text	00000088 alt_ic_irq_enable
05086cc8 g     F .text	0000001c __vfprintf_internal
0508f498 g     F .text	0000000c _wctomb_r
05091f10 g     F .text	000008b4 .hidden __subdf3
0508ac60 g     F .text	000000b0 __lo0bits
05098290 g     O .rwdata	00000008 alt_alarm_list
050946e8 g     F .text	00000064 _do_ctors
0508f91c g     F .text	000000bc __sigtramp
0508f410 g     F .text	00000088 wcrtomb
05092a70 g     F .text	000000d0 close
05096eec g     O .rwdata	0000016c __global_locale
050930e0 g     F .text	00000084 alt_load
0508ee4c g     F .text	00000078 fputwc
0508f760 g     F .text	000000bc raise
05089050 g     F .text	00000004 __sinit_lock_acquire
0508a98c g     F .text	00000138 __multadd
050955d4 g     O .rodata	00000800 szMenu
0508a968 g     F .text	00000024 _Bfree



Disassembly of section .entry:

05080000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 5080000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 5080004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 5080008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 508000c:	00bffd16 	blt	zero,r2,5080004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 5080010:	00414234 	movhi	at,1288
    ori r1, r1, %lo(_start)
 5080014:	08408e14 	ori	at,at,568
    jmp r1
 5080018:	0800683a 	jmp	at
 508001c:	00000000 	call	0 <__alt_mem_sdram>

Disassembly of section .exceptions:

05080020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 5080020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 5080024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 5080028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 508002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 5080030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 5080034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 5080038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 508003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 5080040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 5080044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 5080048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 508004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 5080050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 5080054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 5080058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 508005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 5080060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 5080064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 5080068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 508006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 5080070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 5080074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 5080078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 508007c:	10000326 	beq	r2,zero,508008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 5080080:	20000226 	beq	r4,zero,508008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 5080084:	50800fc0 	call	50800fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 5080088:	00000706 	br	50800a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 508008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 5080090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 5080094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 5080098:	50801c40 	call	50801c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 508009c:	1000021e 	bne	r2,zero,50800a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 50800a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 50800a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 50800a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 50800ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 50800b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 50800b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 50800b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 50800bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 50800c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 50800c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 50800c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 50800cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 50800d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 50800d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 50800d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 50800dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 50800e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 50800e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 50800e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 50800ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 50800f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 50800f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 50800f8:	ef80083a 	eret

050800fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 50800fc:	defff904 	addi	sp,sp,-28
 5080100:	dfc00615 	stw	ra,24(sp)
 5080104:	df000515 	stw	fp,20(sp)
 5080108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 508010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 5080110:	0005313a 	rdctl	r2,ipending
 5080114:	e0bffc15 	stw	r2,-16(fp)

  return active;
 5080118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 508011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 5080120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 5080124:	00800044 	movi	r2,1
 5080128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 508012c:	e0ffff17 	ldw	r3,-4(fp)
 5080130:	e0bffe17 	ldw	r2,-8(fp)
 5080134:	1884703a 	and	r2,r3,r2
 5080138:	10001126 	beq	r2,zero,5080180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 508013c:	e0bffd17 	ldw	r2,-12(fp)
 5080140:	100690fa 	slli	r3,r2,3
 5080144:	008142b4 	movhi	r2,1290
 5080148:	1885883a 	add	r2,r3,r2
 508014c:	10e7c317 	ldw	r3,-24820(r2)
 5080150:	e0bffd17 	ldw	r2,-12(fp)
 5080154:	100890fa 	slli	r4,r2,3
 5080158:	008142b4 	movhi	r2,1290
 508015c:	2085883a 	add	r2,r4,r2
 5080160:	10a7c417 	ldw	r2,-24816(r2)
 5080164:	1009883a 	mov	r4,r2
 5080168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 508016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
 5080170:	0005313a 	rdctl	r2,ipending
 5080174:	e0bffb15 	stw	r2,-20(fp)
  return active;
 5080178:	e0bffb17 	ldw	r2,-20(fp)
 508017c:	00000706 	br	508019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
 5080180:	e0bffe17 	ldw	r2,-8(fp)
 5080184:	1085883a 	add	r2,r2,r2
 5080188:	e0bffe15 	stw	r2,-8(fp)
      i++;
 508018c:	e0bffd17 	ldw	r2,-12(fp)
 5080190:	10800044 	addi	r2,r2,1
 5080194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
 5080198:	003fe406 	br	508012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
 508019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 50801a0:	e0bfff17 	ldw	r2,-4(fp)
 50801a4:	103fde1e 	bne	r2,zero,5080120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 50801a8:	0001883a 	nop
}
 50801ac:	0001883a 	nop
 50801b0:	e037883a 	mov	sp,fp
 50801b4:	dfc00117 	ldw	ra,4(sp)
 50801b8:	df000017 	ldw	fp,0(sp)
 50801bc:	dec00204 	addi	sp,sp,8
 50801c0:	f800283a 	ret

050801c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 50801c4:	defffb04 	addi	sp,sp,-20
 50801c8:	dfc00415 	stw	ra,16(sp)
 50801cc:	df000315 	stw	fp,12(sp)
 50801d0:	df000304 	addi	fp,sp,12
 50801d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 50801d8:	000531fa 	rdctl	r2,exception
 50801dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 50801e0:	e0bfff17 	ldw	r2,-4(fp)
 50801e4:	1004d0ba 	srli	r2,r2,2
 50801e8:	108007cc 	andi	r2,r2,31
 50801ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 50801f0:	0005333a 	rdctl	r2,badaddr
 50801f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 50801f8:	d0a71617 	ldw	r2,-25512(gp)
 50801fc:	10000726 	beq	r2,zero,508021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 5080200:	d0a71617 	ldw	r2,-25512(gp)
 5080204:	e0ffff17 	ldw	r3,-4(fp)
 5080208:	e1bffe17 	ldw	r6,-8(fp)
 508020c:	e17ffd17 	ldw	r5,-12(fp)
 5080210:	1809883a 	mov	r4,r3
 5080214:	103ee83a 	callr	r2
 5080218:	00000206 	br	5080224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 508021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 5080220:	0005883a 	mov	r2,zero
}
 5080224:	e037883a 	mov	sp,fp
 5080228:	dfc00117 	ldw	ra,4(sp)
 508022c:	df000017 	ldw	fp,0(sp)
 5080230:	dec00204 	addi	sp,sp,8
 5080234:	f800283a 	ret

Disassembly of section .text:

05080238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 5080238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 508023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 5080240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 5080244:	00bffd16 	blt	zero,r2,508023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 5080248:	06c14334 	movhi	sp,1292
    ori sp, sp, %lo(__alt_stack_pointer)
 508024c:	def88014 	ori	sp,sp,57856
    movhi gp, %hi(_gp)
 5080250:	068142b4 	movhi	gp,1290
    ori gp, gp, %lo(_gp)
 5080254:	d6809814 	ori	gp,gp,608
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 5080258:	00814274 	movhi	r2,1289
    ori r2, r2, %lo(__bss_start)
 508025c:	10a7a014 	ori	r2,r2,40576

    movhi r3, %hi(__bss_end)
 5080260:	00c14274 	movhi	r3,1289
    ori r3, r3, %lo(__bss_end)
 5080264:	18e80314 	ori	r3,r3,40972

    beq r2, r3, 1f
 5080268:	10c00326 	beq	r2,r3,5080278 <_start+0x40>

0:
    stw zero, (r2)
 508026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 5080270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 5080274:	10fffd36 	bltu	r2,r3,508026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 5080278:	50930e00 	call	50930e0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 508027c:	50932740 	call	5093274 <alt_main>

05080280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 5080280:	003fff06 	br	5080280 <alt_after_alt_main>

05080284 <ui_is_mic_record>:
int record_sample_rate;

///////////////////////////////////////////////////////////////////////////////
//////////// Internal function implement(body) ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
bool ui_is_mic_record(void){
 5080284:	defffe04 	addi	sp,sp,-8
 5080288:	df000115 	stw	fp,4(sp)
 508028c:	df000104 	addi	fp,sp,4
    bool bMicRecord;
    bMicRecord = (IORD(PIO_SW_BASE, 0) & 0x01)?FALSE:TRUE;
 5080290:	00810034 	movhi	r2,1024
 5080294:	10801037 	ldwio	r2,64(r2)
 5080298:	1080004c 	andi	r2,r2,1
 508029c:	1005003a 	cmpeq	r2,r2,zero
 50802a0:	10803fcc 	andi	r2,r2,255
 50802a4:	e0bfff15 	stw	r2,-4(fp)
    return bMicRecord;
 50802a8:	e0bfff17 	ldw	r2,-4(fp)
}
 50802ac:	e037883a 	mov	sp,fp
 50802b0:	df000017 	ldw	fp,0(sp)
 50802b4:	dec00104 	addi	sp,sp,4
 50802b8:	f800283a 	ret

050802bc <ui_is_mic_boost>:

bool ui_is_mic_boost(void){
 50802bc:	defffe04 	addi	sp,sp,-8
 50802c0:	df000115 	stw	fp,4(sp)
 50802c4:	df000104 	addi	fp,sp,4
    bool bMicBoost;
    bMicBoost = (IORD(PIO_SW_BASE, 0) & (0x01 << 1))?TRUE:FALSE;
 50802c8:	00810034 	movhi	r2,1024
 50802cc:	10801037 	ldwio	r2,64(r2)
 50802d0:	1080008c 	andi	r2,r2,2
 50802d4:	1004c03a 	cmpne	r2,r2,zero
 50802d8:	10803fcc 	andi	r2,r2,255
 50802dc:	e0bfff15 	stw	r2,-4(fp)
    return bMicBoost;
 50802e0:	e0bfff17 	ldw	r2,-4(fp)
}
 50802e4:	e037883a 	mov	sp,fp
 50802e8:	df000017 	ldw	fp,0(sp)
 50802ec:	dec00104 	addi	sp,sp,4
 50802f0:	f800283a 	ret

050802f4 <ui_is_dac_zero_cross>:

bool ui_is_dac_zero_cross(void){
 50802f4:	defffe04 	addi	sp,sp,-8
 50802f8:	df000115 	stw	fp,4(sp)
 50802fc:	df000104 	addi	fp,sp,4
    bool bZeroCross;
    bZeroCross = (IORD(PIO_SW_BASE, 0) & (0x01 << 2))?TRUE:FALSE;
 5080300:	00810034 	movhi	r2,1024
 5080304:	10801037 	ldwio	r2,64(r2)
 5080308:	1080010c 	andi	r2,r2,4
 508030c:	1004c03a 	cmpne	r2,r2,zero
 5080310:	10803fcc 	andi	r2,r2,255
 5080314:	e0bfff15 	stw	r2,-4(fp)
    return bZeroCross;
 5080318:	e0bfff17 	ldw	r2,-4(fp)
}
 508031c:	e037883a 	mov	sp,fp
 5080320:	df000017 	ldw	fp,0(sp)
 5080324:	dec00104 	addi	sp,sp,4
 5080328:	f800283a 	ret

0508032c <ui_get_sample_rate>:

int ui_get_sample_rate(void){
 508032c:	defffd04 	addi	sp,sp,-12
 5080330:	df000215 	stw	fp,8(sp)
 5080334:	df000204 	addi	fp,sp,8
    int sample_rate = 96000;
 5080338:	00800074 	movhi	r2,1
 508033c:	109dc004 	addi	r2,r2,30464
 5080340:	e0bfff15 	stw	r2,-4(fp)
    alt_u32 mask;
    mask = IORD(PIO_SW_BASE, 0);
 5080344:	00810034 	movhi	r2,1024
 5080348:	10801037 	ldwio	r2,64(r2)
 508034c:	e0bffe15 	stw	r2,-8(fp)
    mask = (mask >> 3) & 0x07;
 5080350:	e0bffe17 	ldw	r2,-8(fp)
 5080354:	1004d0fa 	srli	r2,r2,3
 5080358:	108001cc 	andi	r2,r2,7
 508035c:	e0bffe15 	stw	r2,-8(fp)
    if (mask == 1)
 5080360:	e0bffe17 	ldw	r2,-8(fp)
 5080364:	10800058 	cmpnei	r2,r2,1
 5080368:	1000031e 	bne	r2,zero,5080378 <ui_get_sample_rate+0x4c>
        sample_rate = 48000;
 508036c:	00aee014 	movui	r2,48000
 5080370:	e0bfff15 	stw	r2,-4(fp)
 5080374:	00001106 	br	50803bc <ui_get_sample_rate+0x90>
    else if (mask == 2)
 5080378:	e0bffe17 	ldw	r2,-8(fp)
 508037c:	10800098 	cmpnei	r2,r2,2
 5080380:	1000031e 	bne	r2,zero,5080390 <ui_get_sample_rate+0x64>
        sample_rate = 44100;
 5080384:	00ab1114 	movui	r2,44100
 5080388:	e0bfff15 	stw	r2,-4(fp)
 508038c:	00000b06 	br	50803bc <ui_get_sample_rate+0x90>
    else if (mask == 3)
 5080390:	e0bffe17 	ldw	r2,-8(fp)
 5080394:	108000d8 	cmpnei	r2,r2,3
 5080398:	1000031e 	bne	r2,zero,50803a8 <ui_get_sample_rate+0x7c>
        sample_rate = 32000;
 508039c:	009f4004 	movi	r2,32000
 50803a0:	e0bfff15 	stw	r2,-4(fp)
 50803a4:	00000506 	br	50803bc <ui_get_sample_rate+0x90>
    else if (mask == 4)
 50803a8:	e0bffe17 	ldw	r2,-8(fp)
 50803ac:	10800118 	cmpnei	r2,r2,4
 50803b0:	1000021e 	bne	r2,zero,50803bc <ui_get_sample_rate+0x90>
        sample_rate = 8000;
 50803b4:	0087d004 	movi	r2,8000
 50803b8:	e0bfff15 	stw	r2,-4(fp)
    return sample_rate;
 50803bc:	e0bfff17 	ldw	r2,-4(fp)
}
 50803c0:	e037883a 	mov	sp,fp
 50803c4:	df000017 	ldw	fp,0(sp)
 50803c8:	dec00104 	addi	sp,sp,4
 50803cc:	f800283a 	ret

050803d0 <button_monitor_isr>:

void button_monitor_isr(void* context, alt_u32 id){
 50803d0:	defffc04 	addi	sp,sp,-16
 50803d4:	df000315 	stw	fp,12(sp)
 50803d8:	df000304 	addi	fp,sp,12
 50803dc:	e13ffe15 	stw	r4,-8(fp)
 50803e0:	e17ffd15 	stw	r5,-12(fp)
    volatile alt_u32* pPressedMask = (volatile alt_u32*)context;
 50803e4:	e0bffe17 	ldw	r2,-8(fp)
 50803e8:	e0bfff15 	stw	r2,-4(fp)
    *pPressedMask |= IORD_ALTERA_AVALON_PIO_EDGE_CAP(PIO_KEY_BASE) & 0x0F;  // 4-button
 50803ec:	00810034 	movhi	r2,1024
 50803f0:	10801b37 	ldwio	r2,108(r2)
 50803f4:	10c003cc 	andi	r3,r2,15
 50803f8:	e0bfff17 	ldw	r2,-4(fp)
 50803fc:	10800017 	ldw	r2,0(r2)
 5080400:	10c6b03a 	or	r3,r2,r3
 5080404:	e0bfff17 	ldw	r2,-4(fp)
 5080408:	10c00015 	stw	r3,0(r2)

    IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_KEY_BASE,0);
 508040c:	0007883a 	mov	r3,zero
 5080410:	00810034 	movhi	r2,1024
 5080414:	10c01b35 	stwio	r3,108(r2)
}
 5080418:	0001883a 	nop
 508041c:	e037883a 	mov	sp,fp
 5080420:	df000017 	ldw	fp,0(sp)
 5080424:	dec00104 	addi	sp,sp,4
 5080428:	f800283a 	ret

0508042c <button_monitor_start>:

bool button_monitor_start(volatile alt_u32 *pPressedMask){
 508042c:	defffc04 	addi	sp,sp,-16
 5080430:	dfc00315 	stw	ra,12(sp)
 5080434:	df000215 	stw	fp,8(sp)
 5080438:	df000204 	addi	fp,sp,8
 508043c:	e13ffe15 	stw	r4,-8(fp)
    bool bSuccess = TRUE;
 5080440:	00800044 	movi	r2,1
 5080444:	e0bfff15 	stw	r2,-4(fp)
    // enable interrupt
    IOWR_ALTERA_AVALON_PIO_IRQ_MASK(PIO_KEY_BASE, 0x0F); // 4-button
 5080448:	00c003c4 	movi	r3,15
 508044c:	00810034 	movhi	r2,1024
 5080450:	10c01a35 	stwio	r3,104(r2)

    // Reset the edge catpure register
    IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_KEY_BASE,0);
 5080454:	0007883a 	mov	r3,zero
 5080458:	00810034 	movhi	r2,1024
 508045c:	10c01b35 	stwio	r3,108(r2)

    // register IRQ
    if (bSuccess && (alt_irq_register(PIO_KEY_IRQ, (void *)pPressedMask, button_monitor_isr) != 0)){
 5080460:	e0bfff17 	ldw	r2,-4(fp)
 5080464:	10000a26 	beq	r2,zero,5080490 <button_monitor_start+0x64>
 5080468:	01814234 	movhi	r6,1288
 508046c:	3180f404 	addi	r6,r6,976
 5080470:	e17ffe17 	ldw	r5,-8(fp)
 5080474:	01000084 	movi	r4,2
 5080478:	5092cb00 	call	5092cb0 <alt_irq_register>
 508047c:	10000426 	beq	r2,zero,5080490 <button_monitor_start+0x64>
        printf("[SW-MONITOR]register button IRQ fail\r\n");
 5080480:	01014274 	movhi	r4,1289
 5080484:	21156404 	addi	r4,r4,21904
 5080488:	50829f40 	call	50829f4 <puts>
        bSuccess = FALSE;
 508048c:	e03fff15 	stw	zero,-4(fp)
    }

    return bSuccess;
 5080490:	e0bfff17 	ldw	r2,-4(fp)
}
 5080494:	e037883a 	mov	sp,fp
 5080498:	dfc00117 	ldw	ra,4(sp)
 508049c:	df000017 	ldw	fp,0(sp)
 50804a0:	dec00204 	addi	sp,sp,8
 50804a4:	f800283a 	ret

050804a8 <init_audio>:




bool init_audio(AUDIO_FUNC audio_func){
 50804a8:	defffb04 	addi	sp,sp,-20
 50804ac:	dfc00415 	stw	ra,16(sp)
 50804b0:	df000315 	stw	fp,12(sp)
 50804b4:	df000304 	addi	fp,sp,12
 50804b8:	e13ffd15 	stw	r4,-12(fp)
    bool bSuccess = TRUE;
 50804bc:	00800044 	movi	r2,1
 50804c0:	e0bfff15 	stw	r2,-4(fp)
    AUDIO_InterfaceActive(FALSE);
 50804c4:	0009883a 	mov	r4,zero
 50804c8:	5080ecc0 	call	5080ecc <AUDIO_InterfaceActive>
    //
    if (audio_func == MIC_RECORD){
 50804cc:	e0bffd17 	ldw	r2,-12(fp)
 50804d0:	10000f1e 	bne	r2,zero,5080510 <init_audio+0x68>
        bool bMicBoost;
        bMicBoost = ui_is_mic_boost();
 50804d4:	50802bc0 	call	50802bc <ui_is_mic_boost>
 50804d8:	e0bffe15 	stw	r2,-8(fp)
        AUDIO_SetInputSource(SOURCE_MIC);
 50804dc:	0009883a 	mov	r4,zero
 50804e0:	50813740 	call	5081374 <AUDIO_SetInputSource>
        AUDIO_DacEnableSoftMute(TRUE);
 50804e4:	01000044 	movi	r4,1
 50804e8:	508118c0 	call	508118c <AUDIO_DacEnableSoftMute>
        AUDIO_AdcEnableHighPassFilter(FALSE);
 50804ec:	0009883a 	mov	r4,zero
 50804f0:	5080f880 	call	5080f88 <AUDIO_AdcEnableHighPassFilter>
        AUDIO_MicBoost(bMicBoost);
 50804f4:	e13ffe17 	ldw	r4,-8(fp)
 50804f8:	5080f140 	call	5080f14 <AUDIO_MicBoost>
        AUDIO_MicMute(FALSE);
 50804fc:	0009883a 	mov	r4,zero
 5080500:	50812140 	call	5081214 <AUDIO_MicMute>
        AUDIO_LineInMute(TRUE);
 5080504:	01000044 	movi	r4,1
 5080508:	508129c0 	call	508129c <AUDIO_LineInMute>
 508050c:	00002606 	br	50805a8 <init_audio+0x100>
    }else if (audio_func == LINEIN_RECORD){
 5080510:	e0bffd17 	ldw	r2,-12(fp)
 5080514:	10800058 	cmpnei	r2,r2,1
 5080518:	10000e1e 	bne	r2,zero,5080554 <init_audio+0xac>
        AUDIO_SetInputSource(SOURCE_LINEIN);
 508051c:	01000044 	movi	r4,1
 5080520:	50813740 	call	5081374 <AUDIO_SetInputSource>
        AUDIO_DacEnableSoftMute(TRUE);
 5080524:	01000044 	movi	r4,1
 5080528:	508118c0 	call	508118c <AUDIO_DacEnableSoftMute>
        AUDIO_AdcEnableHighPassFilter(FALSE);
 508052c:	0009883a 	mov	r4,zero
 5080530:	5080f880 	call	5080f88 <AUDIO_AdcEnableHighPassFilter>
        AUDIO_MicMute(TRUE);
 5080534:	01000044 	movi	r4,1
 5080538:	50812140 	call	5081214 <AUDIO_MicMute>
        AUDIO_LineInMute(FALSE);
 508053c:	0009883a 	mov	r4,zero
 5080540:	508129c0 	call	508129c <AUDIO_LineInMute>
        AUDIO_SetLineInVol(0x17, 0x17);  // max 0x1F, min:0; 0x17: 0dB (assume max input is 2.0v rms)
 5080544:	014005c4 	movi	r5,23
 5080548:	010005c4 	movi	r4,23
 508054c:	50814e00 	call	50814e0 <AUDIO_SetLineInVol>
 5080550:	00001506 	br	50805a8 <init_audio+0x100>
    }else if (audio_func == LINEOUT_PLAY){
 5080554:	e0bffd17 	ldw	r2,-12(fp)
 5080558:	10800098 	cmpnei	r2,r2,2
 508055c:	1000121e 	bne	r2,zero,50805a8 <init_audio+0x100>
        AUDIO_DacEnableSoftMute(TRUE);
 5080560:	01000044 	movi	r4,1
 5080564:	508118c0 	call	508118c <AUDIO_DacEnableSoftMute>
        AUDIO_MicBoost(FALSE);
 5080568:	0009883a 	mov	r4,zero
 508056c:	5080f140 	call	5080f14 <AUDIO_MicBoost>
        AUDIO_MicMute(TRUE);
 5080570:	01000044 	movi	r4,1
 5080574:	50812140 	call	5081214 <AUDIO_MicMute>
        AUDIO_LineInMute(FALSE);
 5080578:	0009883a 	mov	r4,zero
 508057c:	508129c0 	call	508129c <AUDIO_LineInMute>
        AUDIO_DacEnableSoftMute(FALSE);
 5080580:	0009883a 	mov	r4,zero
 5080584:	508118c0 	call	508118c <AUDIO_DacEnableSoftMute>
        //AUDIO_DacDeemphasisControl(DEEMPHASIS_48K);
        AUDIO_DacEnableZeroCross(ui_is_dac_zero_cross());
 5080588:	50802f40 	call	50802f4 <ui_is_dac_zero_cross>
 508058c:	1009883a 	mov	r4,r2
 5080590:	50810b40 	call	50810b4 <AUDIO_DacEnableZeroCross>
        AUDIO_SetLineOutVol(LINEOUT_DEFUALT_VOL, LINEOUT_DEFUALT_VOL); // max 7F, min: 30, 0x79: 0 db
 5080594:	01401e44 	movi	r5,121
 5080598:	01001e44 	movi	r4,121
 508059c:	50815f00 	call	50815f0 <AUDIO_SetLineOutVol>
        AUDIO_DacEnableSoftMute(FALSE);
 50805a0:	0009883a 	mov	r4,zero
 50805a4:	508118c0 	call	508118c <AUDIO_DacEnableSoftMute>
    }

    if (record_sample_rate == 8000)
 50805a8:	d0a70817 	ldw	r2,-25568(gp)
 50805ac:	1087d018 	cmpnei	r2,r2,8000
 50805b0:	1000031e 	bne	r2,zero,50805c0 <init_audio+0x118>
        AUDIO_SetSampleRate(RATE_ADC8K_DAC8K);
 50805b4:	010000c4 	movi	r4,3
 50805b8:	50814000 	call	5081400 <AUDIO_SetSampleRate>
 50805bc:	00001406 	br	5080610 <init_audio+0x168>
    else if (record_sample_rate == 32000)
 50805c0:	d0a70817 	ldw	r2,-25568(gp)
 50805c4:	109f4018 	cmpnei	r2,r2,32000
 50805c8:	1000031e 	bne	r2,zero,50805d8 <init_audio+0x130>
        AUDIO_SetSampleRate(RATE_ADC32K_DAC32K);
 50805cc:	01000104 	movi	r4,4
 50805d0:	50814000 	call	5081400 <AUDIO_SetSampleRate>
 50805d4:	00000e06 	br	5080610 <init_audio+0x168>
    else if (record_sample_rate == 48000)
 50805d8:	d0e70817 	ldw	r3,-25568(gp)
 50805dc:	00aee014 	movui	r2,48000
 50805e0:	1880031e 	bne	r3,r2,50805f0 <init_audio+0x148>
        AUDIO_SetSampleRate(RATE_ADC48K_DAC48K);
 50805e4:	0009883a 	mov	r4,zero
 50805e8:	50814000 	call	5081400 <AUDIO_SetSampleRate>
 50805ec:	00000806 	br	5080610 <init_audio+0x168>
    else if (record_sample_rate == 44100)
 50805f0:	d0e70817 	ldw	r3,-25568(gp)
 50805f4:	00ab1114 	movui	r2,44100
 50805f8:	1880031e 	bne	r3,r2,5080608 <init_audio+0x160>
        AUDIO_SetSampleRate(RATE_ADC44K1_DAC44K1);
 50805fc:	01000184 	movi	r4,6
 5080600:	50814000 	call	5081400 <AUDIO_SetSampleRate>
 5080604:	00000206 	br	5080610 <init_audio+0x168>
    else
        AUDIO_SetSampleRate(RATE_ADC96K_DAC96K);
 5080608:	01000144 	movi	r4,5
 508060c:	50814000 	call	5081400 <AUDIO_SetSampleRate>
    //
    AUDIO_InterfaceActive(TRUE);
 5080610:	01000044 	movi	r4,1
 5080614:	5080ecc0 	call	5080ecc <AUDIO_InterfaceActive>

    return bSuccess;
 5080618:	e0bfff17 	ldw	r2,-4(fp)
}
 508061c:	e037883a 	mov	sp,fp
 5080620:	dfc00117 	ldw	ra,4(sp)
 5080624:	df000017 	ldw	fp,0(sp)
 5080628:	dec00204 	addi	sp,sp,8
 508062c:	f800283a 	ret

05080630 <display_time_elapsed>:


void display_time_elapsed(alt_u32 sample_num){
 5080630:	defffc04 	addi	sp,sp,-16
 5080634:	dfc00315 	stw	ra,12(sp)
 5080638:	df000215 	stw	fp,8(sp)
 508063c:	df000204 	addi	fp,sp,8
 5080640:	e13ffe15 	stw	r4,-8(fp)
    // assume sample rate is 48K
    alt_u32 time;
    time = sample_num * 100 / record_sample_rate;
 5080644:	e0bffe17 	ldw	r2,-8(fp)
 5080648:	10801924 	muli	r2,r2,100
 508064c:	d0e70817 	ldw	r3,-25568(gp)
 5080650:	180b883a 	mov	r5,r3
 5080654:	1009883a 	mov	r4,r2
 5080658:	50828000 	call	5082800 <__udivsi3>
 508065c:	e0bfff15 	stw	r2,-4(fp)
    SEG7_Decimal(time, 0x04);
 5080660:	01400104 	movi	r5,4
 5080664:	e13fff17 	ldw	r4,-4(fp)
 5080668:	50824740 	call	5082474 <SEG7_Decimal>
}
 508066c:	0001883a 	nop
 5080670:	e037883a 	mov	sp,fp
 5080674:	dfc00117 	ldw	ra,4(sp)
 5080678:	df000017 	ldw	fp,0(sp)
 508067c:	dec00204 	addi	sp,sp,8
 5080680:	f800283a 	ret

05080684 <show_power>:

void show_power(short sample){
 5080684:	defffc04 	addi	sp,sp,-16
 5080688:	dfc00315 	stw	ra,12(sp)
 508068c:	df000215 	stw	fp,8(sp)
 5080690:	df000204 	addi	fp,sp,8
 5080694:	2005883a 	mov	r2,r4
 5080698:	e0bffe0d 	sth	r2,-8(fp)
    static alt_u32 sum = 0;
    static alt_u16   cnt = 0;
    alt_u16 power = 0;
 508069c:	e03fff8d 	sth	zero,-2(fp)
    sum += (sample >= 0)?sample:-sample;
 50806a0:	e0bffe0f 	ldh	r2,-8(fp)
 50806a4:	10000216 	blt	r2,zero,50806b0 <show_power+0x2c>
 50806a8:	e0bffe0f 	ldh	r2,-8(fp)
 50806ac:	00000206 	br	50806b8 <show_power+0x34>
 50806b0:	e0bffe0f 	ldh	r2,-8(fp)
 50806b4:	0085c83a 	sub	r2,zero,r2
 50806b8:	d0e70917 	ldw	r3,-25564(gp)
 50806bc:	10c5883a 	add	r2,r2,r3
 50806c0:	d0a70915 	stw	r2,-25564(gp)
    cnt++;
 50806c4:	d0a70a0b 	ldhu	r2,-25560(gp)
 50806c8:	10800044 	addi	r2,r2,1
 50806cc:	d0a70a0d 	sth	r2,-25560(gp)
    if (cnt == 32){
 50806d0:	d0a70a0b 	ldhu	r2,-25560(gp)
 50806d4:	10bfffcc 	andi	r2,r2,65535
 50806d8:	10800818 	cmpnei	r2,r2,32
 50806dc:	1000091e 	bne	r2,zero,5080704 <show_power+0x80>
        power = sum >> 13;
 50806e0:	d0a70917 	ldw	r2,-25564(gp)
 50806e4:	1004d37a 	srli	r2,r2,13
 50806e8:	e0bfff8d 	sth	r2,-2(fp)
        LED_LightCount(power);
 50806ec:	e0bfff8b 	ldhu	r2,-2(fp)
 50806f0:	10803fcc 	andi	r2,r2,255
 50806f4:	1009883a 	mov	r4,r2
 50806f8:	50822040 	call	5082204 <LED_LightCount>
        sum = 0;
 50806fc:	d0270915 	stw	zero,-25564(gp)
        cnt = 0;
 5080700:	d0270a0d 	sth	zero,-25560(gp)
    }
}
 5080704:	0001883a 	nop
 5080708:	e037883a 	mov	sp,fp
 508070c:	dfc00117 	ldw	ra,4(sp)
 5080710:	df000017 	ldw	fp,0(sp)
 5080714:	dec00204 	addi	sp,sp,8
 5080718:	f800283a 	ret

0508071c <init>:


bool init(void){
 508071c:	defffd04 	addi	sp,sp,-12
 5080720:	dfc00215 	stw	ra,8(sp)
 5080724:	df000115 	stw	fp,4(sp)
 5080728:	df000104 	addi	fp,sp,4
    bool bSuccess = TRUE;
 508072c:	00800044 	movi	r2,1
 5080730:	e0bfff15 	stw	r2,-4(fp)

    SEG7_Clear();
 5080734:	50822780 	call	5082278 <SEG7_Clear>


    SEG7_Decimal(0x00000000, 0x00);
 5080738:	000b883a 	mov	r5,zero
 508073c:	0009883a 	mov	r4,zero
 5080740:	50824740 	call	5082474 <SEG7_Decimal>

    // prepare
    if (!AUDIO_Init()){
 5080744:	5080d440 	call	5080d44 <AUDIO_Init>
 5080748:	1000041e 	bne	r2,zero,508075c <init+0x40>

        printf("Audio Init Error\r\n");
 508074c:	01014274 	movhi	r4,1289
 5080750:	21156e04 	addi	r4,r4,21944
 5080754:	50829f40 	call	50829f4 <puts>
        bSuccess = FALSE;
 5080758:	e03fff15 	stw	zero,-4(fp)
    }


    return bSuccess;
 508075c:	e0bfff17 	ldw	r2,-4(fp)
}
 5080760:	e037883a 	mov	sp,fp
 5080764:	dfc00117 	ldw	ra,4(sp)
 5080768:	df000017 	ldw	fp,0(sp)
 508076c:	dec00204 	addi	sp,sp,8
 5080770:	f800283a 	ret

05080774 <dump_record_data>:

void dump_record_data(alt_u32 *pData, alt_u32 len){
 5080774:	defff804 	addi	sp,sp,-32
 5080778:	dfc00715 	stw	ra,28(sp)
 508077c:	df000615 	stw	fp,24(sp)
 5080780:	df000604 	addi	fp,sp,24
 5080784:	e13ffb15 	stw	r4,-20(fp)
 5080788:	e17ffa15 	stw	r5,-24(fp)
    short sample_l, sample_r, sample_max = 0;
 508078c:	e03fff8d 	sth	zero,-2(fp)
    alt_u32 data;
    int i;
    //return ;
    for(i=0;i<len;i++){
 5080790:	e03ffe15 	stw	zero,-8(fp)
 5080794:	00002d06 	br	508084c <dump_record_data+0xd8>
        data = *pData++;
 5080798:	e0bffb17 	ldw	r2,-20(fp)
 508079c:	10c00104 	addi	r3,r2,4
 50807a0:	e0fffb15 	stw	r3,-20(fp)
 50807a4:	10800017 	ldw	r2,0(r2)
 50807a8:	e0bffd15 	stw	r2,-12(fp)
        sample_l = (short)((data >> 16) & 0xFFFF);
 50807ac:	e0bffd17 	ldw	r2,-12(fp)
 50807b0:	1004d43a 	srli	r2,r2,16
 50807b4:	e0bffc8d 	sth	r2,-14(fp)
        sample_r = (short)(data & 0xFFFF);
 50807b8:	e0bffd17 	ldw	r2,-12(fp)
 50807bc:	e0bffc0d 	sth	r2,-16(fp)
        //printf("[%d]%d/%d\n", i, sample_l, sample_r);
        if (sample_l > 0 && sample_max <  sample_l)
 50807c0:	e0bffc8f 	ldh	r2,-14(fp)
 50807c4:	0080050e 	bge	zero,r2,50807dc <dump_record_data+0x68>
 50807c8:	e0ffff8f 	ldh	r3,-2(fp)
 50807cc:	e0bffc8f 	ldh	r2,-14(fp)
 50807d0:	1880020e 	bge	r3,r2,50807dc <dump_record_data+0x68>
            sample_max = sample_l;
 50807d4:	e0bffc8b 	ldhu	r2,-14(fp)
 50807d8:	e0bfff8d 	sth	r2,-2(fp)
        if (sample_l < 0 && sample_max <  -sample_l)
 50807dc:	e0bffc8f 	ldh	r2,-14(fp)
 50807e0:	1000070e 	bge	r2,zero,5080800 <dump_record_data+0x8c>
 50807e4:	e0ffff8f 	ldh	r3,-2(fp)
 50807e8:	e0bffc8f 	ldh	r2,-14(fp)
 50807ec:	0085c83a 	sub	r2,zero,r2
 50807f0:	1880030e 	bge	r3,r2,5080800 <dump_record_data+0x8c>
            sample_max = -sample_l;
 50807f4:	e0bffc8b 	ldhu	r2,-14(fp)
 50807f8:	0085c83a 	sub	r2,zero,r2
 50807fc:	e0bfff8d 	sth	r2,-2(fp)
        if (sample_r > 0 && sample_max <  sample_r)
 5080800:	e0bffc0f 	ldh	r2,-16(fp)
 5080804:	0080050e 	bge	zero,r2,508081c <dump_record_data+0xa8>
 5080808:	e0ffff8f 	ldh	r3,-2(fp)
 508080c:	e0bffc0f 	ldh	r2,-16(fp)
 5080810:	1880020e 	bge	r3,r2,508081c <dump_record_data+0xa8>
            sample_max = sample_r;
 5080814:	e0bffc0b 	ldhu	r2,-16(fp)
 5080818:	e0bfff8d 	sth	r2,-2(fp)
        if (sample_r < 0 && sample_max <  -sample_r)
 508081c:	e0bffc0f 	ldh	r2,-16(fp)
 5080820:	1000070e 	bge	r2,zero,5080840 <dump_record_data+0xcc>
 5080824:	e0ffff8f 	ldh	r3,-2(fp)
 5080828:	e0bffc0f 	ldh	r2,-16(fp)
 508082c:	0085c83a 	sub	r2,zero,r2
 5080830:	1880030e 	bge	r3,r2,5080840 <dump_record_data+0xcc>
            sample_max = -sample_r;
 5080834:	e0bffc0b 	ldhu	r2,-16(fp)
 5080838:	0085c83a 	sub	r2,zero,r2
 508083c:	e0bfff8d 	sth	r2,-2(fp)
    for(i=0;i<len;i++){
 5080840:	e0bffe17 	ldw	r2,-8(fp)
 5080844:	10800044 	addi	r2,r2,1
 5080848:	e0bffe15 	stw	r2,-8(fp)
 508084c:	e0fffe17 	ldw	r3,-8(fp)
 5080850:	e0bffa17 	ldw	r2,-24(fp)
 5080854:	18bfd036 	bltu	r3,r2,5080798 <dump_record_data+0x24>
    }
    printf("max=%d\n", sample_max);
 5080858:	e0bfff8f 	ldh	r2,-2(fp)
 508085c:	100b883a 	mov	r5,r2
 5080860:	01014274 	movhi	r4,1289
 5080864:	21157304 	addi	r4,r4,21964
 5080868:	50828f00 	call	50828f0 <printf>
}
 508086c:	0001883a 	nop
 5080870:	e037883a 	mov	sp,fp
 5080874:	dfc00117 	ldw	ra,4(sp)
 5080878:	df000017 	ldw	fp,0(sp)
 508087c:	dec00204 	addi	sp,sp,8
 5080880:	f800283a 	ret

05080884 <show_menu>:
    "  LED:  Display audio singal strength.\n",
    "  SEG7: Display time elapsed for playing/recording.\n"
    "\n\n"
};

void show_menu(void){
 5080884:	defffd04 	addi	sp,sp,-12
 5080888:	dfc00215 	stw	ra,8(sp)
 508088c:	df000115 	stw	fp,4(sp)
 5080890:	df000104 	addi	fp,sp,4
    int i;
    for(i=0;i<sizeof(szMenu)/sizeof(szMenu[0]);i++)
 5080894:	e03fff15 	stw	zero,-4(fp)
 5080898:	00000a06 	br	50808c4 <show_menu+0x40>
        printf(szMenu[i]);
 508089c:	e0bfff17 	ldw	r2,-4(fp)
 50808a0:	100691fa 	slli	r3,r2,7
 50808a4:	00814274 	movhi	r2,1289
 50808a8:	10957504 	addi	r2,r2,21972
 50808ac:	1885883a 	add	r2,r3,r2
 50808b0:	1009883a 	mov	r4,r2
 50808b4:	50828f00 	call	50828f0 <printf>
    for(i=0;i<sizeof(szMenu)/sizeof(szMenu[0]);i++)
 50808b8:	e0bfff17 	ldw	r2,-4(fp)
 50808bc:	10800044 	addi	r2,r2,1
 50808c0:	e0bfff15 	stw	r2,-4(fp)
 50808c4:	e0bfff17 	ldw	r2,-4(fp)
 50808c8:	10800430 	cmpltui	r2,r2,16
 50808cc:	103ff31e 	bne	r2,zero,508089c <show_menu+0x18>
}
 50808d0:	0001883a 	nop
 50808d4:	0001883a 	nop
 50808d8:	e037883a 	mov	sp,fp
 50808dc:	dfc00117 	ldw	ra,4(sp)
 50808e0:	df000017 	ldw	fp,0(sp)
 50808e4:	dec00204 	addi	sp,sp,8
 50808e8:	f800283a 	ret

050808ec <main>:

int main()
{
 50808ec:	deffeb04 	addi	sp,sp,-84
 50808f0:	dfc01415 	stw	ra,80(sp)
 50808f4:	df001315 	stw	fp,76(sp)
 50808f8:	df001304 	addi	fp,sp,76
    typedef enum{
        ST_STANDY,
        ST_RECODING,
        ST_PLAYING
    }STATE;
    STATE state = ST_STANDY;
 50808fc:	e03fff15 	stw	zero,-4(fp)
    volatile alt_u32 button_mask=0;
 5080900:	e03fee15 	stw	zero,-72(fp)
    bool bRecordPressed, bPlayPressed, bError = FALSE;
 5080904:	e03ffe15 	stw	zero,-8(fp)
    alt_u32 *pBuf, *pPlaying, *pRecording, RecordLen, PlayLen, data, try_cnt, buf_sample_size;
    alt_u16 ch_right, ch_left;


    printf("\nHello World\n");
 5080908:	01014274 	movhi	r4,1289
 508090c:	21177504 	addi	r4,r4,24020
 5080910:	50829f40 	call	50829f4 <puts>

    show_menu();
 5080914:	50808840 	call	5080884 <show_menu>
    if (!init())
 5080918:	508071c0 	call	508071c <init>
 508091c:	1000021e 	bne	r2,zero,5080928 <main+0x3c>
        return 0;
 5080920:	0005883a 	mov	r2,zero
 5080924:	00010206 	br	5080d30 <main+0x444>


#ifdef USE_SDRAM_FOR_DATA
    pBuf = (alt_u32 *)SDRAM_BASE;
 5080928:	e03ff615 	stw	zero,-40(fp)
    buf_sample_size = SDRAM_SPAN/sizeof(alt_u32);
 508092c:	00804034 	movhi	r2,256
 5080930:	e0bff515 	stw	r2,-44(fp)
        LCD_TextOut("malloc fail\n\n");
        printf("malloc fail\r\n");
        return 0;
    }
#endif
    button_monitor_start(&button_mask);  // button IRQ
 5080934:	e0bfee04 	addi	r2,fp,-72
 5080938:	1009883a 	mov	r4,r2
 508093c:	508042c0 	call	508042c <button_monitor_start>
    printf("ready\n");
 5080940:	01014274 	movhi	r4,1289
 5080944:	21177904 	addi	r4,r4,24036
 5080948:	50829f40 	call	50829f4 <puts>


    // test
    record_sample_rate = ui_get_sample_rate();
 508094c:	508032c0 	call	508032c <ui_get_sample_rate>
 5080950:	d0a70815 	stw	r2,-25568(gp)
    RecordLen = buf_sample_size;
 5080954:	e0bff517 	ldw	r2,-44(fp)
 5080958:	e0bffb15 	stw	r2,-20(fp)
    //

    // infinite loop
    while(1){
        //
        bRecordPressed = (button_mask & RECORD_BUTTON)?TRUE:FALSE;
 508095c:	e0bfee17 	ldw	r2,-72(fp)
 5080960:	1080020c 	andi	r2,r2,8
 5080964:	1004c03a 	cmpne	r2,r2,zero
 5080968:	10803fcc 	andi	r2,r2,255
 508096c:	e0bff415 	stw	r2,-48(fp)
        bPlayPressed = (button_mask & PLAY_BUTTON)?TRUE:FALSE;
 5080970:	e0bfee17 	ldw	r2,-72(fp)
 5080974:	1080010c 	andi	r2,r2,4
 5080978:	1004c03a 	cmpne	r2,r2,zero
 508097c:	10803fcc 	andi	r2,r2,255
 5080980:	e0bff315 	stw	r2,-52(fp)
        if (bPlayPressed || bRecordPressed)
 5080984:	e0bff317 	ldw	r2,-52(fp)
 5080988:	1000021e 	bne	r2,zero,5080994 <main+0xa8>
 508098c:	e0bff417 	ldw	r2,-48(fp)
 5080990:	10000126 	beq	r2,zero,5080998 <main+0xac>
            button_mask = 0;
 5080994:	e03fee15 	stw	zero,-72(fp)
        if (state == ST_STANDY){
 5080998:	e0bfff17 	ldw	r2,-4(fp)
 508099c:	1000431e 	bne	r2,zero,5080aac <main+0x1c0>
            if (bRecordPressed){
 50809a0:	e0bff417 	ldw	r2,-48(fp)
 50809a4:	10002826 	beq	r2,zero,5080a48 <main+0x15c>
                bool bMicRecord;
                record_sample_rate = ui_get_sample_rate();
 50809a8:	508032c0 	call	508032c <ui_get_sample_rate>
 50809ac:	d0a70815 	stw	r2,-25568(gp)
                bMicRecord = ui_is_mic_record();
 50809b0:	50802840 	call	5080284 <ui_is_mic_record>
 50809b4:	e0bff015 	stw	r2,-64(fp)
                AUDIO_FifoClear();
 50809b8:	5081a100 	call	5081a10 <AUDIO_FifoClear>
                init_audio(bMicRecord?MIC_RECORD:LINEIN_RECORD);
 50809bc:	e0bff017 	ldw	r2,-64(fp)
 50809c0:	1005003a 	cmpeq	r2,r2,zero
 50809c4:	10803fcc 	andi	r2,r2,255
 50809c8:	1009883a 	mov	r4,r2
 50809cc:	50804a80 	call	50804a8 <init_audio>
                AUDIO_FifoClear();
 50809d0:	5081a100 	call	5081a10 <AUDIO_FifoClear>
                state = ST_RECODING;
 50809d4:	00800044 	movi	r2,1
 50809d8:	e0bfff15 	stw	r2,-4(fp)
                if (bMicRecord){
 50809dc:	e0bff017 	ldw	r2,-64(fp)
 50809e0:	10001026 	beq	r2,zero,5080a24 <main+0x138>
                    bool bMicBoost = ui_is_mic_boost();
 50809e4:	50802bc0 	call	50802bc <ui_is_mic_boost>
 50809e8:	e0bfef15 	stw	r2,-68(fp)
                    printf("MIC %srecording (sample rate = %d)...\r\n", bMicBoost?"Boost ":"", record_sample_rate);
 50809ec:	e0bfef17 	ldw	r2,-68(fp)
 50809f0:	10000326 	beq	r2,zero,5080a00 <main+0x114>
 50809f4:	00814274 	movhi	r2,1289
 50809f8:	10977b04 	addi	r2,r2,24044
 50809fc:	00000206 	br	5080a08 <main+0x11c>
 5080a00:	00814274 	movhi	r2,1289
 5080a04:	10977d04 	addi	r2,r2,24052
 5080a08:	d0e70817 	ldw	r3,-25568(gp)
 5080a0c:	180d883a 	mov	r6,r3
 5080a10:	100b883a 	mov	r5,r2
 5080a14:	01014274 	movhi	r4,1289
 5080a18:	21177e04 	addi	r4,r4,24056
 5080a1c:	50828f00 	call	50828f0 <printf>
 5080a20:	00000506 	br	5080a38 <main+0x14c>

                }else{
                    printf("LINE-IN recording (sample rate = %d)...\r\n", record_sample_rate);
 5080a24:	d0a70817 	ldw	r2,-25568(gp)
 5080a28:	100b883a 	mov	r5,r2
 5080a2c:	01014274 	movhi	r4,1289
 5080a30:	21178804 	addi	r4,r4,24096
 5080a34:	50828f00 	call	50828f0 <printf>


                }
                pRecording = pBuf;
 5080a38:	e0bff617 	ldw	r2,-40(fp)
 5080a3c:	e0bffc15 	stw	r2,-16(fp)
                RecordLen = 0;
 5080a40:	e03ffb15 	stw	zero,-20(fp)
 5080a44:	00001706 	br	5080aa4 <main+0x1b8>
            }else if (bPlayPressed){
 5080a48:	e0bff317 	ldw	r2,-52(fp)
 5080a4c:	10001526 	beq	r2,zero,5080aa4 <main+0x1b8>
                if (RecordLen == 0){
 5080a50:	e0bffb17 	ldw	r2,-20(fp)
 5080a54:	1000041e 	bne	r2,zero,5080a68 <main+0x17c>
                    printf("Please record before play audio\r\n");
 5080a58:	01014274 	movhi	r4,1289
 5080a5c:	21179304 	addi	r4,r4,24140
 5080a60:	50829f40 	call	50829f4 <puts>
 5080a64:	00000f06 	br	5080aa4 <main+0x1b8>

                }else{
                    bool bZeroCross = ui_is_dac_zero_cross();
 5080a68:	50802f40 	call	50802f4 <ui_is_dac_zero_cross>
 5080a6c:	e0bff115 	stw	r2,-60(fp)
                    AUDIO_FifoClear();
 5080a70:	5081a100 	call	5081a10 <AUDIO_FifoClear>
                    init_audio(LINEOUT_PLAY);
 5080a74:	01000084 	movi	r4,2
 5080a78:	50804a80 	call	50804a8 <init_audio>
                    state = ST_PLAYING;
 5080a7c:	00800084 	movi	r2,2
 5080a80:	e0bfff15 	stw	r2,-4(fp)
                    printf("playing (sample rate = %d)...\r\n", record_sample_rate);
 5080a84:	d0a70817 	ldw	r2,-25568(gp)
 5080a88:	100b883a 	mov	r5,r2
 5080a8c:	01014274 	movhi	r4,1289
 5080a90:	21179c04 	addi	r4,r4,24176
 5080a94:	50828f00 	call	50828f0 <printf>


                    pPlaying = pBuf;
 5080a98:	e0bff617 	ldw	r2,-40(fp)
 5080a9c:	e0bffd15 	stw	r2,-12(fp)
                    PlayLen = 0;
 5080aa0:	e03ffa15 	stw	zero,-24(fp)
                }
            }
            bError = FALSE;
 5080aa4:	e03ffe15 	stw	zero,-8(fp)
 5080aa8:	003fac06 	br	508095c <main+0x70>
        }else if (state == ST_RECODING){
 5080aac:	e0bfff17 	ldw	r2,-4(fp)
 5080ab0:	10800058 	cmpnei	r2,r2,1
 5080ab4:	10004a1e 	bne	r2,zero,5080be0 <main+0x2f4>
            if (bRecordPressed || (RecordLen >= buf_sample_size) || bError){
 5080ab8:	e0bff417 	ldw	r2,-48(fp)
 5080abc:	1000051e 	bne	r2,zero,5080ad4 <main+0x1e8>
 5080ac0:	e0fffb17 	ldw	r3,-20(fp)
 5080ac4:	e0bff517 	ldw	r2,-44(fp)
 5080ac8:	1880022e 	bgeu	r3,r2,5080ad4 <main+0x1e8>
 5080acc:	e0bffe17 	ldw	r2,-8(fp)
 5080ad0:	10000b26 	beq	r2,zero,5080b00 <main+0x214>
                // stop record
                printf("record %d samples\n", (int)RecordLen);
 5080ad4:	e0bffb17 	ldw	r2,-20(fp)
 5080ad8:	100b883a 	mov	r5,r2
 5080adc:	01014274 	movhi	r4,1289
 5080ae0:	2117a404 	addi	r4,r4,24208
 5080ae4:	50828f00 	call	50828f0 <printf>


                state = ST_STANDY;
 5080ae8:	e03fff15 	stw	zero,-4(fp)
                LED_AllOff();
 5080aec:	50821d40 	call	50821d4 <LED_AllOff>
                dump_record_data(pBuf, RecordLen);
 5080af0:	e17ffb17 	ldw	r5,-20(fp)
 5080af4:	e13ff617 	ldw	r4,-40(fp)
 5080af8:	50807740 	call	5080774 <dump_record_data>
 5080afc:	00008b06 	br	5080d2c <main+0x440>

            }else{
                // continue recoding
                int i = 0;
 5080b00:	e03ff815 	stw	zero,-32(fp)
                while ((i < RECORD_BLOCK_SIZE) && (RecordLen < buf_sample_size)){
 5080b04:	00002d06 	br	5080bbc <main+0x2d0>
                    try_cnt = 0;
 5080b08:	e03ff915 	stw	zero,-28(fp)
                    while (!AUDIO_AdcFifoNotEmpty() && try_cnt < MAX_TRY_CNT){ // wait while empty
 5080b0c:	00000306 	br	5080b1c <main+0x230>
                        try_cnt++;
 5080b10:	e0bff917 	ldw	r2,-28(fp)
 5080b14:	10800044 	addi	r2,r2,1
 5080b18:	e0bff915 	stw	r2,-28(fp)
                    while (!AUDIO_AdcFifoNotEmpty() && try_cnt < MAX_TRY_CNT){ // wait while empty
 5080b1c:	50819880 	call	5081988 <AUDIO_AdcFifoNotEmpty>
 5080b20:	1000031e 	bne	r2,zero,5080b30 <main+0x244>
 5080b24:	e0bff917 	ldw	r2,-28(fp)
 5080b28:	10810030 	cmpltui	r2,r2,1024
 5080b2c:	103ff81e 	bne	r2,zero,5080b10 <main+0x224>
                    }
                    if (try_cnt >= MAX_TRY_CNT){
 5080b30:	e0bff917 	ldw	r2,-28(fp)
 5080b34:	10810030 	cmpltui	r2,r2,1024
 5080b38:	1000031e 	bne	r2,zero,5080b48 <main+0x25c>
                        bError = TRUE;
 5080b3c:	00800044 	movi	r2,1
 5080b40:	e0bffe15 	stw	r2,-8(fp)
                        break;
 5080b44:	00002306 	br	5080bd4 <main+0x2e8>
                    }
                    AUDIO_AdcFifoGetData(&ch_left, &ch_right);
 5080b48:	e0ffed84 	addi	r3,fp,-74
 5080b4c:	e0bfed04 	addi	r2,fp,-76
 5080b50:	180b883a 	mov	r5,r3
 5080b54:	1009883a 	mov	r4,r2
 5080b58:	50819c00 	call	50819c0 <AUDIO_AdcFifoGetData>
                    data = (ch_left << 16) | ch_right;
 5080b5c:	e0bfed0b 	ldhu	r2,-76(fp)
 5080b60:	10bfffcc 	andi	r2,r2,65535
 5080b64:	1006943a 	slli	r3,r2,16
 5080b68:	e0bfed8b 	ldhu	r2,-74(fp)
 5080b6c:	10bfffcc 	andi	r2,r2,65535
 5080b70:	1884b03a 	or	r2,r3,r2
 5080b74:	e0bff215 	stw	r2,-56(fp)
                    *pRecording++ = data;
 5080b78:	e0bffc17 	ldw	r2,-16(fp)
 5080b7c:	10c00104 	addi	r3,r2,4
 5080b80:	e0fffc15 	stw	r3,-16(fp)
 5080b84:	e0fff217 	ldw	r3,-56(fp)
 5080b88:	10c00015 	stw	r3,0(r2)
                    RecordLen++;
 5080b8c:	e0bffb17 	ldw	r2,-20(fp)
 5080b90:	10800044 	addi	r2,r2,1
 5080b94:	e0bffb15 	stw	r2,-20(fp)
                    i++;
 5080b98:	e0bff817 	ldw	r2,-32(fp)
 5080b9c:	10800044 	addi	r2,r2,1
 5080ba0:	e0bff815 	stw	r2,-32(fp)
                    show_power(data & 0xFFFF);
 5080ba4:	e0bff217 	ldw	r2,-56(fp)
 5080ba8:	10bfffcc 	andi	r2,r2,65535
 5080bac:	10a0001c 	xori	r2,r2,32768
 5080bb0:	10a00004 	addi	r2,r2,-32768
 5080bb4:	1009883a 	mov	r4,r2
 5080bb8:	50806840 	call	5080684 <show_power>
                while ((i < RECORD_BLOCK_SIZE) && (RecordLen < buf_sample_size)){
 5080bbc:	e0bff817 	ldw	r2,-32(fp)
 5080bc0:	10803e88 	cmpgei	r2,r2,250
 5080bc4:	1000031e 	bne	r2,zero,5080bd4 <main+0x2e8>
 5080bc8:	e0fffb17 	ldw	r3,-20(fp)
 5080bcc:	e0bff517 	ldw	r2,-44(fp)
 5080bd0:	18bfcd36 	bltu	r3,r2,5080b08 <main+0x21c>
                }  // while
                display_time_elapsed(RecordLen);
 5080bd4:	e13ffb17 	ldw	r4,-20(fp)
 5080bd8:	50806300 	call	5080630 <display_time_elapsed>
 5080bdc:	003f5f06 	br	508095c <main+0x70>
            }
        }else if (state == ST_PLAYING){
 5080be0:	e0bfff17 	ldw	r2,-4(fp)
 5080be4:	10800098 	cmpnei	r2,r2,2
 5080be8:	103f5c1e 	bne	r2,zero,508095c <main+0x70>
            if (bPlayPressed || (PlayLen >= RecordLen) || bError){
 5080bec:	e0bff317 	ldw	r2,-52(fp)
 5080bf0:	1000051e 	bne	r2,zero,5080c08 <main+0x31c>
 5080bf4:	e0fffa17 	ldw	r3,-24(fp)
 5080bf8:	e0bffb17 	ldw	r2,-20(fp)
 5080bfc:	1880022e 	bgeu	r3,r2,5080c08 <main+0x31c>
 5080c00:	e0bffe17 	ldw	r2,-8(fp)
 5080c04:	10000e26 	beq	r2,zero,5080c40 <main+0x354>
                // stop playing
                printf("Play Stop %s\r\n", bError?"(Error)":"");
 5080c08:	e0bffe17 	ldw	r2,-8(fp)
 5080c0c:	10000326 	beq	r2,zero,5080c1c <main+0x330>
 5080c10:	00814274 	movhi	r2,1289
 5080c14:	1097a904 	addi	r2,r2,24228
 5080c18:	00000206 	br	5080c24 <main+0x338>
 5080c1c:	00814274 	movhi	r2,1289
 5080c20:	10977d04 	addi	r2,r2,24052
 5080c24:	100b883a 	mov	r5,r2
 5080c28:	01014274 	movhi	r4,1289
 5080c2c:	2117ab04 	addi	r4,r4,24236
 5080c30:	50828f00 	call	50828f0 <printf>

                state = ST_STANDY;
 5080c34:	e03fff15 	stw	zero,-4(fp)
                LED_AllOff();
 5080c38:	50821d40 	call	50821d4 <LED_AllOff>
 5080c3c:	00003b06 	br	5080d2c <main+0x440>
            }else{
                // continue playing
                int i = 0;
 5080c40:	e03ff715 	stw	zero,-36(fp)
                while ((i < PLAY_BLOCK_SIZE) && (PlayLen < RecordLen)){
 5080c44:	00003106 	br	5080d0c <main+0x420>
                    try_cnt = 0;
 5080c48:	e03ff915 	stw	zero,-28(fp)
                    while (!AUDIO_DacFifoNotFull() && try_cnt < MAX_TRY_CNT){  // wait while full
 5080c4c:	00000306 	br	5080c5c <main+0x370>
                        try_cnt++;
 5080c50:	e0bff917 	ldw	r2,-28(fp)
 5080c54:	10800044 	addi	r2,r2,1
 5080c58:	e0bff915 	stw	r2,-28(fp)
                    while (!AUDIO_DacFifoNotFull() && try_cnt < MAX_TRY_CNT){  // wait while full
 5080c5c:	50819040 	call	5081904 <AUDIO_DacFifoNotFull>
 5080c60:	1000031e 	bne	r2,zero,5080c70 <main+0x384>
 5080c64:	e0bff917 	ldw	r2,-28(fp)
 5080c68:	10810030 	cmpltui	r2,r2,1024
 5080c6c:	103ff81e 	bne	r2,zero,5080c50 <main+0x364>
                    }
                    if (try_cnt >= MAX_TRY_CNT){
 5080c70:	e0bff917 	ldw	r2,-28(fp)
 5080c74:	10810030 	cmpltui	r2,r2,1024
 5080c78:	1000031e 	bne	r2,zero,5080c88 <main+0x39c>
                        bError = TRUE;
 5080c7c:	00800044 	movi	r2,1
 5080c80:	e0bffe15 	stw	r2,-8(fp)
                        break;
 5080c84:	00002706 	br	5080d24 <main+0x438>
                    }
                    data = *pPlaying++;
 5080c88:	e0bffd17 	ldw	r2,-12(fp)
 5080c8c:	10c00104 	addi	r3,r2,4
 5080c90:	e0fffd15 	stw	r3,-12(fp)
 5080c94:	10800017 	ldw	r2,0(r2)
 5080c98:	e0bff215 	stw	r2,-56(fp)

                    //data = 0;
                    ch_left = data >> 16;
 5080c9c:	e0bff217 	ldw	r2,-56(fp)
 5080ca0:	1004d43a 	srli	r2,r2,16
 5080ca4:	e0bfed0d 	sth	r2,-76(fp)
                    ch_right = data & 0xFFFF;
 5080ca8:	e0bff217 	ldw	r2,-56(fp)
 5080cac:	e0bfed8d 	sth	r2,-74(fp)
                    AUDIO_DacFifoSetData(ch_left, ch_right);
 5080cb0:	e0bfed0b 	ldhu	r2,-76(fp)
 5080cb4:	10bfffcc 	andi	r2,r2,65535
 5080cb8:	10a0001c 	xori	r2,r2,32768
 5080cbc:	10a00004 	addi	r2,r2,-32768
 5080cc0:	e0ffed8b 	ldhu	r3,-74(fp)
 5080cc4:	18ffffcc 	andi	r3,r3,65535
 5080cc8:	18e0001c 	xori	r3,r3,32768
 5080ccc:	18e00004 	addi	r3,r3,-32768
 5080cd0:	180b883a 	mov	r5,r3
 5080cd4:	1009883a 	mov	r4,r2
 5080cd8:	508193c0 	call	508193c <AUDIO_DacFifoSetData>
                    i++;
 5080cdc:	e0bff717 	ldw	r2,-36(fp)
 5080ce0:	10800044 	addi	r2,r2,1
 5080ce4:	e0bff715 	stw	r2,-36(fp)
                    PlayLen++;
 5080ce8:	e0bffa17 	ldw	r2,-24(fp)
 5080cec:	10800044 	addi	r2,r2,1
 5080cf0:	e0bffa15 	stw	r2,-24(fp)
                    show_power(data & 0xFFFF);
 5080cf4:	e0bff217 	ldw	r2,-56(fp)
 5080cf8:	10bfffcc 	andi	r2,r2,65535
 5080cfc:	10a0001c 	xori	r2,r2,32768
 5080d00:	10a00004 	addi	r2,r2,-32768
 5080d04:	1009883a 	mov	r4,r2
 5080d08:	50806840 	call	5080684 <show_power>
                while ((i < PLAY_BLOCK_SIZE) && (PlayLen < RecordLen)){
 5080d0c:	e0bff717 	ldw	r2,-36(fp)
 5080d10:	10803e88 	cmpgei	r2,r2,250
 5080d14:	1000031e 	bne	r2,zero,5080d24 <main+0x438>
 5080d18:	e0fffa17 	ldw	r3,-24(fp)
 5080d1c:	e0bffb17 	ldw	r2,-20(fp)
 5080d20:	18bfc936 	bltu	r3,r2,5080c48 <main+0x35c>
                    //printf("[%d] %d/%d\n", PlayLen, (short)((data >> 16) & 0xFFFF), (short)(data & 0xFFFF));
                }
                display_time_elapsed(PlayLen);
 5080d24:	e13ffa17 	ldw	r4,-24(fp)
 5080d28:	50806300 	call	5080630 <display_time_elapsed>
        bRecordPressed = (button_mask & RECORD_BUTTON)?TRUE:FALSE;
 5080d2c:	003f0b06 	br	508095c <main+0x70>
            }
        }
    }

}
 5080d30:	e037883a 	mov	sp,fp
 5080d34:	dfc00117 	ldw	ra,4(sp)
 5080d38:	df000017 	ldw	fp,0(sp)
 5080d3c:	dec00204 	addi	sp,sp,8
 5080d40:	f800283a 	ret

05080d44 <AUDIO_Init>:

/////////////////////////////////////////////////////////////////////////
///////////// External function body ////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

bool AUDIO_Init(void){
 5080d44:	defffd04 	addi	sp,sp,-12
 5080d48:	dfc00215 	stw	ra,8(sp)
 5080d4c:	df000115 	stw	fp,4(sp)
 5080d50:	df000104 	addi	fp,sp,4
   bool bSuccess = TRUE;
 5080d54:	00800044 	movi	r2,1
 5080d58:	e0bfff15 	stw	r2,-4(fp)
    AUDIO_DEBUG(("[AUDIO] AUDIO_Init...\r\n"));
 5080d5c:	01014274 	movhi	r4,1289
 5080d60:	2117af04 	addi	r4,r4,24252
 5080d64:	50825900 	call	5082590 <myprintf>

    if (bSuccess)
 5080d68:	e0bfff17 	ldw	r2,-4(fp)
 5080d6c:	10000426 	beq	r2,zero,5080d80 <AUDIO_Init+0x3c>
        bSuccess = aduio_RegWrite(15, 0x0000);  // reset
 5080d70:	000b883a 	mov	r5,zero
 5080d74:	010003c4 	movi	r4,15
 5080d78:	50818100 	call	5081810 <aduio_RegWrite>
 5080d7c:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
 5080d80:	e0bfff17 	ldw	r2,-4(fp)
 5080d84:	10000426 	beq	r2,zero,5080d98 <AUDIO_Init+0x54>
        bSuccess = aduio_RegWrite(9, 0x0000);  // inactive interface         
 5080d88:	000b883a 	mov	r5,zero
 5080d8c:	01000244 	movi	r4,9
 5080d90:	50818100 	call	5081810 <aduio_RegWrite>
 5080d94:	e0bfff15 	stw	r2,-4(fp)
       
    //usleep(20*1000);    
    if (bSuccess)
 5080d98:	e0bfff17 	ldw	r2,-4(fp)
 5080d9c:	10000426 	beq	r2,zero,5080db0 <AUDIO_Init+0x6c>
        bSuccess = aduio_RegWrite(0, 0x0017);  // Left Line In: set left line in volume
 5080da0:	014005c4 	movi	r5,23
 5080da4:	0009883a 	mov	r4,zero
 5080da8:	50818100 	call	5081810 <aduio_RegWrite>
 5080dac:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
 5080db0:	e0bfff17 	ldw	r2,-4(fp)
 5080db4:	10000426 	beq	r2,zero,5080dc8 <AUDIO_Init+0x84>
        bSuccess = aduio_RegWrite(1, 0x0017);  // Right Line In: set right line in volume
 5080db8:	014005c4 	movi	r5,23
 5080dbc:	01000044 	movi	r4,1
 5080dc0:	50818100 	call	5081810 <aduio_RegWrite>
 5080dc4:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
 5080dc8:	e0bfff17 	ldw	r2,-4(fp)
 5080dcc:	10000426 	beq	r2,zero,5080de0 <AUDIO_Init+0x9c>
        bSuccess = aduio_RegWrite(2, 0x005B);  // Left Headphone Out: set left line out volume
 5080dd0:	014016c4 	movi	r5,91
 5080dd4:	01000084 	movi	r4,2
 5080dd8:	50818100 	call	5081810 <aduio_RegWrite>
 5080ddc:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
 5080de0:	e0bfff17 	ldw	r2,-4(fp)
 5080de4:	10000426 	beq	r2,zero,5080df8 <AUDIO_Init+0xb4>
        bSuccess = aduio_RegWrite(3, 0x005B);  // Right Headphone Out: set right line out volume
 5080de8:	014016c4 	movi	r5,91
 5080dec:	010000c4 	movi	r4,3
 5080df0:	50818100 	call	5081810 <aduio_RegWrite>
 5080df4:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)      
 5080df8:	e0bfff17 	ldw	r2,-4(fp)
 5080dfc:	10000426 	beq	r2,zero,5080e10 <AUDIO_Init+0xcc>
        bSuccess = aduio_RegWrite(4, 0x0015);  // Analogue Audio Path Control: set mic as input and boost it, and enable dac         
 5080e00:	01400544 	movi	r5,21
 5080e04:	01000104 	movi	r4,4
 5080e08:	50818100 	call	5081810 <aduio_RegWrite>
 5080e0c:	e0bfff15 	stw	r2,-4(fp)
                
    if (bSuccess)
 5080e10:	e0bfff17 	ldw	r2,-4(fp)
 5080e14:	10000426 	beq	r2,zero,5080e28 <AUDIO_Init+0xe4>
        bSuccess = aduio_RegWrite(5, 0x0000);  // Digital Audio Path Control: disable soft mute         
 5080e18:	000b883a 	mov	r5,zero
 5080e1c:	01000144 	movi	r4,5
 5080e20:	50818100 	call	5081810 <aduio_RegWrite>
 5080e24:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
 5080e28:	e0bfff17 	ldw	r2,-4(fp)
 5080e2c:	10000426 	beq	r2,zero,5080e40 <AUDIO_Init+0xfc>
        bSuccess = aduio_RegWrite(6, 0);  // power down control: power on all         
 5080e30:	000b883a 	mov	r5,zero
 5080e34:	01000184 	movi	r4,6
 5080e38:	50818100 	call	5081810 <aduio_RegWrite>
 5080e3c:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
 5080e40:	e0bfff17 	ldw	r2,-4(fp)
 5080e44:	10000426 	beq	r2,zero,5080e58 <AUDIO_Init+0x114>
        bSuccess = aduio_RegWrite(7, 0x0042);  // I2S, iwl=16-bits, Enable Master Mode         
 5080e48:	01401084 	movi	r5,66
 5080e4c:	010001c4 	movi	r4,7
 5080e50:	50818100 	call	5081810 <aduio_RegWrite>
 5080e54:	e0bfff15 	stw	r2,-4(fp)
//        bSuccess = aduio_RegWrite(7, 0x0041);  // MSB-First, left justified, iwl=16-bits, Enable Master Mode         

    if (bSuccess)
 5080e58:	e0bfff17 	ldw	r2,-4(fp)
 5080e5c:	10000426 	beq	r2,zero,5080e70 <AUDIO_Init+0x12c>
        bSuccess = aduio_RegWrite(8, 0x0002);  // Normal, Base OVer-Sampleing Rate 384 fs (BOSR=1)         
 5080e60:	01400084 	movi	r5,2
 5080e64:	01000204 	movi	r4,8
 5080e68:	50818100 	call	5081810 <aduio_RegWrite>
 5080e6c:	e0bfff15 	stw	r2,-4(fp)


    if (bSuccess)
 5080e70:	e0bfff17 	ldw	r2,-4(fp)
 5080e74:	10000426 	beq	r2,zero,5080e88 <AUDIO_Init+0x144>
        bSuccess = aduio_RegWrite(9, 0x0001);  // active interface
 5080e78:	01400044 	movi	r5,1
 5080e7c:	01000244 	movi	r4,9
 5080e80:	50818100 	call	5081810 <aduio_RegWrite>
 5080e84:	e0bfff15 	stw	r2,-4(fp)
        
        
         
    AUDIO_DEBUG(("[AUDIO] AUDIO_Init %s\r\n", bSuccess?"success":"fail"));        
 5080e88:	e0bfff17 	ldw	r2,-4(fp)
 5080e8c:	10000326 	beq	r2,zero,5080e9c <AUDIO_Init+0x158>
 5080e90:	00814274 	movhi	r2,1289
 5080e94:	1097b504 	addi	r2,r2,24276
 5080e98:	00000206 	br	5080ea4 <AUDIO_Init+0x160>
 5080e9c:	00814274 	movhi	r2,1289
 5080ea0:	1097b704 	addi	r2,r2,24284
 5080ea4:	100b883a 	mov	r5,r2
 5080ea8:	01014274 	movhi	r4,1289
 5080eac:	2117b904 	addi	r4,r4,24292
 5080eb0:	50825900 	call	5082590 <myprintf>
    
    return bSuccess;        
 5080eb4:	e0bfff17 	ldw	r2,-4(fp)
         
}
 5080eb8:	e037883a 	mov	sp,fp
 5080ebc:	dfc00117 	ldw	ra,4(sp)
 5080ec0:	df000017 	ldw	fp,0(sp)
 5080ec4:	dec00204 	addi	sp,sp,8
 5080ec8:	f800283a 	ret

05080ecc <AUDIO_InterfaceActive>:

bool AUDIO_InterfaceActive(bool bActive){
 5080ecc:	defffc04 	addi	sp,sp,-16
 5080ed0:	dfc00315 	stw	ra,12(sp)
 5080ed4:	df000215 	stw	fp,8(sp)
 5080ed8:	df000204 	addi	fp,sp,8
 5080edc:	e13ffe15 	stw	r4,-8(fp)
    bool bSuccess;
    bSuccess = aduio_RegWrite(9, bActive?0x0001:0x0000); 
 5080ee0:	e0bffe17 	ldw	r2,-8(fp)
 5080ee4:	1004c03a 	cmpne	r2,r2,zero
 5080ee8:	10803fcc 	andi	r2,r2,255
 5080eec:	100b883a 	mov	r5,r2
 5080ef0:	01000244 	movi	r4,9
 5080ef4:	50818100 	call	5081810 <aduio_RegWrite>
 5080ef8:	e0bfff15 	stw	r2,-4(fp)
    return bSuccess;
 5080efc:	e0bfff17 	ldw	r2,-4(fp)
}
 5080f00:	e037883a 	mov	sp,fp
 5080f04:	dfc00117 	ldw	ra,4(sp)
 5080f08:	df000017 	ldw	fp,0(sp)
 5080f0c:	dec00204 	addi	sp,sp,8
 5080f10:	f800283a 	ret

05080f14 <AUDIO_MicBoost>:

bool AUDIO_MicBoost(bool bBoost){
 5080f14:	defffb04 	addi	sp,sp,-20
 5080f18:	dfc00415 	stw	ra,16(sp)
 5080f1c:	df000315 	stw	fp,12(sp)
 5080f20:	df000304 	addi	fp,sp,12
 5080f24:	e13ffd15 	stw	r4,-12(fp)
    bool bSuccess;
    alt_u16 control;
    control = reg_file[4];
 5080f28:	008142b4 	movhi	r2,1290
 5080f2c:	10a7b10b 	ldhu	r2,-24892(r2)
 5080f30:	e0bfff8d 	sth	r2,-2(fp)
    if (bBoost)
 5080f34:	e0bffd17 	ldw	r2,-12(fp)
 5080f38:	10000426 	beq	r2,zero,5080f4c <AUDIO_MicBoost+0x38>
        control |= 0x0001;
 5080f3c:	e0bfff8b 	ldhu	r2,-2(fp)
 5080f40:	10800054 	ori	r2,r2,1
 5080f44:	e0bfff8d 	sth	r2,-2(fp)
 5080f48:	00000406 	br	5080f5c <AUDIO_MicBoost+0x48>
    else        
        control &= 0xFFFE;
 5080f4c:	e0ffff8b 	ldhu	r3,-2(fp)
 5080f50:	00bfff84 	movi	r2,-2
 5080f54:	1884703a 	and	r2,r3,r2
 5080f58:	e0bfff8d 	sth	r2,-2(fp)
    bSuccess = aduio_RegWrite(4, control);  // Left Line In: set left line in volume
 5080f5c:	e0bfff8b 	ldhu	r2,-2(fp)
 5080f60:	100b883a 	mov	r5,r2
 5080f64:	01000104 	movi	r4,4
 5080f68:	50818100 	call	5081810 <aduio_RegWrite>
 5080f6c:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;
 5080f70:	e0bffe17 	ldw	r2,-8(fp)
}
 5080f74:	e037883a 	mov	sp,fp
 5080f78:	dfc00117 	ldw	ra,4(sp)
 5080f7c:	df000017 	ldw	fp,0(sp)
 5080f80:	dec00204 	addi	sp,sp,8
 5080f84:	f800283a 	ret

05080f88 <AUDIO_AdcEnableHighPassFilter>:

bool AUDIO_AdcEnableHighPassFilter(bool bEnable){
 5080f88:	defffb04 	addi	sp,sp,-20
 5080f8c:	dfc00415 	stw	ra,16(sp)
 5080f90:	df000315 	stw	fp,12(sp)
 5080f94:	df000304 	addi	fp,sp,12
 5080f98:	e13ffd15 	stw	r4,-12(fp)
    bool bSuccess;
    alt_u16 control;
    control = reg_file[5];
 5080f9c:	008142b4 	movhi	r2,1290
 5080fa0:	10a7b18b 	ldhu	r2,-24890(r2)
 5080fa4:	e0bfff8d 	sth	r2,-2(fp)
    if (bEnable)
 5080fa8:	e0bffd17 	ldw	r2,-12(fp)
 5080fac:	10000526 	beq	r2,zero,5080fc4 <AUDIO_AdcEnableHighPassFilter+0x3c>
        control &= 0xFFFE;
 5080fb0:	e0ffff8b 	ldhu	r3,-2(fp)
 5080fb4:	00bfff84 	movi	r2,-2
 5080fb8:	1884703a 	and	r2,r3,r2
 5080fbc:	e0bfff8d 	sth	r2,-2(fp)
 5080fc0:	00000306 	br	5080fd0 <AUDIO_AdcEnableHighPassFilter+0x48>
    else        
        control |= 0x0001;
 5080fc4:	e0bfff8b 	ldhu	r2,-2(fp)
 5080fc8:	10800054 	ori	r2,r2,1
 5080fcc:	e0bfff8d 	sth	r2,-2(fp)
    bSuccess = aduio_RegWrite(5, control);  // Left Line In: set left line in volume
 5080fd0:	e0bfff8b 	ldhu	r2,-2(fp)
 5080fd4:	100b883a 	mov	r5,r2
 5080fd8:	01000144 	movi	r4,5
 5080fdc:	50818100 	call	5081810 <aduio_RegWrite>
 5080fe0:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;    
 5080fe4:	e0bffe17 	ldw	r2,-8(fp)
}
 5080fe8:	e037883a 	mov	sp,fp
 5080fec:	dfc00117 	ldw	ra,4(sp)
 5080ff0:	df000017 	ldw	fp,0(sp)
 5080ff4:	dec00204 	addi	sp,sp,8
 5080ff8:	f800283a 	ret

05080ffc <AUDIO_DacDeemphasisControl>:



bool AUDIO_DacDeemphasisControl(alt_u8 deemphasis_type){
 5080ffc:	defffb04 	addi	sp,sp,-20
 5081000:	dfc00415 	stw	ra,16(sp)
 5081004:	df000315 	stw	fp,12(sp)
 5081008:	df000304 	addi	fp,sp,12
 508100c:	2005883a 	mov	r2,r4
 5081010:	e0bffd05 	stb	r2,-12(fp)
    bool bSuccess;
    alt_u16 control;
    control = reg_file[5];
 5081014:	008142b4 	movhi	r2,1290
 5081018:	10a7b18b 	ldhu	r2,-24890(r2)
 508101c:	e0bfff8d 	sth	r2,-2(fp)
    control &= 0xFFF9;
 5081020:	e0ffff8b 	ldhu	r3,-2(fp)
 5081024:	00bffe44 	movi	r2,-7
 5081028:	1884703a 	and	r2,r3,r2
 508102c:	e0bfff8d 	sth	r2,-2(fp)
    switch(deemphasis_type){
 5081030:	e0bffd03 	ldbu	r2,-12(fp)
 5081034:	10c000e0 	cmpeqi	r3,r2,3
 5081038:	18000f1e 	bne	r3,zero,5081078 <AUDIO_DacDeemphasisControl+0x7c>
 508103c:	10c00108 	cmpgei	r3,r2,4
 5081040:	1800111e 	bne	r3,zero,5081088 <AUDIO_DacDeemphasisControl+0x8c>
 5081044:	10c00060 	cmpeqi	r3,r2,1
 5081048:	1800031e 	bne	r3,zero,5081058 <AUDIO_DacDeemphasisControl+0x5c>
 508104c:	108000a0 	cmpeqi	r2,r2,2
 5081050:	1000051e 	bne	r2,zero,5081068 <AUDIO_DacDeemphasisControl+0x6c>
 5081054:	00000c06 	br	5081088 <AUDIO_DacDeemphasisControl+0x8c>
        case DEEMPHASIS_48K: control |= ((0x03) << 1); break;
 5081058:	e0bfff8b 	ldhu	r2,-2(fp)
 508105c:	10800194 	ori	r2,r2,6
 5081060:	e0bfff8d 	sth	r2,-2(fp)
 5081064:	00000806 	br	5081088 <AUDIO_DacDeemphasisControl+0x8c>
        case DEEMPHASIS_44K1: control |= ((0x02) << 1); break;
 5081068:	e0bfff8b 	ldhu	r2,-2(fp)
 508106c:	10800114 	ori	r2,r2,4
 5081070:	e0bfff8d 	sth	r2,-2(fp)
 5081074:	00000406 	br	5081088 <AUDIO_DacDeemphasisControl+0x8c>
        case DEEMPHASIS_32K: control |= ((0x01) << 1); break;
 5081078:	e0bfff8b 	ldhu	r2,-2(fp)
 508107c:	10800094 	ori	r2,r2,2
 5081080:	e0bfff8d 	sth	r2,-2(fp)
 5081084:	0001883a 	nop
    }
    bSuccess = aduio_RegWrite(5, control);  // Left Line In: set left line in volume
 5081088:	e0bfff8b 	ldhu	r2,-2(fp)
 508108c:	100b883a 	mov	r5,r2
 5081090:	01000144 	movi	r4,5
 5081094:	50818100 	call	5081810 <aduio_RegWrite>
 5081098:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;       
 508109c:	e0bffe17 	ldw	r2,-8(fp)
}
 50810a0:	e037883a 	mov	sp,fp
 50810a4:	dfc00117 	ldw	ra,4(sp)
 50810a8:	df000017 	ldw	fp,0(sp)
 50810ac:	dec00204 	addi	sp,sp,8
 50810b0:	f800283a 	ret

050810b4 <AUDIO_DacEnableZeroCross>:

bool AUDIO_DacEnableZeroCross(bool bEnable){
 50810b4:	defffa04 	addi	sp,sp,-24
 50810b8:	dfc00515 	stw	ra,20(sp)
 50810bc:	df000415 	stw	fp,16(sp)
 50810c0:	df000404 	addi	fp,sp,16
 50810c4:	e13ffc15 	stw	r4,-16(fp)
    bool bSuccess;
    alt_u16 control_l, control_r;
    alt_u16 mask;
    control_l = reg_file[2];
 50810c8:	008142b4 	movhi	r2,1290
 50810cc:	10a7b00b 	ldhu	r2,-24896(r2)
 50810d0:	e0bffe8d 	sth	r2,-6(fp)
    control_r = reg_file[3];
 50810d4:	008142b4 	movhi	r2,1290
 50810d8:	10a7b08b 	ldhu	r2,-24894(r2)
 50810dc:	e0bffe0d 	sth	r2,-8(fp)
    mask = 0x01 << 7;
 50810e0:	00802004 	movi	r2,128
 50810e4:	e0bffd8d 	sth	r2,-10(fp)
    if (bEnable){
 50810e8:	e0bffc17 	ldw	r2,-16(fp)
 50810ec:	10000926 	beq	r2,zero,5081114 <AUDIO_DacEnableZeroCross+0x60>
        control_l |= mask;
 50810f0:	e0fffe8b 	ldhu	r3,-6(fp)
 50810f4:	e0bffd8b 	ldhu	r2,-10(fp)
 50810f8:	1884b03a 	or	r2,r3,r2
 50810fc:	e0bffe8d 	sth	r2,-6(fp)
        control_r |= mask;
 5081100:	e0fffe0b 	ldhu	r3,-8(fp)
 5081104:	e0bffd8b 	ldhu	r2,-10(fp)
 5081108:	1884b03a 	or	r2,r3,r2
 508110c:	e0bffe0d 	sth	r2,-8(fp)
 5081110:	00000c06 	br	5081144 <AUDIO_DacEnableZeroCross+0x90>
    }else{        
        control_l &= ~mask;
 5081114:	e0bffd8b 	ldhu	r2,-10(fp)
 5081118:	0084303a 	nor	r2,zero,r2
 508111c:	1007883a 	mov	r3,r2
 5081120:	e0bffe8b 	ldhu	r2,-6(fp)
 5081124:	1884703a 	and	r2,r3,r2
 5081128:	e0bffe8d 	sth	r2,-6(fp)
        control_r &= ~mask;
 508112c:	e0bffd8b 	ldhu	r2,-10(fp)
 5081130:	0084303a 	nor	r2,zero,r2
 5081134:	1007883a 	mov	r3,r2
 5081138:	e0bffe0b 	ldhu	r2,-8(fp)
 508113c:	1884703a 	and	r2,r3,r2
 5081140:	e0bffe0d 	sth	r2,-8(fp)
    }        
    bSuccess = aduio_RegWrite(2, control_l);  // Left Line In: set left line in volume
 5081144:	e0bffe8b 	ldhu	r2,-6(fp)
 5081148:	100b883a 	mov	r5,r2
 508114c:	01000084 	movi	r4,2
 5081150:	50818100 	call	5081810 <aduio_RegWrite>
 5081154:	e0bfff15 	stw	r2,-4(fp)
    if (bSuccess)
 5081158:	e0bfff17 	ldw	r2,-4(fp)
 508115c:	10000526 	beq	r2,zero,5081174 <AUDIO_DacEnableZeroCross+0xc0>
        bSuccess = aduio_RegWrite(3, control_r);  // Left Line In: set left line in volume
 5081160:	e0bffe0b 	ldhu	r2,-8(fp)
 5081164:	100b883a 	mov	r5,r2
 5081168:	010000c4 	movi	r4,3
 508116c:	50818100 	call	5081810 <aduio_RegWrite>
 5081170:	e0bfff15 	stw	r2,-4(fp)
    return bSuccess;      
 5081174:	e0bfff17 	ldw	r2,-4(fp)
}
 5081178:	e037883a 	mov	sp,fp
 508117c:	dfc00117 	ldw	ra,4(sp)
 5081180:	df000017 	ldw	fp,0(sp)
 5081184:	dec00204 	addi	sp,sp,8
 5081188:	f800283a 	ret

0508118c <AUDIO_DacEnableSoftMute>:

bool AUDIO_DacEnableSoftMute(bool bEnable){
 508118c:	defffb04 	addi	sp,sp,-20
 5081190:	dfc00415 	stw	ra,16(sp)
 5081194:	df000315 	stw	fp,12(sp)
 5081198:	df000304 	addi	fp,sp,12
 508119c:	e13ffd15 	stw	r4,-12(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[5];
 50811a0:	008142b4 	movhi	r2,1290
 50811a4:	10a7b18b 	ldhu	r2,-24890(r2)
 50811a8:	e0bfff8d 	sth	r2,-2(fp)
    mask = 0x01 << 3;
 50811ac:	00800204 	movi	r2,8
 50811b0:	e0bfff0d 	sth	r2,-4(fp)
    if (bEnable)
 50811b4:	e0bffd17 	ldw	r2,-12(fp)
 50811b8:	10000526 	beq	r2,zero,50811d0 <AUDIO_DacEnableSoftMute+0x44>
        control |= mask;
 50811bc:	e0ffff8b 	ldhu	r3,-2(fp)
 50811c0:	e0bfff0b 	ldhu	r2,-4(fp)
 50811c4:	1884b03a 	or	r2,r3,r2
 50811c8:	e0bfff8d 	sth	r2,-2(fp)
 50811cc:	00000606 	br	50811e8 <AUDIO_DacEnableSoftMute+0x5c>
    else        
        control &= ~mask;
 50811d0:	e0bfff0b 	ldhu	r2,-4(fp)
 50811d4:	0084303a 	nor	r2,zero,r2
 50811d8:	1007883a 	mov	r3,r2
 50811dc:	e0bfff8b 	ldhu	r2,-2(fp)
 50811e0:	1884703a 	and	r2,r3,r2
 50811e4:	e0bfff8d 	sth	r2,-2(fp)
    bSuccess = aduio_RegWrite(5, control);  // Left Line In: set left line in volume
 50811e8:	e0bfff8b 	ldhu	r2,-2(fp)
 50811ec:	100b883a 	mov	r5,r2
 50811f0:	01000144 	movi	r4,5
 50811f4:	50818100 	call	5081810 <aduio_RegWrite>
 50811f8:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;      
 50811fc:	e0bffe17 	ldw	r2,-8(fp)
}
 5081200:	e037883a 	mov	sp,fp
 5081204:	dfc00117 	ldw	ra,4(sp)
 5081208:	df000017 	ldw	fp,0(sp)
 508120c:	dec00204 	addi	sp,sp,8
 5081210:	f800283a 	ret

05081214 <AUDIO_MicMute>:

bool AUDIO_MicMute(bool bMute){
 5081214:	defffb04 	addi	sp,sp,-20
 5081218:	dfc00415 	stw	ra,16(sp)
 508121c:	df000315 	stw	fp,12(sp)
 5081220:	df000304 	addi	fp,sp,12
 5081224:	e13ffd15 	stw	r4,-12(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
 5081228:	008142b4 	movhi	r2,1290
 508122c:	10a7b10b 	ldhu	r2,-24892(r2)
 5081230:	e0bfff8d 	sth	r2,-2(fp)
    mask = 0x01 << 1;
 5081234:	00800084 	movi	r2,2
 5081238:	e0bfff0d 	sth	r2,-4(fp)
    if (bMute)
 508123c:	e0bffd17 	ldw	r2,-12(fp)
 5081240:	10000526 	beq	r2,zero,5081258 <AUDIO_MicMute+0x44>
        control |= mask;
 5081244:	e0ffff8b 	ldhu	r3,-2(fp)
 5081248:	e0bfff0b 	ldhu	r2,-4(fp)
 508124c:	1884b03a 	or	r2,r3,r2
 5081250:	e0bfff8d 	sth	r2,-2(fp)
 5081254:	00000606 	br	5081270 <AUDIO_MicMute+0x5c>
    else        
        control &= ~mask;
 5081258:	e0bfff0b 	ldhu	r2,-4(fp)
 508125c:	0084303a 	nor	r2,zero,r2
 5081260:	1007883a 	mov	r3,r2
 5081264:	e0bfff8b 	ldhu	r2,-2(fp)
 5081268:	1884703a 	and	r2,r3,r2
 508126c:	e0bfff8d 	sth	r2,-2(fp)
    bSuccess = aduio_RegWrite(4, control);  // Left Line In: set left line in volume
 5081270:	e0bfff8b 	ldhu	r2,-2(fp)
 5081274:	100b883a 	mov	r5,r2
 5081278:	01000104 	movi	r4,4
 508127c:	50818100 	call	5081810 <aduio_RegWrite>
 5081280:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;        
 5081284:	e0bffe17 	ldw	r2,-8(fp)
}
 5081288:	e037883a 	mov	sp,fp
 508128c:	dfc00117 	ldw	ra,4(sp)
 5081290:	df000017 	ldw	fp,0(sp)
 5081294:	dec00204 	addi	sp,sp,8
 5081298:	f800283a 	ret

0508129c <AUDIO_LineInMute>:

bool AUDIO_LineInMute(bool bMute){
 508129c:	defffa04 	addi	sp,sp,-24
 50812a0:	dfc00515 	stw	ra,20(sp)
 50812a4:	df000415 	stw	fp,16(sp)
 50812a8:	df000404 	addi	fp,sp,16
 50812ac:	e13ffc15 	stw	r4,-16(fp)
    bool bSuccess;
    alt_u16 control_l, control_r;
    alt_u16 mask;
    control_l = reg_file[0];
 50812b0:	008142b4 	movhi	r2,1290
 50812b4:	10a7af0b 	ldhu	r2,-24900(r2)
 50812b8:	e0bffe8d 	sth	r2,-6(fp)
    control_r = reg_file[1];
 50812bc:	008142b4 	movhi	r2,1290
 50812c0:	10a7af8b 	ldhu	r2,-24898(r2)
 50812c4:	e0bffe0d 	sth	r2,-8(fp)
    mask = 0x01 << 7;
 50812c8:	00802004 	movi	r2,128
 50812cc:	e0bffd8d 	sth	r2,-10(fp)
    if (bMute){
 50812d0:	e0bffc17 	ldw	r2,-16(fp)
 50812d4:	10000926 	beq	r2,zero,50812fc <AUDIO_LineInMute+0x60>
        control_l |= mask;
 50812d8:	e0fffe8b 	ldhu	r3,-6(fp)
 50812dc:	e0bffd8b 	ldhu	r2,-10(fp)
 50812e0:	1884b03a 	or	r2,r3,r2
 50812e4:	e0bffe8d 	sth	r2,-6(fp)
        control_r |= mask;
 50812e8:	e0fffe0b 	ldhu	r3,-8(fp)
 50812ec:	e0bffd8b 	ldhu	r2,-10(fp)
 50812f0:	1884b03a 	or	r2,r3,r2
 50812f4:	e0bffe0d 	sth	r2,-8(fp)
 50812f8:	00000c06 	br	508132c <AUDIO_LineInMute+0x90>
    }else{        
        control_l &= ~mask;
 50812fc:	e0bffd8b 	ldhu	r2,-10(fp)
 5081300:	0084303a 	nor	r2,zero,r2
 5081304:	1007883a 	mov	r3,r2
 5081308:	e0bffe8b 	ldhu	r2,-6(fp)
 508130c:	1884703a 	and	r2,r3,r2
 5081310:	e0bffe8d 	sth	r2,-6(fp)
        control_r &= ~mask;
 5081314:	e0bffd8b 	ldhu	r2,-10(fp)
 5081318:	0084303a 	nor	r2,zero,r2
 508131c:	1007883a 	mov	r3,r2
 5081320:	e0bffe0b 	ldhu	r2,-8(fp)
 5081324:	1884703a 	and	r2,r3,r2
 5081328:	e0bffe0d 	sth	r2,-8(fp)
    }        
    bSuccess = aduio_RegWrite(0, control_l);  // Left Line In: set left line in volume
 508132c:	e0bffe8b 	ldhu	r2,-6(fp)
 5081330:	100b883a 	mov	r5,r2
 5081334:	0009883a 	mov	r4,zero
 5081338:	50818100 	call	5081810 <aduio_RegWrite>
 508133c:	e0bfff15 	stw	r2,-4(fp)
    if (bSuccess)
 5081340:	e0bfff17 	ldw	r2,-4(fp)
 5081344:	10000526 	beq	r2,zero,508135c <AUDIO_LineInMute+0xc0>
        bSuccess = aduio_RegWrite(1, control_r);  // Left Line In: set left line in volume
 5081348:	e0bffe0b 	ldhu	r2,-8(fp)
 508134c:	100b883a 	mov	r5,r2
 5081350:	01000044 	movi	r4,1
 5081354:	50818100 	call	5081810 <aduio_RegWrite>
 5081358:	e0bfff15 	stw	r2,-4(fp)
    return bSuccess;        
 508135c:	e0bfff17 	ldw	r2,-4(fp)
}
 5081360:	e037883a 	mov	sp,fp
 5081364:	dfc00117 	ldw	ra,4(sp)
 5081368:	df000017 	ldw	fp,0(sp)
 508136c:	dec00204 	addi	sp,sp,8
 5081370:	f800283a 	ret

05081374 <AUDIO_SetInputSource>:



bool AUDIO_SetInputSource(alt_u8 InputSource){
 5081374:	defffb04 	addi	sp,sp,-20
 5081378:	dfc00415 	stw	ra,16(sp)
 508137c:	df000315 	stw	fp,12(sp)
 5081380:	df000304 	addi	fp,sp,12
 5081384:	2005883a 	mov	r2,r4
 5081388:	e0bffd05 	stb	r2,-12(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
 508138c:	008142b4 	movhi	r2,1290
 5081390:	10a7b10b 	ldhu	r2,-24892(r2)
 5081394:	e0bfff8d 	sth	r2,-2(fp)
    mask = 0x01 << 2;
 5081398:	00800104 	movi	r2,4
 508139c:	e0bfff0d 	sth	r2,-4(fp)
    if (InputSource == SOURCE_MIC)
 50813a0:	e0bffd03 	ldbu	r2,-12(fp)
 50813a4:	1000051e 	bne	r2,zero,50813bc <AUDIO_SetInputSource+0x48>
        control |= mask;
 50813a8:	e0ffff8b 	ldhu	r3,-2(fp)
 50813ac:	e0bfff0b 	ldhu	r2,-4(fp)
 50813b0:	1884b03a 	or	r2,r3,r2
 50813b4:	e0bfff8d 	sth	r2,-2(fp)
 50813b8:	00000606 	br	50813d4 <AUDIO_SetInputSource+0x60>
    else        
        control &= ~mask;
 50813bc:	e0bfff0b 	ldhu	r2,-4(fp)
 50813c0:	0084303a 	nor	r2,zero,r2
 50813c4:	1007883a 	mov	r3,r2
 50813c8:	e0bfff8b 	ldhu	r2,-2(fp)
 50813cc:	1884703a 	and	r2,r3,r2
 50813d0:	e0bfff8d 	sth	r2,-2(fp)
    bSuccess = aduio_RegWrite(4, control);  // Left Line In: set left line in volume
 50813d4:	e0bfff8b 	ldhu	r2,-2(fp)
 50813d8:	100b883a 	mov	r5,r2
 50813dc:	01000104 	movi	r4,4
 50813e0:	50818100 	call	5081810 <aduio_RegWrite>
 50813e4:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;       
 50813e8:	e0bffe17 	ldw	r2,-8(fp)
}
 50813ec:	e037883a 	mov	sp,fp
 50813f0:	dfc00117 	ldw	ra,4(sp)
 50813f4:	df000017 	ldw	fp,0(sp)
 50813f8:	dec00204 	addi	sp,sp,8
 50813fc:	f800283a 	ret

05081400 <AUDIO_SetSampleRate>:

// See datasheet page 39
bool AUDIO_SetSampleRate(alt_u8 SampleRate){
 5081400:	defffb04 	addi	sp,sp,-20
 5081404:	dfc00415 	stw	ra,16(sp)
 5081408:	df000315 	stw	fp,12(sp)
 508140c:	df000304 	addi	fp,sp,12
 5081410:	2005883a 	mov	r2,r4
 5081414:	e0bffd05 	stb	r2,-12(fp)
    bool bSuccess;
    alt_u16 control;
    control = 0;
 5081418:	e03fff8d 	sth	zero,-2(fp)

    switch(SampleRate){
 508141c:	e0bffd03 	ldbu	r2,-12(fp)
 5081420:	10c001e8 	cmpgeui	r3,r2,7
 5081424:	1800201e 	bne	r3,zero,50814a8 <AUDIO_SetSampleRate+0xa8>
 5081428:	100690ba 	slli	r3,r2,2
 508142c:	00814234 	movhi	r2,1288
 5081430:	1885883a 	add	r2,r3,r2
 5081434:	10850f17 	ldw	r2,5180(r2)
 5081438:	1000683a 	jmp	r2
 508143c:	05081458 	cmpnei	r20,zero,8273
 5081440:	05081460 	cmpeqi	r20,zero,8273
 5081444:	0508146c 	andhi	r20,zero,8273
 5081448:	05081478 	rdprs	r20,zero,8273
 508144c:	05081484 	movi	r20,8274
 5081450:	05081490 	cmplti	r20,zero,8274
 5081454:	0508149c 	xori	r20,zero,8274
         // MCLK = 18.432
        case RATE_ADC48K_DAC48K: control = (0x0) << 2; break;
 5081458:	e03fff8d 	sth	zero,-2(fp)
 508145c:	00001206 	br	50814a8 <AUDIO_SetSampleRate+0xa8>
        case RATE_ADC48K_DAC8K: control = (0x1) << 2; break;
 5081460:	00800104 	movi	r2,4
 5081464:	e0bfff8d 	sth	r2,-2(fp)
 5081468:	00000f06 	br	50814a8 <AUDIO_SetSampleRate+0xa8>
        case RATE_ADC8K_DAC48K: control = (0x2) << 2; break;
 508146c:	00800204 	movi	r2,8
 5081470:	e0bfff8d 	sth	r2,-2(fp)
 5081474:	00000c06 	br	50814a8 <AUDIO_SetSampleRate+0xa8>
        case RATE_ADC8K_DAC8K: control = (0x3) << 2; break;
 5081478:	00800304 	movi	r2,12
 508147c:	e0bfff8d 	sth	r2,-2(fp)
 5081480:	00000906 	br	50814a8 <AUDIO_SetSampleRate+0xa8>
        case RATE_ADC32K_DAC32K: control = (0x6) << 2; break;
 5081484:	00800604 	movi	r2,24
 5081488:	e0bfff8d 	sth	r2,-2(fp)
 508148c:	00000606 	br	50814a8 <AUDIO_SetSampleRate+0xa8>
        case RATE_ADC96K_DAC96K: control = (0x7) << 2; break;
 5081490:	00800704 	movi	r2,28
 5081494:	e0bfff8d 	sth	r2,-2(fp)
 5081498:	00000306 	br	50814a8 <AUDIO_SetSampleRate+0xa8>
        case RATE_ADC44K1_DAC44K1: control = (0x8) << 2; break;
 508149c:	00800804 	movi	r2,32
 50814a0:	e0bfff8d 	sth	r2,-2(fp)
 50814a4:	0001883a 	nop
        // MCLK = 11.2896
      //  case RATE_ADC44K1_DAC8K: control = (0x9) << 2; break;
      //  case RATE_ADC8K_DAC44K1: control = (0xA) << 2; break;
    }
    control |= 0x02; // BOSR=1 (384fs = 384*48k = 18.432M)
 50814a8:	e0bfff8b 	ldhu	r2,-2(fp)
 50814ac:	10800094 	ori	r2,r2,2
 50814b0:	e0bfff8d 	sth	r2,-2(fp)
        
    bSuccess = aduio_RegWrite(8, control);  // Left Line In: set left line in volume
 50814b4:	e0bfff8b 	ldhu	r2,-2(fp)
 50814b8:	100b883a 	mov	r5,r2
 50814bc:	01000204 	movi	r4,8
 50814c0:	50818100 	call	5081810 <aduio_RegWrite>
 50814c4:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;      
 50814c8:	e0bffe17 	ldw	r2,-8(fp)
}
 50814cc:	e037883a 	mov	sp,fp
 50814d0:	dfc00117 	ldw	ra,4(sp)
 50814d4:	df000017 	ldw	fp,0(sp)
 50814d8:	dec00204 	addi	sp,sp,8
 50814dc:	f800283a 	ret

050814e0 <AUDIO_SetLineInVol>:





bool AUDIO_SetLineInVol(alt_u16 l_vol, alt_u16 r_vol){
 50814e0:	defffa04 	addi	sp,sp,-24
 50814e4:	dfc00515 	stw	ra,20(sp)
 50814e8:	df000415 	stw	fp,16(sp)
 50814ec:	df000404 	addi	fp,sp,16
 50814f0:	2005883a 	mov	r2,r4
 50814f4:	2807883a 	mov	r3,r5
 50814f8:	e0bffd0d 	sth	r2,-12(fp)
 50814fc:	1805883a 	mov	r2,r3
 5081500:	e0bffc0d 	sth	r2,-16(fp)
    bool bSuccess;
    alt_u16 control;
    
    // left
    control = reg_file[0];
 5081504:	008142b4 	movhi	r2,1290
 5081508:	10a7af0b 	ldhu	r2,-24900(r2)
 508150c:	e0bffe8d 	sth	r2,-6(fp)
    control &= 0xFFE0;
 5081510:	e0fffe8b 	ldhu	r3,-6(fp)
 5081514:	00bff804 	movi	r2,-32
 5081518:	1884703a 	and	r2,r3,r2
 508151c:	e0bffe8d 	sth	r2,-6(fp)
    control += l_vol & 0x1F;
 5081520:	e0bffd0b 	ldhu	r2,-12(fp)
 5081524:	108007cc 	andi	r2,r2,31
 5081528:	1007883a 	mov	r3,r2
 508152c:	e0bffe8b 	ldhu	r2,-6(fp)
 5081530:	10c5883a 	add	r2,r2,r3
 5081534:	e0bffe8d 	sth	r2,-6(fp)
    bSuccess = aduio_RegWrite(0, control);
 5081538:	e0bffe8b 	ldhu	r2,-6(fp)
 508153c:	100b883a 	mov	r5,r2
 5081540:	0009883a 	mov	r4,zero
 5081544:	50818100 	call	5081810 <aduio_RegWrite>
 5081548:	e0bfff15 	stw	r2,-4(fp)
    
    if (bSuccess){
 508154c:	e0bfff17 	ldw	r2,-4(fp)
 5081550:	10001226 	beq	r2,zero,508159c <AUDIO_SetLineInVol+0xbc>
        // right
        control = reg_file[1];
 5081554:	008142b4 	movhi	r2,1290
 5081558:	10a7af8b 	ldhu	r2,-24898(r2)
 508155c:	e0bffe8d 	sth	r2,-6(fp)
        control &= 0xFFE0;
 5081560:	e0fffe8b 	ldhu	r3,-6(fp)
 5081564:	00bff804 	movi	r2,-32
 5081568:	1884703a 	and	r2,r3,r2
 508156c:	e0bffe8d 	sth	r2,-6(fp)
        control += r_vol & 0x1F;
 5081570:	e0bffc0b 	ldhu	r2,-16(fp)
 5081574:	108007cc 	andi	r2,r2,31
 5081578:	1007883a 	mov	r3,r2
 508157c:	e0bffe8b 	ldhu	r2,-6(fp)
 5081580:	10c5883a 	add	r2,r2,r3
 5081584:	e0bffe8d 	sth	r2,-6(fp)
        bSuccess = aduio_RegWrite(1, control);        
 5081588:	e0bffe8b 	ldhu	r2,-6(fp)
 508158c:	100b883a 	mov	r5,r2
 5081590:	01000044 	movi	r4,1
 5081594:	50818100 	call	5081810 <aduio_RegWrite>
 5081598:	e0bfff15 	stw	r2,-4(fp)
    }
    
    AUDIO_DEBUG(("[AUDIO] set Line-In vol(%d,%d) %s\r\n", l_vol, r_vol, bSuccess?"success":"fail"));        
 508159c:	e0fffd0b 	ldhu	r3,-12(fp)
 50815a0:	e13ffc0b 	ldhu	r4,-16(fp)
 50815a4:	e0bfff17 	ldw	r2,-4(fp)
 50815a8:	10000326 	beq	r2,zero,50815b8 <AUDIO_SetLineInVol+0xd8>
 50815ac:	00814274 	movhi	r2,1289
 50815b0:	1097b504 	addi	r2,r2,24276
 50815b4:	00000206 	br	50815c0 <AUDIO_SetLineInVol+0xe0>
 50815b8:	00814274 	movhi	r2,1289
 50815bc:	1097b704 	addi	r2,r2,24284
 50815c0:	100f883a 	mov	r7,r2
 50815c4:	200d883a 	mov	r6,r4
 50815c8:	180b883a 	mov	r5,r3
 50815cc:	01014274 	movhi	r4,1289
 50815d0:	2117bf04 	addi	r4,r4,24316
 50815d4:	50825900 	call	5082590 <myprintf>
    return bSuccess;
 50815d8:	e0bfff17 	ldw	r2,-4(fp)
}
 50815dc:	e037883a 	mov	sp,fp
 50815e0:	dfc00117 	ldw	ra,4(sp)
 50815e4:	df000017 	ldw	fp,0(sp)
 50815e8:	dec00204 	addi	sp,sp,8
 50815ec:	f800283a 	ret

050815f0 <AUDIO_SetLineOutVol>:

bool AUDIO_SetLineOutVol(alt_u16 l_vol, alt_u16 r_vol){
 50815f0:	defffa04 	addi	sp,sp,-24
 50815f4:	dfc00515 	stw	ra,20(sp)
 50815f8:	df000415 	stw	fp,16(sp)
 50815fc:	df000404 	addi	fp,sp,16
 5081600:	2005883a 	mov	r2,r4
 5081604:	2807883a 	mov	r3,r5
 5081608:	e0bffd0d 	sth	r2,-12(fp)
 508160c:	1805883a 	mov	r2,r3
 5081610:	e0bffc0d 	sth	r2,-16(fp)
    bool bSuccess;
    alt_u16 control;

 
    // left
    control = reg_file[2];
 5081614:	008142b4 	movhi	r2,1290
 5081618:	10a7b00b 	ldhu	r2,-24896(r2)
 508161c:	e0bffe8d 	sth	r2,-6(fp)
    control &= 0xFF80;
 5081620:	e0fffe8b 	ldhu	r3,-6(fp)
 5081624:	00bfe004 	movi	r2,-128
 5081628:	1884703a 	and	r2,r3,r2
 508162c:	e0bffe8d 	sth	r2,-6(fp)
    control += l_vol & 0x7F;
 5081630:	e0bffd0b 	ldhu	r2,-12(fp)
 5081634:	10801fcc 	andi	r2,r2,127
 5081638:	1007883a 	mov	r3,r2
 508163c:	e0bffe8b 	ldhu	r2,-6(fp)
 5081640:	10c5883a 	add	r2,r2,r3
 5081644:	e0bffe8d 	sth	r2,-6(fp)
    bSuccess = aduio_RegWrite(2, control);
 5081648:	e0bffe8b 	ldhu	r2,-6(fp)
 508164c:	100b883a 	mov	r5,r2
 5081650:	01000084 	movi	r4,2
 5081654:	50818100 	call	5081810 <aduio_RegWrite>
 5081658:	e0bfff15 	stw	r2,-4(fp)
    
    if (bSuccess){
 508165c:	e0bfff17 	ldw	r2,-4(fp)
 5081660:	10001226 	beq	r2,zero,50816ac <AUDIO_SetLineOutVol+0xbc>
        // right
        control = reg_file[3];
 5081664:	008142b4 	movhi	r2,1290
 5081668:	10a7b08b 	ldhu	r2,-24894(r2)
 508166c:	e0bffe8d 	sth	r2,-6(fp)
        control &= 0xFF80;
 5081670:	e0fffe8b 	ldhu	r3,-6(fp)
 5081674:	00bfe004 	movi	r2,-128
 5081678:	1884703a 	and	r2,r3,r2
 508167c:	e0bffe8d 	sth	r2,-6(fp)
        control += r_vol & 0x7F;
 5081680:	e0bffc0b 	ldhu	r2,-16(fp)
 5081684:	10801fcc 	andi	r2,r2,127
 5081688:	1007883a 	mov	r3,r2
 508168c:	e0bffe8b 	ldhu	r2,-6(fp)
 5081690:	10c5883a 	add	r2,r2,r3
 5081694:	e0bffe8d 	sth	r2,-6(fp)
        bSuccess = aduio_RegWrite(3, control);        
 5081698:	e0bffe8b 	ldhu	r2,-6(fp)
 508169c:	100b883a 	mov	r5,r2
 50816a0:	010000c4 	movi	r4,3
 50816a4:	50818100 	call	5081810 <aduio_RegWrite>
 50816a8:	e0bfff15 	stw	r2,-4(fp)
    }    
    
    AUDIO_DEBUG(("[AUDIO] set Line-Out vol(%d,%d) %s\r\n", l_vol, r_vol, bSuccess?"success":"fail"));
 50816ac:	e0fffd0b 	ldhu	r3,-12(fp)
 50816b0:	e13ffc0b 	ldhu	r4,-16(fp)
 50816b4:	e0bfff17 	ldw	r2,-4(fp)
 50816b8:	10000326 	beq	r2,zero,50816c8 <AUDIO_SetLineOutVol+0xd8>
 50816bc:	00814274 	movhi	r2,1289
 50816c0:	1097b504 	addi	r2,r2,24276
 50816c4:	00000206 	br	50816d0 <AUDIO_SetLineOutVol+0xe0>
 50816c8:	00814274 	movhi	r2,1289
 50816cc:	1097b704 	addi	r2,r2,24284
 50816d0:	100f883a 	mov	r7,r2
 50816d4:	200d883a 	mov	r6,r4
 50816d8:	180b883a 	mov	r5,r3
 50816dc:	01014274 	movhi	r4,1289
 50816e0:	2117c804 	addi	r4,r4,24352
 50816e4:	50825900 	call	5082590 <myprintf>
    
    return bSuccess;
 50816e8:	e0bfff17 	ldw	r2,-4(fp)
}
 50816ec:	e037883a 	mov	sp,fp
 50816f0:	dfc00117 	ldw	ra,4(sp)
 50816f4:	df000017 	ldw	fp,0(sp)
 50816f8:	dec00204 	addi	sp,sp,8
 50816fc:	f800283a 	ret

05081700 <AUDIO_EnableByPass>:


bool AUDIO_EnableByPass(bool bEnable){
 5081700:	defffb04 	addi	sp,sp,-20
 5081704:	dfc00415 	stw	ra,16(sp)
 5081708:	df000315 	stw	fp,12(sp)
 508170c:	df000304 	addi	fp,sp,12
 5081710:	e13ffd15 	stw	r4,-12(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
 5081714:	008142b4 	movhi	r2,1290
 5081718:	10a7b10b 	ldhu	r2,-24892(r2)
 508171c:	e0bfff8d 	sth	r2,-2(fp)
    mask = 0x01 << 3;
 5081720:	00800204 	movi	r2,8
 5081724:	e0bfff0d 	sth	r2,-4(fp)
    if (bEnable)
 5081728:	e0bffd17 	ldw	r2,-12(fp)
 508172c:	10000526 	beq	r2,zero,5081744 <AUDIO_EnableByPass+0x44>
        control |= mask;
 5081730:	e0ffff8b 	ldhu	r3,-2(fp)
 5081734:	e0bfff0b 	ldhu	r2,-4(fp)
 5081738:	1884b03a 	or	r2,r3,r2
 508173c:	e0bfff8d 	sth	r2,-2(fp)
 5081740:	00000606 	br	508175c <AUDIO_EnableByPass+0x5c>
    else        
        control &= ~mask;
 5081744:	e0bfff0b 	ldhu	r2,-4(fp)
 5081748:	0084303a 	nor	r2,zero,r2
 508174c:	1007883a 	mov	r3,r2
 5081750:	e0bfff8b 	ldhu	r2,-2(fp)
 5081754:	1884703a 	and	r2,r3,r2
 5081758:	e0bfff8d 	sth	r2,-2(fp)
    bSuccess = aduio_RegWrite(4, control); 
 508175c:	e0bfff8b 	ldhu	r2,-2(fp)
 5081760:	100b883a 	mov	r5,r2
 5081764:	01000104 	movi	r4,4
 5081768:	50818100 	call	5081810 <aduio_RegWrite>
 508176c:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;  	
 5081770:	e0bffe17 	ldw	r2,-8(fp)
}
 5081774:	e037883a 	mov	sp,fp
 5081778:	dfc00117 	ldw	ra,4(sp)
 508177c:	df000017 	ldw	fp,0(sp)
 5081780:	dec00204 	addi	sp,sp,8
 5081784:	f800283a 	ret

05081788 <AUDIO_EnableSiteTone>:

bool AUDIO_EnableSiteTone(bool bEnable){
 5081788:	defffb04 	addi	sp,sp,-20
 508178c:	dfc00415 	stw	ra,16(sp)
 5081790:	df000315 	stw	fp,12(sp)
 5081794:	df000304 	addi	fp,sp,12
 5081798:	e13ffd15 	stw	r4,-12(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
 508179c:	008142b4 	movhi	r2,1290
 50817a0:	10a7b10b 	ldhu	r2,-24892(r2)
 50817a4:	e0bfff8d 	sth	r2,-2(fp)
    mask = 0x01 << 5;
 50817a8:	00800804 	movi	r2,32
 50817ac:	e0bfff0d 	sth	r2,-4(fp)
    if (bEnable)
 50817b0:	e0bffd17 	ldw	r2,-12(fp)
 50817b4:	10000526 	beq	r2,zero,50817cc <AUDIO_EnableSiteTone+0x44>
        control |= mask;
 50817b8:	e0ffff8b 	ldhu	r3,-2(fp)
 50817bc:	e0bfff0b 	ldhu	r2,-4(fp)
 50817c0:	1884b03a 	or	r2,r3,r2
 50817c4:	e0bfff8d 	sth	r2,-2(fp)
 50817c8:	00000606 	br	50817e4 <AUDIO_EnableSiteTone+0x5c>
    else        
        control &= ~mask;
 50817cc:	e0bfff0b 	ldhu	r2,-4(fp)
 50817d0:	0084303a 	nor	r2,zero,r2
 50817d4:	1007883a 	mov	r3,r2
 50817d8:	e0bfff8b 	ldhu	r2,-2(fp)
 50817dc:	1884703a 	and	r2,r3,r2
 50817e0:	e0bfff8d 	sth	r2,-2(fp)
    bSuccess = aduio_RegWrite(4, control); 
 50817e4:	e0bfff8b 	ldhu	r2,-2(fp)
 50817e8:	100b883a 	mov	r5,r2
 50817ec:	01000104 	movi	r4,4
 50817f0:	50818100 	call	5081810 <aduio_RegWrite>
 50817f4:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;        
 50817f8:	e0bffe17 	ldw	r2,-8(fp)
}
 50817fc:	e037883a 	mov	sp,fp
 5081800:	dfc00117 	ldw	ra,4(sp)
 5081804:	df000017 	ldw	fp,0(sp)
 5081808:	dec00204 	addi	sp,sp,8
 508180c:	f800283a 	ret

05081810 <aduio_RegWrite>:

/////////////////////////////////////////////////////////////////////////
///////////// Interla function body ////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

bool aduio_RegWrite(alt_u8 reg_index, alt_u16 data16){
 5081810:	defff904 	addi	sp,sp,-28
 5081814:	dfc00615 	stw	ra,24(sp)
 5081818:	df000515 	stw	fp,20(sp)
 508181c:	df000504 	addi	fp,sp,20
 5081820:	2005883a 	mov	r2,r4
 5081824:	2807883a 	mov	r3,r5
 5081828:	e0bffd05 	stb	r2,-12(fp)
 508182c:	1805883a 	mov	r2,r3
 5081830:	e0bffc0d 	sth	r2,-16(fp)
    bool bSuccess;
    alt_u8 data, control;
    if (reg_index <= 10)
 5081834:	e0bffd03 	ldbu	r2,-12(fp)
 5081838:	108002e8 	cmpgeui	r2,r2,11
 508183c:	1000061e 	bne	r2,zero,5081858 <aduio_RegWrite+0x48>
        reg_file[reg_index] = data16;
 5081840:	e0bffd03 	ldbu	r2,-12(fp)
 5081844:	1089883a 	add	r4,r2,r2
 5081848:	e0fffc0b 	ldhu	r3,-16(fp)
 508184c:	008142b4 	movhi	r2,1290
 5081850:	2085883a 	add	r2,r4,r2
 5081854:	10e7af0d 	sth	r3,-24900(r2)
    data = data16 & 0xFF;
 5081858:	e0bffc0b 	ldhu	r2,-16(fp)
 508185c:	e0bfffc5 	stb	r2,-1(fp)
    control = (reg_index << 1) & 0xFE;
 5081860:	e0bffd03 	ldbu	r2,-12(fp)
 5081864:	1085883a 	add	r2,r2,r2
 5081868:	e0bfff85 	stb	r2,-2(fp)
    control |= ((data16 >> 8) & 0x01);
 508186c:	e0bffc0b 	ldhu	r2,-16(fp)
 5081870:	1004d23a 	srli	r2,r2,8
 5081874:	1080004c 	andi	r2,r2,1
 5081878:	1007883a 	mov	r3,r2
 508187c:	e0bfff83 	ldbu	r2,-2(fp)
 5081880:	1884b03a 	or	r2,r3,r2
 5081884:	e0bfff85 	stb	r2,-2(fp)
    AUDIO_DEBUG(("[AUDIO] set audio reg[%02d] = %04Xh\r\n", reg_index, data16));
 5081888:	e0bffd03 	ldbu	r2,-12(fp)
 508188c:	e0fffc0b 	ldhu	r3,-16(fp)
 5081890:	180d883a 	mov	r6,r3
 5081894:	100b883a 	mov	r5,r2
 5081898:	01014274 	movhi	r4,1289
 508189c:	2117d204 	addi	r4,r4,24392
 50818a0:	50825900 	call	5082590 <myprintf>
    bSuccess = I2C_Write(I2C_SCL_BASE, I2C_SDA_BASE, I2C_AUDIO_ADDR, control, data);
 50818a4:	e0ffff83 	ldbu	r3,-2(fp)
 50818a8:	e0bfffc3 	ldbu	r2,-1(fp)
 50818ac:	d8800015 	stw	r2,0(sp)
 50818b0:	180f883a 	mov	r7,r3
 50818b4:	01800d04 	movi	r6,52
 50818b8:	01410034 	movhi	r5,1024
 50818bc:	29400804 	addi	r5,r5,32
 50818c0:	01010034 	movhi	r4,1024
 50818c4:	21000c04 	addi	r4,r4,48
 50818c8:	5081a3c0 	call	5081a3c <I2C_Write>
 50818cc:	e0bffe15 	stw	r2,-8(fp)
    if (!bSuccess) 
 50818d0:	e0bffe17 	ldw	r2,-8(fp)
 50818d4:	1000031e 	bne	r2,zero,50818e4 <aduio_RegWrite+0xd4>
        AUDIO_DEBUG(("[AUDIO] write reg fail!!!!\r\n"));
 50818d8:	01014274 	movhi	r4,1289
 50818dc:	2117dc04 	addi	r4,r4,24432
 50818e0:	50825900 	call	5082590 <myprintf>
    usleep(50*1000);  // wait audio chip read        
 50818e4:	0130d414 	movui	r4,50000
 50818e8:	50935800 	call	5093580 <usleep>
    return bSuccess;        
 50818ec:	e0bffe17 	ldw	r2,-8(fp)
}
 50818f0:	e037883a 	mov	sp,fp
 50818f4:	dfc00117 	ldw	ra,4(sp)
 50818f8:	df000017 	ldw	fp,0(sp)
 50818fc:	dec00204 	addi	sp,sp,8
 5081900:	f800283a 	ret

05081904 <AUDIO_DacFifoNotFull>:

/////////////////////////////////////////////////////////////////////////
///////////// Audio Play & Recor ////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
// check whether the dac-fifo is full.
bool AUDIO_DacFifoNotFull(void){
 5081904:	defffe04 	addi	sp,sp,-8
 5081908:	df000115 	stw	fp,4(sp)
 508190c:	df000104 	addi	fp,sp,4
    bool bReady;
    bReady = AUDIO_DAC_FULL()?FALSE:TRUE;
 5081910:	00814434 	movhi	r2,1296
 5081914:	10840537 	ldwio	r2,4116(r2)
 5081918:	1080004c 	andi	r2,r2,1
 508191c:	1005003a 	cmpeq	r2,r2,zero
 5081920:	10803fcc 	andi	r2,r2,255
 5081924:	e0bfff15 	stw	r2,-4(fp)
    return bReady;
 5081928:	e0bfff17 	ldw	r2,-4(fp)
}
 508192c:	e037883a 	mov	sp,fp
 5081930:	df000017 	ldw	fp,0(sp)
 5081934:	dec00104 	addi	sp,sp,4
 5081938:	f800283a 	ret

0508193c <AUDIO_DacFifoSetData>:

// call AUDIO_PlayIsReady to make sure the fifo is not full before call this function 
void AUDIO_DacFifoSetData(short ch_left, short ch_right){
 508193c:	defffd04 	addi	sp,sp,-12
 5081940:	df000215 	stw	fp,8(sp)
 5081944:	df000204 	addi	fp,sp,8
 5081948:	2005883a 	mov	r2,r4
 508194c:	2807883a 	mov	r3,r5
 5081950:	e0bfff0d 	sth	r2,-4(fp)
 5081954:	1805883a 	mov	r2,r3
 5081958:	e0bffe0d 	sth	r2,-8(fp)
    AUDIO_DAC_WRITE_L(ch_left);
 508195c:	e0ffff0f 	ldh	r3,-4(fp)
 5081960:	00814434 	movhi	r2,1296
 5081964:	10c40035 	stwio	r3,4096(r2)
    AUDIO_DAC_WRITE_R(ch_right);
 5081968:	e0fffe0f 	ldh	r3,-8(fp)
 508196c:	00814434 	movhi	r2,1296
 5081970:	10c40135 	stwio	r3,4100(r2)
}
 5081974:	0001883a 	nop
 5081978:	e037883a 	mov	sp,fp
 508197c:	df000017 	ldw	fp,0(sp)
 5081980:	dec00104 	addi	sp,sp,4
 5081984:	f800283a 	ret

05081988 <AUDIO_AdcFifoNotEmpty>:

// wheck whether there is data available in adc-fifo
bool AUDIO_AdcFifoNotEmpty(void){
 5081988:	defffe04 	addi	sp,sp,-8
 508198c:	df000115 	stw	fp,4(sp)
 5081990:	df000104 	addi	fp,sp,4
    bool bReady;
    bReady = AUDIO_ADC_EMPTY()?FALSE:TRUE;
 5081994:	00814434 	movhi	r2,1296
 5081998:	10840537 	ldwio	r2,4116(r2)
 508199c:	1080008c 	andi	r2,r2,2
 50819a0:	1005003a 	cmpeq	r2,r2,zero
 50819a4:	10803fcc 	andi	r2,r2,255
 50819a8:	e0bfff15 	stw	r2,-4(fp)
    return bReady;
 50819ac:	e0bfff17 	ldw	r2,-4(fp)
}
 50819b0:	e037883a 	mov	sp,fp
 50819b4:	df000017 	ldw	fp,0(sp)
 50819b8:	dec00104 	addi	sp,sp,4
 50819bc:	f800283a 	ret

050819c0 <AUDIO_AdcFifoGetData>:


// make sure the data is available before call this fucntion
void AUDIO_AdcFifoGetData(short *pch_left, short *pch_right){
 50819c0:	defffd04 	addi	sp,sp,-12
 50819c4:	df000215 	stw	fp,8(sp)
 50819c8:	df000204 	addi	fp,sp,8
 50819cc:	e13fff15 	stw	r4,-4(fp)
 50819d0:	e17ffe15 	stw	r5,-8(fp)
    *pch_left = AUDIO_ADC_READ_L();
 50819d4:	00814434 	movhi	r2,1296
 50819d8:	10840237 	ldwio	r2,4104(r2)
 50819dc:	1007883a 	mov	r3,r2
 50819e0:	e0bfff17 	ldw	r2,-4(fp)
 50819e4:	10c0000d 	sth	r3,0(r2)
    *pch_right = AUDIO_ADC_READ_R();
 50819e8:	00814434 	movhi	r2,1296
 50819ec:	10840337 	ldwio	r2,4108(r2)
 50819f0:	1007883a 	mov	r3,r2
 50819f4:	e0bffe17 	ldw	r2,-8(fp)
 50819f8:	10c0000d 	sth	r3,0(r2)
    
}
 50819fc:	0001883a 	nop
 5081a00:	e037883a 	mov	sp,fp
 5081a04:	df000017 	ldw	fp,0(sp)
 5081a08:	dec00104 	addi	sp,sp,4
 5081a0c:	f800283a 	ret

05081a10 <AUDIO_FifoClear>:

void AUDIO_FifoClear(void){
 5081a10:	deffff04 	addi	sp,sp,-4
 5081a14:	df000015 	stw	fp,0(sp)
 5081a18:	d839883a 	mov	fp,sp
    AUDIO_FIFO_CLEAR();
 5081a1c:	00c00044 	movi	r3,1
 5081a20:	00814434 	movhi	r2,1296
 5081a24:	10c40435 	stwio	r3,4112(r2)
}
 5081a28:	0001883a 	nop
 5081a2c:	e037883a 	mov	sp,fp
 5081a30:	df000017 	ldw	fp,0(sp)
 5081a34:	dec00104 	addi	sp,sp,4
 5081a38:	f800283a 	ret

05081a3c <I2C_Write>:
bool i2c_write(alt_u32 clk_base, alt_u32 data_base, alt_u8 Data);
void i2c_read(alt_u32 clk_base, alt_u32 data_base, alt_u8 *pData, bool bAck);



bool I2C_Write(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 ControlAddr, alt_u8 ControlData){
 5081a3c:	defff804 	addi	sp,sp,-32
 5081a40:	dfc00715 	stw	ra,28(sp)
 5081a44:	df000615 	stw	fp,24(sp)
 5081a48:	df000604 	addi	fp,sp,24
 5081a4c:	e13ffe15 	stw	r4,-8(fp)
 5081a50:	e17ffd15 	stw	r5,-12(fp)
 5081a54:	3007883a 	mov	r3,r6
 5081a58:	3809883a 	mov	r4,r7
 5081a5c:	e0800217 	ldw	r2,8(fp)
 5081a60:	e0fffc05 	stb	r3,-16(fp)
 5081a64:	2007883a 	mov	r3,r4
 5081a68:	e0fffb05 	stb	r3,-20(fp)
 5081a6c:	e0bffa05 	stb	r2,-24(fp)
    bool bSuccess = TRUE;
 5081a70:	00800044 	movi	r2,1
 5081a74:	e0bfff15 	stw	r2,-4(fp)
    //alt_u8 DeviceAddr;
    
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
 5081a78:	e17ffd17 	ldw	r5,-12(fp)
 5081a7c:	e13ffe17 	ldw	r4,-8(fp)
 5081a80:	5081de00 	call	5081de0 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
 5081a84:	e0bffc03 	ldbu	r2,-16(fp)
 5081a88:	10803fcc 	andi	r2,r2,255
 5081a8c:	100d883a 	mov	r6,r2
 5081a90:	e17ffd17 	ldw	r5,-12(fp)
 5081a94:	e13ffe17 	ldw	r4,-8(fp)
 5081a98:	5081ee40 	call	5081ee4 <i2c_write>
 5081a9c:	1000041e 	bne	r2,zero,5081ab0 <I2C_Write+0x74>
        bSuccess = FALSE;
 5081aa0:	e03fff15 	stw	zero,-4(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
 5081aa4:	01014274 	movhi	r4,1289
 5081aa8:	2117e404 	addi	r4,r4,24464
 5081aac:	50825900 	call	5082590 <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
 5081ab0:	e0bfff17 	ldw	r2,-4(fp)
 5081ab4:	10000a26 	beq	r2,zero,5081ae0 <I2C_Write+0xa4>
 5081ab8:	e0bffb03 	ldbu	r2,-20(fp)
 5081abc:	100d883a 	mov	r6,r2
 5081ac0:	e17ffd17 	ldw	r5,-12(fp)
 5081ac4:	e13ffe17 	ldw	r4,-8(fp)
 5081ac8:	5081ee40 	call	5081ee4 <i2c_write>
 5081acc:	1000041e 	bne	r2,zero,5081ae0 <I2C_Write+0xa4>
        bSuccess = FALSE;
 5081ad0:	e03fff15 	stw	zero,-4(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
 5081ad4:	01014274 	movhi	r4,1289
 5081ad8:	2117ec04 	addi	r4,r4,24496
 5081adc:	50825900 	call	5082590 <myprintf>
    }            
    if (bSuccess && !i2c_write(clk_base, data_base, ControlData)){  
 5081ae0:	e0bfff17 	ldw	r2,-4(fp)
 5081ae4:	10000a26 	beq	r2,zero,5081b10 <I2C_Write+0xd4>
 5081ae8:	e0bffa03 	ldbu	r2,-24(fp)
 5081aec:	100d883a 	mov	r6,r2
 5081af0:	e17ffd17 	ldw	r5,-12(fp)
 5081af4:	e13ffe17 	ldw	r4,-8(fp)
 5081af8:	5081ee40 	call	5081ee4 <i2c_write>
 5081afc:	1000041e 	bne	r2,zero,5081b10 <I2C_Write+0xd4>
        bSuccess = FALSE;
 5081b00:	e03fff15 	stw	zero,-4(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: write NACK!\n"));
 5081b04:	01014274 	movhi	r4,1289
 5081b08:	2117f504 	addi	r4,r4,24532
 5081b0c:	50825900 	call	5082590 <myprintf>
    }
    i2c_stop(clk_base, data_base);
 5081b10:	e17ffd17 	ldw	r5,-12(fp)
 5081b14:	e13ffe17 	ldw	r4,-8(fp)
 5081b18:	5081e6c0 	call	5081e6c <i2c_stop>
    
    usleep(7*1000); // delay to wait EE2 ready (at least 5 ms delay is required)
 5081b1c:	0106d604 	movi	r4,7000
 5081b20:	50935800 	call	5093580 <usleep>
    
    return bSuccess;
 5081b24:	e0bfff17 	ldw	r2,-4(fp)

    
}
 5081b28:	e037883a 	mov	sp,fp
 5081b2c:	dfc00117 	ldw	ra,4(sp)
 5081b30:	df000017 	ldw	fp,0(sp)
 5081b34:	dec00204 	addi	sp,sp,8
 5081b38:	f800283a 	ret

05081b3c <I2C_Read>:

bool I2C_Read(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 ControlAddr, alt_u8 *pControlData){
 5081b3c:	defff904 	addi	sp,sp,-28
 5081b40:	dfc00615 	stw	ra,24(sp)
 5081b44:	df000515 	stw	fp,20(sp)
 5081b48:	df000504 	addi	fp,sp,20
 5081b4c:	e13ffe15 	stw	r4,-8(fp)
 5081b50:	e17ffd15 	stw	r5,-12(fp)
 5081b54:	3005883a 	mov	r2,r6
 5081b58:	3807883a 	mov	r3,r7
 5081b5c:	e0bffc05 	stb	r2,-16(fp)
 5081b60:	1805883a 	mov	r2,r3
 5081b64:	e0bffb05 	stb	r2,-20(fp)
    bool bSuccess = TRUE;
 5081b68:	00800044 	movi	r2,1
 5081b6c:	e0bfff15 	stw	r2,-4(fp)
    //alt_u8 DeviceAddr;
   
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
 5081b70:	e17ffd17 	ldw	r5,-12(fp)
 5081b74:	e13ffe17 	ldw	r4,-8(fp)
 5081b78:	5081de00 	call	5081de0 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
 5081b7c:	e0bffc03 	ldbu	r2,-16(fp)
 5081b80:	10803fcc 	andi	r2,r2,255
 5081b84:	100d883a 	mov	r6,r2
 5081b88:	e17ffd17 	ldw	r5,-12(fp)
 5081b8c:	e13ffe17 	ldw	r4,-8(fp)
 5081b90:	5081ee40 	call	5081ee4 <i2c_write>
 5081b94:	1000041e 	bne	r2,zero,5081ba8 <I2C_Read+0x6c>
        bSuccess = FALSE;
 5081b98:	e03fff15 	stw	zero,-4(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
 5081b9c:	01014274 	movhi	r4,1289
 5081ba0:	2117e404 	addi	r4,r4,24464
 5081ba4:	50825900 	call	5082590 <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
 5081ba8:	e0bfff17 	ldw	r2,-4(fp)
 5081bac:	10000a26 	beq	r2,zero,5081bd8 <I2C_Read+0x9c>
 5081bb0:	e0bffb03 	ldbu	r2,-20(fp)
 5081bb4:	100d883a 	mov	r6,r2
 5081bb8:	e17ffd17 	ldw	r5,-12(fp)
 5081bbc:	e13ffe17 	ldw	r4,-8(fp)
 5081bc0:	5081ee40 	call	5081ee4 <i2c_write>
 5081bc4:	1000041e 	bne	r2,zero,5081bd8 <I2C_Read+0x9c>
        bSuccess = FALSE;
 5081bc8:	e03fff15 	stw	zero,-4(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
 5081bcc:	01014274 	movhi	r4,1289
 5081bd0:	2117ec04 	addi	r4,r4,24496
 5081bd4:	50825900 	call	5082590 <myprintf>
    }            
    i2c_start(clk_base, data_base);  // restart
 5081bd8:	e17ffd17 	ldw	r5,-12(fp)
 5081bdc:	e13ffe17 	ldw	r4,-8(fp)
 5081be0:	5081de00 	call	5081de0 <i2c_start>
    DeviceAddr |= 1; // Read
 5081be4:	e0bffc03 	ldbu	r2,-16(fp)
 5081be8:	10800054 	ori	r2,r2,1
 5081bec:	e0bffc05 	stb	r2,-16(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
 5081bf0:	e0bfff17 	ldw	r2,-4(fp)
 5081bf4:	10000b26 	beq	r2,zero,5081c24 <I2C_Read+0xe8>
 5081bf8:	e0bffc03 	ldbu	r2,-16(fp)
 5081bfc:	10803fcc 	andi	r2,r2,255
 5081c00:	100d883a 	mov	r6,r2
 5081c04:	e17ffd17 	ldw	r5,-12(fp)
 5081c08:	e13ffe17 	ldw	r4,-8(fp)
 5081c0c:	5081ee40 	call	5081ee4 <i2c_write>
 5081c10:	1000041e 	bne	r2,zero,5081c24 <I2C_Read+0xe8>
        bSuccess = FALSE;
 5081c14:	e03fff15 	stw	zero,-4(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
 5081c18:	01014274 	movhi	r4,1289
 5081c1c:	2117fd04 	addi	r4,r4,24564
 5081c20:	50825900 	call	5082590 <myprintf>
    }
    
    if (bSuccess){
 5081c24:	e0bfff17 	ldw	r2,-4(fp)
 5081c28:	10000526 	beq	r2,zero,5081c40 <I2C_Read+0x104>
        i2c_read(clk_base, data_base, pControlData, FALSE);  // read
 5081c2c:	000f883a 	mov	r7,zero
 5081c30:	e1800217 	ldw	r6,8(fp)
 5081c34:	e17ffd17 	ldw	r5,-12(fp)
 5081c38:	e13ffe17 	ldw	r4,-8(fp)
 5081c3c:	50820140 	call	5082014 <i2c_read>
    }        
    i2c_stop(clk_base, data_base);
 5081c40:	e17ffd17 	ldw	r5,-12(fp)
 5081c44:	e13ffe17 	ldw	r4,-8(fp)
 5081c48:	5081e6c0 	call	5081e6c <i2c_stop>
    
    return bSuccess;
 5081c4c:	e0bfff17 	ldw	r2,-4(fp)
}
 5081c50:	e037883a 	mov	sp,fp
 5081c54:	dfc00117 	ldw	ra,4(sp)
 5081c58:	df000017 	ldw	fp,0(sp)
 5081c5c:	dec00204 	addi	sp,sp,8
 5081c60:	f800283a 	ret

05081c64 <I2C_MultipleRead>:

bool I2C_MultipleRead(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 szData[], alt_u16 len){
 5081c64:	defff604 	addi	sp,sp,-40
 5081c68:	dfc00915 	stw	ra,36(sp)
 5081c6c:	df000815 	stw	fp,32(sp)
 5081c70:	df000804 	addi	fp,sp,32
 5081c74:	e13ffc15 	stw	r4,-16(fp)
 5081c78:	e17ffb15 	stw	r5,-20(fp)
 5081c7c:	3007883a 	mov	r3,r6
 5081c80:	e1fff915 	stw	r7,-28(fp)
 5081c84:	e0800217 	ldw	r2,8(fp)
 5081c88:	e0fffa05 	stb	r3,-24(fp)
 5081c8c:	e0bff80d 	sth	r2,-32(fp)
    int i;
    bool bSuccess = TRUE;
 5081c90:	00800044 	movi	r2,1
 5081c94:	e0bffe15 	stw	r2,-8(fp)
    //alt_u8 DeviceAddr, 
    alt_u8 ControlAddr = 0;
 5081c98:	e03ffdc5 	stb	zero,-9(fp)
    
   
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
 5081c9c:	e17ffb17 	ldw	r5,-20(fp)
 5081ca0:	e13ffc17 	ldw	r4,-16(fp)
 5081ca4:	5081de00 	call	5081de0 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
 5081ca8:	e0bffa03 	ldbu	r2,-24(fp)
 5081cac:	10803fcc 	andi	r2,r2,255
 5081cb0:	100d883a 	mov	r6,r2
 5081cb4:	e17ffb17 	ldw	r5,-20(fp)
 5081cb8:	e13ffc17 	ldw	r4,-16(fp)
 5081cbc:	5081ee40 	call	5081ee4 <i2c_write>
 5081cc0:	1000041e 	bne	r2,zero,5081cd4 <I2C_MultipleRead+0x70>
        bSuccess = FALSE;
 5081cc4:	e03ffe15 	stw	zero,-8(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
 5081cc8:	01014274 	movhi	r4,1289
 5081ccc:	2117e404 	addi	r4,r4,24464
 5081cd0:	50825900 	call	5082590 <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
 5081cd4:	e0bffe17 	ldw	r2,-8(fp)
 5081cd8:	10000a26 	beq	r2,zero,5081d04 <I2C_MultipleRead+0xa0>
 5081cdc:	e0bffdc3 	ldbu	r2,-9(fp)
 5081ce0:	100d883a 	mov	r6,r2
 5081ce4:	e17ffb17 	ldw	r5,-20(fp)
 5081ce8:	e13ffc17 	ldw	r4,-16(fp)
 5081cec:	5081ee40 	call	5081ee4 <i2c_write>
 5081cf0:	1000041e 	bne	r2,zero,5081d04 <I2C_MultipleRead+0xa0>
        bSuccess = FALSE;
 5081cf4:	e03ffe15 	stw	zero,-8(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
 5081cf8:	01014274 	movhi	r4,1289
 5081cfc:	2117ec04 	addi	r4,r4,24496
 5081d00:	50825900 	call	5082590 <myprintf>
    }    
    if (bSuccess)        
 5081d04:	e0bffe17 	ldw	r2,-8(fp)
 5081d08:	10000326 	beq	r2,zero,5081d18 <I2C_MultipleRead+0xb4>
        i2c_start(clk_base, data_base);  // restart
 5081d0c:	e17ffb17 	ldw	r5,-20(fp)
 5081d10:	e13ffc17 	ldw	r4,-16(fp)
 5081d14:	5081de00 	call	5081de0 <i2c_start>
    DeviceAddr |= 1; // Read
 5081d18:	e0bffa03 	ldbu	r2,-24(fp)
 5081d1c:	10800054 	ori	r2,r2,1
 5081d20:	e0bffa05 	stb	r2,-24(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
 5081d24:	e0bffe17 	ldw	r2,-8(fp)
 5081d28:	10000b26 	beq	r2,zero,5081d58 <I2C_MultipleRead+0xf4>
 5081d2c:	e0bffa03 	ldbu	r2,-24(fp)
 5081d30:	10803fcc 	andi	r2,r2,255
 5081d34:	100d883a 	mov	r6,r2
 5081d38:	e17ffb17 	ldw	r5,-20(fp)
 5081d3c:	e13ffc17 	ldw	r4,-16(fp)
 5081d40:	5081ee40 	call	5081ee4 <i2c_write>
 5081d44:	1000041e 	bne	r2,zero,5081d58 <I2C_MultipleRead+0xf4>
        bSuccess = FALSE;
 5081d48:	e03ffe15 	stw	zero,-8(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
 5081d4c:	01014274 	movhi	r4,1289
 5081d50:	2117fd04 	addi	r4,r4,24564
 5081d54:	50825900 	call	5082590 <myprintf>
    }
    
    if (bSuccess){
 5081d58:	e0bffe17 	ldw	r2,-8(fp)
 5081d5c:	10001726 	beq	r2,zero,5081dbc <I2C_MultipleRead+0x158>
        for(i=0;i<len && bSuccess;i++){
 5081d60:	e03fff15 	stw	zero,-4(fp)
 5081d64:	00001006 	br	5081da8 <I2C_MultipleRead+0x144>
            i2c_read(clk_base, data_base, &szData[i], (i==(len-1))?FALSE:TRUE);  // read
 5081d68:	e0bfff17 	ldw	r2,-4(fp)
 5081d6c:	e0fff917 	ldw	r3,-28(fp)
 5081d70:	1889883a 	add	r4,r3,r2
 5081d74:	e0bff80b 	ldhu	r2,-32(fp)
 5081d78:	10bfffc4 	addi	r2,r2,-1
 5081d7c:	e0ffff17 	ldw	r3,-4(fp)
 5081d80:	1884c03a 	cmpne	r2,r3,r2
 5081d84:	10803fcc 	andi	r2,r2,255
 5081d88:	100f883a 	mov	r7,r2
 5081d8c:	200d883a 	mov	r6,r4
 5081d90:	e17ffb17 	ldw	r5,-20(fp)
 5081d94:	e13ffc17 	ldw	r4,-16(fp)
 5081d98:	50820140 	call	5082014 <i2c_read>
        for(i=0;i<len && bSuccess;i++){
 5081d9c:	e0bfff17 	ldw	r2,-4(fp)
 5081da0:	10800044 	addi	r2,r2,1
 5081da4:	e0bfff15 	stw	r2,-4(fp)
 5081da8:	e0bff80b 	ldhu	r2,-32(fp)
 5081dac:	e0ffff17 	ldw	r3,-4(fp)
 5081db0:	1880020e 	bge	r3,r2,5081dbc <I2C_MultipleRead+0x158>
 5081db4:	e0bffe17 	ldw	r2,-8(fp)
 5081db8:	103feb1e 	bne	r2,zero,5081d68 <I2C_MultipleRead+0x104>
        }            
    }        
    i2c_stop(clk_base, data_base);
 5081dbc:	e17ffb17 	ldw	r5,-20(fp)
 5081dc0:	e13ffc17 	ldw	r4,-16(fp)
 5081dc4:	5081e6c0 	call	5081e6c <i2c_stop>
    
    return bSuccess;    
 5081dc8:	e0bffe17 	ldw	r2,-8(fp)
    
}
 5081dcc:	e037883a 	mov	sp,fp
 5081dd0:	dfc00117 	ldw	ra,4(sp)
 5081dd4:	df000017 	ldw	fp,0(sp)
 5081dd8:	dec00204 	addi	sp,sp,8
 5081ddc:	f800283a 	ret

05081de0 <i2c_start>:
///////////// Interncal function (i2cXXX) body //////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////


//SDA 1->0 while SCL=1
void i2c_start(alt_u32 clk_base, alt_u32 data_base){
 5081de0:	defffc04 	addi	sp,sp,-16
 5081de4:	dfc00315 	stw	ra,12(sp)
 5081de8:	df000215 	stw	fp,8(sp)
 5081dec:	df000204 	addi	fp,sp,8
 5081df0:	e13fff15 	stw	r4,-4(fp)
 5081df4:	e17ffe15 	stw	r5,-8(fp)
    
    // make sure it is in normal state
    SDA_DIR_OUT(data_base);  // data output enabled
 5081df8:	e0bffe17 	ldw	r2,-8(fp)
 5081dfc:	10800104 	addi	r2,r2,4
 5081e00:	1007883a 	mov	r3,r2
 5081e04:	00800044 	movi	r2,1
 5081e08:	18800035 	stwio	r2,0(r3)
    
    
    
    // start condition 
    SDA_HIGH(data_base); // data high
 5081e0c:	e0bffe17 	ldw	r2,-8(fp)
 5081e10:	00c00044 	movi	r3,1
 5081e14:	10c00035 	stwio	r3,0(r2)
    SCL_HIGH(clk_base);
 5081e18:	e0bfff17 	ldw	r2,-4(fp)
 5081e1c:	00c00044 	movi	r3,1
 5081e20:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;
 5081e24:	01000044 	movi	r4,1
 5081e28:	50935800 	call	5093580 <usleep>
     
    SDA_LOW(data_base); // data low
 5081e2c:	e0bffe17 	ldw	r2,-8(fp)
 5081e30:	0007883a 	mov	r3,zero
 5081e34:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; 
 5081e38:	01000044 	movi	r4,1
 5081e3c:	50935800 	call	5093580 <usleep>
    SCL_LOW(clk_base); // clock low
 5081e40:	e0bfff17 	ldw	r2,-4(fp)
 5081e44:	0007883a 	mov	r3,zero
 5081e48:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;
 5081e4c:	01000044 	movi	r4,1
 5081e50:	50935800 	call	5093580 <usleep>
}
 5081e54:	0001883a 	nop
 5081e58:	e037883a 	mov	sp,fp
 5081e5c:	dfc00117 	ldw	ra,4(sp)
 5081e60:	df000017 	ldw	fp,0(sp)
 5081e64:	dec00204 	addi	sp,sp,8
 5081e68:	f800283a 	ret

05081e6c <i2c_stop>:

// SDA 0->1 while SCL=1
void i2c_stop(alt_u32 clk_base, alt_u32 data_base){
 5081e6c:	defffc04 	addi	sp,sp,-16
 5081e70:	dfc00315 	stw	ra,12(sp)
 5081e74:	df000215 	stw	fp,8(sp)
 5081e78:	df000204 	addi	fp,sp,8
 5081e7c:	e13fff15 	stw	r4,-4(fp)
 5081e80:	e17ffe15 	stw	r5,-8(fp)
    // assume SCL = 0
    
    SDA_DIR_OUT(data_base);  // data output enabled
 5081e84:	e0bffe17 	ldw	r2,-8(fp)
 5081e88:	10800104 	addi	r2,r2,4
 5081e8c:	1007883a 	mov	r3,r2
 5081e90:	00800044 	movi	r2,1
 5081e94:	18800035 	stwio	r2,0(r3)
    SDA_LOW(data_base); // Data Low
 5081e98:	e0bffe17 	ldw	r2,-8(fp)
 5081e9c:	0007883a 	mov	r3,zero
 5081ea0:	10c00035 	stwio	r3,0(r2)
    //SCL_DELAY; 
    SCL_HIGH(clk_base);  // clock high
 5081ea4:	e0bfff17 	ldw	r2,-4(fp)
 5081ea8:	00c00044 	movi	r3,1
 5081eac:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock high long delay
 5081eb0:	01000044 	movi	r4,1
 5081eb4:	50935800 	call	5093580 <usleep>
    SDA_HIGH(data_base); // data high
 5081eb8:	e0bffe17 	ldw	r2,-8(fp)
 5081ebc:	00c00044 	movi	r3,1
 5081ec0:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // data high delay
 5081ec4:	01000044 	movi	r4,1
 5081ec8:	50935800 	call	5093580 <usleep>
}
 5081ecc:	0001883a 	nop
 5081ed0:	e037883a 	mov	sp,fp
 5081ed4:	dfc00117 	ldw	ra,4(sp)
 5081ed8:	df000017 	ldw	fp,0(sp)
 5081edc:	dec00204 	addi	sp,sp,8
 5081ee0:	f800283a 	ret

05081ee4 <i2c_write>:

bool i2c_write(alt_u32 clk_base, alt_u32 data_base, alt_u8 Data){ // return true if device response ack
 5081ee4:	defff804 	addi	sp,sp,-32
 5081ee8:	dfc00715 	stw	ra,28(sp)
 5081eec:	df000615 	stw	fp,24(sp)
 5081ef0:	df000604 	addi	fp,sp,24
 5081ef4:	e13ffc15 	stw	r4,-16(fp)
 5081ef8:	e17ffb15 	stw	r5,-20(fp)
 5081efc:	3005883a 	mov	r2,r6
 5081f00:	e0bffa05 	stb	r2,-24(fp)
    alt_u8 Mask = 0x80;
 5081f04:	00bfe004 	movi	r2,-128
 5081f08:	e0bfffc5 	stb	r2,-1(fp)
    bool bAck;
    int i;
    
    // assume, SCL = 0
    
    SDA_DIR_OUT(data_base);  // data write mode
 5081f0c:	e0bffb17 	ldw	r2,-20(fp)
 5081f10:	10800104 	addi	r2,r2,4
 5081f14:	1007883a 	mov	r3,r2
 5081f18:	00800044 	movi	r2,1
 5081f1c:	18800035 	stwio	r2,0(r3)
    
    for(i=0;i<8;i++){
 5081f20:	e03ffe15 	stw	zero,-8(fp)
 5081f24:	00001f06 	br	5081fa4 <i2c_write+0xc0>
        SCL_LOW(clk_base);  // new, make sure data change at clk low
 5081f28:	e0bffc17 	ldw	r2,-16(fp)
 5081f2c:	0007883a 	mov	r3,zero
 5081f30:	10c00035 	stwio	r3,0(r2)
        // output data on bus
        if (Data & Mask){ // there is a delay in this command
 5081f34:	e0fffa03 	ldbu	r3,-24(fp)
 5081f38:	e0bfffc3 	ldbu	r2,-1(fp)
 5081f3c:	1884703a 	and	r2,r3,r2
 5081f40:	10803fcc 	andi	r2,r2,255
 5081f44:	10000426 	beq	r2,zero,5081f58 <i2c_write+0x74>
            SDA_HIGH(data_base);
 5081f48:	e0bffb17 	ldw	r2,-20(fp)
 5081f4c:	00c00044 	movi	r3,1
 5081f50:	10c00035 	stwio	r3,0(r2)
 5081f54:	00000306 	br	5081f64 <i2c_write+0x80>
        }else{    
            SDA_LOW(data_base);
 5081f58:	e0bffb17 	ldw	r2,-20(fp)
 5081f5c:	0007883a 	mov	r3,zero
 5081f60:	10c00035 	stwio	r3,0(r2)
        }
        Mask >>= 1; // there is a delay in this command
 5081f64:	e0bfffc3 	ldbu	r2,-1(fp)
 5081f68:	1004d07a 	srli	r2,r2,1
 5081f6c:	e0bfffc5 	stb	r2,-1(fp)
        // clock high
        SCL_HIGH(clk_base);
 5081f70:	e0bffc17 	ldw	r2,-16(fp)
 5081f74:	00c00044 	movi	r3,1
 5081f78:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
 5081f7c:	01000044 	movi	r4,1
 5081f80:	50935800 	call	5093580 <usleep>
        SCL_LOW(clk_base);
 5081f84:	e0bffc17 	ldw	r2,-16(fp)
 5081f88:	0007883a 	mov	r3,zero
 5081f8c:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
 5081f90:	01000044 	movi	r4,1
 5081f94:	50935800 	call	5093580 <usleep>
    for(i=0;i<8;i++){
 5081f98:	e0bffe17 	ldw	r2,-8(fp)
 5081f9c:	10800044 	addi	r2,r2,1
 5081fa0:	e0bffe15 	stw	r2,-8(fp)
 5081fa4:	e0bffe17 	ldw	r2,-8(fp)
 5081fa8:	10800210 	cmplti	r2,r2,8
 5081fac:	103fde1e 	bne	r2,zero,5081f28 <i2c_write+0x44>
    }
    
    //===== get ack
    SDA_DIR_IN(data_base);  // data read mode
 5081fb0:	e0bffb17 	ldw	r2,-20(fp)
 5081fb4:	10800104 	addi	r2,r2,4
 5081fb8:	0007883a 	mov	r3,zero
 5081fbc:	10c00035 	stwio	r3,0(r2)
    //SCL_DELAY;
    // clock high
    SCL_HIGH(clk_base);  // clock high
 5081fc0:	e0bffc17 	ldw	r2,-16(fp)
 5081fc4:	00c00044 	movi	r3,1
 5081fc8:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;  // clock high delay
 5081fcc:	01000044 	movi	r4,1
 5081fd0:	50935800 	call	5093580 <usleep>
    bAck = SDA_READ(data_base)?FALSE:TRUE;  // get ack
 5081fd4:	e0bffb17 	ldw	r2,-20(fp)
 5081fd8:	10800037 	ldwio	r2,0(r2)
 5081fdc:	1005003a 	cmpeq	r2,r2,zero
 5081fe0:	10803fcc 	andi	r2,r2,255
 5081fe4:	e0bffd15 	stw	r2,-12(fp)
    //SCL_DELAY;
    //SDA_DIR_OUT;
    SCL_LOW(clk_base); // clock low         
 5081fe8:	e0bffc17 	ldw	r2,-16(fp)
 5081fec:	0007883a 	mov	r3,zero
 5081ff0:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
 5081ff4:	01000044 	movi	r4,1
 5081ff8:	50935800 	call	5093580 <usleep>
    return bAck;
 5081ffc:	e0bffd17 	ldw	r2,-12(fp)
}    
 5082000:	e037883a 	mov	sp,fp
 5082004:	dfc00117 	ldw	ra,4(sp)
 5082008:	df000017 	ldw	fp,0(sp)
 508200c:	dec00204 	addi	sp,sp,8
 5082010:	f800283a 	ret

05082014 <i2c_read>:

void i2c_read(alt_u32 clk_base, alt_u32 data_base, alt_u8 *pData, bool bAck){ // return true if device response ack
 5082014:	defff804 	addi	sp,sp,-32
 5082018:	dfc00715 	stw	ra,28(sp)
 508201c:	df000615 	stw	fp,24(sp)
 5082020:	df000604 	addi	fp,sp,24
 5082024:	e13ffd15 	stw	r4,-12(fp)
 5082028:	e17ffc15 	stw	r5,-16(fp)
 508202c:	e1bffb15 	stw	r6,-20(fp)
 5082030:	e1fffa15 	stw	r7,-24(fp)
    alt_u8 Data=0;
 5082034:	e03fffc5 	stb	zero,-1(fp)
    int i;
    
    // assume SCL = low
    
    SDA_DIR_IN(data_base);  // set data read mode
 5082038:	e0bffc17 	ldw	r2,-16(fp)
 508203c:	10800104 	addi	r2,r2,4
 5082040:	0007883a 	mov	r3,zero
 5082044:	10c00035 	stwio	r3,0(r2)
    SCL_LOW(clk_base); // clock low
 5082048:	e0bffd17 	ldw	r2,-12(fp)
 508204c:	0007883a 	mov	r3,zero
 5082050:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
 5082054:	01000044 	movi	r4,1
 5082058:	50935800 	call	5093580 <usleep>

    for(i=0;i<8;i++){
 508205c:	e03ffe15 	stw	zero,-8(fp)
 5082060:	00001606 	br	50820bc <i2c_read+0xa8>
        Data <<= 1;
 5082064:	e0bfffc3 	ldbu	r2,-1(fp)
 5082068:	1085883a 	add	r2,r2,r2
 508206c:	e0bfffc5 	stb	r2,-1(fp)
        SCL_HIGH(clk_base);  // clock high
 5082070:	e0bffd17 	ldw	r2,-12(fp)
 5082074:	00c00044 	movi	r3,1
 5082078:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
 508207c:	01000044 	movi	r4,1
 5082080:	50935800 	call	5093580 <usleep>
        if (SDA_READ(data_base))  // read data   
 5082084:	e0bffc17 	ldw	r2,-16(fp)
 5082088:	10800037 	ldwio	r2,0(r2)
 508208c:	10000326 	beq	r2,zero,508209c <i2c_read+0x88>
            Data |= 0x01;
 5082090:	e0bfffc3 	ldbu	r2,-1(fp)
 5082094:	10800054 	ori	r2,r2,1
 5082098:	e0bfffc5 	stb	r2,-1(fp)
        SCL_LOW(clk_base);  // clock log  
 508209c:	e0bffd17 	ldw	r2,-12(fp)
 50820a0:	0007883a 	mov	r3,zero
 50820a4:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
 50820a8:	01000044 	movi	r4,1
 50820ac:	50935800 	call	5093580 <usleep>
    for(i=0;i<8;i++){
 50820b0:	e0bffe17 	ldw	r2,-8(fp)
 50820b4:	10800044 	addi	r2,r2,1
 50820b8:	e0bffe15 	stw	r2,-8(fp)
 50820bc:	e0bffe17 	ldw	r2,-8(fp)
 50820c0:	10800210 	cmplti	r2,r2,8
 50820c4:	103fe71e 	bne	r2,zero,5082064 <i2c_read+0x50>
    }
    
    // send ACK
    SCL_LOW(clk_base);  // new, make sure data change at clk low
 50820c8:	e0bffd17 	ldw	r2,-12(fp)
 50820cc:	0007883a 	mov	r3,zero
 50820d0:	10c00035 	stwio	r3,0(r2)
    SDA_DIR_OUT(data_base);  // set data write mode
 50820d4:	e0bffc17 	ldw	r2,-16(fp)
 50820d8:	10800104 	addi	r2,r2,4
 50820dc:	1007883a 	mov	r3,r2
 50820e0:	00800044 	movi	r2,1
 50820e4:	18800035 	stwio	r2,0(r3)
    if (bAck)
 50820e8:	e0bffa17 	ldw	r2,-24(fp)
 50820ec:	10000426 	beq	r2,zero,5082100 <i2c_read+0xec>
        SDA_LOW(data_base);
 50820f0:	e0bffc17 	ldw	r2,-16(fp)
 50820f4:	0007883a 	mov	r3,zero
 50820f8:	10c00035 	stwio	r3,0(r2)
 50820fc:	00000306 	br	508210c <i2c_read+0xf8>
    else
        SDA_HIGH(data_base);
 5082100:	e0bffc17 	ldw	r2,-16(fp)
 5082104:	00c00044 	movi	r3,1
 5082108:	10c00035 	stwio	r3,0(r2)
    SCL_HIGH(clk_base); // clock high
 508210c:	e0bffd17 	ldw	r2,-12(fp)
 5082110:	00c00044 	movi	r3,1
 5082114:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock high  delay
 5082118:	01000044 	movi	r4,1
 508211c:	50935800 	call	5093580 <usleep>
    SCL_LOW(clk_base); // clock low
 5082120:	e0bffd17 	ldw	r2,-12(fp)
 5082124:	0007883a 	mov	r3,zero
 5082128:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
 508212c:	01000044 	movi	r4,1
 5082130:	50935800 	call	5093580 <usleep>
    SDA_LOW(data_base);  // data low
 5082134:	e0bffc17 	ldw	r2,-16(fp)
 5082138:	0007883a 	mov	r3,zero
 508213c:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // data low delay
 5082140:	01000044 	movi	r4,1
 5082144:	50935800 	call	5093580 <usleep>
//    SDA_DIR_IN;  // set data read mode
    
    *pData = Data;
 5082148:	e0bffb17 	ldw	r2,-20(fp)
 508214c:	e0ffffc3 	ldbu	r3,-1(fp)
 5082150:	10c00005 	stb	r3,0(r2)
}
 5082154:	0001883a 	nop
 5082158:	e037883a 	mov	sp,fp
 508215c:	dfc00117 	ldw	ra,4(sp)
 5082160:	df000017 	ldw	fp,0(sp)
 5082164:	dec00204 	addi	sp,sp,8
 5082168:	f800283a 	ret

0508216c <LED_Display>:
#define LED_INIT_MASK   (0x01 << 24)

#define LED_SET(mask)   IOWR_ALTERA_AVALON_PIO_DATA(PIO_LED_BASE, mask)


void LED_Display(alt_u32 Mask){ // 1: light, 0:unlight
 508216c:	defffd04 	addi	sp,sp,-12
 5082170:	df000215 	stw	fp,8(sp)
 5082174:	df000204 	addi	fp,sp,8
 5082178:	e13ffe15 	stw	r4,-8(fp)
    alt_u32 ThisMask;
    ThisMask = Mask;//~(Mask & 0x7FFFFFF);
 508217c:	e0bffe17 	ldw	r2,-8(fp)
 5082180:	e0bfff15 	stw	r2,-4(fp)
    LED_SET(ThisMask);  //0:ligh, 1:unlight
 5082184:	e0ffff17 	ldw	r3,-4(fp)
 5082188:	00810034 	movhi	r2,1024
 508218c:	10c01435 	stwio	r3,80(r2)
    
}
 5082190:	0001883a 	nop
 5082194:	e037883a 	mov	sp,fp
 5082198:	df000017 	ldw	fp,0(sp)
 508219c:	dec00104 	addi	sp,sp,4
 50821a0:	f800283a 	ret

050821a4 <LED_AllOn>:


void LED_AllOn(void){
 50821a4:	defffe04 	addi	sp,sp,-8
 50821a8:	dfc00115 	stw	ra,4(sp)
 50821ac:	df000015 	stw	fp,0(sp)
 50821b0:	d839883a 	mov	fp,sp
    LED_Display(0xFFFFFFFF);       
 50821b4:	013fffc4 	movi	r4,-1
 50821b8:	508216c0 	call	508216c <LED_Display>
}
 50821bc:	0001883a 	nop
 50821c0:	e037883a 	mov	sp,fp
 50821c4:	dfc00117 	ldw	ra,4(sp)
 50821c8:	df000017 	ldw	fp,0(sp)
 50821cc:	dec00204 	addi	sp,sp,8
 50821d0:	f800283a 	ret

050821d4 <LED_AllOff>:

void LED_AllOff(void){
 50821d4:	defffe04 	addi	sp,sp,-8
 50821d8:	dfc00115 	stw	ra,4(sp)
 50821dc:	df000015 	stw	fp,0(sp)
 50821e0:	d839883a 	mov	fp,sp
    LED_Display(0x00);       
 50821e4:	0009883a 	mov	r4,zero
 50821e8:	508216c0 	call	508216c <LED_Display>
}
 50821ec:	0001883a 	nop
 50821f0:	e037883a 	mov	sp,fp
 50821f4:	dfc00117 	ldw	ra,4(sp)
 50821f8:	df000017 	ldw	fp,0(sp)
 50821fc:	dec00204 	addi	sp,sp,8
 5082200:	f800283a 	ret

05082204 <LED_LightCount>:


void LED_LightCount(alt_u8 LightCount){ // 1: light, 0:unlight
 5082204:	defffb04 	addi	sp,sp,-20
 5082208:	dfc00415 	stw	ra,16(sp)
 508220c:	df000315 	stw	fp,12(sp)
 5082210:	df000304 	addi	fp,sp,12
 5082214:	2005883a 	mov	r2,r4
 5082218:	e0bffd05 	stb	r2,-12(fp)
    alt_u32 Mask = 0;
 508221c:	e03fff15 	stw	zero,-4(fp)
    int i;
    for(i=0;i<LightCount;i++){
 5082220:	e03ffe15 	stw	zero,-8(fp)
 5082224:	00000906 	br	508224c <LED_LightCount+0x48>
        Mask <<= 1;
 5082228:	e0bfff17 	ldw	r2,-4(fp)
 508222c:	1085883a 	add	r2,r2,r2
 5082230:	e0bfff15 	stw	r2,-4(fp)
        Mask |= 0x01;
 5082234:	e0bfff17 	ldw	r2,-4(fp)
 5082238:	10800054 	ori	r2,r2,1
 508223c:	e0bfff15 	stw	r2,-4(fp)
    for(i=0;i<LightCount;i++){
 5082240:	e0bffe17 	ldw	r2,-8(fp)
 5082244:	10800044 	addi	r2,r2,1
 5082248:	e0bffe15 	stw	r2,-8(fp)
 508224c:	e0bffd03 	ldbu	r2,-12(fp)
 5082250:	e0fffe17 	ldw	r3,-8(fp)
 5082254:	18bff416 	blt	r3,r2,5082228 <LED_LightCount+0x24>
    }
    LED_Display(Mask);  //0:ligh, 1:unlight
 5082258:	e13fff17 	ldw	r4,-4(fp)
 508225c:	508216c0 	call	508216c <LED_Display>
    
}
 5082260:	0001883a 	nop
 5082264:	e037883a 	mov	sp,fp
 5082268:	dfc00117 	ldw	ra,4(sp)
 508226c:	df000017 	ldw	fp,0(sp)
 5082270:	dec00204 	addi	sp,sp,8
 5082274:	f800283a 	ret

05082278 <SEG7_Clear>:
static    unsigned char szMap[] = {
        63, 6, 91, 79, 102, 109, 125, 7, 
        127, 111, 119, 124, 57, 94, 121, 113
    };  // 0,1,2,....9, a, b, c, d, e, f
    
void SEG7_Clear(void){
 5082278:	defffe04 	addi	sp,sp,-8
 508227c:	df000115 	stw	fp,4(sp)
 5082280:	df000104 	addi	fp,sp,4
    int i;
    for(i=0;i<SEG7_NUM;i++){
 5082284:	e03fff15 	stw	zero,-4(fp)
 5082288:	00000a06 	br	50822b4 <SEG7_Clear+0x3c>
        SEG7_SET(i, 0x00);
 508228c:	e0bfff17 	ldw	r2,-4(fp)
 5082290:	100490ba 	slli	r2,r2,2
 5082294:	1007883a 	mov	r3,r2
 5082298:	00810034 	movhi	r2,1024
 508229c:	1885883a 	add	r2,r3,r2
 50822a0:	0007883a 	mov	r3,zero
 50822a4:	10c00035 	stwio	r3,0(r2)
    for(i=0;i<SEG7_NUM;i++){
 50822a8:	e0bfff17 	ldw	r2,-4(fp)
 50822ac:	10800044 	addi	r2,r2,1
 50822b0:	e0bfff15 	stw	r2,-4(fp)
 50822b4:	e0bfff17 	ldw	r2,-4(fp)
 50822b8:	10800190 	cmplti	r2,r2,6
 50822bc:	103ff31e 	bne	r2,zero,508228c <SEG7_Clear+0x14>
    }        
}
 50822c0:	0001883a 	nop
 50822c4:	0001883a 	nop
 50822c8:	e037883a 	mov	sp,fp
 50822cc:	df000017 	ldw	fp,0(sp)
 50822d0:	dec00104 	addi	sp,sp,4
 50822d4:	f800283a 	ret

050822d8 <SEG7_Full>:
void SEG7_Full(void){
 50822d8:	defffe04 	addi	sp,sp,-8
 50822dc:	df000115 	stw	fp,4(sp)
 50822e0:	df000104 	addi	fp,sp,4
    int i;
    for(i=0;i<SEG7_NUM;i++){
 50822e4:	e03fff15 	stw	zero,-4(fp)
 50822e8:	00000a06 	br	5082314 <SEG7_Full+0x3c>
        SEG7_SET(i, 0xFF);
 50822ec:	e0bfff17 	ldw	r2,-4(fp)
 50822f0:	100490ba 	slli	r2,r2,2
 50822f4:	1007883a 	mov	r3,r2
 50822f8:	00810034 	movhi	r2,1024
 50822fc:	1885883a 	add	r2,r3,r2
 5082300:	00c03fc4 	movi	r3,255
 5082304:	10c00035 	stwio	r3,0(r2)
    for(i=0;i<SEG7_NUM;i++){
 5082308:	e0bfff17 	ldw	r2,-4(fp)
 508230c:	10800044 	addi	r2,r2,1
 5082310:	e0bfff15 	stw	r2,-4(fp)
 5082314:	e0bfff17 	ldw	r2,-4(fp)
 5082318:	10800190 	cmplti	r2,r2,6
 508231c:	103ff31e 	bne	r2,zero,50822ec <SEG7_Full+0x14>
    }        
}
 5082320:	0001883a 	nop
 5082324:	0001883a 	nop
 5082328:	e037883a 	mov	sp,fp
 508232c:	df000017 	ldw	fp,0(sp)
 5082330:	dec00104 	addi	sp,sp,4
 5082334:	f800283a 	ret

05082338 <SEG7_Number>:

void SEG7_Number(void){
 5082338:	defffe04 	addi	sp,sp,-8
 508233c:	df000115 	stw	fp,4(sp)
 5082340:	df000104 	addi	fp,sp,4
    int i;
    for(i=0;i<SEG7_NUM;i++){
 5082344:	e03fff15 	stw	zero,-4(fp)
 5082348:	00000e06 	br	5082384 <SEG7_Number+0x4c>
        SEG7_SET(i, szMap[i]);
 508234c:	e0bfff17 	ldw	r2,-4(fp)
 5082350:	100490ba 	slli	r2,r2,2
 5082354:	1007883a 	mov	r3,r2
 5082358:	00810034 	movhi	r2,1024
 508235c:	1887883a 	add	r3,r3,r2
 5082360:	e13fff17 	ldw	r4,-4(fp)
 5082364:	00814274 	movhi	r2,1289
 5082368:	2085883a 	add	r2,r4,r2
 508236c:	1099ac03 	ldbu	r2,26288(r2)
 5082370:	10803fcc 	andi	r2,r2,255
 5082374:	18800035 	stwio	r2,0(r3)
    for(i=0;i<SEG7_NUM;i++){
 5082378:	e0bfff17 	ldw	r2,-4(fp)
 508237c:	10800044 	addi	r2,r2,1
 5082380:	e0bfff15 	stw	r2,-4(fp)
 5082384:	e0bfff17 	ldw	r2,-4(fp)
 5082388:	10800190 	cmplti	r2,r2,6
 508238c:	103fef1e 	bne	r2,zero,508234c <SEG7_Number+0x14>
    }        
}
 5082390:	0001883a 	nop
 5082394:	0001883a 	nop
 5082398:	e037883a 	mov	sp,fp
 508239c:	df000017 	ldw	fp,0(sp)
 50823a0:	dec00104 	addi	sp,sp,4
 50823a4:	f800283a 	ret

050823a8 <SEG7_Hex>:

void SEG7_Hex(alt_u32 Data, alt_u8 point_mask){
 50823a8:	defffb04 	addi	sp,sp,-20
 50823ac:	df000415 	stw	fp,16(sp)
 50823b0:	df000404 	addi	fp,sp,16
 50823b4:	e13ffd15 	stw	r4,-12(fp)
 50823b8:	2805883a 	mov	r2,r5
 50823bc:	e0bffc05 	stb	r2,-16(fp)
    alt_u8 mask = 0x01;
 50823c0:	00800044 	movi	r2,1
 50823c4:	e0bfffc5 	stb	r2,-1(fp)
    alt_u8 seg_mask;
    int i;
    
    //
    seg_mask = 0;
 50823c8:	e03fff85 	stb	zero,-2(fp)
    for(i=0;i<SEG7_NUM;i++){
 50823cc:	e03ffe15 	stw	zero,-8(fp)
 50823d0:	00001f06 	br	5082450 <SEG7_Hex+0xa8>
        seg_mask = szMap[Data & 0x0F];
 50823d4:	e0bffd17 	ldw	r2,-12(fp)
 50823d8:	10c003cc 	andi	r3,r2,15
 50823dc:	00814274 	movhi	r2,1289
 50823e0:	1885883a 	add	r2,r3,r2
 50823e4:	1099ac03 	ldbu	r2,26288(r2)
 50823e8:	e0bfff85 	stb	r2,-2(fp)
        Data >>= 4;
 50823ec:	e0bffd17 	ldw	r2,-12(fp)
 50823f0:	1004d13a 	srli	r2,r2,4
 50823f4:	e0bffd15 	stw	r2,-12(fp)
        if (point_mask & mask)
 50823f8:	e0fffc03 	ldbu	r3,-16(fp)
 50823fc:	e0bfffc3 	ldbu	r2,-1(fp)
 5082400:	1884703a 	and	r2,r3,r2
 5082404:	10803fcc 	andi	r2,r2,255
 5082408:	10000426 	beq	r2,zero,508241c <SEG7_Hex+0x74>
            seg_mask |= 0x80;
 508240c:	e0ffff83 	ldbu	r3,-2(fp)
 5082410:	00bfe004 	movi	r2,-128
 5082414:	1884b03a 	or	r2,r3,r2
 5082418:	e0bfff85 	stb	r2,-2(fp)
        mask <<= 1;     
 508241c:	e0bfffc3 	ldbu	r2,-1(fp)
 5082420:	1085883a 	add	r2,r2,r2
 5082424:	e0bfffc5 	stb	r2,-1(fp)
        SEG7_SET(i, seg_mask);
 5082428:	e0bffe17 	ldw	r2,-8(fp)
 508242c:	100490ba 	slli	r2,r2,2
 5082430:	1007883a 	mov	r3,r2
 5082434:	00810034 	movhi	r2,1024
 5082438:	1885883a 	add	r2,r3,r2
 508243c:	e0ffff83 	ldbu	r3,-2(fp)
 5082440:	10c00035 	stwio	r3,0(r2)
    for(i=0;i<SEG7_NUM;i++){
 5082444:	e0bffe17 	ldw	r2,-8(fp)
 5082448:	10800044 	addi	r2,r2,1
 508244c:	e0bffe15 	stw	r2,-8(fp)
 5082450:	e0bffe17 	ldw	r2,-8(fp)
 5082454:	10800190 	cmplti	r2,r2,6
 5082458:	103fde1e 	bne	r2,zero,50823d4 <SEG7_Hex+0x2c>
    }        
}
 508245c:	0001883a 	nop
 5082460:	0001883a 	nop
 5082464:	e037883a 	mov	sp,fp
 5082468:	df000017 	ldw	fp,0(sp)
 508246c:	dec00104 	addi	sp,sp,4
 5082470:	f800283a 	ret

05082474 <SEG7_Decimal>:

void SEG7_Decimal(alt_u32 Data, alt_u8 point_mask){
 5082474:	defffa04 	addi	sp,sp,-24
 5082478:	dfc00515 	stw	ra,20(sp)
 508247c:	df000415 	stw	fp,16(sp)
 5082480:	df000404 	addi	fp,sp,16
 5082484:	e13ffd15 	stw	r4,-12(fp)
 5082488:	2805883a 	mov	r2,r5
 508248c:	e0bffc05 	stb	r2,-16(fp)
    alt_u8 mask = 0x01;
 5082490:	00800044 	movi	r2,1
 5082494:	e0bfffc5 	stb	r2,-1(fp)
    alt_u8 seg_mask;
    int i;
    
    //
    seg_mask = 0;
 5082498:	e03fff85 	stb	zero,-2(fp)
    for(i=0;i<SEG7_NUM;i++){
 508249c:	e03ffe15 	stw	zero,-8(fp)
 50824a0:	00002406 	br	5082534 <SEG7_Decimal+0xc0>
        seg_mask = szMap[Data%10];
 50824a4:	e0bffd17 	ldw	r2,-12(fp)
 50824a8:	01400284 	movi	r5,10
 50824ac:	1009883a 	mov	r4,r2
 50824b0:	50828640 	call	5082864 <__umodsi3>
 50824b4:	1007883a 	mov	r3,r2
 50824b8:	00814274 	movhi	r2,1289
 50824bc:	1885883a 	add	r2,r3,r2
 50824c0:	1099ac03 	ldbu	r2,26288(r2)
 50824c4:	e0bfff85 	stb	r2,-2(fp)
        Data /= 10;
 50824c8:	e0bffd17 	ldw	r2,-12(fp)
 50824cc:	01400284 	movi	r5,10
 50824d0:	1009883a 	mov	r4,r2
 50824d4:	50828000 	call	5082800 <__udivsi3>
 50824d8:	e0bffd15 	stw	r2,-12(fp)
        if (point_mask & mask)
 50824dc:	e0fffc03 	ldbu	r3,-16(fp)
 50824e0:	e0bfffc3 	ldbu	r2,-1(fp)
 50824e4:	1884703a 	and	r2,r3,r2
 50824e8:	10803fcc 	andi	r2,r2,255
 50824ec:	10000426 	beq	r2,zero,5082500 <SEG7_Decimal+0x8c>
            seg_mask |= 0x80;
 50824f0:	e0ffff83 	ldbu	r3,-2(fp)
 50824f4:	00bfe004 	movi	r2,-128
 50824f8:	1884b03a 	or	r2,r3,r2
 50824fc:	e0bfff85 	stb	r2,-2(fp)
        mask <<= 1;   
 5082500:	e0bfffc3 	ldbu	r2,-1(fp)
 5082504:	1085883a 	add	r2,r2,r2
 5082508:	e0bfffc5 	stb	r2,-1(fp)
        SEG7_SET(i, seg_mask);
 508250c:	e0bffe17 	ldw	r2,-8(fp)
 5082510:	100490ba 	slli	r2,r2,2
 5082514:	1007883a 	mov	r3,r2
 5082518:	00810034 	movhi	r2,1024
 508251c:	1885883a 	add	r2,r3,r2
 5082520:	e0ffff83 	ldbu	r3,-2(fp)
 5082524:	10c00035 	stwio	r3,0(r2)
    for(i=0;i<SEG7_NUM;i++){
 5082528:	e0bffe17 	ldw	r2,-8(fp)
 508252c:	10800044 	addi	r2,r2,1
 5082530:	e0bffe15 	stw	r2,-8(fp)
 5082534:	e0bffe17 	ldw	r2,-8(fp)
 5082538:	10800190 	cmplti	r2,r2,6
 508253c:	103fd91e 	bne	r2,zero,50824a4 <SEG7_Decimal+0x30>
    }        
  
} 
 5082540:	0001883a 	nop
 5082544:	0001883a 	nop
 5082548:	e037883a 	mov	sp,fp
 508254c:	dfc00117 	ldw	ra,4(sp)
 5082550:	df000017 	ldw	fp,0(sp)
 5082554:	dec00204 	addi	sp,sp,8
 5082558:	f800283a 	ret

0508255c <debug_output>:
    if (!UART_IsOpened())
        UART_Open();
    UART_WriteString(pMessage);  // UART debug
}
#else
void debug_output(char *pMessage){
 508255c:	defffd04 	addi	sp,sp,-12
 5082560:	dfc00215 	stw	ra,8(sp)
 5082564:	df000115 	stw	fp,4(sp)
 5082568:	df000104 	addi	fp,sp,4
 508256c:	e13fff15 	stw	r4,-4(fp)
    printf(pMessage);
 5082570:	e13fff17 	ldw	r4,-4(fp)
 5082574:	50828f00 	call	50828f0 <printf>
}
 5082578:	0001883a 	nop
 508257c:	e037883a 	mov	sp,fp
 5082580:	dfc00117 	ldw	ra,4(sp)
 5082584:	df000017 	ldw	fp,0(sp)
 5082588:	dec00204 	addi	sp,sp,8
 508258c:	f800283a 	ret

05082590 <myprintf>:

#endif


int myprintf(char *format, ...){
 5082590:	deff7804 	addi	sp,sp,-544
 5082594:	dfc08415 	stw	ra,528(sp)
 5082598:	df008315 	stw	fp,524(sp)
 508259c:	df008304 	addi	fp,sp,524
 50825a0:	e13f7d15 	stw	r4,-524(fp)
 50825a4:	e1400215 	stw	r5,8(fp)
 50825a8:	e1800315 	stw	r6,12(fp)
 50825ac:	e1c00415 	stw	r7,16(fp)
    int rc;
    char szText[512];
    
    va_list paramList;
    va_start(paramList, format);
 50825b0:	e0800204 	addi	r2,fp,8
 50825b4:	e0bf7e15 	stw	r2,-520(fp)
    rc = vsnprintf(szText, 512, format, paramList);
 50825b8:	e0ff7e17 	ldw	r3,-520(fp)
 50825bc:	e0bf7f04 	addi	r2,fp,-516
 50825c0:	180f883a 	mov	r7,r3
 50825c4:	e1bf7d17 	ldw	r6,-524(fp)
 50825c8:	01408004 	movi	r5,512
 50825cc:	1009883a 	mov	r4,r2
 50825d0:	5086da40 	call	5086da4 <vsnprintf>
 50825d4:	e0bfff15 	stw	r2,-4(fp)
    va_end(paramList);
    
    debug_output(szText);
 50825d8:	e0bf7f04 	addi	r2,fp,-516
 50825dc:	1009883a 	mov	r4,r2
 50825e0:	508255c0 	call	508255c <debug_output>

    return rc;    
 50825e4:	e0bfff17 	ldw	r2,-4(fp)
}
 50825e8:	e037883a 	mov	sp,fp
 50825ec:	dfc00117 	ldw	ra,4(sp)
 50825f0:	df000017 	ldw	fp,0(sp)
 50825f4:	dec00504 	addi	sp,sp,20
 50825f8:	f800283a 	ret

050825fc <myprintf_hex_array>:


int myprintf_hex_array(unsigned char *pHex, int len){
 50825fc:	defff704 	addi	sp,sp,-36
 5082600:	dfc00815 	stw	ra,32(sp)
 5082604:	df000715 	stw	fp,28(sp)
 5082608:	df000704 	addi	fp,sp,28
 508260c:	e13ffa15 	stw	r4,-24(fp)
 5082610:	e17ff915 	stw	r5,-28(fp)
    int i;
    unsigned char szText[16];
    for(i=0;i<len;i++){
 5082614:	e03fff15 	stw	zero,-4(fp)
 5082618:	00001106 	br	5082660 <myprintf_hex_array+0x64>
        sprintf(szText, "[%02X]", *(pHex+i));
 508261c:	e0bfff17 	ldw	r2,-4(fp)
 5082620:	e0fffa17 	ldw	r3,-24(fp)
 5082624:	1885883a 	add	r2,r3,r2
 5082628:	10800003 	ldbu	r2,0(r2)
 508262c:	10c03fcc 	andi	r3,r2,255
 5082630:	e0bffb04 	addi	r2,fp,-20
 5082634:	180d883a 	mov	r6,r3
 5082638:	01414274 	movhi	r5,1289
 508263c:	29580604 	addi	r5,r5,24600
 5082640:	1009883a 	mov	r4,r2
 5082644:	5082a580 	call	5082a58 <sprintf>
        DEBUG((szText));
 5082648:	e0bffb04 	addi	r2,fp,-20
 508264c:	1009883a 	mov	r4,r2
 5082650:	50825900 	call	5082590 <myprintf>
    for(i=0;i<len;i++){
 5082654:	e0bfff17 	ldw	r2,-4(fp)
 5082658:	10800044 	addi	r2,r2,1
 508265c:	e0bfff15 	stw	r2,-4(fp)
 5082660:	e0ffff17 	ldw	r3,-4(fp)
 5082664:	e0bff917 	ldw	r2,-28(fp)
 5082668:	18bfec16 	blt	r3,r2,508261c <myprintf_hex_array+0x20>
    }
    return len;
 508266c:	e0bff917 	ldw	r2,-28(fp)
}
 5082670:	e037883a 	mov	sp,fp
 5082674:	dfc00117 	ldw	ra,4(sp)
 5082678:	df000017 	ldw	fp,0(sp)
 508267c:	dec00204 	addi	sp,sp,8
 5082680:	f800283a 	ret

05082684 <myprintf_dword_array>:

int  myprintf_dword_array(unsigned int *pArray, int nElementCount){
 5082684:	defff704 	addi	sp,sp,-36
 5082688:	dfc00815 	stw	ra,32(sp)
 508268c:	df000715 	stw	fp,28(sp)
 5082690:	df000704 	addi	fp,sp,28
 5082694:	e13ffa15 	stw	r4,-24(fp)
 5082698:	e17ff915 	stw	r5,-28(fp)
    int i;
    char szText[16];
    for(i=0;i<nElementCount;i++){
 508269c:	e03fff15 	stw	zero,-4(fp)
 50826a0:	00001106 	br	50826e8 <myprintf_dword_array+0x64>
        sprintf(szText, "[%08X]", *(pArray+i));
 50826a4:	e0bfff17 	ldw	r2,-4(fp)
 50826a8:	100490ba 	slli	r2,r2,2
 50826ac:	e0fffa17 	ldw	r3,-24(fp)
 50826b0:	1885883a 	add	r2,r3,r2
 50826b4:	10c00017 	ldw	r3,0(r2)
 50826b8:	e0bffb04 	addi	r2,fp,-20
 50826bc:	180d883a 	mov	r6,r3
 50826c0:	01414274 	movhi	r5,1289
 50826c4:	29580804 	addi	r5,r5,24608
 50826c8:	1009883a 	mov	r4,r2
 50826cc:	5082a580 	call	5082a58 <sprintf>
        DEBUG((szText));
 50826d0:	e0bffb04 	addi	r2,fp,-20
 50826d4:	1009883a 	mov	r4,r2
 50826d8:	50825900 	call	5082590 <myprintf>
    for(i=0;i<nElementCount;i++){
 50826dc:	e0bfff17 	ldw	r2,-4(fp)
 50826e0:	10800044 	addi	r2,r2,1
 50826e4:	e0bfff15 	stw	r2,-4(fp)
 50826e8:	e0ffff17 	ldw	r3,-4(fp)
 50826ec:	e0bff917 	ldw	r2,-28(fp)
 50826f0:	18bfec16 	blt	r3,r2,50826a4 <myprintf_dword_array+0x20>
    }
    return nElementCount;
 50826f4:	e0bff917 	ldw	r2,-28(fp)
}
 50826f8:	e037883a 	mov	sp,fp
 50826fc:	dfc00117 	ldw	ra,4(sp)
 5082700:	df000017 	ldw	fp,0(sp)
 5082704:	dec00204 	addi	sp,sp,8
 5082708:	f800283a 	ret

0508270c <__divsi3>:
 508270c:	20001a16 	blt	r4,zero,5082778 <__divsi3+0x6c>
 5082710:	000f883a 	mov	r7,zero
 5082714:	2800020e 	bge	r5,zero,5082720 <__divsi3+0x14>
 5082718:	014bc83a 	sub	r5,zero,r5
 508271c:	39c0005c 	xori	r7,r7,1
 5082720:	200d883a 	mov	r6,r4
 5082724:	00c00044 	movi	r3,1
 5082728:	2900092e 	bgeu	r5,r4,5082750 <__divsi3+0x44>
 508272c:	00800804 	movi	r2,32
 5082730:	00c00044 	movi	r3,1
 5082734:	00000106 	br	508273c <__divsi3+0x30>
 5082738:	10001226 	beq	r2,zero,5082784 <__divsi3+0x78>
 508273c:	294b883a 	add	r5,r5,r5
 5082740:	10bfffc4 	addi	r2,r2,-1
 5082744:	18c7883a 	add	r3,r3,r3
 5082748:	293ffb36 	bltu	r5,r4,5082738 <__divsi3+0x2c>
 508274c:	18000d26 	beq	r3,zero,5082784 <__divsi3+0x78>
 5082750:	0005883a 	mov	r2,zero
 5082754:	31400236 	bltu	r6,r5,5082760 <__divsi3+0x54>
 5082758:	314dc83a 	sub	r6,r6,r5
 508275c:	10c4b03a 	or	r2,r2,r3
 5082760:	1806d07a 	srli	r3,r3,1
 5082764:	280ad07a 	srli	r5,r5,1
 5082768:	183ffa1e 	bne	r3,zero,5082754 <__divsi3+0x48>
 508276c:	38000126 	beq	r7,zero,5082774 <__divsi3+0x68>
 5082770:	0085c83a 	sub	r2,zero,r2
 5082774:	f800283a 	ret
 5082778:	0109c83a 	sub	r4,zero,r4
 508277c:	01c00044 	movi	r7,1
 5082780:	003fe406 	br	5082714 <__divsi3+0x8>
 5082784:	0005883a 	mov	r2,zero
 5082788:	003ff806 	br	508276c <__divsi3+0x60>

0508278c <__modsi3>:
 508278c:	20001916 	blt	r4,zero,50827f4 <__modsi3+0x68>
 5082790:	000f883a 	mov	r7,zero
 5082794:	2005883a 	mov	r2,r4
 5082798:	2800010e 	bge	r5,zero,50827a0 <__modsi3+0x14>
 508279c:	014bc83a 	sub	r5,zero,r5
 50827a0:	00c00044 	movi	r3,1
 50827a4:	2900092e 	bgeu	r5,r4,50827cc <__modsi3+0x40>
 50827a8:	01800804 	movi	r6,32
 50827ac:	00c00044 	movi	r3,1
 50827b0:	00000106 	br	50827b8 <__modsi3+0x2c>
 50827b4:	30000d26 	beq	r6,zero,50827ec <__modsi3+0x60>
 50827b8:	294b883a 	add	r5,r5,r5
 50827bc:	31bfffc4 	addi	r6,r6,-1
 50827c0:	18c7883a 	add	r3,r3,r3
 50827c4:	293ffb36 	bltu	r5,r4,50827b4 <__modsi3+0x28>
 50827c8:	18000826 	beq	r3,zero,50827ec <__modsi3+0x60>
 50827cc:	1806d07a 	srli	r3,r3,1
 50827d0:	11400136 	bltu	r2,r5,50827d8 <__modsi3+0x4c>
 50827d4:	1145c83a 	sub	r2,r2,r5
 50827d8:	280ad07a 	srli	r5,r5,1
 50827dc:	183ffb1e 	bne	r3,zero,50827cc <__modsi3+0x40>
 50827e0:	38000126 	beq	r7,zero,50827e8 <__modsi3+0x5c>
 50827e4:	0085c83a 	sub	r2,zero,r2
 50827e8:	f800283a 	ret
 50827ec:	2005883a 	mov	r2,r4
 50827f0:	003ffb06 	br	50827e0 <__modsi3+0x54>
 50827f4:	0109c83a 	sub	r4,zero,r4
 50827f8:	01c00044 	movi	r7,1
 50827fc:	003fe506 	br	5082794 <__modsi3+0x8>

05082800 <__udivsi3>:
 5082800:	200d883a 	mov	r6,r4
 5082804:	2900152e 	bgeu	r5,r4,508285c <__udivsi3+0x5c>
 5082808:	28001416 	blt	r5,zero,508285c <__udivsi3+0x5c>
 508280c:	00800804 	movi	r2,32
 5082810:	00c00044 	movi	r3,1
 5082814:	00000206 	br	5082820 <__udivsi3+0x20>
 5082818:	10000e26 	beq	r2,zero,5082854 <__udivsi3+0x54>
 508281c:	28000516 	blt	r5,zero,5082834 <__udivsi3+0x34>
 5082820:	294b883a 	add	r5,r5,r5
 5082824:	10bfffc4 	addi	r2,r2,-1
 5082828:	18c7883a 	add	r3,r3,r3
 508282c:	293ffa36 	bltu	r5,r4,5082818 <__udivsi3+0x18>
 5082830:	18000826 	beq	r3,zero,5082854 <__udivsi3+0x54>
 5082834:	0005883a 	mov	r2,zero
 5082838:	31400236 	bltu	r6,r5,5082844 <__udivsi3+0x44>
 508283c:	314dc83a 	sub	r6,r6,r5
 5082840:	10c4b03a 	or	r2,r2,r3
 5082844:	1806d07a 	srli	r3,r3,1
 5082848:	280ad07a 	srli	r5,r5,1
 508284c:	183ffa1e 	bne	r3,zero,5082838 <__udivsi3+0x38>
 5082850:	f800283a 	ret
 5082854:	0005883a 	mov	r2,zero
 5082858:	f800283a 	ret
 508285c:	00c00044 	movi	r3,1
 5082860:	003ff406 	br	5082834 <__udivsi3+0x34>

05082864 <__umodsi3>:
 5082864:	2005883a 	mov	r2,r4
 5082868:	2900132e 	bgeu	r5,r4,50828b8 <__umodsi3+0x54>
 508286c:	28001216 	blt	r5,zero,50828b8 <__umodsi3+0x54>
 5082870:	01800804 	movi	r6,32
 5082874:	00c00044 	movi	r3,1
 5082878:	00000206 	br	5082884 <__umodsi3+0x20>
 508287c:	30000c26 	beq	r6,zero,50828b0 <__umodsi3+0x4c>
 5082880:	28000516 	blt	r5,zero,5082898 <__umodsi3+0x34>
 5082884:	294b883a 	add	r5,r5,r5
 5082888:	31bfffc4 	addi	r6,r6,-1
 508288c:	18c7883a 	add	r3,r3,r3
 5082890:	293ffa36 	bltu	r5,r4,508287c <__umodsi3+0x18>
 5082894:	18000626 	beq	r3,zero,50828b0 <__umodsi3+0x4c>
 5082898:	1806d07a 	srli	r3,r3,1
 508289c:	11400136 	bltu	r2,r5,50828a4 <__umodsi3+0x40>
 50828a0:	1145c83a 	sub	r2,r2,r5
 50828a4:	280ad07a 	srli	r5,r5,1
 50828a8:	183ffb1e 	bne	r3,zero,5082898 <__umodsi3+0x34>
 50828ac:	f800283a 	ret
 50828b0:	2005883a 	mov	r2,r4
 50828b4:	f800283a 	ret
 50828b8:	00c00044 	movi	r3,1
 50828bc:	003ff606 	br	5082898 <__umodsi3+0x34>

050828c0 <_printf_r>:
 50828c0:	defffd04 	addi	sp,sp,-12
 50828c4:	2805883a 	mov	r2,r5
 50828c8:	dfc00015 	stw	ra,0(sp)
 50828cc:	d9800115 	stw	r6,4(sp)
 50828d0:	d9c00215 	stw	r7,8(sp)
 50828d4:	21400217 	ldw	r5,8(r4)
 50828d8:	d9c00104 	addi	r7,sp,4
 50828dc:	100d883a 	mov	r6,r2
 50828e0:	5084bd40 	call	5084bd4 <___vfprintf_internal_r>
 50828e4:	dfc00017 	ldw	ra,0(sp)
 50828e8:	dec00304 	addi	sp,sp,12
 50828ec:	f800283a 	ret

050828f0 <printf>:
 50828f0:	defffc04 	addi	sp,sp,-16
 50828f4:	dfc00015 	stw	ra,0(sp)
 50828f8:	d9400115 	stw	r5,4(sp)
 50828fc:	d9800215 	stw	r6,8(sp)
 5082900:	d9c00315 	stw	r7,12(sp)
 5082904:	008142b4 	movhi	r2,1290
 5082908:	10a09917 	ldw	r2,-32156(r2)
 508290c:	200b883a 	mov	r5,r4
 5082910:	d9800104 	addi	r6,sp,4
 5082914:	11000217 	ldw	r4,8(r2)
 5082918:	5086cc80 	call	5086cc8 <__vfprintf_internal>
 508291c:	dfc00017 	ldw	ra,0(sp)
 5082920:	dec00404 	addi	sp,sp,16
 5082924:	f800283a 	ret

05082928 <_puts_r>:
 5082928:	defff504 	addi	sp,sp,-44
 508292c:	dc000815 	stw	r16,32(sp)
 5082930:	2021883a 	mov	r16,r4
 5082934:	2809883a 	mov	r4,r5
 5082938:	dc400915 	stw	r17,36(sp)
 508293c:	dfc00a15 	stw	ra,40(sp)
 5082940:	2823883a 	mov	r17,r5
 5082944:	5082abc0 	call	5082abc <strlen>
 5082948:	11000044 	addi	r4,r2,1
 508294c:	d8800515 	stw	r2,20(sp)
 5082950:	00800044 	movi	r2,1
 5082954:	00c14274 	movhi	r3,1289
 5082958:	d8800715 	stw	r2,28(sp)
 508295c:	d8800404 	addi	r2,sp,16
 5082960:	18d80a04 	addi	r3,r3,24616
 5082964:	d8800115 	stw	r2,4(sp)
 5082968:	00800084 	movi	r2,2
 508296c:	dc400415 	stw	r17,16(sp)
 5082970:	d8c00615 	stw	r3,24(sp)
 5082974:	d9000315 	stw	r4,12(sp)
 5082978:	d8800215 	stw	r2,8(sp)
 508297c:	81400217 	ldw	r5,8(r16)
 5082980:	80000226 	beq	r16,zero,508298c <_puts_r+0x64>
 5082984:	80800e17 	ldw	r2,56(r16)
 5082988:	10001326 	beq	r2,zero,50829d8 <_puts_r+0xb0>
 508298c:	2880030b 	ldhu	r2,12(r5)
 5082990:	10c8000c 	andi	r3,r2,8192
 5082994:	1800061e 	bne	r3,zero,50829b0 <_puts_r+0x88>
 5082998:	28c01917 	ldw	r3,100(r5)
 508299c:	0137ffc4 	movi	r4,-8193
 50829a0:	10880014 	ori	r2,r2,8192
 50829a4:	1906703a 	and	r3,r3,r4
 50829a8:	2880030d 	sth	r2,12(r5)
 50829ac:	28c01915 	stw	r3,100(r5)
 50829b0:	d9800104 	addi	r6,sp,4
 50829b4:	8009883a 	mov	r4,r16
 50829b8:	50894980 	call	5089498 <__sfvwrite_r>
 50829bc:	10000b1e 	bne	r2,zero,50829ec <_puts_r+0xc4>
 50829c0:	00800284 	movi	r2,10
 50829c4:	dfc00a17 	ldw	ra,40(sp)
 50829c8:	dc400917 	ldw	r17,36(sp)
 50829cc:	dc000817 	ldw	r16,32(sp)
 50829d0:	dec00b04 	addi	sp,sp,44
 50829d4:	f800283a 	ret
 50829d8:	8009883a 	mov	r4,r16
 50829dc:	d9400015 	stw	r5,0(sp)
 50829e0:	50890380 	call	5089038 <__sinit>
 50829e4:	d9400017 	ldw	r5,0(sp)
 50829e8:	003fe806 	br	508298c <_puts_r+0x64>
 50829ec:	00bfffc4 	movi	r2,-1
 50829f0:	003ff406 	br	50829c4 <_puts_r+0x9c>

050829f4 <puts>:
 50829f4:	008142b4 	movhi	r2,1290
 50829f8:	200b883a 	mov	r5,r4
 50829fc:	11209917 	ldw	r4,-32156(r2)
 5082a00:	50829281 	jmpi	5082928 <_puts_r>

05082a04 <_sprintf_r>:
 5082a04:	deffe404 	addi	sp,sp,-112
 5082a08:	2807883a 	mov	r3,r5
 5082a0c:	dfc01a15 	stw	ra,104(sp)
 5082a10:	d9c01b15 	stw	r7,108(sp)
 5082a14:	00a00034 	movhi	r2,32768
 5082a18:	023ffff4 	movhi	r8,65535
 5082a1c:	10bfffc4 	addi	r2,r2,-1
 5082a20:	42008204 	addi	r8,r8,520
 5082a24:	d9c01b04 	addi	r7,sp,108
 5082a28:	d80b883a 	mov	r5,sp
 5082a2c:	d8c00015 	stw	r3,0(sp)
 5082a30:	d8c00415 	stw	r3,16(sp)
 5082a34:	d8800515 	stw	r2,20(sp)
 5082a38:	d8800215 	stw	r2,8(sp)
 5082a3c:	da000315 	stw	r8,12(sp)
 5082a40:	5082b540 	call	5082b54 <___svfprintf_internal_r>
 5082a44:	d8c00017 	ldw	r3,0(sp)
 5082a48:	18000005 	stb	zero,0(r3)
 5082a4c:	dfc01a17 	ldw	ra,104(sp)
 5082a50:	dec01c04 	addi	sp,sp,112
 5082a54:	f800283a 	ret

05082a58 <sprintf>:
 5082a58:	deffe304 	addi	sp,sp,-116
 5082a5c:	2007883a 	mov	r3,r4
 5082a60:	dfc01a15 	stw	ra,104(sp)
 5082a64:	d9801b15 	stw	r6,108(sp)
 5082a68:	d9c01c15 	stw	r7,112(sp)
 5082a6c:	008142b4 	movhi	r2,1290
 5082a70:	11209917 	ldw	r4,-32156(r2)
 5082a74:	023ffff4 	movhi	r8,65535
 5082a78:	00a00034 	movhi	r2,32768
 5082a7c:	10bfffc4 	addi	r2,r2,-1
 5082a80:	42008204 	addi	r8,r8,520
 5082a84:	280d883a 	mov	r6,r5
 5082a88:	d9c01b04 	addi	r7,sp,108
 5082a8c:	d80b883a 	mov	r5,sp
 5082a90:	d8c00015 	stw	r3,0(sp)
 5082a94:	d8c00415 	stw	r3,16(sp)
 5082a98:	d8800515 	stw	r2,20(sp)
 5082a9c:	d8800215 	stw	r2,8(sp)
 5082aa0:	da000315 	stw	r8,12(sp)
 5082aa4:	5082b540 	call	5082b54 <___svfprintf_internal_r>
 5082aa8:	d8c00017 	ldw	r3,0(sp)
 5082aac:	18000005 	stb	zero,0(r3)
 5082ab0:	dfc01a17 	ldw	ra,104(sp)
 5082ab4:	dec01d04 	addi	sp,sp,116
 5082ab8:	f800283a 	ret

05082abc <strlen>:
 5082abc:	208000cc 	andi	r2,r4,3
 5082ac0:	10000926 	beq	r2,zero,5082ae8 <strlen+0x2c>
 5082ac4:	2005883a 	mov	r2,r4
 5082ac8:	00000306 	br	5082ad8 <strlen+0x1c>
 5082acc:	10800044 	addi	r2,r2,1
 5082ad0:	10c000cc 	andi	r3,r2,3
 5082ad4:	18000526 	beq	r3,zero,5082aec <strlen+0x30>
 5082ad8:	10c00007 	ldb	r3,0(r2)
 5082adc:	183ffb1e 	bne	r3,zero,5082acc <strlen+0x10>
 5082ae0:	1105c83a 	sub	r2,r2,r4
 5082ae4:	f800283a 	ret
 5082ae8:	2005883a 	mov	r2,r4
 5082aec:	11400017 	ldw	r5,0(r2)
 5082af0:	01ffbff4 	movhi	r7,65279
 5082af4:	39ffbfc4 	addi	r7,r7,-257
 5082af8:	29c7883a 	add	r3,r5,r7
 5082afc:	01a02074 	movhi	r6,32897
 5082b00:	014a303a 	nor	r5,zero,r5
 5082b04:	1946703a 	and	r3,r3,r5
 5082b08:	31a02004 	addi	r6,r6,-32640
 5082b0c:	1986703a 	and	r3,r3,r6
 5082b10:	1800071e 	bne	r3,zero,5082b30 <strlen+0x74>
 5082b14:	11400117 	ldw	r5,4(r2)
 5082b18:	10800104 	addi	r2,r2,4
 5082b1c:	29c7883a 	add	r3,r5,r7
 5082b20:	014a303a 	nor	r5,zero,r5
 5082b24:	1946703a 	and	r3,r3,r5
 5082b28:	1986703a 	and	r3,r3,r6
 5082b2c:	183ff926 	beq	r3,zero,5082b14 <strlen+0x58>
 5082b30:	10c00007 	ldb	r3,0(r2)
 5082b34:	183fea26 	beq	r3,zero,5082ae0 <strlen+0x24>
 5082b38:	10c00047 	ldb	r3,1(r2)
 5082b3c:	10800044 	addi	r2,r2,1
 5082b40:	183fe726 	beq	r3,zero,5082ae0 <strlen+0x24>
 5082b44:	10c00047 	ldb	r3,1(r2)
 5082b48:	10800044 	addi	r2,r2,1
 5082b4c:	183ffa1e 	bne	r3,zero,5082b38 <strlen+0x7c>
 5082b50:	003fe306 	br	5082ae0 <strlen+0x24>

05082b54 <___svfprintf_internal_r>:
 5082b54:	deffbf04 	addi	sp,sp,-260
 5082b58:	dfc04015 	stw	ra,256(sp)
 5082b5c:	dd803d15 	stw	r22,244(sp)
 5082b60:	dcc03a15 	stw	r19,232(sp)
 5082b64:	dc803915 	stw	r18,228(sp)
 5082b68:	2027883a 	mov	r19,r4
 5082b6c:	2825883a 	mov	r18,r5
 5082b70:	302d883a 	mov	r22,r6
 5082b74:	d9c00615 	stw	r7,24(sp)
 5082b78:	df003f15 	stw	fp,252(sp)
 5082b7c:	ddc03e15 	stw	r23,248(sp)
 5082b80:	dd403c15 	stw	r21,240(sp)
 5082b84:	dd003b15 	stw	r20,236(sp)
 5082b88:	dc403815 	stw	r17,224(sp)
 5082b8c:	dc003715 	stw	r16,220(sp)
 5082b90:	5089a980 	call	5089a98 <_localeconv_r>
 5082b94:	10800017 	ldw	r2,0(r2)
 5082b98:	1009883a 	mov	r4,r2
 5082b9c:	d8800d15 	stw	r2,52(sp)
 5082ba0:	5082abc0 	call	5082abc <strlen>
 5082ba4:	90c0030b 	ldhu	r3,12(r18)
 5082ba8:	d8800c15 	stw	r2,48(sp)
 5082bac:	18c0200c 	andi	r3,r3,128
 5082bb0:	18000226 	beq	r3,zero,5082bbc <___svfprintf_internal_r+0x68>
 5082bb4:	90800417 	ldw	r2,16(r18)
 5082bb8:	10051026 	beq	r2,zero,5083ffc <___svfprintf_internal_r+0x14a8>
 5082bbc:	d8802704 	addi	r2,sp,156
 5082bc0:	b02f883a 	mov	r23,r22
 5082bc4:	d8801a15 	stw	r2,104(sp)
 5082bc8:	d8001c15 	stw	zero,112(sp)
 5082bcc:	d8001b15 	stw	zero,108(sp)
 5082bd0:	d8000815 	stw	zero,32(sp)
 5082bd4:	d8000915 	stw	zero,36(sp)
 5082bd8:	d8000a15 	stw	zero,40(sp)
 5082bdc:	d8000b15 	stw	zero,44(sp)
 5082be0:	d8001015 	stw	zero,64(sp)
 5082be4:	d8000515 	stw	zero,20(sp)
 5082be8:	102d883a 	mov	r22,r2
 5082bec:	b8800007 	ldb	r2,0(r23)
 5082bf0:	1000d526 	beq	r2,zero,5082f48 <___svfprintf_internal_r+0x3f4>
 5082bf4:	b821883a 	mov	r16,r23
 5082bf8:	00000306 	br	5082c08 <___svfprintf_internal_r+0xb4>
 5082bfc:	80800047 	ldb	r2,1(r16)
 5082c00:	84000044 	addi	r16,r16,1
 5082c04:	10010626 	beq	r2,zero,5083020 <___svfprintf_internal_r+0x4cc>
 5082c08:	10800958 	cmpnei	r2,r2,37
 5082c0c:	103ffb1e 	bne	r2,zero,5082bfc <___svfprintf_internal_r+0xa8>
 5082c10:	85e3c83a 	sub	r17,r16,r23
 5082c14:	85c1041e 	bne	r16,r23,5083028 <___svfprintf_internal_r+0x4d4>
 5082c18:	80800003 	ldbu	r2,0(r16)
 5082c1c:	10803fcc 	andi	r2,r2,255
 5082c20:	1080201c 	xori	r2,r2,128
 5082c24:	10bfe004 	addi	r2,r2,-128
 5082c28:	1000c726 	beq	r2,zero,5082f48 <___svfprintf_internal_r+0x3f4>
 5082c2c:	82c00047 	ldb	r11,1(r16)
 5082c30:	85c00044 	addi	r23,r16,1
 5082c34:	d8001345 	stb	zero,77(sp)
 5082c38:	0009883a 	mov	r4,zero
 5082c3c:	000b883a 	mov	r5,zero
 5082c40:	023fffc4 	movi	r8,-1
 5082c44:	0021883a 	mov	r16,zero
 5082c48:	0019883a 	mov	r12,zero
 5082c4c:	bdc00044 	addi	r23,r23,1
 5082c50:	5839883a 	mov	fp,r11
 5082c54:	e0bff804 	addi	r2,fp,-32
 5082c58:	10c01668 	cmpgeui	r3,r2,89
 5082c5c:	18006a1e 	bne	r3,zero,5082e08 <___svfprintf_internal_r+0x2b4>
 5082c60:	100490ba 	slli	r2,r2,2
 5082c64:	00c14234 	movhi	r3,1288
 5082c68:	10c7883a 	add	r3,r2,r3
 5082c6c:	188b1d17 	ldw	r2,11380(r3)
 5082c70:	1000683a 	jmp	r2
 5082c74:	0508356c 	andhi	r20,zero,8405
 5082c78:	05082e08 	cmpgei	r20,zero,8376
 5082c7c:	05082e08 	cmpgei	r20,zero,8376
 5082c80:	05083560 	cmpeqi	r20,zero,8405
 5082c84:	05082e08 	cmpgei	r20,zero,8376
 5082c88:	05082e08 	cmpgei	r20,zero,8376
 5082c8c:	05082e08 	cmpgei	r20,zero,8376
 5082c90:	05082e08 	cmpgei	r20,zero,8376
 5082c94:	05082e08 	cmpgei	r20,zero,8376
 5082c98:	05082e08 	cmpgei	r20,zero,8376
 5082c9c:	05083538 	rdprs	r20,zero,8404
 5082ca0:	05083528 	cmpgeui	r20,zero,8404
 5082ca4:	05082e08 	cmpgei	r20,zero,8376
 5082ca8:	05083510 	cmplti	r20,zero,8404
 5082cac:	050834cc 	andi	r20,zero,8403
 5082cb0:	05082e08 	cmpgei	r20,zero,8376
 5082cb4:	050834c0 	call	50834c <__alt_mem_sdram+0x50834c>
 5082cb8:	05082dd8 	cmpnei	r20,zero,8375
 5082cbc:	05082dd8 	cmpnei	r20,zero,8375
 5082cc0:	05082dd8 	cmpnei	r20,zero,8375
 5082cc4:	05082dd8 	cmpnei	r20,zero,8375
 5082cc8:	05082dd8 	cmpnei	r20,zero,8375
 5082ccc:	05082dd8 	cmpnei	r20,zero,8375
 5082cd0:	05082dd8 	cmpnei	r20,zero,8375
 5082cd4:	05082dd8 	cmpnei	r20,zero,8375
 5082cd8:	05082dd8 	cmpnei	r20,zero,8375
 5082cdc:	05082e08 	cmpgei	r20,zero,8376
 5082ce0:	05082e08 	cmpgei	r20,zero,8376
 5082ce4:	05082e08 	cmpgei	r20,zero,8376
 5082ce8:	05082e08 	cmpgei	r20,zero,8376
 5082cec:	05082e08 	cmpgei	r20,zero,8376
 5082cf0:	05082e08 	cmpgei	r20,zero,8376
 5082cf4:	05082e08 	cmpgei	r20,zero,8376
 5082cf8:	05082e08 	cmpgei	r20,zero,8376
 5082cfc:	05082e08 	cmpgei	r20,zero,8376
 5082d00:	05082e08 	cmpgei	r20,zero,8376
 5082d04:	050833b4 	movhi	r20,8398
 5082d08:	05083084 	movi	r20,8386
 5082d0c:	05082e08 	cmpgei	r20,zero,8376
 5082d10:	05083084 	movi	r20,8386
 5082d14:	05082e08 	cmpgei	r20,zero,8376
 5082d18:	05082e08 	cmpgei	r20,zero,8376
 5082d1c:	05082e08 	cmpgei	r20,zero,8376
 5082d20:	05082e08 	cmpgei	r20,zero,8376
 5082d24:	050833a8 	cmpgeui	r20,zero,8398
 5082d28:	05082e08 	cmpgei	r20,zero,8376
 5082d2c:	05082e08 	cmpgei	r20,zero,8376
 5082d30:	05082fb8 	rdprs	r20,zero,8382
 5082d34:	05082e08 	cmpgei	r20,zero,8376
 5082d38:	05082e08 	cmpgei	r20,zero,8376
 5082d3c:	05082e08 	cmpgei	r20,zero,8376
 5082d40:	05082e08 	cmpgei	r20,zero,8376
 5082d44:	05082e08 	cmpgei	r20,zero,8376
 5082d48:	05082f90 	cmplti	r20,zero,8382
 5082d4c:	05082e08 	cmpgei	r20,zero,8376
 5082d50:	05082e08 	cmpgei	r20,zero,8376
 5082d54:	05083660 	cmpeqi	r20,zero,8409
 5082d58:	05082e08 	cmpgei	r20,zero,8376
 5082d5c:	05082e08 	cmpgei	r20,zero,8376
 5082d60:	05082e08 	cmpgei	r20,zero,8376
 5082d64:	05082e08 	cmpgei	r20,zero,8376
 5082d68:	05082e08 	cmpgei	r20,zero,8376
 5082d6c:	05082e08 	cmpgei	r20,zero,8376
 5082d70:	05082e08 	cmpgei	r20,zero,8376
 5082d74:	05082e08 	cmpgei	r20,zero,8376
 5082d78:	05082e08 	cmpgei	r20,zero,8376
 5082d7c:	05082e08 	cmpgei	r20,zero,8376
 5082d80:	05083638 	rdprs	r20,zero,8408
 5082d84:	0508328c 	andi	r20,zero,8394
 5082d88:	05083084 	movi	r20,8386
 5082d8c:	05083084 	movi	r20,8386
 5082d90:	05083084 	movi	r20,8386
 5082d94:	05083300 	call	508330 <__alt_mem_sdram+0x508330>
 5082d98:	0508328c 	andi	r20,zero,8394
 5082d9c:	05082e08 	cmpgei	r20,zero,8376
 5082da0:	05082e08 	cmpgei	r20,zero,8376
 5082da4:	05083394 	movui	r20,8398
 5082da8:	05082e08 	cmpgei	r20,zero,8376
 5082dac:	05083358 	cmpnei	r20,zero,8397
 5082db0:	05082fbc 	xorhi	r20,zero,8382
 5082db4:	05083318 	cmpnei	r20,zero,8396
 5082db8:	0508330c 	andi	r20,zero,8396
 5082dbc:	05082e08 	cmpgei	r20,zero,8376
 5082dc0:	050835e0 	cmpeqi	r20,zero,8407
 5082dc4:	05082e08 	cmpgei	r20,zero,8376
 5082dc8:	05082f94 	movui	r20,8382
 5082dcc:	05082e08 	cmpgei	r20,zero,8376
 5082dd0:	05082e08 	cmpgei	r20,zero,8376
 5082dd4:	05083598 	cmpnei	r20,zero,8406
 5082dd8:	0021883a 	mov	r16,zero
 5082ddc:	e0bff404 	addi	r2,fp,-48
 5082de0:	bf000007 	ldb	fp,0(r23)
 5082de4:	840002a4 	muli	r16,r16,10
 5082de8:	bdc00044 	addi	r23,r23,1
 5082dec:	1421883a 	add	r16,r2,r16
 5082df0:	e0bff404 	addi	r2,fp,-48
 5082df4:	10c002b0 	cmpltui	r3,r2,10
 5082df8:	183ff91e 	bne	r3,zero,5082de0 <___svfprintf_internal_r+0x28c>
 5082dfc:	e0bff804 	addi	r2,fp,-32
 5082e00:	10c01668 	cmpgeui	r3,r2,89
 5082e04:	183f9626 	beq	r3,zero,5082c60 <___svfprintf_internal_r+0x10c>
 5082e08:	21003fcc 	andi	r4,r4,255
 5082e0c:	2006911e 	bne	r4,zero,5084854 <___svfprintf_internal_r+0x1d00>
 5082e10:	e0004d26 	beq	fp,zero,5082f48 <___svfprintf_internal_r+0x3f4>
 5082e14:	df001d05 	stb	fp,116(sp)
 5082e18:	d8001345 	stb	zero,77(sp)
 5082e1c:	05000044 	movi	r20,1
 5082e20:	05400044 	movi	r21,1
 5082e24:	dc401d04 	addi	r17,sp,116
 5082e28:	db000415 	stw	r12,16(sp)
 5082e2c:	0011883a 	mov	r8,zero
 5082e30:	d8000715 	stw	zero,28(sp)
 5082e34:	d8800417 	ldw	r2,16(sp)
 5082e38:	1380008c 	andi	r14,r2,2
 5082e3c:	70000126 	beq	r14,zero,5082e44 <___svfprintf_internal_r+0x2f0>
 5082e40:	a5000084 	addi	r20,r20,2
 5082e44:	d8800417 	ldw	r2,16(sp)
 5082e48:	d8c01c17 	ldw	r3,112(sp)
 5082e4c:	1340210c 	andi	r13,r2,132
 5082e50:	6800021e 	bne	r13,zero,5082e5c <___svfprintf_internal_r+0x308>
 5082e54:	850fc83a 	sub	r7,r16,r20
 5082e58:	01c32916 	blt	zero,r7,5083b00 <___svfprintf_internal_r+0xfac>
 5082e5c:	d8801347 	ldb	r2,77(sp)
 5082e60:	10000c26 	beq	r2,zero,5082e94 <___svfprintf_internal_r+0x340>
 5082e64:	d8801b17 	ldw	r2,108(sp)
 5082e68:	d9001344 	addi	r4,sp,77
 5082e6c:	18c00044 	addi	r3,r3,1
 5082e70:	10800044 	addi	r2,r2,1
 5082e74:	b1000015 	stw	r4,0(r22)
 5082e78:	01000044 	movi	r4,1
 5082e7c:	d8801b15 	stw	r2,108(sp)
 5082e80:	b1000115 	stw	r4,4(r22)
 5082e84:	d8c01c15 	stw	r3,112(sp)
 5082e88:	10800208 	cmpgei	r2,r2,8
 5082e8c:	10035d1e 	bne	r2,zero,5083c04 <___svfprintf_internal_r+0x10b0>
 5082e90:	b5800204 	addi	r22,r22,8
 5082e94:	70000c26 	beq	r14,zero,5082ec8 <___svfprintf_internal_r+0x374>
 5082e98:	d8801b17 	ldw	r2,108(sp)
 5082e9c:	d9001384 	addi	r4,sp,78
 5082ea0:	18c00084 	addi	r3,r3,2
 5082ea4:	10800044 	addi	r2,r2,1
 5082ea8:	b1000015 	stw	r4,0(r22)
 5082eac:	01000084 	movi	r4,2
 5082eb0:	d8801b15 	stw	r2,108(sp)
 5082eb4:	b1000115 	stw	r4,4(r22)
 5082eb8:	d8c01c15 	stw	r3,112(sp)
 5082ebc:	10800208 	cmpgei	r2,r2,8
 5082ec0:	10035e1e 	bne	r2,zero,5083c3c <___svfprintf_internal_r+0x10e8>
 5082ec4:	b5800204 	addi	r22,r22,8
 5082ec8:	6b402018 	cmpnei	r13,r13,128
 5082ecc:	68023f26 	beq	r13,zero,50837cc <___svfprintf_internal_r+0xc78>
 5082ed0:	4551c83a 	sub	r8,r8,r21
 5082ed4:	02027716 	blt	zero,r8,50838b4 <___svfprintf_internal_r+0xd60>
 5082ed8:	d8800417 	ldw	r2,16(sp)
 5082edc:	1080400c 	andi	r2,r2,256
 5082ee0:	1001f11e 	bne	r2,zero,50836a8 <___svfprintf_internal_r+0xb54>
 5082ee4:	d8801b17 	ldw	r2,108(sp)
 5082ee8:	1d47883a 	add	r3,r3,r21
 5082eec:	b4400015 	stw	r17,0(r22)
 5082ef0:	10800044 	addi	r2,r2,1
 5082ef4:	b5400115 	stw	r21,4(r22)
 5082ef8:	d8801b15 	stw	r2,108(sp)
 5082efc:	d8c01c15 	stw	r3,112(sp)
 5082f00:	10800208 	cmpgei	r2,r2,8
 5082f04:	1002f41e 	bne	r2,zero,5083ad8 <___svfprintf_internal_r+0xf84>
 5082f08:	b5800204 	addi	r22,r22,8
 5082f0c:	d8800417 	ldw	r2,16(sp)
 5082f10:	1440010c 	andi	r17,r2,4
 5082f14:	88000226 	beq	r17,zero,5082f20 <___svfprintf_internal_r+0x3cc>
 5082f18:	8523c83a 	sub	r17,r16,r20
 5082f1c:	0440ac16 	blt	zero,r17,50831d0 <___svfprintf_internal_r+0x67c>
 5082f20:	8500010e 	bge	r16,r20,5082f28 <___svfprintf_internal_r+0x3d4>
 5082f24:	a021883a 	mov	r16,r20
 5082f28:	d8800517 	ldw	r2,20(sp)
 5082f2c:	1405883a 	add	r2,r2,r16
 5082f30:	d8800515 	stw	r2,20(sp)
 5082f34:	1802a61e 	bne	r3,zero,50839d0 <___svfprintf_internal_r+0xe7c>
 5082f38:	b8800007 	ldb	r2,0(r23)
 5082f3c:	d8001b15 	stw	zero,108(sp)
 5082f40:	dd802704 	addi	r22,sp,156
 5082f44:	103f2b1e 	bne	r2,zero,5082bf4 <___svfprintf_internal_r+0xa0>
 5082f48:	d8801c17 	ldw	r2,112(sp)
 5082f4c:	1006431e 	bne	r2,zero,508485c <___svfprintf_internal_r+0x1d08>
 5082f50:	9080030b 	ldhu	r2,12(r18)
 5082f54:	1080100c 	andi	r2,r2,64
 5082f58:	1006e41e 	bne	r2,zero,5084aec <___svfprintf_internal_r+0x1f98>
 5082f5c:	d8800517 	ldw	r2,20(sp)
 5082f60:	dfc04017 	ldw	ra,256(sp)
 5082f64:	df003f17 	ldw	fp,252(sp)
 5082f68:	ddc03e17 	ldw	r23,248(sp)
 5082f6c:	dd803d17 	ldw	r22,244(sp)
 5082f70:	dd403c17 	ldw	r21,240(sp)
 5082f74:	dd003b17 	ldw	r20,236(sp)
 5082f78:	dcc03a17 	ldw	r19,232(sp)
 5082f7c:	dc803917 	ldw	r18,228(sp)
 5082f80:	dc403817 	ldw	r17,224(sp)
 5082f84:	dc003717 	ldw	r16,220(sp)
 5082f88:	dec04104 	addi	sp,sp,260
 5082f8c:	f800283a 	ret
 5082f90:	63000414 	ori	r12,r12,16
 5082f94:	6080080c 	andi	r2,r12,32
 5082f98:	10008126 	beq	r2,zero,50831a0 <___svfprintf_internal_r+0x64c>
 5082f9c:	d8c00617 	ldw	r3,24(sp)
 5082fa0:	00800044 	movi	r2,1
 5082fa4:	1d000017 	ldw	r20,0(r3)
 5082fa8:	1d400117 	ldw	r21,4(r3)
 5082fac:	18c00204 	addi	r3,r3,8
 5082fb0:	d8c00615 	stw	r3,24(sp)
 5082fb4:	00000906 	br	5082fdc <___svfprintf_internal_r+0x488>
 5082fb8:	63000414 	ori	r12,r12,16
 5082fbc:	6080080c 	andi	r2,r12,32
 5082fc0:	10006b26 	beq	r2,zero,5083170 <___svfprintf_internal_r+0x61c>
 5082fc4:	d8c00617 	ldw	r3,24(sp)
 5082fc8:	0005883a 	mov	r2,zero
 5082fcc:	1d000017 	ldw	r20,0(r3)
 5082fd0:	1d400117 	ldw	r21,4(r3)
 5082fd4:	18c00204 	addi	r3,r3,8
 5082fd8:	d8c00615 	stw	r3,24(sp)
 5082fdc:	d8001345 	stb	zero,77(sp)
 5082fe0:	40ffffe0 	cmpeqi	r3,r8,-1
 5082fe4:	001b883a 	mov	r13,zero
 5082fe8:	18010d1e 	bne	r3,zero,5083420 <___svfprintf_internal_r+0x8cc>
 5082fec:	047fdfc4 	movi	r17,-129
 5082ff0:	6448703a 	and	r4,r12,r17
 5082ff4:	a546b03a 	or	r3,r20,r21
 5082ff8:	d9000415 	stw	r4,16(sp)
 5082ffc:	1802be1e 	bne	r3,zero,5083af8 <___svfprintf_internal_r+0xfa4>
 5083000:	40025d1e 	bne	r8,zero,5083978 <___svfprintf_internal_r+0xe24>
 5083004:	1003801e 	bne	r2,zero,5083e08 <___svfprintf_internal_r+0x12b4>
 5083008:	6540004c 	andi	r21,r12,1
 508300c:	a803bc26 	beq	r21,zero,5083f00 <___svfprintf_internal_r+0x13ac>
 5083010:	00800c04 	movi	r2,48
 5083014:	d88026c5 	stb	r2,155(sp)
 5083018:	dc4026c4 	addi	r17,sp,155
 508301c:	00011e06 	br	5083498 <___svfprintf_internal_r+0x944>
 5083020:	85e3c83a 	sub	r17,r16,r23
 5083024:	85ffc826 	beq	r16,r23,5082f48 <___svfprintf_internal_r+0x3f4>
 5083028:	d8c01c17 	ldw	r3,112(sp)
 508302c:	d8801b17 	ldw	r2,108(sp)
 5083030:	b5c00015 	stw	r23,0(r22)
 5083034:	1c47883a 	add	r3,r3,r17
 5083038:	10800044 	addi	r2,r2,1
 508303c:	d8801b15 	stw	r2,108(sp)
 5083040:	b4400115 	stw	r17,4(r22)
 5083044:	d8c01c15 	stw	r3,112(sp)
 5083048:	10800208 	cmpgei	r2,r2,8
 508304c:	1000061e 	bne	r2,zero,5083068 <___svfprintf_internal_r+0x514>
 5083050:	b5800204 	addi	r22,r22,8
 5083054:	d8c00517 	ldw	r3,20(sp)
 5083058:	80800003 	ldbu	r2,0(r16)
 508305c:	1c47883a 	add	r3,r3,r17
 5083060:	d8c00515 	stw	r3,20(sp)
 5083064:	003eed06 	br	5082c1c <___svfprintf_internal_r+0xc8>
 5083068:	d9801a04 	addi	r6,sp,104
 508306c:	900b883a 	mov	r5,r18
 5083070:	9809883a 	mov	r4,r19
 5083074:	508c1200 	call	508c120 <__ssprint_r>
 5083078:	103fb51e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 508307c:	dd802704 	addi	r22,sp,156
 5083080:	003ff406 	br	5083054 <___svfprintf_internal_r+0x500>
 5083084:	21003fcc 	andi	r4,r4,255
 5083088:	2006621e 	bne	r4,zero,5084a14 <___svfprintf_internal_r+0x1ec0>
 508308c:	d8c00617 	ldw	r3,24(sp)
 5083090:	6080020c 	andi	r2,r12,8
 5083094:	19000204 	addi	r4,r3,8
 5083098:	d9000e15 	stw	r4,56(sp)
 508309c:	1003ae1e 	bne	r2,zero,5083f58 <___svfprintf_internal_r+0x1404>
 50830a0:	d8800617 	ldw	r2,24(sp)
 50830a4:	10c00017 	ldw	r3,0(r2)
 50830a8:	10800117 	ldw	r2,4(r2)
 50830ac:	d8c00915 	stw	r3,36(sp)
 50830b0:	d8800a15 	stw	r2,40(sp)
 50830b4:	dd400a17 	ldw	r21,40(sp)
 50830b8:	dd000917 	ldw	r20,36(sp)
 50830bc:	00a00034 	movhi	r2,32768
 50830c0:	10bfffc4 	addi	r2,r2,-1
 50830c4:	a8a2703a 	and	r17,r21,r2
 50830c8:	01dffc34 	movhi	r7,32752
 50830cc:	01bfffc4 	movi	r6,-1
 50830d0:	39ffffc4 	addi	r7,r7,-1
 50830d4:	a009883a 	mov	r4,r20
 50830d8:	880b883a 	mov	r5,r17
 50830dc:	da000615 	stw	r8,24(sp)
 50830e0:	db000415 	stw	r12,16(sp)
 50830e4:	50927c40 	call	50927c4 <__unorddf2>
 50830e8:	db000417 	ldw	r12,16(sp)
 50830ec:	da000617 	ldw	r8,24(sp)
 50830f0:	1004601e 	bne	r2,zero,5084274 <___svfprintf_internal_r+0x1720>
 50830f4:	01dffc34 	movhi	r7,32752
 50830f8:	01bfffc4 	movi	r6,-1
 50830fc:	39ffffc4 	addi	r7,r7,-1
 5083100:	a009883a 	mov	r4,r20
 5083104:	880b883a 	mov	r5,r17
 5083108:	50917b40 	call	50917b4 <__ledf2>
 508310c:	db000417 	ldw	r12,16(sp)
 5083110:	da000617 	ldw	r8,24(sp)
 5083114:	0084570e 	bge	zero,r2,5084274 <___svfprintf_internal_r+0x1720>
 5083118:	000d883a 	mov	r6,zero
 508311c:	000f883a 	mov	r7,zero
 5083120:	a009883a 	mov	r4,r20
 5083124:	a80b883a 	mov	r5,r21
 5083128:	50917b40 	call	50917b4 <__ledf2>
 508312c:	db000417 	ldw	r12,16(sp)
 5083130:	1005aa16 	blt	r2,zero,50847dc <___svfprintf_internal_r+0x1c88>
 5083134:	db401343 	ldbu	r13,77(sp)
 5083138:	e0801210 	cmplti	r2,fp,72
 508313c:	1005031e 	bne	r2,zero,508454c <___svfprintf_internal_r+0x19f8>
 5083140:	04414274 	movhi	r17,1289
 5083144:	8c580c04 	addi	r17,r17,24624
 5083148:	00bfdfc4 	movi	r2,-129
 508314c:	6084703a 	and	r2,r12,r2
 5083150:	d8800415 	stw	r2,16(sp)
 5083154:	d8800e17 	ldw	r2,56(sp)
 5083158:	050000c4 	movi	r20,3
 508315c:	054000c4 	movi	r21,3
 5083160:	d8800615 	stw	r2,24(sp)
 5083164:	0011883a 	mov	r8,zero
 5083168:	d8000715 	stw	zero,28(sp)
 508316c:	0000ce06 	br	50834a8 <___svfprintf_internal_r+0x954>
 5083170:	d9000617 	ldw	r4,24(sp)
 5083174:	6080040c 	andi	r2,r12,16
 5083178:	20c00104 	addi	r3,r4,4
 508317c:	1003621e 	bne	r2,zero,5083f08 <___svfprintf_internal_r+0x13b4>
 5083180:	6080100c 	andi	r2,r12,64
 5083184:	10053a26 	beq	r2,zero,5084670 <___svfprintf_internal_r+0x1b1c>
 5083188:	d8800617 	ldw	r2,24(sp)
 508318c:	002b883a 	mov	r21,zero
 5083190:	d8c00615 	stw	r3,24(sp)
 5083194:	1500000b 	ldhu	r20,0(r2)
 5083198:	0005883a 	mov	r2,zero
 508319c:	003f8f06 	br	5082fdc <___svfprintf_internal_r+0x488>
 50831a0:	d9000617 	ldw	r4,24(sp)
 50831a4:	6080040c 	andi	r2,r12,16
 50831a8:	20c00104 	addi	r3,r4,4
 50831ac:	1003601e 	bne	r2,zero,5083f30 <___svfprintf_internal_r+0x13dc>
 50831b0:	6080100c 	andi	r2,r12,64
 50831b4:	10052326 	beq	r2,zero,5084644 <___svfprintf_internal_r+0x1af0>
 50831b8:	d8800617 	ldw	r2,24(sp)
 50831bc:	002b883a 	mov	r21,zero
 50831c0:	d8c00615 	stw	r3,24(sp)
 50831c4:	1500000b 	ldhu	r20,0(r2)
 50831c8:	00800044 	movi	r2,1
 50831cc:	003f8306 	br	5082fdc <___svfprintf_internal_r+0x488>
 50831d0:	03014274 	movhi	r12,1289
 50831d4:	89000450 	cmplti	r4,r17,17
 50831d8:	d8801b17 	ldw	r2,108(sp)
 50831dc:	63182004 	addi	r12,r12,24704
 50831e0:	20001b1e 	bne	r4,zero,5083250 <___svfprintf_internal_r+0x6fc>
 50831e4:	05400404 	movi	r21,16
 50831e8:	6039883a 	mov	fp,r12
 50831ec:	00000406 	br	5083200 <___svfprintf_internal_r+0x6ac>
 50831f0:	8c7ffc04 	addi	r17,r17,-16
 50831f4:	89000448 	cmpgei	r4,r17,17
 50831f8:	b5800204 	addi	r22,r22,8
 50831fc:	20001326 	beq	r4,zero,508324c <___svfprintf_internal_r+0x6f8>
 5083200:	10800044 	addi	r2,r2,1
 5083204:	18c00404 	addi	r3,r3,16
 5083208:	b7000015 	stw	fp,0(r22)
 508320c:	b5400115 	stw	r21,4(r22)
 5083210:	d8c01c15 	stw	r3,112(sp)
 5083214:	d8801b15 	stw	r2,108(sp)
 5083218:	11000208 	cmpgei	r4,r2,8
 508321c:	203ff426 	beq	r4,zero,50831f0 <___svfprintf_internal_r+0x69c>
 5083220:	d9801a04 	addi	r6,sp,104
 5083224:	900b883a 	mov	r5,r18
 5083228:	9809883a 	mov	r4,r19
 508322c:	508c1200 	call	508c120 <__ssprint_r>
 5083230:	103f471e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5083234:	8c7ffc04 	addi	r17,r17,-16
 5083238:	89000448 	cmpgei	r4,r17,17
 508323c:	d8c01c17 	ldw	r3,112(sp)
 5083240:	d8801b17 	ldw	r2,108(sp)
 5083244:	dd802704 	addi	r22,sp,156
 5083248:	203fed1e 	bne	r4,zero,5083200 <___svfprintf_internal_r+0x6ac>
 508324c:	e019883a 	mov	r12,fp
 5083250:	10800044 	addi	r2,r2,1
 5083254:	1c47883a 	add	r3,r3,r17
 5083258:	d8801b15 	stw	r2,108(sp)
 508325c:	b3000015 	stw	r12,0(r22)
 5083260:	b4400115 	stw	r17,4(r22)
 5083264:	d8c01c15 	stw	r3,112(sp)
 5083268:	10800210 	cmplti	r2,r2,8
 508326c:	103f2c1e 	bne	r2,zero,5082f20 <___svfprintf_internal_r+0x3cc>
 5083270:	d9801a04 	addi	r6,sp,104
 5083274:	900b883a 	mov	r5,r18
 5083278:	9809883a 	mov	r4,r19
 508327c:	508c1200 	call	508c120 <__ssprint_r>
 5083280:	103f331e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5083284:	d8c01c17 	ldw	r3,112(sp)
 5083288:	003f2506 	br	5082f20 <___svfprintf_internal_r+0x3cc>
 508328c:	21003fcc 	andi	r4,r4,255
 5083290:	2005e21e 	bne	r4,zero,5084a1c <___svfprintf_internal_r+0x1ec8>
 5083294:	6080080c 	andi	r2,r12,32
 5083298:	10004b26 	beq	r2,zero,50833c8 <___svfprintf_internal_r+0x874>
 508329c:	d8c00617 	ldw	r3,24(sp)
 50832a0:	18800117 	ldw	r2,4(r3)
 50832a4:	1d000017 	ldw	r20,0(r3)
 50832a8:	18c00204 	addi	r3,r3,8
 50832ac:	d8c00615 	stw	r3,24(sp)
 50832b0:	102b883a 	mov	r21,r2
 50832b4:	10005016 	blt	r2,zero,50833f8 <___svfprintf_internal_r+0x8a4>
 50832b8:	40bfffd8 	cmpnei	r2,r8,-1
 50832bc:	db401343 	ldbu	r13,77(sp)
 50832c0:	10000626 	beq	r2,zero,50832dc <___svfprintf_internal_r+0x788>
 50832c4:	047fdfc4 	movi	r17,-129
 50832c8:	6446703a 	and	r3,r12,r17
 50832cc:	a544b03a 	or	r2,r20,r21
 50832d0:	d8c00415 	stw	r3,16(sp)
 50832d4:	1002cb26 	beq	r2,zero,5083e04 <___svfprintf_internal_r+0x12b0>
 50832d8:	db000417 	ldw	r12,16(sp)
 50832dc:	a803761e 	bne	r21,zero,50840b8 <___svfprintf_internal_r+0x1564>
 50832e0:	a08002a8 	cmpgeui	r2,r20,10
 50832e4:	1003741e 	bne	r2,zero,50840b8 <___svfprintf_internal_r+0x1564>
 50832e8:	a5000c04 	addi	r20,r20,48
 50832ec:	dd0026c5 	stb	r20,155(sp)
 50832f0:	db000415 	stw	r12,16(sp)
 50832f4:	05400044 	movi	r21,1
 50832f8:	dc4026c4 	addi	r17,sp,155
 50832fc:	00006606 	br	5083498 <___svfprintf_internal_r+0x944>
 5083300:	bac00007 	ldb	r11,0(r23)
 5083304:	63001014 	ori	r12,r12,64
 5083308:	003e5006 	br	5082c4c <___svfprintf_internal_r+0xf8>
 508330c:	bac00007 	ldb	r11,0(r23)
 5083310:	63000814 	ori	r12,r12,32
 5083314:	003e4d06 	br	5082c4c <___svfprintf_internal_r+0xf8>
 5083318:	d8c00617 	ldw	r3,24(sp)
 508331c:	00800c04 	movi	r2,48
 5083320:	d8801385 	stb	r2,78(sp)
 5083324:	00801e04 	movi	r2,120
 5083328:	01014274 	movhi	r4,1289
 508332c:	d88013c5 	stb	r2,79(sp)
 5083330:	18800104 	addi	r2,r3,4
 5083334:	d8800615 	stw	r2,24(sp)
 5083338:	20980f04 	addi	r2,r4,24636
 508333c:	d8800b15 	stw	r2,44(sp)
 5083340:	1d000017 	ldw	r20,0(r3)
 5083344:	002b883a 	mov	r21,zero
 5083348:	63000094 	ori	r12,r12,2
 508334c:	00800084 	movi	r2,2
 5083350:	07001e04 	movi	fp,120
 5083354:	003f2106 	br	5082fdc <___svfprintf_internal_r+0x488>
 5083358:	21003fcc 	andi	r4,r4,255
 508335c:	2005a91e 	bne	r4,zero,5084a04 <___svfprintf_internal_r+0x1eb0>
 5083360:	d9000617 	ldw	r4,24(sp)
 5083364:	6080080c 	andi	r2,r12,32
 5083368:	20c00017 	ldw	r3,0(r4)
 508336c:	21000104 	addi	r4,r4,4
 5083370:	d9000615 	stw	r4,24(sp)
 5083374:	1002e91e 	bne	r2,zero,5083f1c <___svfprintf_internal_r+0x13c8>
 5083378:	6080040c 	andi	r2,r12,16
 508337c:	1003761e 	bne	r2,zero,5084158 <___svfprintf_internal_r+0x1604>
 5083380:	6300100c 	andi	r12,r12,64
 5083384:	60037426 	beq	r12,zero,5084158 <___svfprintf_internal_r+0x1604>
 5083388:	d8800517 	ldw	r2,20(sp)
 508338c:	1880000d 	sth	r2,0(r3)
 5083390:	003e1606 	br	5082bec <___svfprintf_internal_r+0x98>
 5083394:	bac00007 	ldb	r11,0(r23)
 5083398:	58801b18 	cmpnei	r2,r11,108
 508339c:	10030e26 	beq	r2,zero,5083fd8 <___svfprintf_internal_r+0x1484>
 50833a0:	63000414 	ori	r12,r12,16
 50833a4:	003e2906 	br	5082c4c <___svfprintf_internal_r+0xf8>
 50833a8:	bac00007 	ldb	r11,0(r23)
 50833ac:	63000214 	ori	r12,r12,8
 50833b0:	003e2606 	br	5082c4c <___svfprintf_internal_r+0xf8>
 50833b4:	21003fcc 	andi	r4,r4,255
 50833b8:	2005901e 	bne	r4,zero,50849fc <___svfprintf_internal_r+0x1ea8>
 50833bc:	63000414 	ori	r12,r12,16
 50833c0:	6080080c 	andi	r2,r12,32
 50833c4:	103fb51e 	bne	r2,zero,508329c <___svfprintf_internal_r+0x748>
 50833c8:	d9000617 	ldw	r4,24(sp)
 50833cc:	6080040c 	andi	r2,r12,16
 50833d0:	20c00104 	addi	r3,r4,4
 50833d4:	1002db1e 	bne	r2,zero,5083f44 <___svfprintf_internal_r+0x13f0>
 50833d8:	6080100c 	andi	r2,r12,64
 50833dc:	1004aa26 	beq	r2,zero,5084688 <___svfprintf_internal_r+0x1b34>
 50833e0:	d8800617 	ldw	r2,24(sp)
 50833e4:	d8c00615 	stw	r3,24(sp)
 50833e8:	1500000f 	ldh	r20,0(r2)
 50833ec:	a02bd7fa 	srai	r21,r20,31
 50833f0:	a805883a 	mov	r2,r21
 50833f4:	103fb00e 	bge	r2,zero,50832b8 <___svfprintf_internal_r+0x764>
 50833f8:	a004c03a 	cmpne	r2,r20,zero
 50833fc:	056bc83a 	sub	r21,zero,r21
 5083400:	a8abc83a 	sub	r21,r21,r2
 5083404:	00800b44 	movi	r2,45
 5083408:	d8801345 	stb	r2,77(sp)
 508340c:	40ffffe0 	cmpeqi	r3,r8,-1
 5083410:	0529c83a 	sub	r20,zero,r20
 5083414:	03400b44 	movi	r13,45
 5083418:	00800044 	movi	r2,1
 508341c:	183ef326 	beq	r3,zero,5082fec <___svfprintf_internal_r+0x498>
 5083420:	10c00060 	cmpeqi	r3,r2,1
 5083424:	183fad1e 	bne	r3,zero,50832dc <___svfprintf_internal_r+0x788>
 5083428:	108000a0 	cmpeqi	r2,r2,2
 508342c:	1001571e 	bne	r2,zero,508398c <___svfprintf_internal_r+0xe38>
 5083430:	dc402704 	addi	r17,sp,156
 5083434:	a006d0fa 	srli	r3,r20,3
 5083438:	a808977a 	slli	r4,r21,29
 508343c:	a82ad0fa 	srli	r21,r21,3
 5083440:	a50001cc 	andi	r20,r20,7
 5083444:	a0800c04 	addi	r2,r20,48
 5083448:	20e8b03a 	or	r20,r4,r3
 508344c:	88bfffc5 	stb	r2,-1(r17)
 5083450:	a546b03a 	or	r3,r20,r21
 5083454:	880b883a 	mov	r5,r17
 5083458:	8c7fffc4 	addi	r17,r17,-1
 508345c:	183ff51e 	bne	r3,zero,5083434 <___svfprintf_internal_r+0x8e0>
 5083460:	60c0004c 	andi	r3,r12,1
 5083464:	18015626 	beq	r3,zero,50839c0 <___svfprintf_internal_r+0xe6c>
 5083468:	10803fcc 	andi	r2,r2,255
 508346c:	1080201c 	xori	r2,r2,128
 5083470:	10bfe004 	addi	r2,r2,-128
 5083474:	10800c18 	cmpnei	r2,r2,48
 5083478:	10015126 	beq	r2,zero,50839c0 <___svfprintf_internal_r+0xe6c>
 508347c:	00800c04 	movi	r2,48
 5083480:	297fff84 	addi	r5,r5,-2
 5083484:	88bfffc5 	stb	r2,-1(r17)
 5083488:	d8802704 	addi	r2,sp,156
 508348c:	116bc83a 	sub	r21,r2,r5
 5083490:	db000415 	stw	r12,16(sp)
 5083494:	2823883a 	mov	r17,r5
 5083498:	4029883a 	mov	r20,r8
 508349c:	4540010e 	bge	r8,r21,50834a4 <___svfprintf_internal_r+0x950>
 50834a0:	a829883a 	mov	r20,r21
 50834a4:	d8000715 	stw	zero,28(sp)
 50834a8:	6b403fcc 	andi	r13,r13,255
 50834ac:	6b40201c 	xori	r13,r13,128
 50834b0:	6b7fe004 	addi	r13,r13,-128
 50834b4:	683e5f26 	beq	r13,zero,5082e34 <___svfprintf_internal_r+0x2e0>
 50834b8:	a5000044 	addi	r20,r20,1
 50834bc:	003e5d06 	br	5082e34 <___svfprintf_internal_r+0x2e0>
 50834c0:	bac00007 	ldb	r11,0(r23)
 50834c4:	63002014 	ori	r12,r12,128
 50834c8:	003de006 	br	5082c4c <___svfprintf_internal_r+0xf8>
 50834cc:	bf000007 	ldb	fp,0(r23)
 50834d0:	b8c00044 	addi	r3,r23,1
 50834d4:	e0800aa0 	cmpeqi	r2,fp,42
 50834d8:	1005aa1e 	bne	r2,zero,5084b84 <___svfprintf_internal_r+0x2030>
 50834dc:	e0bff404 	addi	r2,fp,-48
 50834e0:	118002b0 	cmpltui	r6,r2,10
 50834e4:	182f883a 	mov	r23,r3
 50834e8:	0011883a 	mov	r8,zero
 50834ec:	303dd926 	beq	r6,zero,5082c54 <___svfprintf_internal_r+0x100>
 50834f0:	bf000007 	ldb	fp,0(r23)
 50834f4:	420002a4 	muli	r8,r8,10
 50834f8:	bdc00044 	addi	r23,r23,1
 50834fc:	4091883a 	add	r8,r8,r2
 5083500:	e0bff404 	addi	r2,fp,-48
 5083504:	10c002b0 	cmpltui	r3,r2,10
 5083508:	183ff91e 	bne	r3,zero,50834f0 <___svfprintf_internal_r+0x99c>
 508350c:	003dd106 	br	5082c54 <___svfprintf_internal_r+0x100>
 5083510:	bf000003 	ldbu	fp,0(r23)
 5083514:	e2c03fcc 	andi	r11,fp,255
 5083518:	5ac0201c 	xori	r11,r11,128
 508351c:	63000114 	ori	r12,r12,4
 5083520:	5affe004 	addi	r11,r11,-128
 5083524:	003dc906 	br	5082c4c <___svfprintf_internal_r+0xf8>
 5083528:	bac00007 	ldb	r11,0(r23)
 508352c:	01000044 	movi	r4,1
 5083530:	01400ac4 	movi	r5,43
 5083534:	003dc506 	br	5082c4c <___svfprintf_internal_r+0xf8>
 5083538:	d8800617 	ldw	r2,24(sp)
 508353c:	bf000003 	ldbu	fp,0(r23)
 5083540:	14000017 	ldw	r16,0(r2)
 5083544:	10800104 	addi	r2,r2,4
 5083548:	80029216 	blt	r16,zero,5083f94 <___svfprintf_internal_r+0x1440>
 508354c:	d8800615 	stw	r2,24(sp)
 5083550:	e2c03fcc 	andi	r11,fp,255
 5083554:	5ac0201c 	xori	r11,r11,128
 5083558:	5affe004 	addi	r11,r11,-128
 508355c:	003dbb06 	br	5082c4c <___svfprintf_internal_r+0xf8>
 5083560:	bac00007 	ldb	r11,0(r23)
 5083564:	63000054 	ori	r12,r12,1
 5083568:	003db806 	br	5082c4c <___svfprintf_internal_r+0xf8>
 508356c:	28803fcc 	andi	r2,r5,255
 5083570:	1080201c 	xori	r2,r2,128
 5083574:	10bfe004 	addi	r2,r2,-128
 5083578:	bf000003 	ldbu	fp,0(r23)
 508357c:	103ff41e 	bne	r2,zero,5083550 <___svfprintf_internal_r+0x9fc>
 5083580:	e2c03fcc 	andi	r11,fp,255
 5083584:	5ac0201c 	xori	r11,r11,128
 5083588:	01000044 	movi	r4,1
 508358c:	01400804 	movi	r5,32
 5083590:	5affe004 	addi	r11,r11,-128
 5083594:	003dad06 	br	5082c4c <___svfprintf_internal_r+0xf8>
 5083598:	21003fcc 	andi	r4,r4,255
 508359c:	20051b1e 	bne	r4,zero,5084a0c <___svfprintf_internal_r+0x1eb8>
 50835a0:	00814274 	movhi	r2,1289
 50835a4:	10980f04 	addi	r2,r2,24636
 50835a8:	d8800b15 	stw	r2,44(sp)
 50835ac:	6080080c 	andi	r2,r12,32
 50835b0:	10003226 	beq	r2,zero,508367c <___svfprintf_internal_r+0xb28>
 50835b4:	d8800617 	ldw	r2,24(sp)
 50835b8:	15000017 	ldw	r20,0(r2)
 50835bc:	15400117 	ldw	r21,4(r2)
 50835c0:	10800204 	addi	r2,r2,8
 50835c4:	d8800615 	stw	r2,24(sp)
 50835c8:	6080004c 	andi	r2,r12,1
 50835cc:	10000226 	beq	r2,zero,50835d8 <___svfprintf_internal_r+0xa84>
 50835d0:	a544b03a 	or	r2,r20,r21
 50835d4:	1002691e 	bne	r2,zero,5083f7c <___svfprintf_internal_r+0x1428>
 50835d8:	00800084 	movi	r2,2
 50835dc:	003e7f06 	br	5082fdc <___svfprintf_internal_r+0x488>
 50835e0:	d8800617 	ldw	r2,24(sp)
 50835e4:	d8001345 	stb	zero,77(sp)
 50835e8:	14400017 	ldw	r17,0(r2)
 50835ec:	10c00104 	addi	r3,r2,4
 50835f0:	88039226 	beq	r17,zero,508443c <___svfprintf_internal_r+0x18e8>
 50835f4:	40bfffe0 	cmpeqi	r2,r8,-1
 50835f8:	1002a71e 	bne	r2,zero,5084098 <___svfprintf_internal_r+0x1544>
 50835fc:	400d883a 	mov	r6,r8
 5083600:	000b883a 	mov	r5,zero
 5083604:	8809883a 	mov	r4,r17
 5083608:	d8c00715 	stw	r3,28(sp)
 508360c:	db000615 	stw	r12,24(sp)
 5083610:	da000415 	stw	r8,16(sp)
 5083614:	508a4d80 	call	508a4d8 <memchr>
 5083618:	da000417 	ldw	r8,16(sp)
 508361c:	db000617 	ldw	r12,24(sp)
 5083620:	d8c00717 	ldw	r3,28(sp)
 5083624:	1004e326 	beq	r2,zero,50849b4 <___svfprintf_internal_r+0x1e60>
 5083628:	146bc83a 	sub	r21,r2,r17
 508362c:	a829883a 	mov	r20,r21
 5083630:	d8c00615 	stw	r3,24(sp)
 5083634:	003dfc06 	br	5082e28 <___svfprintf_internal_r+0x2d4>
 5083638:	d8c00617 	ldw	r3,24(sp)
 508363c:	d8001345 	stb	zero,77(sp)
 5083640:	05000044 	movi	r20,1
 5083644:	18800017 	ldw	r2,0(r3)
 5083648:	18c00104 	addi	r3,r3,4
 508364c:	d8c00615 	stw	r3,24(sp)
 5083650:	d8801d05 	stb	r2,116(sp)
 5083654:	05400044 	movi	r21,1
 5083658:	dc401d04 	addi	r17,sp,116
 508365c:	003df206 	br	5082e28 <___svfprintf_internal_r+0x2d4>
 5083660:	21003fcc 	andi	r4,r4,255
 5083664:	2004e31e 	bne	r4,zero,50849f4 <___svfprintf_internal_r+0x1ea0>
 5083668:	00814274 	movhi	r2,1289
 508366c:	10981404 	addi	r2,r2,24656
 5083670:	d8800b15 	stw	r2,44(sp)
 5083674:	6080080c 	andi	r2,r12,32
 5083678:	103fce1e 	bne	r2,zero,50835b4 <___svfprintf_internal_r+0xa60>
 508367c:	d9000617 	ldw	r4,24(sp)
 5083680:	6080040c 	andi	r2,r12,16
 5083684:	20c00104 	addi	r3,r4,4
 5083688:	1002381e 	bne	r2,zero,5083f6c <___svfprintf_internal_r+0x1418>
 508368c:	6080100c 	andi	r2,r12,64
 5083690:	1003f226 	beq	r2,zero,508465c <___svfprintf_internal_r+0x1b08>
 5083694:	d8800617 	ldw	r2,24(sp)
 5083698:	002b883a 	mov	r21,zero
 508369c:	d8c00615 	stw	r3,24(sp)
 50836a0:	1500000b 	ldhu	r20,0(r2)
 50836a4:	003fc806 	br	50835c8 <___svfprintf_internal_r+0xa74>
 50836a8:	e2c01990 	cmplti	r11,fp,102
 50836ac:	5800ce1e 	bne	r11,zero,50839e8 <___svfprintf_internal_r+0xe94>
 50836b0:	d9000917 	ldw	r4,36(sp)
 50836b4:	d9400a17 	ldw	r5,40(sp)
 50836b8:	000d883a 	mov	r6,zero
 50836bc:	000f883a 	mov	r7,zero
 50836c0:	d8c00e15 	stw	r3,56(sp)
 50836c4:	509164c0 	call	509164c <__eqdf2>
 50836c8:	d8c00e17 	ldw	r3,56(sp)
 50836cc:	1001671e 	bne	r2,zero,5083c6c <___svfprintf_internal_r+0x1118>
 50836d0:	d8801b17 	ldw	r2,108(sp)
 50836d4:	01014274 	movhi	r4,1289
 50836d8:	21181b04 	addi	r4,r4,24684
 50836dc:	10800044 	addi	r2,r2,1
 50836e0:	18c00044 	addi	r3,r3,1
 50836e4:	b1000015 	stw	r4,0(r22)
 50836e8:	01000044 	movi	r4,1
 50836ec:	d8801b15 	stw	r2,108(sp)
 50836f0:	b1000115 	stw	r4,4(r22)
 50836f4:	d8c01c15 	stw	r3,112(sp)
 50836f8:	10800208 	cmpgei	r2,r2,8
 50836fc:	1003351e 	bne	r2,zero,50843d4 <___svfprintf_internal_r+0x1880>
 5083700:	b5800204 	addi	r22,r22,8
 5083704:	d8801417 	ldw	r2,80(sp)
 5083708:	d9000817 	ldw	r4,32(sp)
 508370c:	11000316 	blt	r2,r4,508371c <___svfprintf_internal_r+0xbc8>
 5083710:	d8800417 	ldw	r2,16(sp)
 5083714:	1080004c 	andi	r2,r2,1
 5083718:	103dfc26 	beq	r2,zero,5082f0c <___svfprintf_internal_r+0x3b8>
 508371c:	d8800d17 	ldw	r2,52(sp)
 5083720:	d9000c17 	ldw	r4,48(sp)
 5083724:	b0800015 	stw	r2,0(r22)
 5083728:	d8801b17 	ldw	r2,108(sp)
 508372c:	1907883a 	add	r3,r3,r4
 5083730:	b1000115 	stw	r4,4(r22)
 5083734:	10800044 	addi	r2,r2,1
 5083738:	d8801b15 	stw	r2,108(sp)
 508373c:	d8c01c15 	stw	r3,112(sp)
 5083740:	10800208 	cmpgei	r2,r2,8
 5083744:	1003351e 	bne	r2,zero,508441c <___svfprintf_internal_r+0x18c8>
 5083748:	b5800204 	addi	r22,r22,8
 508374c:	d8800817 	ldw	r2,32(sp)
 5083750:	157fffc4 	addi	r21,r2,-1
 5083754:	057ded0e 	bge	zero,r21,5082f0c <___svfprintf_internal_r+0x3b8>
 5083758:	01c14274 	movhi	r7,1289
 508375c:	a9000450 	cmplti	r4,r21,17
 5083760:	d8801b17 	ldw	r2,108(sp)
 5083764:	39d81c04 	addi	r7,r7,24688
 5083768:	2003161e 	bne	r4,zero,50843c4 <___svfprintf_internal_r+0x1870>
 508376c:	07000404 	movi	fp,16
 5083770:	3823883a 	mov	r17,r7
 5083774:	00000406 	br	5083788 <___svfprintf_internal_r+0xc34>
 5083778:	b5800204 	addi	r22,r22,8
 508377c:	ad7ffc04 	addi	r21,r21,-16
 5083780:	a9000448 	cmpgei	r4,r21,17
 5083784:	20030e26 	beq	r4,zero,50843c0 <___svfprintf_internal_r+0x186c>
 5083788:	10800044 	addi	r2,r2,1
 508378c:	18c00404 	addi	r3,r3,16
 5083790:	b4400015 	stw	r17,0(r22)
 5083794:	b7000115 	stw	fp,4(r22)
 5083798:	d8c01c15 	stw	r3,112(sp)
 508379c:	d8801b15 	stw	r2,108(sp)
 50837a0:	11000208 	cmpgei	r4,r2,8
 50837a4:	203ff426 	beq	r4,zero,5083778 <___svfprintf_internal_r+0xc24>
 50837a8:	d9801a04 	addi	r6,sp,104
 50837ac:	900b883a 	mov	r5,r18
 50837b0:	9809883a 	mov	r4,r19
 50837b4:	508c1200 	call	508c120 <__ssprint_r>
 50837b8:	103de51e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 50837bc:	d8c01c17 	ldw	r3,112(sp)
 50837c0:	d8801b17 	ldw	r2,108(sp)
 50837c4:	dd802704 	addi	r22,sp,156
 50837c8:	003fec06 	br	508377c <___svfprintf_internal_r+0xc28>
 50837cc:	8519c83a 	sub	r12,r16,r20
 50837d0:	033dbf0e 	bge	zero,r12,5082ed0 <___svfprintf_internal_r+0x37c>
 50837d4:	01c14274 	movhi	r7,1289
 50837d8:	61000450 	cmplti	r4,r12,17
 50837dc:	d8801b17 	ldw	r2,108(sp)
 50837e0:	39d81c04 	addi	r7,r7,24688
 50837e4:	2000281e 	bne	r4,zero,5083888 <___svfprintf_internal_r+0xd34>
 50837e8:	dc400e15 	stw	r17,56(sp)
 50837ec:	dc000f15 	stw	r16,60(sp)
 50837f0:	b009883a 	mov	r4,r22
 50837f4:	03400404 	movi	r13,16
 50837f8:	a02d883a 	mov	r22,r20
 50837fc:	6021883a 	mov	r16,r12
 5083800:	4029883a 	mov	r20,r8
 5083804:	3823883a 	mov	r17,r7
 5083808:	00000406 	br	508381c <___svfprintf_internal_r+0xcc8>
 508380c:	843ffc04 	addi	r16,r16,-16
 5083810:	81400448 	cmpgei	r5,r16,17
 5083814:	21000204 	addi	r4,r4,8
 5083818:	28001426 	beq	r5,zero,508386c <___svfprintf_internal_r+0xd18>
 508381c:	10800044 	addi	r2,r2,1
 5083820:	18c00404 	addi	r3,r3,16
 5083824:	24400015 	stw	r17,0(r4)
 5083828:	23400115 	stw	r13,4(r4)
 508382c:	d8c01c15 	stw	r3,112(sp)
 5083830:	d8801b15 	stw	r2,108(sp)
 5083834:	11400208 	cmpgei	r5,r2,8
 5083838:	283ff426 	beq	r5,zero,508380c <___svfprintf_internal_r+0xcb8>
 508383c:	d9801a04 	addi	r6,sp,104
 5083840:	900b883a 	mov	r5,r18
 5083844:	9809883a 	mov	r4,r19
 5083848:	508c1200 	call	508c120 <__ssprint_r>
 508384c:	103dc01e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5083850:	843ffc04 	addi	r16,r16,-16
 5083854:	81400448 	cmpgei	r5,r16,17
 5083858:	d8c01c17 	ldw	r3,112(sp)
 508385c:	d8801b17 	ldw	r2,108(sp)
 5083860:	d9002704 	addi	r4,sp,156
 5083864:	03400404 	movi	r13,16
 5083868:	283fec1e 	bne	r5,zero,508381c <___svfprintf_internal_r+0xcc8>
 508386c:	8019883a 	mov	r12,r16
 5083870:	880f883a 	mov	r7,r17
 5083874:	dc000f17 	ldw	r16,60(sp)
 5083878:	dc400e17 	ldw	r17,56(sp)
 508387c:	a011883a 	mov	r8,r20
 5083880:	b029883a 	mov	r20,r22
 5083884:	202d883a 	mov	r22,r4
 5083888:	10800044 	addi	r2,r2,1
 508388c:	1b07883a 	add	r3,r3,r12
 5083890:	d8801b15 	stw	r2,108(sp)
 5083894:	b1c00015 	stw	r7,0(r22)
 5083898:	b3000115 	stw	r12,4(r22)
 508389c:	d8c01c15 	stw	r3,112(sp)
 50838a0:	10800208 	cmpgei	r2,r2,8
 50838a4:	1002d31e 	bne	r2,zero,50843f4 <___svfprintf_internal_r+0x18a0>
 50838a8:	4551c83a 	sub	r8,r8,r21
 50838ac:	b5800204 	addi	r22,r22,8
 50838b0:	023d890e 	bge	zero,r8,5082ed8 <___svfprintf_internal_r+0x384>
 50838b4:	01c14274 	movhi	r7,1289
 50838b8:	41000450 	cmplti	r4,r8,17
 50838bc:	d8801b17 	ldw	r2,108(sp)
 50838c0:	39d81c04 	addi	r7,r7,24688
 50838c4:	2000221e 	bne	r4,zero,5083950 <___svfprintf_internal_r+0xdfc>
 50838c8:	dc400e15 	stw	r17,56(sp)
 50838cc:	dc000f15 	stw	r16,60(sp)
 50838d0:	03000404 	movi	r12,16
 50838d4:	4021883a 	mov	r16,r8
 50838d8:	3823883a 	mov	r17,r7
 50838dc:	00000406 	br	50838f0 <___svfprintf_internal_r+0xd9c>
 50838e0:	843ffc04 	addi	r16,r16,-16
 50838e4:	81000448 	cmpgei	r4,r16,17
 50838e8:	b5800204 	addi	r22,r22,8
 50838ec:	20001426 	beq	r4,zero,5083940 <___svfprintf_internal_r+0xdec>
 50838f0:	10800044 	addi	r2,r2,1
 50838f4:	18c00404 	addi	r3,r3,16
 50838f8:	b4400015 	stw	r17,0(r22)
 50838fc:	b3000115 	stw	r12,4(r22)
 5083900:	d8c01c15 	stw	r3,112(sp)
 5083904:	d8801b15 	stw	r2,108(sp)
 5083908:	11000208 	cmpgei	r4,r2,8
 508390c:	203ff426 	beq	r4,zero,50838e0 <___svfprintf_internal_r+0xd8c>
 5083910:	d9801a04 	addi	r6,sp,104
 5083914:	900b883a 	mov	r5,r18
 5083918:	9809883a 	mov	r4,r19
 508391c:	508c1200 	call	508c120 <__ssprint_r>
 5083920:	103d8b1e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5083924:	843ffc04 	addi	r16,r16,-16
 5083928:	81000448 	cmpgei	r4,r16,17
 508392c:	d8c01c17 	ldw	r3,112(sp)
 5083930:	d8801b17 	ldw	r2,108(sp)
 5083934:	dd802704 	addi	r22,sp,156
 5083938:	03000404 	movi	r12,16
 508393c:	203fec1e 	bne	r4,zero,50838f0 <___svfprintf_internal_r+0xd9c>
 5083940:	8011883a 	mov	r8,r16
 5083944:	880f883a 	mov	r7,r17
 5083948:	dc000f17 	ldw	r16,60(sp)
 508394c:	dc400e17 	ldw	r17,56(sp)
 5083950:	10800044 	addi	r2,r2,1
 5083954:	1a07883a 	add	r3,r3,r8
 5083958:	d8801b15 	stw	r2,108(sp)
 508395c:	b1c00015 	stw	r7,0(r22)
 5083960:	b2000115 	stw	r8,4(r22)
 5083964:	d8c01c15 	stw	r3,112(sp)
 5083968:	10800208 	cmpgei	r2,r2,8
 508396c:	10014a1e 	bne	r2,zero,5083e98 <___svfprintf_internal_r+0x1344>
 5083970:	b5800204 	addi	r22,r22,8
 5083974:	003d5806 	br	5082ed8 <___svfprintf_internal_r+0x384>
 5083978:	10c00060 	cmpeqi	r3,r2,1
 508397c:	1803cf1e 	bne	r3,zero,50848bc <___svfprintf_internal_r+0x1d68>
 5083980:	108000a0 	cmpeqi	r2,r2,2
 5083984:	db000417 	ldw	r12,16(sp)
 5083988:	103ea926 	beq	r2,zero,5083430 <___svfprintf_internal_r+0x8dc>
 508398c:	d9000b17 	ldw	r4,44(sp)
 5083990:	dc402704 	addi	r17,sp,156
 5083994:	a08003cc 	andi	r2,r20,15
 5083998:	a806973a 	slli	r3,r21,28
 508399c:	a028d13a 	srli	r20,r20,4
 50839a0:	2085883a 	add	r2,r4,r2
 50839a4:	10800003 	ldbu	r2,0(r2)
 50839a8:	a82ad13a 	srli	r21,r21,4
 50839ac:	1d28b03a 	or	r20,r3,r20
 50839b0:	88bfffc5 	stb	r2,-1(r17)
 50839b4:	a544b03a 	or	r2,r20,r21
 50839b8:	8c7fffc4 	addi	r17,r17,-1
 50839bc:	103ff51e 	bne	r2,zero,5083994 <___svfprintf_internal_r+0xe40>
 50839c0:	d8802704 	addi	r2,sp,156
 50839c4:	146bc83a 	sub	r21,r2,r17
 50839c8:	db000415 	stw	r12,16(sp)
 50839cc:	003eb206 	br	5083498 <___svfprintf_internal_r+0x944>
 50839d0:	d9801a04 	addi	r6,sp,104
 50839d4:	900b883a 	mov	r5,r18
 50839d8:	9809883a 	mov	r4,r19
 50839dc:	508c1200 	call	508c120 <__ssprint_r>
 50839e0:	103d5526 	beq	r2,zero,5082f38 <___svfprintf_internal_r+0x3e4>
 50839e4:	003d5a06 	br	5082f50 <___svfprintf_internal_r+0x3fc>
 50839e8:	d8800817 	ldw	r2,32(sp)
 50839ec:	da001b17 	ldw	r8,108(sp)
 50839f0:	18c00044 	addi	r3,r3,1
 50839f4:	10800088 	cmpgei	r2,r2,2
 50839f8:	45400044 	addi	r21,r8,1
 50839fc:	b7000204 	addi	fp,r22,8
 5083a00:	1000f326 	beq	r2,zero,5083dd0 <___svfprintf_internal_r+0x127c>
 5083a04:	00800044 	movi	r2,1
 5083a08:	b0800115 	stw	r2,4(r22)
 5083a0c:	b4400015 	stw	r17,0(r22)
 5083a10:	d8c01c15 	stw	r3,112(sp)
 5083a14:	dd401b15 	stw	r21,108(sp)
 5083a18:	a8800210 	cmplti	r2,r21,8
 5083a1c:	10012626 	beq	r2,zero,5083eb8 <___svfprintf_internal_r+0x1364>
 5083a20:	d8800c17 	ldw	r2,48(sp)
 5083a24:	d9000d17 	ldw	r4,52(sp)
 5083a28:	ad400044 	addi	r21,r21,1
 5083a2c:	1887883a 	add	r3,r3,r2
 5083a30:	e0800115 	stw	r2,4(fp)
 5083a34:	e1000015 	stw	r4,0(fp)
 5083a38:	d8c01c15 	stw	r3,112(sp)
 5083a3c:	dd401b15 	stw	r21,108(sp)
 5083a40:	a8800208 	cmpgei	r2,r21,8
 5083a44:	1001251e 	bne	r2,zero,5083edc <___svfprintf_internal_r+0x1388>
 5083a48:	e7000204 	addi	fp,fp,8
 5083a4c:	d9000917 	ldw	r4,36(sp)
 5083a50:	d9400a17 	ldw	r5,40(sp)
 5083a54:	aa000044 	addi	r8,r21,1
 5083a58:	000d883a 	mov	r6,zero
 5083a5c:	000f883a 	mov	r7,zero
 5083a60:	d8c00e15 	stw	r3,56(sp)
 5083a64:	da000715 	stw	r8,28(sp)
 5083a68:	509164c0 	call	509164c <__eqdf2>
 5083a6c:	d8c00817 	ldw	r3,32(sp)
 5083a70:	da000717 	ldw	r8,28(sp)
 5083a74:	e5800204 	addi	r22,fp,8
 5083a78:	1affffc4 	addi	r11,r3,-1
 5083a7c:	d8c00e17 	ldw	r3,56(sp)
 5083a80:	1000e526 	beq	r2,zero,5083e18 <___svfprintf_internal_r+0x12c4>
 5083a84:	8a400044 	addi	r9,r17,1
 5083a88:	1ac7883a 	add	r3,r3,r11
 5083a8c:	da001b15 	stw	r8,108(sp)
 5083a90:	e2400015 	stw	r9,0(fp)
 5083a94:	e2c00115 	stw	r11,4(fp)
 5083a98:	d8c01c15 	stw	r3,112(sp)
 5083a9c:	42000208 	cmpgei	r8,r8,8
 5083aa0:	4001b01e 	bne	r8,zero,5084164 <___svfprintf_internal_r+0x1610>
 5083aa4:	e0800404 	addi	r2,fp,16
 5083aa8:	aa000084 	addi	r8,r21,2
 5083aac:	b039883a 	mov	fp,r22
 5083ab0:	102d883a 	mov	r22,r2
 5083ab4:	d9001017 	ldw	r4,64(sp)
 5083ab8:	d8801644 	addi	r2,sp,89
 5083abc:	da001b15 	stw	r8,108(sp)
 5083ac0:	20c7883a 	add	r3,r4,r3
 5083ac4:	e0800015 	stw	r2,0(fp)
 5083ac8:	e1000115 	stw	r4,4(fp)
 5083acc:	d8c01c15 	stw	r3,112(sp)
 5083ad0:	42000210 	cmplti	r8,r8,8
 5083ad4:	403d0d1e 	bne	r8,zero,5082f0c <___svfprintf_internal_r+0x3b8>
 5083ad8:	d9801a04 	addi	r6,sp,104
 5083adc:	900b883a 	mov	r5,r18
 5083ae0:	9809883a 	mov	r4,r19
 5083ae4:	508c1200 	call	508c120 <__ssprint_r>
 5083ae8:	103d191e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5083aec:	d8c01c17 	ldw	r3,112(sp)
 5083af0:	dd802704 	addi	r22,sp,156
 5083af4:	003d0506 	br	5082f0c <___svfprintf_internal_r+0x3b8>
 5083af8:	db000417 	ldw	r12,16(sp)
 5083afc:	003e4806 	br	5083420 <___svfprintf_internal_r+0x8cc>
 5083b00:	03014274 	movhi	r12,1289
 5083b04:	39000450 	cmplti	r4,r7,17
 5083b08:	d8801b17 	ldw	r2,108(sp)
 5083b0c:	63182004 	addi	r12,r12,24704
 5083b10:	2000321e 	bne	r4,zero,5083bdc <___svfprintf_internal_r+0x1088>
 5083b14:	dc401115 	stw	r17,68(sp)
 5083b18:	b009883a 	mov	r4,r22
 5083b1c:	9023883a 	mov	r17,r18
 5083b20:	a82d883a 	mov	r22,r21
 5083b24:	ddc01215 	stw	r23,72(sp)
 5083b28:	03c00404 	movi	r15,16
 5083b2c:	a02f883a 	mov	r23,r20
 5083b30:	db800e15 	stw	r14,56(sp)
 5083b34:	8029883a 	mov	r20,r16
 5083b38:	db400f15 	stw	r13,60(sp)
 5083b3c:	402b883a 	mov	r21,r8
 5083b40:	3821883a 	mov	r16,r7
 5083b44:	6025883a 	mov	r18,r12
 5083b48:	00000406 	br	5083b5c <___svfprintf_internal_r+0x1008>
 5083b4c:	843ffc04 	addi	r16,r16,-16
 5083b50:	81800448 	cmpgei	r6,r16,17
 5083b54:	21000204 	addi	r4,r4,8
 5083b58:	30001426 	beq	r6,zero,5083bac <___svfprintf_internal_r+0x1058>
 5083b5c:	10800044 	addi	r2,r2,1
 5083b60:	18c00404 	addi	r3,r3,16
 5083b64:	24800015 	stw	r18,0(r4)
 5083b68:	23c00115 	stw	r15,4(r4)
 5083b6c:	d8c01c15 	stw	r3,112(sp)
 5083b70:	d8801b15 	stw	r2,108(sp)
 5083b74:	11800208 	cmpgei	r6,r2,8
 5083b78:	303ff426 	beq	r6,zero,5083b4c <___svfprintf_internal_r+0xff8>
 5083b7c:	d9801a04 	addi	r6,sp,104
 5083b80:	880b883a 	mov	r5,r17
 5083b84:	9809883a 	mov	r4,r19
 5083b88:	508c1200 	call	508c120 <__ssprint_r>
 5083b8c:	1001b71e 	bne	r2,zero,508426c <___svfprintf_internal_r+0x1718>
 5083b90:	843ffc04 	addi	r16,r16,-16
 5083b94:	81800448 	cmpgei	r6,r16,17
 5083b98:	d8c01c17 	ldw	r3,112(sp)
 5083b9c:	d8801b17 	ldw	r2,108(sp)
 5083ba0:	d9002704 	addi	r4,sp,156
 5083ba4:	03c00404 	movi	r15,16
 5083ba8:	303fec1e 	bne	r6,zero,5083b5c <___svfprintf_internal_r+0x1008>
 5083bac:	800f883a 	mov	r7,r16
 5083bb0:	9019883a 	mov	r12,r18
 5083bb4:	a021883a 	mov	r16,r20
 5083bb8:	8825883a 	mov	r18,r17
 5083bbc:	b829883a 	mov	r20,r23
 5083bc0:	db800e17 	ldw	r14,56(sp)
 5083bc4:	db400f17 	ldw	r13,60(sp)
 5083bc8:	ddc01217 	ldw	r23,72(sp)
 5083bcc:	dc401117 	ldw	r17,68(sp)
 5083bd0:	a811883a 	mov	r8,r21
 5083bd4:	b02b883a 	mov	r21,r22
 5083bd8:	202d883a 	mov	r22,r4
 5083bdc:	10800044 	addi	r2,r2,1
 5083be0:	19c7883a 	add	r3,r3,r7
 5083be4:	d8801b15 	stw	r2,108(sp)
 5083be8:	b3000015 	stw	r12,0(r22)
 5083bec:	b1c00115 	stw	r7,4(r22)
 5083bf0:	d8c01c15 	stw	r3,112(sp)
 5083bf4:	10800208 	cmpgei	r2,r2,8
 5083bf8:	1001651e 	bne	r2,zero,5084190 <___svfprintf_internal_r+0x163c>
 5083bfc:	b5800204 	addi	r22,r22,8
 5083c00:	003c9606 	br	5082e5c <___svfprintf_internal_r+0x308>
 5083c04:	d9801a04 	addi	r6,sp,104
 5083c08:	900b883a 	mov	r5,r18
 5083c0c:	9809883a 	mov	r4,r19
 5083c10:	da001115 	stw	r8,68(sp)
 5083c14:	db400f15 	stw	r13,60(sp)
 5083c18:	db800e15 	stw	r14,56(sp)
 5083c1c:	508c1200 	call	508c120 <__ssprint_r>
 5083c20:	103ccb1e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5083c24:	d8c01c17 	ldw	r3,112(sp)
 5083c28:	da001117 	ldw	r8,68(sp)
 5083c2c:	db400f17 	ldw	r13,60(sp)
 5083c30:	db800e17 	ldw	r14,56(sp)
 5083c34:	dd802704 	addi	r22,sp,156
 5083c38:	003c9606 	br	5082e94 <___svfprintf_internal_r+0x340>
 5083c3c:	d9801a04 	addi	r6,sp,104
 5083c40:	900b883a 	mov	r5,r18
 5083c44:	9809883a 	mov	r4,r19
 5083c48:	da000f15 	stw	r8,60(sp)
 5083c4c:	db400e15 	stw	r13,56(sp)
 5083c50:	508c1200 	call	508c120 <__ssprint_r>
 5083c54:	103cbe1e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5083c58:	d8c01c17 	ldw	r3,112(sp)
 5083c5c:	da000f17 	ldw	r8,60(sp)
 5083c60:	db400e17 	ldw	r13,56(sp)
 5083c64:	dd802704 	addi	r22,sp,156
 5083c68:	003c9706 	br	5082ec8 <___svfprintf_internal_r+0x374>
 5083c6c:	d9401417 	ldw	r5,80(sp)
 5083c70:	0141550e 	bge	zero,r5,50841c8 <___svfprintf_internal_r+0x1674>
 5083c74:	d8800717 	ldw	r2,28(sp)
 5083c78:	d9000817 	ldw	r4,32(sp)
 5083c7c:	102b883a 	mov	r21,r2
 5083c80:	2080c716 	blt	r4,r2,5083fa0 <___svfprintf_internal_r+0x144c>
 5083c84:	05400a0e 	bge	zero,r21,5083cb0 <___svfprintf_internal_r+0x115c>
 5083c88:	d8801b17 	ldw	r2,108(sp)
 5083c8c:	1d47883a 	add	r3,r3,r21
 5083c90:	b4400015 	stw	r17,0(r22)
 5083c94:	10800044 	addi	r2,r2,1
 5083c98:	d8801b15 	stw	r2,108(sp)
 5083c9c:	b5400115 	stw	r21,4(r22)
 5083ca0:	d8c01c15 	stw	r3,112(sp)
 5083ca4:	10800208 	cmpgei	r2,r2,8
 5083ca8:	10032c1e 	bne	r2,zero,508495c <___svfprintf_internal_r+0x1e08>
 5083cac:	b5800204 	addi	r22,r22,8
 5083cb0:	a800d016 	blt	r21,zero,5083ff4 <___svfprintf_internal_r+0x14a0>
 5083cb4:	d8800717 	ldw	r2,28(sp)
 5083cb8:	156bc83a 	sub	r21,r2,r21
 5083cbc:	0540d816 	blt	zero,r21,5084020 <___svfprintf_internal_r+0x14cc>
 5083cc0:	dd401417 	ldw	r21,80(sp)
 5083cc4:	d8800817 	ldw	r2,32(sp)
 5083cc8:	a880b80e 	bge	r21,r2,5083fac <___svfprintf_internal_r+0x1458>
 5083ccc:	d8800d17 	ldw	r2,52(sp)
 5083cd0:	d9000c17 	ldw	r4,48(sp)
 5083cd4:	b0800015 	stw	r2,0(r22)
 5083cd8:	d8801b17 	ldw	r2,108(sp)
 5083cdc:	1907883a 	add	r3,r3,r4
 5083ce0:	b1000115 	stw	r4,4(r22)
 5083ce4:	10800044 	addi	r2,r2,1
 5083ce8:	d8801b15 	stw	r2,108(sp)
 5083cec:	d8c01c15 	stw	r3,112(sp)
 5083cf0:	10800208 	cmpgei	r2,r2,8
 5083cf4:	1002bd1e 	bne	r2,zero,50847ec <___svfprintf_internal_r+0x1c98>
 5083cf8:	b5800204 	addi	r22,r22,8
 5083cfc:	d9000817 	ldw	r4,32(sp)
 5083d00:	d9400717 	ldw	r5,28(sp)
 5083d04:	2545c83a 	sub	r2,r4,r21
 5083d08:	2149c83a 	sub	r4,r4,r5
 5083d0c:	102b883a 	mov	r21,r2
 5083d10:	2080010e 	bge	r4,r2,5083d18 <___svfprintf_internal_r+0x11c4>
 5083d14:	202b883a 	mov	r21,r4
 5083d18:	05400c0e 	bge	zero,r21,5083d4c <___svfprintf_internal_r+0x11f8>
 5083d1c:	d9000717 	ldw	r4,28(sp)
 5083d20:	1d47883a 	add	r3,r3,r21
 5083d24:	b5400115 	stw	r21,4(r22)
 5083d28:	8913883a 	add	r9,r17,r4
 5083d2c:	d9001b17 	ldw	r4,108(sp)
 5083d30:	b2400015 	stw	r9,0(r22)
 5083d34:	d8c01c15 	stw	r3,112(sp)
 5083d38:	21000044 	addi	r4,r4,1
 5083d3c:	d9001b15 	stw	r4,108(sp)
 5083d40:	21000208 	cmpgei	r4,r4,8
 5083d44:	20030e1e 	bne	r4,zero,5084980 <___svfprintf_internal_r+0x1e2c>
 5083d48:	b5800204 	addi	r22,r22,8
 5083d4c:	a800010e 	bge	r21,zero,5083d54 <___svfprintf_internal_r+0x1200>
 5083d50:	002b883a 	mov	r21,zero
 5083d54:	156bc83a 	sub	r21,r2,r21
 5083d58:	057c6c0e 	bge	zero,r21,5082f0c <___svfprintf_internal_r+0x3b8>
 5083d5c:	01c14274 	movhi	r7,1289
 5083d60:	a9000450 	cmplti	r4,r21,17
 5083d64:	d8801b17 	ldw	r2,108(sp)
 5083d68:	39d81c04 	addi	r7,r7,24688
 5083d6c:	2001951e 	bne	r4,zero,50843c4 <___svfprintf_internal_r+0x1870>
 5083d70:	07000404 	movi	fp,16
 5083d74:	3823883a 	mov	r17,r7
 5083d78:	00000406 	br	5083d8c <___svfprintf_internal_r+0x1238>
 5083d7c:	b5800204 	addi	r22,r22,8
 5083d80:	ad7ffc04 	addi	r21,r21,-16
 5083d84:	a9000448 	cmpgei	r4,r21,17
 5083d88:	20018d26 	beq	r4,zero,50843c0 <___svfprintf_internal_r+0x186c>
 5083d8c:	10800044 	addi	r2,r2,1
 5083d90:	18c00404 	addi	r3,r3,16
 5083d94:	b4400015 	stw	r17,0(r22)
 5083d98:	b7000115 	stw	fp,4(r22)
 5083d9c:	d8c01c15 	stw	r3,112(sp)
 5083da0:	d8801b15 	stw	r2,108(sp)
 5083da4:	11000208 	cmpgei	r4,r2,8
 5083da8:	203ff426 	beq	r4,zero,5083d7c <___svfprintf_internal_r+0x1228>
 5083dac:	d9801a04 	addi	r6,sp,104
 5083db0:	900b883a 	mov	r5,r18
 5083db4:	9809883a 	mov	r4,r19
 5083db8:	508c1200 	call	508c120 <__ssprint_r>
 5083dbc:	103c641e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5083dc0:	d8c01c17 	ldw	r3,112(sp)
 5083dc4:	d8801b17 	ldw	r2,108(sp)
 5083dc8:	dd802704 	addi	r22,sp,156
 5083dcc:	003fec06 	br	5083d80 <___svfprintf_internal_r+0x122c>
 5083dd0:	d8800417 	ldw	r2,16(sp)
 5083dd4:	1080004c 	andi	r2,r2,1
 5083dd8:	103f0a1e 	bne	r2,zero,5083a04 <___svfprintf_internal_r+0xeb0>
 5083ddc:	00800044 	movi	r2,1
 5083de0:	dd401b15 	stw	r21,108(sp)
 5083de4:	b4400015 	stw	r17,0(r22)
 5083de8:	b0800115 	stw	r2,4(r22)
 5083dec:	d8c01c15 	stw	r3,112(sp)
 5083df0:	ad400208 	cmpgei	r21,r21,8
 5083df4:	a800db1e 	bne	r21,zero,5084164 <___svfprintf_internal_r+0x1610>
 5083df8:	42000084 	addi	r8,r8,2
 5083dfc:	b5800404 	addi	r22,r22,16
 5083e00:	003f2c06 	br	5083ab4 <___svfprintf_internal_r+0xf60>
 5083e04:	4002ad1e 	bne	r8,zero,50848bc <___svfprintf_internal_r+0x1d68>
 5083e08:	0011883a 	mov	r8,zero
 5083e0c:	002b883a 	mov	r21,zero
 5083e10:	dc402704 	addi	r17,sp,156
 5083e14:	003da006 	br	5083498 <___svfprintf_internal_r+0x944>
 5083e18:	02ff260e 	bge	zero,r11,5083ab4 <___svfprintf_internal_r+0xf60>
 5083e1c:	58800450 	cmplti	r2,r11,17
 5083e20:	01c14274 	movhi	r7,1289
 5083e24:	10034d1e 	bne	r2,zero,5084b5c <___svfprintf_internal_r+0x2008>
 5083e28:	39d81c04 	addi	r7,r7,24688
 5083e2c:	dc000715 	stw	r16,28(sp)
 5083e30:	05800404 	movi	r22,16
 5083e34:	5823883a 	mov	r17,r11
 5083e38:	402b883a 	mov	r21,r8
 5083e3c:	3821883a 	mov	r16,r7
 5083e40:	00000506 	br	5083e58 <___svfprintf_internal_r+0x1304>
 5083e44:	e7000204 	addi	fp,fp,8
 5083e48:	8c7ffc04 	addi	r17,r17,-16
 5083e4c:	88800448 	cmpgei	r2,r17,17
 5083e50:	1001ae26 	beq	r2,zero,508450c <___svfprintf_internal_r+0x19b8>
 5083e54:	ad400044 	addi	r21,r21,1
 5083e58:	18c00404 	addi	r3,r3,16
 5083e5c:	e4000015 	stw	r16,0(fp)
 5083e60:	e5800115 	stw	r22,4(fp)
 5083e64:	d8c01c15 	stw	r3,112(sp)
 5083e68:	dd401b15 	stw	r21,108(sp)
 5083e6c:	a8800208 	cmpgei	r2,r21,8
 5083e70:	103ff426 	beq	r2,zero,5083e44 <___svfprintf_internal_r+0x12f0>
 5083e74:	d9801a04 	addi	r6,sp,104
 5083e78:	900b883a 	mov	r5,r18
 5083e7c:	9809883a 	mov	r4,r19
 5083e80:	508c1200 	call	508c120 <__ssprint_r>
 5083e84:	103c321e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5083e88:	dd401b17 	ldw	r21,108(sp)
 5083e8c:	d8c01c17 	ldw	r3,112(sp)
 5083e90:	df002704 	addi	fp,sp,156
 5083e94:	003fec06 	br	5083e48 <___svfprintf_internal_r+0x12f4>
 5083e98:	d9801a04 	addi	r6,sp,104
 5083e9c:	900b883a 	mov	r5,r18
 5083ea0:	9809883a 	mov	r4,r19
 5083ea4:	508c1200 	call	508c120 <__ssprint_r>
 5083ea8:	103c291e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5083eac:	d8c01c17 	ldw	r3,112(sp)
 5083eb0:	dd802704 	addi	r22,sp,156
 5083eb4:	003c0806 	br	5082ed8 <___svfprintf_internal_r+0x384>
 5083eb8:	d9801a04 	addi	r6,sp,104
 5083ebc:	900b883a 	mov	r5,r18
 5083ec0:	9809883a 	mov	r4,r19
 5083ec4:	508c1200 	call	508c120 <__ssprint_r>
 5083ec8:	103c211e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5083ecc:	d8c01c17 	ldw	r3,112(sp)
 5083ed0:	dd401b17 	ldw	r21,108(sp)
 5083ed4:	df002704 	addi	fp,sp,156
 5083ed8:	003ed106 	br	5083a20 <___svfprintf_internal_r+0xecc>
 5083edc:	d9801a04 	addi	r6,sp,104
 5083ee0:	900b883a 	mov	r5,r18
 5083ee4:	9809883a 	mov	r4,r19
 5083ee8:	508c1200 	call	508c120 <__ssprint_r>
 5083eec:	103c181e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5083ef0:	d8c01c17 	ldw	r3,112(sp)
 5083ef4:	dd401b17 	ldw	r21,108(sp)
 5083ef8:	df002704 	addi	fp,sp,156
 5083efc:	003ed306 	br	5083a4c <___svfprintf_internal_r+0xef8>
 5083f00:	dc402704 	addi	r17,sp,156
 5083f04:	003d6406 	br	5083498 <___svfprintf_internal_r+0x944>
 5083f08:	25000017 	ldw	r20,0(r4)
 5083f0c:	002b883a 	mov	r21,zero
 5083f10:	d8c00615 	stw	r3,24(sp)
 5083f14:	0005883a 	mov	r2,zero
 5083f18:	003c3006 	br	5082fdc <___svfprintf_internal_r+0x488>
 5083f1c:	d9000517 	ldw	r4,20(sp)
 5083f20:	2005d7fa 	srai	r2,r4,31
 5083f24:	19000015 	stw	r4,0(r3)
 5083f28:	18800115 	stw	r2,4(r3)
 5083f2c:	003b2f06 	br	5082bec <___svfprintf_internal_r+0x98>
 5083f30:	25000017 	ldw	r20,0(r4)
 5083f34:	002b883a 	mov	r21,zero
 5083f38:	d8c00615 	stw	r3,24(sp)
 5083f3c:	00800044 	movi	r2,1
 5083f40:	003c2606 	br	5082fdc <___svfprintf_internal_r+0x488>
 5083f44:	25000017 	ldw	r20,0(r4)
 5083f48:	d8c00615 	stw	r3,24(sp)
 5083f4c:	a02bd7fa 	srai	r21,r20,31
 5083f50:	a805883a 	mov	r2,r21
 5083f54:	003cd706 	br	50832b4 <___svfprintf_internal_r+0x760>
 5083f58:	18800017 	ldw	r2,0(r3)
 5083f5c:	d8800915 	stw	r2,36(sp)
 5083f60:	18800117 	ldw	r2,4(r3)
 5083f64:	d8800a15 	stw	r2,40(sp)
 5083f68:	003c5206 	br	50830b4 <___svfprintf_internal_r+0x560>
 5083f6c:	25000017 	ldw	r20,0(r4)
 5083f70:	002b883a 	mov	r21,zero
 5083f74:	d8c00615 	stw	r3,24(sp)
 5083f78:	003d9306 	br	50835c8 <___svfprintf_internal_r+0xa74>
 5083f7c:	00800c04 	movi	r2,48
 5083f80:	d8801385 	stb	r2,78(sp)
 5083f84:	df0013c5 	stb	fp,79(sp)
 5083f88:	63000094 	ori	r12,r12,2
 5083f8c:	00800084 	movi	r2,2
 5083f90:	003c1206 	br	5082fdc <___svfprintf_internal_r+0x488>
 5083f94:	0421c83a 	sub	r16,zero,r16
 5083f98:	d8800615 	stw	r2,24(sp)
 5083f9c:	003d5d06 	br	5083514 <___svfprintf_internal_r+0x9c0>
 5083fa0:	202b883a 	mov	r21,r4
 5083fa4:	057f3816 	blt	zero,r21,5083c88 <___svfprintf_internal_r+0x1134>
 5083fa8:	003f4106 	br	5083cb0 <___svfprintf_internal_r+0x115c>
 5083fac:	d8800417 	ldw	r2,16(sp)
 5083fb0:	1080004c 	andi	r2,r2,1
 5083fb4:	103f451e 	bne	r2,zero,5083ccc <___svfprintf_internal_r+0x1178>
 5083fb8:	d9000817 	ldw	r4,32(sp)
 5083fbc:	d9400717 	ldw	r5,28(sp)
 5083fc0:	2545c83a 	sub	r2,r4,r21
 5083fc4:	2179c83a 	sub	fp,r4,r5
 5083fc8:	102b883a 	mov	r21,r2
 5083fcc:	e0bf5f0e 	bge	fp,r2,5083d4c <___svfprintf_internal_r+0x11f8>
 5083fd0:	e02b883a 	mov	r21,fp
 5083fd4:	003f5d06 	br	5083d4c <___svfprintf_internal_r+0x11f8>
 5083fd8:	bf000043 	ldbu	fp,1(r23)
 5083fdc:	63000814 	ori	r12,r12,32
 5083fe0:	bdc00044 	addi	r23,r23,1
 5083fe4:	e2c03fcc 	andi	r11,fp,255
 5083fe8:	5ac0201c 	xori	r11,r11,128
 5083fec:	5affe004 	addi	r11,r11,-128
 5083ff0:	003b1606 	br	5082c4c <___svfprintf_internal_r+0xf8>
 5083ff4:	002b883a 	mov	r21,zero
 5083ff8:	003f2e06 	br	5083cb4 <___svfprintf_internal_r+0x1160>
 5083ffc:	01401004 	movi	r5,64
 5084000:	9809883a 	mov	r4,r19
 5084004:	5089cf80 	call	5089cf8 <_malloc_r>
 5084008:	90800015 	stw	r2,0(r18)
 508400c:	90800415 	stw	r2,16(r18)
 5084010:	1002eb26 	beq	r2,zero,5084bc0 <___svfprintf_internal_r+0x206c>
 5084014:	00801004 	movi	r2,64
 5084018:	90800515 	stw	r2,20(r18)
 508401c:	003ae706 	br	5082bbc <___svfprintf_internal_r+0x68>
 5084020:	01c14274 	movhi	r7,1289
 5084024:	a9000450 	cmplti	r4,r21,17
 5084028:	d8801b17 	ldw	r2,108(sp)
 508402c:	39d81c04 	addi	r7,r7,24688
 5084030:	2001e01e 	bne	r4,zero,50847b4 <___svfprintf_internal_r+0x1c60>
 5084034:	dc000e15 	stw	r16,56(sp)
 5084038:	07000404 	movi	fp,16
 508403c:	3821883a 	mov	r16,r7
 5084040:	00000406 	br	5084054 <___svfprintf_internal_r+0x1500>
 5084044:	b5800204 	addi	r22,r22,8
 5084048:	ad7ffc04 	addi	r21,r21,-16
 508404c:	a9000448 	cmpgei	r4,r21,17
 5084050:	2001d626 	beq	r4,zero,50847ac <___svfprintf_internal_r+0x1c58>
 5084054:	10800044 	addi	r2,r2,1
 5084058:	18c00404 	addi	r3,r3,16
 508405c:	b4000015 	stw	r16,0(r22)
 5084060:	b7000115 	stw	fp,4(r22)
 5084064:	d8c01c15 	stw	r3,112(sp)
 5084068:	d8801b15 	stw	r2,108(sp)
 508406c:	11000208 	cmpgei	r4,r2,8
 5084070:	203ff426 	beq	r4,zero,5084044 <___svfprintf_internal_r+0x14f0>
 5084074:	d9801a04 	addi	r6,sp,104
 5084078:	900b883a 	mov	r5,r18
 508407c:	9809883a 	mov	r4,r19
 5084080:	508c1200 	call	508c120 <__ssprint_r>
 5084084:	103bb21e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5084088:	d8c01c17 	ldw	r3,112(sp)
 508408c:	d8801b17 	ldw	r2,108(sp)
 5084090:	dd802704 	addi	r22,sp,156
 5084094:	003fec06 	br	5084048 <___svfprintf_internal_r+0x14f4>
 5084098:	8809883a 	mov	r4,r17
 508409c:	db000415 	stw	r12,16(sp)
 50840a0:	d8c00615 	stw	r3,24(sp)
 50840a4:	5082abc0 	call	5082abc <strlen>
 50840a8:	db000417 	ldw	r12,16(sp)
 50840ac:	102b883a 	mov	r21,r2
 50840b0:	1029883a 	mov	r20,r2
 50840b4:	003b5c06 	br	5082e28 <___svfprintf_internal_r+0x2d4>
 50840b8:	dc402704 	addi	r17,sp,156
 50840bc:	a805883a 	mov	r2,r21
 50840c0:	dc000715 	stw	r16,28(sp)
 50840c4:	902b883a 	mov	r21,r18
 50840c8:	8821883a 	mov	r16,r17
 50840cc:	db000415 	stw	r12,16(sp)
 50840d0:	a023883a 	mov	r17,r20
 50840d4:	da000e15 	stw	r8,56(sp)
 50840d8:	9829883a 	mov	r20,r19
 50840dc:	1025883a 	mov	r18,r2
 50840e0:	6827883a 	mov	r19,r13
 50840e4:	8809883a 	mov	r4,r17
 50840e8:	900b883a 	mov	r5,r18
 50840ec:	01800284 	movi	r6,10
 50840f0:	000f883a 	mov	r7,zero
 50840f4:	508ffcc0 	call	508ffcc <__umoddi3>
 50840f8:	10800c04 	addi	r2,r2,48
 50840fc:	8809883a 	mov	r4,r17
 5084100:	900b883a 	mov	r5,r18
 5084104:	01800284 	movi	r6,10
 5084108:	000f883a 	mov	r7,zero
 508410c:	80bfffc5 	stb	r2,-1(r16)
 5084110:	508fa3c0 	call	508fa3c <__udivdi3>
 5084114:	900d883a 	mov	r6,r18
 5084118:	880f883a 	mov	r7,r17
 508411c:	843fffc4 	addi	r16,r16,-1
 5084120:	1023883a 	mov	r17,r2
 5084124:	1825883a 	mov	r18,r3
 5084128:	303fee1e 	bne	r6,zero,50840e4 <___svfprintf_internal_r+0x1590>
 508412c:	39c002a8 	cmpgeui	r7,r7,10
 5084130:	383fec1e 	bne	r7,zero,50840e4 <___svfprintf_internal_r+0x1590>
 5084134:	8023883a 	mov	r17,r16
 5084138:	d8802704 	addi	r2,sp,156
 508413c:	981b883a 	mov	r13,r19
 5084140:	a825883a 	mov	r18,r21
 5084144:	dc000717 	ldw	r16,28(sp)
 5084148:	da000e17 	ldw	r8,56(sp)
 508414c:	a027883a 	mov	r19,r20
 5084150:	146bc83a 	sub	r21,r2,r17
 5084154:	003cd006 	br	5083498 <___svfprintf_internal_r+0x944>
 5084158:	d8800517 	ldw	r2,20(sp)
 508415c:	18800015 	stw	r2,0(r3)
 5084160:	003aa206 	br	5082bec <___svfprintf_internal_r+0x98>
 5084164:	d9801a04 	addi	r6,sp,104
 5084168:	900b883a 	mov	r5,r18
 508416c:	9809883a 	mov	r4,r19
 5084170:	508c1200 	call	508c120 <__ssprint_r>
 5084174:	103b761e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5084178:	da001b17 	ldw	r8,108(sp)
 508417c:	d8c01c17 	ldw	r3,112(sp)
 5084180:	dd802904 	addi	r22,sp,164
 5084184:	42000044 	addi	r8,r8,1
 5084188:	df002704 	addi	fp,sp,156
 508418c:	003e4906 	br	5083ab4 <___svfprintf_internal_r+0xf60>
 5084190:	d9801a04 	addi	r6,sp,104
 5084194:	900b883a 	mov	r5,r18
 5084198:	9809883a 	mov	r4,r19
 508419c:	da001115 	stw	r8,68(sp)
 50841a0:	db400f15 	stw	r13,60(sp)
 50841a4:	db800e15 	stw	r14,56(sp)
 50841a8:	508c1200 	call	508c120 <__ssprint_r>
 50841ac:	103b681e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 50841b0:	d8c01c17 	ldw	r3,112(sp)
 50841b4:	da001117 	ldw	r8,68(sp)
 50841b8:	db400f17 	ldw	r13,60(sp)
 50841bc:	db800e17 	ldw	r14,56(sp)
 50841c0:	dd802704 	addi	r22,sp,156
 50841c4:	003b2506 	br	5082e5c <___svfprintf_internal_r+0x308>
 50841c8:	d8801b17 	ldw	r2,108(sp)
 50841cc:	01014274 	movhi	r4,1289
 50841d0:	21181b04 	addi	r4,r4,24684
 50841d4:	10800044 	addi	r2,r2,1
 50841d8:	18c00044 	addi	r3,r3,1
 50841dc:	b1000015 	stw	r4,0(r22)
 50841e0:	01000044 	movi	r4,1
 50841e4:	d8801b15 	stw	r2,108(sp)
 50841e8:	b1000115 	stw	r4,4(r22)
 50841ec:	d8c01c15 	stw	r3,112(sp)
 50841f0:	10800208 	cmpgei	r2,r2,8
 50841f4:	1001861e 	bne	r2,zero,5084810 <___svfprintf_internal_r+0x1cbc>
 50841f8:	b5800204 	addi	r22,r22,8
 50841fc:	2800971e 	bne	r5,zero,508445c <___svfprintf_internal_r+0x1908>
 5084200:	d8800417 	ldw	r2,16(sp)
 5084204:	d9000817 	ldw	r4,32(sp)
 5084208:	1080004c 	andi	r2,r2,1
 508420c:	1104b03a 	or	r2,r2,r4
 5084210:	103b3e26 	beq	r2,zero,5082f0c <___svfprintf_internal_r+0x3b8>
 5084214:	d8800d17 	ldw	r2,52(sp)
 5084218:	d9000c17 	ldw	r4,48(sp)
 508421c:	b0800015 	stw	r2,0(r22)
 5084220:	d8801b17 	ldw	r2,108(sp)
 5084224:	20c7883a 	add	r3,r4,r3
 5084228:	b1000115 	stw	r4,4(r22)
 508422c:	10800044 	addi	r2,r2,1
 5084230:	d8c01c15 	stw	r3,112(sp)
 5084234:	d8801b15 	stw	r2,108(sp)
 5084238:	11000208 	cmpgei	r4,r2,8
 508423c:	20018c1e 	bne	r4,zero,5084870 <___svfprintf_internal_r+0x1d1c>
 5084240:	b5800204 	addi	r22,r22,8
 5084244:	d9000817 	ldw	r4,32(sp)
 5084248:	10800044 	addi	r2,r2,1
 508424c:	d8801b15 	stw	r2,108(sp)
 5084250:	20c7883a 	add	r3,r4,r3
 5084254:	b4400015 	stw	r17,0(r22)
 5084258:	b1000115 	stw	r4,4(r22)
 508425c:	d8c01c15 	stw	r3,112(sp)
 5084260:	10800208 	cmpgei	r2,r2,8
 5084264:	103b2826 	beq	r2,zero,5082f08 <___svfprintf_internal_r+0x3b4>
 5084268:	003e1b06 	br	5083ad8 <___svfprintf_internal_r+0xf84>
 508426c:	8825883a 	mov	r18,r17
 5084270:	003b3706 	br	5082f50 <___svfprintf_internal_r+0x3fc>
 5084274:	d9000917 	ldw	r4,36(sp)
 5084278:	d9400a17 	ldw	r5,40(sp)
 508427c:	da000615 	stw	r8,24(sp)
 5084280:	200d883a 	mov	r6,r4
 5084284:	280f883a 	mov	r7,r5
 5084288:	db000415 	stw	r12,16(sp)
 508428c:	50927c40 	call	50927c4 <__unorddf2>
 5084290:	db000417 	ldw	r12,16(sp)
 5084294:	da000617 	ldw	r8,24(sp)
 5084298:	10021e1e 	bne	r2,zero,5084b14 <___svfprintf_internal_r+0x1fc0>
 508429c:	057ff7c4 	movi	r21,-33
 50842a0:	40bfffe0 	cmpeqi	r2,r8,-1
 50842a4:	e56a703a 	and	r21,fp,r21
 50842a8:	1001c01e 	bne	r2,zero,50849ac <___svfprintf_internal_r+0x1e58>
 50842ac:	a88011d8 	cmpnei	r2,r21,71
 50842b0:	10004026 	beq	r2,zero,50843b4 <___svfprintf_internal_r+0x1860>
 50842b4:	60804014 	ori	r2,r12,256
 50842b8:	d8800415 	stw	r2,16(sp)
 50842bc:	d8800a17 	ldw	r2,40(sp)
 50842c0:	10015c16 	blt	r2,zero,5084834 <___svfprintf_internal_r+0x1ce0>
 50842c4:	dd000a17 	ldw	r20,40(sp)
 50842c8:	d8000605 	stb	zero,24(sp)
 50842cc:	e08019a0 	cmpeqi	r2,fp,102
 50842d0:	d8800f15 	stw	r2,60(sp)
 50842d4:	1000a01e 	bne	r2,zero,5084558 <___svfprintf_internal_r+0x1a04>
 50842d8:	e08011a0 	cmpeqi	r2,fp,70
 50842dc:	10009e1e 	bne	r2,zero,5084558 <___svfprintf_internal_r+0x1a04>
 50842e0:	a8801158 	cmpnei	r2,r21,69
 50842e4:	10017c26 	beq	r2,zero,50848d8 <___svfprintf_internal_r+0x1d84>
 50842e8:	d8801804 	addi	r2,sp,96
 50842ec:	d8800315 	stw	r2,12(sp)
 50842f0:	d9400917 	ldw	r5,36(sp)
 50842f4:	d8801504 	addi	r2,sp,84
 50842f8:	d8800215 	stw	r2,8(sp)
 50842fc:	d8801404 	addi	r2,sp,80
 5084300:	da000015 	stw	r8,0(sp)
 5084304:	9809883a 	mov	r4,r19
 5084308:	d8800115 	stw	r2,4(sp)
 508430c:	01c00084 	movi	r7,2
 5084310:	a00d883a 	mov	r6,r20
 5084314:	db000815 	stw	r12,32(sp)
 5084318:	da000715 	stw	r8,28(sp)
 508431c:	50872900 	call	5087290 <_dtoa_r>
 5084320:	da000717 	ldw	r8,28(sp)
 5084324:	e10019d8 	cmpnei	r4,fp,103
 5084328:	db000817 	ldw	r12,32(sp)
 508432c:	1023883a 	mov	r17,r2
 5084330:	4007883a 	mov	r3,r8
 5084334:	20017c1e 	bne	r4,zero,5084928 <___svfprintf_internal_r+0x1dd4>
 5084338:	6080004c 	andi	r2,r12,1
 508433c:	10017c1e 	bne	r2,zero,5084930 <___svfprintf_internal_r+0x1ddc>
 5084340:	d8801417 	ldw	r2,80(sp)
 5084344:	ad4011e0 	cmpeqi	r21,r21,71
 5084348:	d8800715 	stw	r2,28(sp)
 508434c:	d8801817 	ldw	r2,96(sp)
 5084350:	1445c83a 	sub	r2,r2,r17
 5084354:	d8800815 	stw	r2,32(sp)
 5084358:	a800d226 	beq	r21,zero,50846a4 <___svfprintf_internal_r+0x1b50>
 508435c:	d8c00717 	ldw	r3,28(sp)
 5084360:	18bfff50 	cmplti	r2,r3,-3
 5084364:	1000ce1e 	bne	r2,zero,50846a0 <___svfprintf_internal_r+0x1b4c>
 5084368:	40c0cd16 	blt	r8,r3,50846a0 <___svfprintf_internal_r+0x1b4c>
 508436c:	d8800717 	ldw	r2,28(sp)
 5084370:	d8c00817 	ldw	r3,32(sp)
 5084374:	10c19316 	blt	r2,r3,50849c4 <___svfprintf_internal_r+0x1e70>
 5084378:	6300004c 	andi	r12,r12,1
 508437c:	6001d41e 	bne	r12,zero,5084ad0 <___svfprintf_internal_r+0x1f7c>
 5084380:	1029883a 	mov	r20,r2
 5084384:	1000010e 	bge	r2,zero,508438c <___svfprintf_internal_r+0x1838>
 5084388:	0029883a 	mov	r20,zero
 508438c:	dd400717 	ldw	r21,28(sp)
 5084390:	070019c4 	movi	fp,103
 5084394:	d8800607 	ldb	r2,24(sp)
 5084398:	10016b26 	beq	r2,zero,5084948 <___svfprintf_internal_r+0x1df4>
 508439c:	00800b44 	movi	r2,45
 50843a0:	d8801345 	stb	r2,77(sp)
 50843a4:	d8800e17 	ldw	r2,56(sp)
 50843a8:	0011883a 	mov	r8,zero
 50843ac:	d8800615 	stw	r2,24(sp)
 50843b0:	003c4106 	br	50834b8 <___svfprintf_internal_r+0x964>
 50843b4:	403fbf1e 	bne	r8,zero,50842b4 <___svfprintf_internal_r+0x1760>
 50843b8:	02000044 	movi	r8,1
 50843bc:	003fbd06 	br	50842b4 <___svfprintf_internal_r+0x1760>
 50843c0:	880f883a 	mov	r7,r17
 50843c4:	10800044 	addi	r2,r2,1
 50843c8:	1d47883a 	add	r3,r3,r21
 50843cc:	b1c00015 	stw	r7,0(r22)
 50843d0:	003ac806 	br	5082ef4 <___svfprintf_internal_r+0x3a0>
 50843d4:	d9801a04 	addi	r6,sp,104
 50843d8:	900b883a 	mov	r5,r18
 50843dc:	9809883a 	mov	r4,r19
 50843e0:	508c1200 	call	508c120 <__ssprint_r>
 50843e4:	103ada1e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 50843e8:	d8c01c17 	ldw	r3,112(sp)
 50843ec:	dd802704 	addi	r22,sp,156
 50843f0:	003cc406 	br	5083704 <___svfprintf_internal_r+0xbb0>
 50843f4:	d9801a04 	addi	r6,sp,104
 50843f8:	900b883a 	mov	r5,r18
 50843fc:	9809883a 	mov	r4,r19
 5084400:	da000e15 	stw	r8,56(sp)
 5084404:	508c1200 	call	508c120 <__ssprint_r>
 5084408:	103ad11e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 508440c:	d8c01c17 	ldw	r3,112(sp)
 5084410:	da000e17 	ldw	r8,56(sp)
 5084414:	dd802704 	addi	r22,sp,156
 5084418:	003aad06 	br	5082ed0 <___svfprintf_internal_r+0x37c>
 508441c:	d9801a04 	addi	r6,sp,104
 5084420:	900b883a 	mov	r5,r18
 5084424:	9809883a 	mov	r4,r19
 5084428:	508c1200 	call	508c120 <__ssprint_r>
 508442c:	103ac81e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5084430:	d8c01c17 	ldw	r3,112(sp)
 5084434:	dd802704 	addi	r22,sp,156
 5084438:	003cc406 	br	508374c <___svfprintf_internal_r+0xbf8>
 508443c:	408001f0 	cmpltui	r2,r8,7
 5084440:	402b883a 	mov	r21,r8
 5084444:	10010126 	beq	r2,zero,508484c <___svfprintf_internal_r+0x1cf8>
 5084448:	04414274 	movhi	r17,1289
 508444c:	a829883a 	mov	r20,r21
 5084450:	d8c00615 	stw	r3,24(sp)
 5084454:	8c581904 	addi	r17,r17,24676
 5084458:	003a7306 	br	5082e28 <___svfprintf_internal_r+0x2d4>
 508445c:	d8800d17 	ldw	r2,52(sp)
 5084460:	d9000c17 	ldw	r4,48(sp)
 5084464:	b0800015 	stw	r2,0(r22)
 5084468:	d8801b17 	ldw	r2,108(sp)
 508446c:	20c7883a 	add	r3,r4,r3
 5084470:	b1000115 	stw	r4,4(r22)
 5084474:	10800044 	addi	r2,r2,1
 5084478:	d8c01c15 	stw	r3,112(sp)
 508447c:	d8801b15 	stw	r2,108(sp)
 5084480:	11000208 	cmpgei	r4,r2,8
 5084484:	2000fa1e 	bne	r4,zero,5084870 <___svfprintf_internal_r+0x1d1c>
 5084488:	b5800204 	addi	r22,r22,8
 508448c:	283f6d0e 	bge	r5,zero,5084244 <___svfprintf_internal_r+0x16f0>
 5084490:	01c14274 	movhi	r7,1289
 5084494:	293ffc08 	cmpgei	r4,r5,-16
 5084498:	39d81c04 	addi	r7,r7,24688
 508449c:	0179c83a 	sub	fp,zero,r5
 50844a0:	2001631e 	bne	r4,zero,5084a30 <___svfprintf_internal_r+0x1edc>
 50844a4:	dc000715 	stw	r16,28(sp)
 50844a8:	05400404 	movi	r21,16
 50844ac:	9021883a 	mov	r16,r18
 50844b0:	3825883a 	mov	r18,r7
 50844b4:	00000406 	br	50844c8 <___svfprintf_internal_r+0x1974>
 50844b8:	b5800204 	addi	r22,r22,8
 50844bc:	e73ffc04 	addi	fp,fp,-16
 50844c0:	e1800448 	cmpgei	r6,fp,17
 50844c4:	30015726 	beq	r6,zero,5084a24 <___svfprintf_internal_r+0x1ed0>
 50844c8:	10800044 	addi	r2,r2,1
 50844cc:	18c00404 	addi	r3,r3,16
 50844d0:	b4800015 	stw	r18,0(r22)
 50844d4:	b5400115 	stw	r21,4(r22)
 50844d8:	d8c01c15 	stw	r3,112(sp)
 50844dc:	d8801b15 	stw	r2,108(sp)
 50844e0:	11800208 	cmpgei	r6,r2,8
 50844e4:	303ff426 	beq	r6,zero,50844b8 <___svfprintf_internal_r+0x1964>
 50844e8:	d9801a04 	addi	r6,sp,104
 50844ec:	800b883a 	mov	r5,r16
 50844f0:	9809883a 	mov	r4,r19
 50844f4:	508c1200 	call	508c120 <__ssprint_r>
 50844f8:	1001961e 	bne	r2,zero,5084b54 <___svfprintf_internal_r+0x2000>
 50844fc:	d8c01c17 	ldw	r3,112(sp)
 5084500:	d8801b17 	ldw	r2,108(sp)
 5084504:	dd802704 	addi	r22,sp,156
 5084508:	003fec06 	br	50844bc <___svfprintf_internal_r+0x1968>
 508450c:	800f883a 	mov	r7,r16
 5084510:	dc000717 	ldw	r16,28(sp)
 5084514:	8817883a 	mov	r11,r17
 5084518:	aa000044 	addi	r8,r21,1
 508451c:	e0800204 	addi	r2,fp,8
 5084520:	1ac7883a 	add	r3,r3,r11
 5084524:	e1c00015 	stw	r7,0(fp)
 5084528:	e2c00115 	stw	r11,4(fp)
 508452c:	d8c01c15 	stw	r3,112(sp)
 5084530:	da001b15 	stw	r8,108(sp)
 5084534:	41000208 	cmpgei	r4,r8,8
 5084538:	203f0a1e 	bne	r4,zero,5084164 <___svfprintf_internal_r+0x1610>
 508453c:	42000044 	addi	r8,r8,1
 5084540:	15800204 	addi	r22,r2,8
 5084544:	1039883a 	mov	fp,r2
 5084548:	003d5a06 	br	5083ab4 <___svfprintf_internal_r+0xf60>
 508454c:	04414274 	movhi	r17,1289
 5084550:	8c580b04 	addi	r17,r17,24620
 5084554:	003afc06 	br	5083148 <___svfprintf_internal_r+0x5f4>
 5084558:	d8801804 	addi	r2,sp,96
 508455c:	d8800315 	stw	r2,12(sp)
 5084560:	d9400917 	ldw	r5,36(sp)
 5084564:	d8801504 	addi	r2,sp,84
 5084568:	d8800215 	stw	r2,8(sp)
 508456c:	d8801404 	addi	r2,sp,80
 5084570:	da000015 	stw	r8,0(sp)
 5084574:	d8800115 	stw	r2,4(sp)
 5084578:	01c000c4 	movi	r7,3
 508457c:	a00d883a 	mov	r6,r20
 5084580:	9809883a 	mov	r4,r19
 5084584:	db000815 	stw	r12,32(sp)
 5084588:	da000715 	stw	r8,28(sp)
 508458c:	50872900 	call	5087290 <_dtoa_r>
 5084590:	da000717 	ldw	r8,28(sp)
 5084594:	1023883a 	mov	r17,r2
 5084598:	db000817 	ldw	r12,32(sp)
 508459c:	1207883a 	add	r3,r2,r8
 50845a0:	88800007 	ldb	r2,0(r17)
 50845a4:	10800c20 	cmpeqi	r2,r2,48
 50845a8:	1001321e 	bne	r2,zero,5084a74 <___svfprintf_internal_r+0x1f20>
 50845ac:	d8801417 	ldw	r2,80(sp)
 50845b0:	1893883a 	add	r9,r3,r2
 50845b4:	d9000917 	ldw	r4,36(sp)
 50845b8:	000d883a 	mov	r6,zero
 50845bc:	000f883a 	mov	r7,zero
 50845c0:	a00b883a 	mov	r5,r20
 50845c4:	da401115 	stw	r9,68(sp)
 50845c8:	da000815 	stw	r8,32(sp)
 50845cc:	db000715 	stw	r12,28(sp)
 50845d0:	509164c0 	call	509164c <__eqdf2>
 50845d4:	db000717 	ldw	r12,28(sp)
 50845d8:	da000817 	ldw	r8,32(sp)
 50845dc:	da401117 	ldw	r9,68(sp)
 50845e0:	10009826 	beq	r2,zero,5084844 <___svfprintf_internal_r+0x1cf0>
 50845e4:	d8801817 	ldw	r2,96(sp)
 50845e8:	1240062e 	bgeu	r2,r9,5084604 <___svfprintf_internal_r+0x1ab0>
 50845ec:	01000c04 	movi	r4,48
 50845f0:	10c00044 	addi	r3,r2,1
 50845f4:	d8c01815 	stw	r3,96(sp)
 50845f8:	11000005 	stb	r4,0(r2)
 50845fc:	d8801817 	ldw	r2,96(sp)
 5084600:	127ffb36 	bltu	r2,r9,50845f0 <___svfprintf_internal_r+0x1a9c>
 5084604:	d8c01417 	ldw	r3,80(sp)
 5084608:	1445c83a 	sub	r2,r2,r17
 508460c:	ad4011d8 	cmpnei	r21,r21,71
 5084610:	d8c00715 	stw	r3,28(sp)
 5084614:	d8800815 	stw	r2,32(sp)
 5084618:	a83f5026 	beq	r21,zero,508435c <___svfprintf_internal_r+0x1808>
 508461c:	d8800f17 	ldw	r2,60(sp)
 5084620:	10002026 	beq	r2,zero,50846a4 <___svfprintf_internal_r+0x1b50>
 5084624:	d8c00717 	ldw	r3,28(sp)
 5084628:	6080004c 	andi	r2,r12,1
 508462c:	1204b03a 	or	r2,r2,r8
 5084630:	00c0c10e 	bge	zero,r3,5084938 <___svfprintf_internal_r+0x1de4>
 5084634:	10013f1e 	bne	r2,zero,5084b34 <___svfprintf_internal_r+0x1fe0>
 5084638:	dd400717 	ldw	r21,28(sp)
 508463c:	a829883a 	mov	r20,r21
 5084640:	003f5406 	br	5084394 <___svfprintf_internal_r+0x1840>
 5084644:	d8800617 	ldw	r2,24(sp)
 5084648:	002b883a 	mov	r21,zero
 508464c:	d8c00615 	stw	r3,24(sp)
 5084650:	15000017 	ldw	r20,0(r2)
 5084654:	00800044 	movi	r2,1
 5084658:	003a6006 	br	5082fdc <___svfprintf_internal_r+0x488>
 508465c:	d8800617 	ldw	r2,24(sp)
 5084660:	002b883a 	mov	r21,zero
 5084664:	d8c00615 	stw	r3,24(sp)
 5084668:	15000017 	ldw	r20,0(r2)
 508466c:	003bd606 	br	50835c8 <___svfprintf_internal_r+0xa74>
 5084670:	d8800617 	ldw	r2,24(sp)
 5084674:	002b883a 	mov	r21,zero
 5084678:	d8c00615 	stw	r3,24(sp)
 508467c:	15000017 	ldw	r20,0(r2)
 5084680:	0005883a 	mov	r2,zero
 5084684:	003a5506 	br	5082fdc <___svfprintf_internal_r+0x488>
 5084688:	d8800617 	ldw	r2,24(sp)
 508468c:	d8c00615 	stw	r3,24(sp)
 5084690:	15000017 	ldw	r20,0(r2)
 5084694:	a02bd7fa 	srai	r21,r20,31
 5084698:	a805883a 	mov	r2,r21
 508469c:	003b0506 	br	50832b4 <___svfprintf_internal_r+0x760>
 50846a0:	e73fff84 	addi	fp,fp,-2
 50846a4:	d8800717 	ldw	r2,28(sp)
 50846a8:	df001645 	stb	fp,89(sp)
 50846ac:	157fffc4 	addi	r21,r2,-1
 50846b0:	dd401415 	stw	r21,80(sp)
 50846b4:	a8008316 	blt	r21,zero,50848c4 <___svfprintf_internal_r+0x1d70>
 50846b8:	00800ac4 	movi	r2,43
 50846bc:	d8801685 	stb	r2,90(sp)
 50846c0:	a8800290 	cmplti	r2,r21,10
 50846c4:	1000fb1e 	bne	r2,zero,5084ab4 <___svfprintf_internal_r+0x1f60>
 50846c8:	d98019c4 	addi	r6,sp,103
 50846cc:	9029883a 	mov	r20,r18
 50846d0:	dc400715 	stw	r17,28(sp)
 50846d4:	8025883a 	mov	r18,r16
 50846d8:	db000f15 	stw	r12,60(sp)
 50846dc:	3021883a 	mov	r16,r6
 50846e0:	a809883a 	mov	r4,r21
 50846e4:	01400284 	movi	r5,10
 50846e8:	508278c0 	call	508278c <__modsi3>
 50846ec:	10800c04 	addi	r2,r2,48
 50846f0:	a809883a 	mov	r4,r21
 50846f4:	80bfffc5 	stb	r2,-1(r16)
 50846f8:	01400284 	movi	r5,10
 50846fc:	508270c0 	call	508270c <__divsi3>
 5084700:	a9001908 	cmpgei	r4,r21,100
 5084704:	8023883a 	mov	r17,r16
 5084708:	102b883a 	mov	r21,r2
 508470c:	843fffc4 	addi	r16,r16,-1
 5084710:	203ff31e 	bne	r4,zero,50846e0 <___svfprintf_internal_r+0x1b8c>
 5084714:	800d883a 	mov	r6,r16
 5084718:	11000c04 	addi	r4,r2,48
 508471c:	9021883a 	mov	r16,r18
 5084720:	a025883a 	mov	r18,r20
 5084724:	8829883a 	mov	r20,r17
 5084728:	a0bfff84 	addi	r2,r20,-2
 508472c:	313fffc5 	stb	r4,-1(r6)
 5084730:	d8c019c4 	addi	r3,sp,103
 5084734:	db000f17 	ldw	r12,60(sp)
 5084738:	dc400717 	ldw	r17,28(sp)
 508473c:	10c11d2e 	bgeu	r2,r3,5084bb4 <___svfprintf_internal_r+0x2060>
 5084740:	d8c016c4 	addi	r3,sp,91
 5084744:	00000106 	br	508474c <___svfprintf_internal_r+0x1bf8>
 5084748:	11000003 	ldbu	r4,0(r2)
 508474c:	19000005 	stb	r4,0(r3)
 5084750:	10800044 	addi	r2,r2,1
 5084754:	d90019c4 	addi	r4,sp,103
 5084758:	18c00044 	addi	r3,r3,1
 508475c:	113ffa1e 	bne	r2,r4,5084748 <___svfprintf_internal_r+0x1bf4>
 5084760:	d8801a44 	addi	r2,sp,105
 5084764:	d8c016c4 	addi	r3,sp,91
 5084768:	1505c83a 	sub	r2,r2,r20
 508476c:	1885883a 	add	r2,r3,r2
 5084770:	d8c01644 	addi	r3,sp,89
 5084774:	10c5c83a 	sub	r2,r2,r3
 5084778:	d8801015 	stw	r2,64(sp)
 508477c:	d8c00817 	ldw	r3,32(sp)
 5084780:	d9001017 	ldw	r4,64(sp)
 5084784:	18800088 	cmpgei	r2,r3,2
 5084788:	192b883a 	add	r21,r3,r4
 508478c:	1000da26 	beq	r2,zero,5084af8 <___svfprintf_internal_r+0x1fa4>
 5084790:	d8800c17 	ldw	r2,48(sp)
 5084794:	a8ab883a 	add	r21,r21,r2
 5084798:	a829883a 	mov	r20,r21
 508479c:	a800010e 	bge	r21,zero,50847a4 <___svfprintf_internal_r+0x1c50>
 50847a0:	0029883a 	mov	r20,zero
 50847a4:	d8000715 	stw	zero,28(sp)
 50847a8:	003efa06 	br	5084394 <___svfprintf_internal_r+0x1840>
 50847ac:	800f883a 	mov	r7,r16
 50847b0:	dc000e17 	ldw	r16,56(sp)
 50847b4:	10800044 	addi	r2,r2,1
 50847b8:	1d47883a 	add	r3,r3,r21
 50847bc:	d8801b15 	stw	r2,108(sp)
 50847c0:	b1c00015 	stw	r7,0(r22)
 50847c4:	b5400115 	stw	r21,4(r22)
 50847c8:	d8c01c15 	stw	r3,112(sp)
 50847cc:	10800208 	cmpgei	r2,r2,8
 50847d0:	1000321e 	bne	r2,zero,508489c <___svfprintf_internal_r+0x1d48>
 50847d4:	b5800204 	addi	r22,r22,8
 50847d8:	003d3906 	br	5083cc0 <___svfprintf_internal_r+0x116c>
 50847dc:	00800b44 	movi	r2,45
 50847e0:	d8801345 	stb	r2,77(sp)
 50847e4:	03400b44 	movi	r13,45
 50847e8:	003a5306 	br	5083138 <___svfprintf_internal_r+0x5e4>
 50847ec:	d9801a04 	addi	r6,sp,104
 50847f0:	900b883a 	mov	r5,r18
 50847f4:	9809883a 	mov	r4,r19
 50847f8:	508c1200 	call	508c120 <__ssprint_r>
 50847fc:	1039d41e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5084800:	dd401417 	ldw	r21,80(sp)
 5084804:	d8c01c17 	ldw	r3,112(sp)
 5084808:	dd802704 	addi	r22,sp,156
 508480c:	003d3b06 	br	5083cfc <___svfprintf_internal_r+0x11a8>
 5084810:	d9801a04 	addi	r6,sp,104
 5084814:	900b883a 	mov	r5,r18
 5084818:	9809883a 	mov	r4,r19
 508481c:	508c1200 	call	508c120 <__ssprint_r>
 5084820:	1039cb1e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5084824:	d9401417 	ldw	r5,80(sp)
 5084828:	d8c01c17 	ldw	r3,112(sp)
 508482c:	dd802704 	addi	r22,sp,156
 5084830:	003e7206 	br	50841fc <___svfprintf_internal_r+0x16a8>
 5084834:	1520003c 	xorhi	r20,r2,32768
 5084838:	00800b44 	movi	r2,45
 508483c:	d8800605 	stb	r2,24(sp)
 5084840:	003ea206 	br	50842cc <___svfprintf_internal_r+0x1778>
 5084844:	4805883a 	mov	r2,r9
 5084848:	003f6e06 	br	5084604 <___svfprintf_internal_r+0x1ab0>
 508484c:	05400184 	movi	r21,6
 5084850:	003efd06 	br	5084448 <___svfprintf_internal_r+0x18f4>
 5084854:	d9401345 	stb	r5,77(sp)
 5084858:	00396d06 	br	5082e10 <___svfprintf_internal_r+0x2bc>
 508485c:	d9801a04 	addi	r6,sp,104
 5084860:	900b883a 	mov	r5,r18
 5084864:	9809883a 	mov	r4,r19
 5084868:	508c1200 	call	508c120 <__ssprint_r>
 508486c:	0039b806 	br	5082f50 <___svfprintf_internal_r+0x3fc>
 5084870:	d9801a04 	addi	r6,sp,104
 5084874:	900b883a 	mov	r5,r18
 5084878:	9809883a 	mov	r4,r19
 508487c:	508c1200 	call	508c120 <__ssprint_r>
 5084880:	1039b31e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5084884:	d9401417 	ldw	r5,80(sp)
 5084888:	d8c01c17 	ldw	r3,112(sp)
 508488c:	d8801b17 	ldw	r2,108(sp)
 5084890:	dd802704 	addi	r22,sp,156
 5084894:	283e6b0e 	bge	r5,zero,5084244 <___svfprintf_internal_r+0x16f0>
 5084898:	003efd06 	br	5084490 <___svfprintf_internal_r+0x193c>
 508489c:	d9801a04 	addi	r6,sp,104
 50848a0:	900b883a 	mov	r5,r18
 50848a4:	9809883a 	mov	r4,r19
 50848a8:	508c1200 	call	508c120 <__ssprint_r>
 50848ac:	1039a81e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 50848b0:	d8c01c17 	ldw	r3,112(sp)
 50848b4:	dd802704 	addi	r22,sp,156
 50848b8:	003d0106 	br	5083cc0 <___svfprintf_internal_r+0x116c>
 50848bc:	db000417 	ldw	r12,16(sp)
 50848c0:	003a8906 	br	50832e8 <___svfprintf_internal_r+0x794>
 50848c4:	05400044 	movi	r21,1
 50848c8:	a8abc83a 	sub	r21,r21,r2
 50848cc:	00800b44 	movi	r2,45
 50848d0:	d8801685 	stb	r2,90(sp)
 50848d4:	003f7a06 	br	50846c0 <___svfprintf_internal_r+0x1b6c>
 50848d8:	d8801804 	addi	r2,sp,96
 50848dc:	d8800315 	stw	r2,12(sp)
 50848e0:	d9400917 	ldw	r5,36(sp)
 50848e4:	d8801504 	addi	r2,sp,84
 50848e8:	40c00044 	addi	r3,r8,1
 50848ec:	d8800215 	stw	r2,8(sp)
 50848f0:	d8801404 	addi	r2,sp,80
 50848f4:	d8c00015 	stw	r3,0(sp)
 50848f8:	d8800115 	stw	r2,4(sp)
 50848fc:	01c00084 	movi	r7,2
 5084900:	a00d883a 	mov	r6,r20
 5084904:	9809883a 	mov	r4,r19
 5084908:	db001115 	stw	r12,68(sp)
 508490c:	da000815 	stw	r8,32(sp)
 5084910:	d8c00715 	stw	r3,28(sp)
 5084914:	50872900 	call	5087290 <_dtoa_r>
 5084918:	d8c00717 	ldw	r3,28(sp)
 508491c:	da000817 	ldw	r8,32(sp)
 5084920:	db001117 	ldw	r12,68(sp)
 5084924:	1023883a 	mov	r17,r2
 5084928:	e08011d8 	cmpnei	r2,fp,71
 508492c:	103e8226 	beq	r2,zero,5084338 <___svfprintf_internal_r+0x17e4>
 5084930:	88d3883a 	add	r9,r17,r3
 5084934:	003f1f06 	br	50845b4 <___svfprintf_internal_r+0x1a60>
 5084938:	1000821e 	bne	r2,zero,5084b44 <___svfprintf_internal_r+0x1ff0>
 508493c:	05000044 	movi	r20,1
 5084940:	05400044 	movi	r21,1
 5084944:	003e9306 	br	5084394 <___svfprintf_internal_r+0x1840>
 5084948:	d8800e17 	ldw	r2,56(sp)
 508494c:	db401343 	ldbu	r13,77(sp)
 5084950:	0011883a 	mov	r8,zero
 5084954:	d8800615 	stw	r2,24(sp)
 5084958:	003ad306 	br	50834a8 <___svfprintf_internal_r+0x954>
 508495c:	d9801a04 	addi	r6,sp,104
 5084960:	900b883a 	mov	r5,r18
 5084964:	9809883a 	mov	r4,r19
 5084968:	508c1200 	call	508c120 <__ssprint_r>
 508496c:	1039781e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5084970:	d8c01c17 	ldw	r3,112(sp)
 5084974:	dd802704 	addi	r22,sp,156
 5084978:	a83cce0e 	bge	r21,zero,5083cb4 <___svfprintf_internal_r+0x1160>
 508497c:	003d9d06 	br	5083ff4 <___svfprintf_internal_r+0x14a0>
 5084980:	d9801a04 	addi	r6,sp,104
 5084984:	900b883a 	mov	r5,r18
 5084988:	9809883a 	mov	r4,r19
 508498c:	508c1200 	call	508c120 <__ssprint_r>
 5084990:	10396f1e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5084994:	d8801417 	ldw	r2,80(sp)
 5084998:	d9000817 	ldw	r4,32(sp)
 508499c:	d8c01c17 	ldw	r3,112(sp)
 50849a0:	dd802704 	addi	r22,sp,156
 50849a4:	2085c83a 	sub	r2,r4,r2
 50849a8:	003ce806 	br	5083d4c <___svfprintf_internal_r+0x11f8>
 50849ac:	02000184 	movi	r8,6
 50849b0:	003e4006 	br	50842b4 <___svfprintf_internal_r+0x1760>
 50849b4:	4029883a 	mov	r20,r8
 50849b8:	d8c00615 	stw	r3,24(sp)
 50849bc:	402b883a 	mov	r21,r8
 50849c0:	00391906 	br	5082e28 <___svfprintf_internal_r+0x2d4>
 50849c4:	d8800817 	ldw	r2,32(sp)
 50849c8:	d8c00c17 	ldw	r3,48(sp)
 50849cc:	10eb883a 	add	r21,r2,r3
 50849d0:	d8800717 	ldw	r2,28(sp)
 50849d4:	00800316 	blt	zero,r2,50849e4 <___svfprintf_internal_r+0x1e90>
 50849d8:	d8800717 	ldw	r2,28(sp)
 50849dc:	a8abc83a 	sub	r21,r21,r2
 50849e0:	ad400044 	addi	r21,r21,1
 50849e4:	a829883a 	mov	r20,r21
 50849e8:	a8003e16 	blt	r21,zero,5084ae4 <___svfprintf_internal_r+0x1f90>
 50849ec:	070019c4 	movi	fp,103
 50849f0:	003e6806 	br	5084394 <___svfprintf_internal_r+0x1840>
 50849f4:	d9401345 	stb	r5,77(sp)
 50849f8:	003b1b06 	br	5083668 <___svfprintf_internal_r+0xb14>
 50849fc:	d9401345 	stb	r5,77(sp)
 5084a00:	003a6e06 	br	50833bc <___svfprintf_internal_r+0x868>
 5084a04:	d9401345 	stb	r5,77(sp)
 5084a08:	003a5506 	br	5083360 <___svfprintf_internal_r+0x80c>
 5084a0c:	d9401345 	stb	r5,77(sp)
 5084a10:	003ae306 	br	50835a0 <___svfprintf_internal_r+0xa4c>
 5084a14:	d9401345 	stb	r5,77(sp)
 5084a18:	00399c06 	br	508308c <___svfprintf_internal_r+0x538>
 5084a1c:	d9401345 	stb	r5,77(sp)
 5084a20:	003a1c06 	br	5083294 <___svfprintf_internal_r+0x740>
 5084a24:	900f883a 	mov	r7,r18
 5084a28:	8025883a 	mov	r18,r16
 5084a2c:	dc000717 	ldw	r16,28(sp)
 5084a30:	10800044 	addi	r2,r2,1
 5084a34:	1f07883a 	add	r3,r3,fp
 5084a38:	b1c00015 	stw	r7,0(r22)
 5084a3c:	b7000115 	stw	fp,4(r22)
 5084a40:	d8c01c15 	stw	r3,112(sp)
 5084a44:	d8801b15 	stw	r2,108(sp)
 5084a48:	11000208 	cmpgei	r4,r2,8
 5084a4c:	203dfc26 	beq	r4,zero,5084240 <___svfprintf_internal_r+0x16ec>
 5084a50:	d9801a04 	addi	r6,sp,104
 5084a54:	900b883a 	mov	r5,r18
 5084a58:	9809883a 	mov	r4,r19
 5084a5c:	508c1200 	call	508c120 <__ssprint_r>
 5084a60:	10393b1e 	bne	r2,zero,5082f50 <___svfprintf_internal_r+0x3fc>
 5084a64:	d8c01c17 	ldw	r3,112(sp)
 5084a68:	d8801b17 	ldw	r2,108(sp)
 5084a6c:	dd802704 	addi	r22,sp,156
 5084a70:	003df406 	br	5084244 <___svfprintf_internal_r+0x16f0>
 5084a74:	d9000917 	ldw	r4,36(sp)
 5084a78:	000d883a 	mov	r6,zero
 5084a7c:	000f883a 	mov	r7,zero
 5084a80:	a00b883a 	mov	r5,r20
 5084a84:	d8c01115 	stw	r3,68(sp)
 5084a88:	da000815 	stw	r8,32(sp)
 5084a8c:	db000715 	stw	r12,28(sp)
 5084a90:	509164c0 	call	509164c <__eqdf2>
 5084a94:	db000717 	ldw	r12,28(sp)
 5084a98:	da000817 	ldw	r8,32(sp)
 5084a9c:	d8c01117 	ldw	r3,68(sp)
 5084aa0:	103ec226 	beq	r2,zero,50845ac <___svfprintf_internal_r+0x1a58>
 5084aa4:	00800044 	movi	r2,1
 5084aa8:	1205c83a 	sub	r2,r2,r8
 5084aac:	d8801415 	stw	r2,80(sp)
 5084ab0:	003ebf06 	br	50845b0 <___svfprintf_internal_r+0x1a5c>
 5084ab4:	00800c04 	movi	r2,48
 5084ab8:	ad400c04 	addi	r21,r21,48
 5084abc:	d88016c5 	stb	r2,91(sp)
 5084ac0:	00800104 	movi	r2,4
 5084ac4:	dd401705 	stb	r21,92(sp)
 5084ac8:	d8801015 	stw	r2,64(sp)
 5084acc:	003f2b06 	br	508477c <___svfprintf_internal_r+0x1c28>
 5084ad0:	d8800717 	ldw	r2,28(sp)
 5084ad4:	d8c00c17 	ldw	r3,48(sp)
 5084ad8:	10eb883a 	add	r21,r2,r3
 5084adc:	a829883a 	mov	r20,r21
 5084ae0:	a83fc20e 	bge	r21,zero,50849ec <___svfprintf_internal_r+0x1e98>
 5084ae4:	0029883a 	mov	r20,zero
 5084ae8:	003fc006 	br	50849ec <___svfprintf_internal_r+0x1e98>
 5084aec:	00bfffc4 	movi	r2,-1
 5084af0:	d8800515 	stw	r2,20(sp)
 5084af4:	00391906 	br	5082f5c <___svfprintf_internal_r+0x408>
 5084af8:	6080004c 	andi	r2,r12,1
 5084afc:	d8800715 	stw	r2,28(sp)
 5084b00:	103f231e 	bne	r2,zero,5084790 <___svfprintf_internal_r+0x1c3c>
 5084b04:	a829883a 	mov	r20,r21
 5084b08:	a83e220e 	bge	r21,zero,5084394 <___svfprintf_internal_r+0x1840>
 5084b0c:	0029883a 	mov	r20,zero
 5084b10:	003e2006 	br	5084394 <___svfprintf_internal_r+0x1840>
 5084b14:	d8800a17 	ldw	r2,40(sp)
 5084b18:	10001616 	blt	r2,zero,5084b74 <___svfprintf_internal_r+0x2020>
 5084b1c:	db401343 	ldbu	r13,77(sp)
 5084b20:	e0801210 	cmplti	r2,fp,72
 5084b24:	1000101e 	bne	r2,zero,5084b68 <___svfprintf_internal_r+0x2014>
 5084b28:	04414274 	movhi	r17,1289
 5084b2c:	8c580e04 	addi	r17,r17,24632
 5084b30:	00398506 	br	5083148 <___svfprintf_internal_r+0x5f4>
 5084b34:	d8800c17 	ldw	r2,48(sp)
 5084b38:	18ab883a 	add	r21,r3,r2
 5084b3c:	aa2b883a 	add	r21,r21,r8
 5084b40:	003ff006 	br	5084b04 <___svfprintf_internal_r+0x1fb0>
 5084b44:	d8800c17 	ldw	r2,48(sp)
 5084b48:	15400044 	addi	r21,r2,1
 5084b4c:	aa2b883a 	add	r21,r21,r8
 5084b50:	003fec06 	br	5084b04 <___svfprintf_internal_r+0x1fb0>
 5084b54:	8025883a 	mov	r18,r16
 5084b58:	0038fd06 	br	5082f50 <___svfprintf_internal_r+0x3fc>
 5084b5c:	b005883a 	mov	r2,r22
 5084b60:	39d81c04 	addi	r7,r7,24688
 5084b64:	003e6e06 	br	5084520 <___svfprintf_internal_r+0x19cc>
 5084b68:	04414274 	movhi	r17,1289
 5084b6c:	8c580d04 	addi	r17,r17,24628
 5084b70:	00397506 	br	5083148 <___svfprintf_internal_r+0x5f4>
 5084b74:	00800b44 	movi	r2,45
 5084b78:	d8801345 	stb	r2,77(sp)
 5084b7c:	03400b44 	movi	r13,45
 5084b80:	003fe706 	br	5084b20 <___svfprintf_internal_r+0x1fcc>
 5084b84:	d8800617 	ldw	r2,24(sp)
 5084b88:	12000017 	ldw	r8,0(r2)
 5084b8c:	10800104 	addi	r2,r2,4
 5084b90:	4000010e 	bge	r8,zero,5084b98 <___svfprintf_internal_r+0x2044>
 5084b94:	023fffc4 	movi	r8,-1
 5084b98:	bf000043 	ldbu	fp,1(r23)
 5084b9c:	d8800615 	stw	r2,24(sp)
 5084ba0:	182f883a 	mov	r23,r3
 5084ba4:	e2c03fcc 	andi	r11,fp,255
 5084ba8:	5ac0201c 	xori	r11,r11,128
 5084bac:	5affe004 	addi	r11,r11,-128
 5084bb0:	00382606 	br	5082c4c <___svfprintf_internal_r+0xf8>
 5084bb4:	00800084 	movi	r2,2
 5084bb8:	d8801015 	stw	r2,64(sp)
 5084bbc:	003eef06 	br	508477c <___svfprintf_internal_r+0x1c28>
 5084bc0:	00800304 	movi	r2,12
 5084bc4:	98800015 	stw	r2,0(r19)
 5084bc8:	00bfffc4 	movi	r2,-1
 5084bcc:	d8800515 	stw	r2,20(sp)
 5084bd0:	0038e206 	br	5082f5c <___svfprintf_internal_r+0x408>

05084bd4 <___vfprintf_internal_r>:
 5084bd4:	deffbf04 	addi	sp,sp,-260
 5084bd8:	dfc04015 	stw	ra,256(sp)
 5084bdc:	dd803d15 	stw	r22,244(sp)
 5084be0:	dcc03a15 	stw	r19,232(sp)
 5084be4:	dc803915 	stw	r18,228(sp)
 5084be8:	2027883a 	mov	r19,r4
 5084bec:	2825883a 	mov	r18,r5
 5084bf0:	302d883a 	mov	r22,r6
 5084bf4:	d9c00615 	stw	r7,24(sp)
 5084bf8:	df003f15 	stw	fp,252(sp)
 5084bfc:	ddc03e15 	stw	r23,248(sp)
 5084c00:	dd403c15 	stw	r21,240(sp)
 5084c04:	dd003b15 	stw	r20,236(sp)
 5084c08:	dc403815 	stw	r17,224(sp)
 5084c0c:	dc003715 	stw	r16,220(sp)
 5084c10:	5089a980 	call	5089a98 <_localeconv_r>
 5084c14:	10800017 	ldw	r2,0(r2)
 5084c18:	1009883a 	mov	r4,r2
 5084c1c:	d8800d15 	stw	r2,52(sp)
 5084c20:	5082abc0 	call	5082abc <strlen>
 5084c24:	d8800b15 	stw	r2,44(sp)
 5084c28:	98000226 	beq	r19,zero,5084c34 <___vfprintf_internal_r+0x60>
 5084c2c:	98800e17 	ldw	r2,56(r19)
 5084c30:	1001de26 	beq	r2,zero,50853ac <___vfprintf_internal_r+0x7d8>
 5084c34:	9080030b 	ldhu	r2,12(r18)
 5084c38:	10c8000c 	andi	r3,r2,8192
 5084c3c:	1800061e 	bne	r3,zero,5084c58 <___vfprintf_internal_r+0x84>
 5084c40:	90c01917 	ldw	r3,100(r18)
 5084c44:	0137ffc4 	movi	r4,-8193
 5084c48:	10880014 	ori	r2,r2,8192
 5084c4c:	1906703a 	and	r3,r3,r4
 5084c50:	9080030d 	sth	r2,12(r18)
 5084c54:	90c01915 	stw	r3,100(r18)
 5084c58:	10c0020c 	andi	r3,r2,8
 5084c5c:	1800fa26 	beq	r3,zero,5085048 <___vfprintf_internal_r+0x474>
 5084c60:	90c00417 	ldw	r3,16(r18)
 5084c64:	1800f826 	beq	r3,zero,5085048 <___vfprintf_internal_r+0x474>
 5084c68:	1080068c 	andi	r2,r2,26
 5084c6c:	10800298 	cmpnei	r2,r2,10
 5084c70:	1000fd26 	beq	r2,zero,5085068 <___vfprintf_internal_r+0x494>
 5084c74:	d8802704 	addi	r2,sp,156
 5084c78:	b02f883a 	mov	r23,r22
 5084c7c:	d8801a15 	stw	r2,104(sp)
 5084c80:	d8001c15 	stw	zero,112(sp)
 5084c84:	d8001b15 	stw	zero,108(sp)
 5084c88:	d8000815 	stw	zero,32(sp)
 5084c8c:	d8000915 	stw	zero,36(sp)
 5084c90:	d8000a15 	stw	zero,40(sp)
 5084c94:	d8000c15 	stw	zero,48(sp)
 5084c98:	d8001015 	stw	zero,64(sp)
 5084c9c:	d8000515 	stw	zero,20(sp)
 5084ca0:	102d883a 	mov	r22,r2
 5084ca4:	b8800007 	ldb	r2,0(r23)
 5084ca8:	1000d526 	beq	r2,zero,5085000 <___vfprintf_internal_r+0x42c>
 5084cac:	b821883a 	mov	r16,r23
 5084cb0:	00000306 	br	5084cc0 <___vfprintf_internal_r+0xec>
 5084cb4:	80800047 	ldb	r2,1(r16)
 5084cb8:	84000044 	addi	r16,r16,1
 5084cbc:	10012026 	beq	r2,zero,5085140 <___vfprintf_internal_r+0x56c>
 5084cc0:	10800958 	cmpnei	r2,r2,37
 5084cc4:	103ffb1e 	bne	r2,zero,5084cb4 <___vfprintf_internal_r+0xe0>
 5084cc8:	85e3c83a 	sub	r17,r16,r23
 5084ccc:	85c11e1e 	bne	r16,r23,5085148 <___vfprintf_internal_r+0x574>
 5084cd0:	80800003 	ldbu	r2,0(r16)
 5084cd4:	10803fcc 	andi	r2,r2,255
 5084cd8:	1080201c 	xori	r2,r2,128
 5084cdc:	10bfe004 	addi	r2,r2,-128
 5084ce0:	1000c726 	beq	r2,zero,5085000 <___vfprintf_internal_r+0x42c>
 5084ce4:	82c00047 	ldb	r11,1(r16)
 5084ce8:	85c00044 	addi	r23,r16,1
 5084cec:	d8001345 	stb	zero,77(sp)
 5084cf0:	0009883a 	mov	r4,zero
 5084cf4:	000b883a 	mov	r5,zero
 5084cf8:	023fffc4 	movi	r8,-1
 5084cfc:	0021883a 	mov	r16,zero
 5084d00:	0019883a 	mov	r12,zero
 5084d04:	bdc00044 	addi	r23,r23,1
 5084d08:	5839883a 	mov	fp,r11
 5084d0c:	e0bff804 	addi	r2,fp,-32
 5084d10:	10c01668 	cmpgeui	r3,r2,89
 5084d14:	18006a1e 	bne	r3,zero,5084ec0 <___vfprintf_internal_r+0x2ec>
 5084d18:	100490ba 	slli	r2,r2,2
 5084d1c:	00c14234 	movhi	r3,1288
 5084d20:	10c7883a 	add	r3,r2,r3
 5084d24:	18934b17 	ldw	r2,19756(r3)
 5084d28:	1000683a 	jmp	r2
 5084d2c:	0508566c 	andhi	r20,zero,8537
 5084d30:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084d34:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084d38:	05085660 	cmpeqi	r20,zero,8537
 5084d3c:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084d40:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084d44:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084d48:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084d4c:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084d50:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084d54:	05085638 	rdprs	r20,zero,8536
 5084d58:	05085628 	cmpgeui	r20,zero,8536
 5084d5c:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084d60:	05085610 	cmplti	r20,zero,8536
 5084d64:	050855cc 	andi	r20,zero,8535
 5084d68:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084d6c:	050855c0 	call	50855c <__alt_mem_sdram+0x50855c>
 5084d70:	05084e90 	cmplti	r20,zero,8506
 5084d74:	05084e90 	cmplti	r20,zero,8506
 5084d78:	05084e90 	cmplti	r20,zero,8506
 5084d7c:	05084e90 	cmplti	r20,zero,8506
 5084d80:	05084e90 	cmplti	r20,zero,8506
 5084d84:	05084e90 	cmplti	r20,zero,8506
 5084d88:	05084e90 	cmplti	r20,zero,8506
 5084d8c:	05084e90 	cmplti	r20,zero,8506
 5084d90:	05084e90 	cmplti	r20,zero,8506
 5084d94:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084d98:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084d9c:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084da0:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084da4:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084da8:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084dac:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084db0:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084db4:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084db8:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084dbc:	050854d8 	cmpnei	r20,zero,8531
 5084dc0:	050851a4 	muli	r20,zero,8518
 5084dc4:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084dc8:	050851a4 	muli	r20,zero,8518
 5084dcc:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084dd0:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084dd4:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084dd8:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084ddc:	050854cc 	andi	r20,zero,8531
 5084de0:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084de4:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084de8:	050850d8 	cmpnei	r20,zero,8515
 5084dec:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084df0:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084df4:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084df8:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084dfc:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e00:	050850b0 	cmpltui	r20,zero,8514
 5084e04:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e08:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e0c:	05085484 	movi	r20,8530
 5084e10:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e14:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e18:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e1c:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e20:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e24:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e28:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e2c:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e30:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e34:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e38:	0508545c 	xori	r20,zero,8529
 5084e3c:	050853b8 	rdprs	r20,zero,8526
 5084e40:	050851a4 	muli	r20,zero,8518
 5084e44:	050851a4 	muli	r20,zero,8518
 5084e48:	050851a4 	muli	r20,zero,8518
 5084e4c:	05085450 	cmplti	r20,zero,8529
 5084e50:	050853b8 	rdprs	r20,zero,8526
 5084e54:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e58:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e5c:	050857c0 	call	50857c <__alt_mem_sdram+0x50857c>
 5084e60:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e64:	05085784 	movi	r20,8542
 5084e68:	050850dc 	xori	r20,zero,8515
 5084e6c:	05085744 	movi	r20,8541
 5084e70:	05085738 	rdprs	r20,zero,8540
 5084e74:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e78:	050856e0 	cmpeqi	r20,zero,8539
 5084e7c:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e80:	050850b4 	movhi	r20,8514
 5084e84:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e88:	05084ec0 	call	5084ec <__alt_mem_sdram+0x5084ec>
 5084e8c:	05085698 	cmpnei	r20,zero,8538
 5084e90:	0021883a 	mov	r16,zero
 5084e94:	e0bff404 	addi	r2,fp,-48
 5084e98:	bf000007 	ldb	fp,0(r23)
 5084e9c:	840002a4 	muli	r16,r16,10
 5084ea0:	bdc00044 	addi	r23,r23,1
 5084ea4:	1421883a 	add	r16,r2,r16
 5084ea8:	e0bff404 	addi	r2,fp,-48
 5084eac:	10c002b0 	cmpltui	r3,r2,10
 5084eb0:	183ff91e 	bne	r3,zero,5084e98 <___vfprintf_internal_r+0x2c4>
 5084eb4:	e0bff804 	addi	r2,fp,-32
 5084eb8:	10c01668 	cmpgeui	r3,r2,89
 5084ebc:	183f9626 	beq	r3,zero,5084d18 <___vfprintf_internal_r+0x144>
 5084ec0:	21003fcc 	andi	r4,r4,255
 5084ec4:	2006851e 	bne	r4,zero,50868dc <___vfprintf_internal_r+0x1d08>
 5084ec8:	e0004d26 	beq	fp,zero,5085000 <___vfprintf_internal_r+0x42c>
 5084ecc:	df001d05 	stb	fp,116(sp)
 5084ed0:	d8001345 	stb	zero,77(sp)
 5084ed4:	05000044 	movi	r20,1
 5084ed8:	05400044 	movi	r21,1
 5084edc:	dc401d04 	addi	r17,sp,116
 5084ee0:	db000415 	stw	r12,16(sp)
 5084ee4:	0011883a 	mov	r8,zero
 5084ee8:	d8000715 	stw	zero,28(sp)
 5084eec:	d8800417 	ldw	r2,16(sp)
 5084ef0:	1380008c 	andi	r14,r2,2
 5084ef4:	70000126 	beq	r14,zero,5084efc <___vfprintf_internal_r+0x328>
 5084ef8:	a5000084 	addi	r20,r20,2
 5084efc:	d8800417 	ldw	r2,16(sp)
 5084f00:	d8c01c17 	ldw	r3,112(sp)
 5084f04:	1340210c 	andi	r13,r2,132
 5084f08:	6800021e 	bne	r13,zero,5084f14 <___vfprintf_internal_r+0x340>
 5084f0c:	850fc83a 	sub	r7,r16,r20
 5084f10:	01c34316 	blt	zero,r7,5085c20 <___vfprintf_internal_r+0x104c>
 5084f14:	d8801347 	ldb	r2,77(sp)
 5084f18:	10000c26 	beq	r2,zero,5084f4c <___vfprintf_internal_r+0x378>
 5084f1c:	d8801b17 	ldw	r2,108(sp)
 5084f20:	d9001344 	addi	r4,sp,77
 5084f24:	18c00044 	addi	r3,r3,1
 5084f28:	10800044 	addi	r2,r2,1
 5084f2c:	b1000015 	stw	r4,0(r22)
 5084f30:	01000044 	movi	r4,1
 5084f34:	d8801b15 	stw	r2,108(sp)
 5084f38:	b1000115 	stw	r4,4(r22)
 5084f3c:	d8c01c15 	stw	r3,112(sp)
 5084f40:	10800208 	cmpgei	r2,r2,8
 5084f44:	1003771e 	bne	r2,zero,5085d24 <___vfprintf_internal_r+0x1150>
 5084f48:	b5800204 	addi	r22,r22,8
 5084f4c:	70000c26 	beq	r14,zero,5084f80 <___vfprintf_internal_r+0x3ac>
 5084f50:	d8801b17 	ldw	r2,108(sp)
 5084f54:	d9001384 	addi	r4,sp,78
 5084f58:	18c00084 	addi	r3,r3,2
 5084f5c:	10800044 	addi	r2,r2,1
 5084f60:	b1000015 	stw	r4,0(r22)
 5084f64:	01000084 	movi	r4,2
 5084f68:	d8801b15 	stw	r2,108(sp)
 5084f6c:	b1000115 	stw	r4,4(r22)
 5084f70:	d8c01c15 	stw	r3,112(sp)
 5084f74:	10800208 	cmpgei	r2,r2,8
 5084f78:	1003781e 	bne	r2,zero,5085d5c <___vfprintf_internal_r+0x1188>
 5084f7c:	b5800204 	addi	r22,r22,8
 5084f80:	6b402018 	cmpnei	r13,r13,128
 5084f84:	68025926 	beq	r13,zero,50858ec <___vfprintf_internal_r+0xd18>
 5084f88:	4551c83a 	sub	r8,r8,r21
 5084f8c:	02029116 	blt	zero,r8,50859d4 <___vfprintf_internal_r+0xe00>
 5084f90:	d8800417 	ldw	r2,16(sp)
 5084f94:	1080400c 	andi	r2,r2,256
 5084f98:	10020e1e 	bne	r2,zero,50857d4 <___vfprintf_internal_r+0xc00>
 5084f9c:	d8801b17 	ldw	r2,108(sp)
 5084fa0:	1d47883a 	add	r3,r3,r21
 5084fa4:	b4400015 	stw	r17,0(r22)
 5084fa8:	10800044 	addi	r2,r2,1
 5084fac:	b5400115 	stw	r21,4(r22)
 5084fb0:	d8801b15 	stw	r2,108(sp)
 5084fb4:	d8c01c15 	stw	r3,112(sp)
 5084fb8:	10800208 	cmpgei	r2,r2,8
 5084fbc:	10030e1e 	bne	r2,zero,5085bf8 <___vfprintf_internal_r+0x1024>
 5084fc0:	b5800204 	addi	r22,r22,8
 5084fc4:	d8800417 	ldw	r2,16(sp)
 5084fc8:	1440010c 	andi	r17,r2,4
 5084fcc:	88000226 	beq	r17,zero,5084fd8 <___vfprintf_internal_r+0x404>
 5084fd0:	8523c83a 	sub	r17,r16,r20
 5084fd4:	0440c616 	blt	zero,r17,50852f0 <___vfprintf_internal_r+0x71c>
 5084fd8:	8500010e 	bge	r16,r20,5084fe0 <___vfprintf_internal_r+0x40c>
 5084fdc:	a021883a 	mov	r16,r20
 5084fe0:	d8800517 	ldw	r2,20(sp)
 5084fe4:	1405883a 	add	r2,r2,r16
 5084fe8:	d8800515 	stw	r2,20(sp)
 5084fec:	1802c01e 	bne	r3,zero,5085af0 <___vfprintf_internal_r+0xf1c>
 5084ff0:	b8800007 	ldb	r2,0(r23)
 5084ff4:	d8001b15 	stw	zero,108(sp)
 5084ff8:	dd802704 	addi	r22,sp,156
 5084ffc:	103f2b1e 	bne	r2,zero,5084cac <___vfprintf_internal_r+0xd8>
 5085000:	d8801c17 	ldw	r2,112(sp)
 5085004:	1006371e 	bne	r2,zero,50868e4 <___vfprintf_internal_r+0x1d10>
 5085008:	9080030b 	ldhu	r2,12(r18)
 508500c:	1080100c 	andi	r2,r2,64
 5085010:	1006cd1e 	bne	r2,zero,5086b48 <___vfprintf_internal_r+0x1f74>
 5085014:	d8800517 	ldw	r2,20(sp)
 5085018:	dfc04017 	ldw	ra,256(sp)
 508501c:	df003f17 	ldw	fp,252(sp)
 5085020:	ddc03e17 	ldw	r23,248(sp)
 5085024:	dd803d17 	ldw	r22,244(sp)
 5085028:	dd403c17 	ldw	r21,240(sp)
 508502c:	dd003b17 	ldw	r20,236(sp)
 5085030:	dcc03a17 	ldw	r19,232(sp)
 5085034:	dc803917 	ldw	r18,228(sp)
 5085038:	dc403817 	ldw	r17,224(sp)
 508503c:	dc003717 	ldw	r16,220(sp)
 5085040:	dec04104 	addi	sp,sp,260
 5085044:	f800283a 	ret
 5085048:	900b883a 	mov	r5,r18
 508504c:	9809883a 	mov	r4,r19
 5085050:	5086f300 	call	5086f30 <__swsetup_r>
 5085054:	1006bc1e 	bne	r2,zero,5086b48 <___vfprintf_internal_r+0x1f74>
 5085058:	9080030b 	ldhu	r2,12(r18)
 508505c:	1080068c 	andi	r2,r2,26
 5085060:	10800298 	cmpnei	r2,r2,10
 5085064:	103f031e 	bne	r2,zero,5084c74 <___vfprintf_internal_r+0xa0>
 5085068:	9080038f 	ldh	r2,14(r18)
 508506c:	103f0116 	blt	r2,zero,5084c74 <___vfprintf_internal_r+0xa0>
 5085070:	d9c00617 	ldw	r7,24(sp)
 5085074:	b00d883a 	mov	r6,r22
 5085078:	900b883a 	mov	r5,r18
 508507c:	9809883a 	mov	r4,r19
 5085080:	dfc04017 	ldw	ra,256(sp)
 5085084:	df003f17 	ldw	fp,252(sp)
 5085088:	ddc03e17 	ldw	r23,248(sp)
 508508c:	dd803d17 	ldw	r22,244(sp)
 5085090:	dd403c17 	ldw	r21,240(sp)
 5085094:	dd003b17 	ldw	r20,236(sp)
 5085098:	dcc03a17 	ldw	r19,232(sp)
 508509c:	dc803917 	ldw	r18,228(sp)
 50850a0:	dc403817 	ldw	r17,224(sp)
 50850a4:	dc003717 	ldw	r16,220(sp)
 50850a8:	dec04104 	addi	sp,sp,260
 50850ac:	5086ce41 	jmpi	5086ce4 <__sbprintf>
 50850b0:	63000414 	ori	r12,r12,16
 50850b4:	6080080c 	andi	r2,r12,32
 50850b8:	10008126 	beq	r2,zero,50852c0 <___vfprintf_internal_r+0x6ec>
 50850bc:	d8c00617 	ldw	r3,24(sp)
 50850c0:	00800044 	movi	r2,1
 50850c4:	1d000017 	ldw	r20,0(r3)
 50850c8:	1d400117 	ldw	r21,4(r3)
 50850cc:	18c00204 	addi	r3,r3,8
 50850d0:	d8c00615 	stw	r3,24(sp)
 50850d4:	00000906 	br	50850fc <___vfprintf_internal_r+0x528>
 50850d8:	63000414 	ori	r12,r12,16
 50850dc:	6080080c 	andi	r2,r12,32
 50850e0:	10006b26 	beq	r2,zero,5085290 <___vfprintf_internal_r+0x6bc>
 50850e4:	d8c00617 	ldw	r3,24(sp)
 50850e8:	0005883a 	mov	r2,zero
 50850ec:	1d000017 	ldw	r20,0(r3)
 50850f0:	1d400117 	ldw	r21,4(r3)
 50850f4:	18c00204 	addi	r3,r3,8
 50850f8:	d8c00615 	stw	r3,24(sp)
 50850fc:	d8001345 	stb	zero,77(sp)
 5085100:	40ffffe0 	cmpeqi	r3,r8,-1
 5085104:	001b883a 	mov	r13,zero
 5085108:	18010e1e 	bne	r3,zero,5085544 <___vfprintf_internal_r+0x970>
 508510c:	047fdfc4 	movi	r17,-129
 5085110:	6448703a 	and	r4,r12,r17
 5085114:	a546b03a 	or	r3,r20,r21
 5085118:	d9000415 	stw	r4,16(sp)
 508511c:	1802be1e 	bne	r3,zero,5085c18 <___vfprintf_internal_r+0x1044>
 5085120:	40025d1e 	bne	r8,zero,5085a98 <___vfprintf_internal_r+0xec4>
 5085124:	1003731e 	bne	r2,zero,5085ef4 <___vfprintf_internal_r+0x1320>
 5085128:	6540004c 	andi	r21,r12,1
 508512c:	a803ae26 	beq	r21,zero,5085fe8 <___vfprintf_internal_r+0x1414>
 5085130:	00800c04 	movi	r2,48
 5085134:	d88026c5 	stb	r2,155(sp)
 5085138:	dc4026c4 	addi	r17,sp,155
 508513c:	0000ba06 	br	5085428 <___vfprintf_internal_r+0x854>
 5085140:	85e3c83a 	sub	r17,r16,r23
 5085144:	85ffae26 	beq	r16,r23,5085000 <___vfprintf_internal_r+0x42c>
 5085148:	d8c01c17 	ldw	r3,112(sp)
 508514c:	d8801b17 	ldw	r2,108(sp)
 5085150:	b5c00015 	stw	r23,0(r22)
 5085154:	1c47883a 	add	r3,r3,r17
 5085158:	10800044 	addi	r2,r2,1
 508515c:	d8801b15 	stw	r2,108(sp)
 5085160:	b4400115 	stw	r17,4(r22)
 5085164:	d8c01c15 	stw	r3,112(sp)
 5085168:	10800208 	cmpgei	r2,r2,8
 508516c:	1000061e 	bne	r2,zero,5085188 <___vfprintf_internal_r+0x5b4>
 5085170:	b5800204 	addi	r22,r22,8
 5085174:	d8c00517 	ldw	r3,20(sp)
 5085178:	80800003 	ldbu	r2,0(r16)
 508517c:	1c47883a 	add	r3,r3,r17
 5085180:	d8c00515 	stw	r3,20(sp)
 5085184:	003ed306 	br	5084cd4 <___vfprintf_internal_r+0x100>
 5085188:	d9801a04 	addi	r6,sp,104
 508518c:	900b883a 	mov	r5,r18
 5085190:	9809883a 	mov	r4,r19
 5085194:	508d4bc0 	call	508d4bc <__sprint_r>
 5085198:	103f9b1e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 508519c:	dd802704 	addi	r22,sp,156
 50851a0:	003ff406 	br	5085174 <___vfprintf_internal_r+0x5a0>
 50851a4:	21003fcc 	andi	r4,r4,255
 50851a8:	2006651e 	bne	r4,zero,5086b40 <___vfprintf_internal_r+0x1f6c>
 50851ac:	d8c00617 	ldw	r3,24(sp)
 50851b0:	6080020c 	andi	r2,r12,8
 50851b4:	19000204 	addi	r4,r3,8
 50851b8:	d9000e15 	stw	r4,56(sp)
 50851bc:	1003a51e 	bne	r2,zero,5086054 <___vfprintf_internal_r+0x1480>
 50851c0:	d8800617 	ldw	r2,24(sp)
 50851c4:	10c00017 	ldw	r3,0(r2)
 50851c8:	10800117 	ldw	r2,4(r2)
 50851cc:	d8c00915 	stw	r3,36(sp)
 50851d0:	d8800a15 	stw	r2,40(sp)
 50851d4:	dd400a17 	ldw	r21,40(sp)
 50851d8:	dd000917 	ldw	r20,36(sp)
 50851dc:	00a00034 	movhi	r2,32768
 50851e0:	10bfffc4 	addi	r2,r2,-1
 50851e4:	a8a2703a 	and	r17,r21,r2
 50851e8:	01dffc34 	movhi	r7,32752
 50851ec:	01bfffc4 	movi	r6,-1
 50851f0:	39ffffc4 	addi	r7,r7,-1
 50851f4:	a009883a 	mov	r4,r20
 50851f8:	880b883a 	mov	r5,r17
 50851fc:	da000615 	stw	r8,24(sp)
 5085200:	db000415 	stw	r12,16(sp)
 5085204:	50927c40 	call	50927c4 <__unorddf2>
 5085208:	db000417 	ldw	r12,16(sp)
 508520c:	da000617 	ldw	r8,24(sp)
 5085210:	1004621e 	bne	r2,zero,508639c <___vfprintf_internal_r+0x17c8>
 5085214:	01dffc34 	movhi	r7,32752
 5085218:	01bfffc4 	movi	r6,-1
 508521c:	39ffffc4 	addi	r7,r7,-1
 5085220:	a009883a 	mov	r4,r20
 5085224:	880b883a 	mov	r5,r17
 5085228:	50917b40 	call	50917b4 <__ledf2>
 508522c:	db000417 	ldw	r12,16(sp)
 5085230:	da000617 	ldw	r8,24(sp)
 5085234:	0084590e 	bge	zero,r2,508639c <___vfprintf_internal_r+0x17c8>
 5085238:	000d883a 	mov	r6,zero
 508523c:	000f883a 	mov	r7,zero
 5085240:	a009883a 	mov	r4,r20
 5085244:	a80b883a 	mov	r5,r21
 5085248:	50917b40 	call	50917b4 <__ledf2>
 508524c:	db000417 	ldw	r12,16(sp)
 5085250:	10058f16 	blt	r2,zero,5086890 <___vfprintf_internal_r+0x1cbc>
 5085254:	db401343 	ldbu	r13,77(sp)
 5085258:	e0801210 	cmplti	r2,fp,72
 508525c:	1005371e 	bne	r2,zero,508673c <___vfprintf_internal_r+0x1b68>
 5085260:	04414274 	movhi	r17,1289
 5085264:	8c580c04 	addi	r17,r17,24624
 5085268:	00bfdfc4 	movi	r2,-129
 508526c:	6084703a 	and	r2,r12,r2
 5085270:	d8800415 	stw	r2,16(sp)
 5085274:	d8800e17 	ldw	r2,56(sp)
 5085278:	050000c4 	movi	r20,3
 508527c:	054000c4 	movi	r21,3
 5085280:	d8800615 	stw	r2,24(sp)
 5085284:	0011883a 	mov	r8,zero
 5085288:	d8000715 	stw	zero,28(sp)
 508528c:	00006a06 	br	5085438 <___vfprintf_internal_r+0x864>
 5085290:	d9000617 	ldw	r4,24(sp)
 5085294:	6080040c 	andi	r2,r12,16
 5085298:	20c00104 	addi	r3,r4,4
 508529c:	1003681e 	bne	r2,zero,5086040 <___vfprintf_internal_r+0x146c>
 50852a0:	6080100c 	andi	r2,r12,64
 50852a4:	10051f26 	beq	r2,zero,5086724 <___vfprintf_internal_r+0x1b50>
 50852a8:	d8800617 	ldw	r2,24(sp)
 50852ac:	002b883a 	mov	r21,zero
 50852b0:	d8c00615 	stw	r3,24(sp)
 50852b4:	1500000b 	ldhu	r20,0(r2)
 50852b8:	0005883a 	mov	r2,zero
 50852bc:	003f8f06 	br	50850fc <___vfprintf_internal_r+0x528>
 50852c0:	d9000617 	ldw	r4,24(sp)
 50852c4:	6080040c 	andi	r2,r12,16
 50852c8:	20c00104 	addi	r3,r4,4
 50852cc:	10034e1e 	bne	r2,zero,5086008 <___vfprintf_internal_r+0x1434>
 50852d0:	6080100c 	andi	r2,r12,64
 50852d4:	10055726 	beq	r2,zero,5086834 <___vfprintf_internal_r+0x1c60>
 50852d8:	d8800617 	ldw	r2,24(sp)
 50852dc:	002b883a 	mov	r21,zero
 50852e0:	d8c00615 	stw	r3,24(sp)
 50852e4:	1500000b 	ldhu	r20,0(r2)
 50852e8:	00800044 	movi	r2,1
 50852ec:	003f8306 	br	50850fc <___vfprintf_internal_r+0x528>
 50852f0:	03014274 	movhi	r12,1289
 50852f4:	89000450 	cmplti	r4,r17,17
 50852f8:	d8801b17 	ldw	r2,108(sp)
 50852fc:	63182804 	addi	r12,r12,24736
 5085300:	20001b1e 	bne	r4,zero,5085370 <___vfprintf_internal_r+0x79c>
 5085304:	05400404 	movi	r21,16
 5085308:	6039883a 	mov	fp,r12
 508530c:	00000406 	br	5085320 <___vfprintf_internal_r+0x74c>
 5085310:	8c7ffc04 	addi	r17,r17,-16
 5085314:	89000448 	cmpgei	r4,r17,17
 5085318:	b5800204 	addi	r22,r22,8
 508531c:	20001326 	beq	r4,zero,508536c <___vfprintf_internal_r+0x798>
 5085320:	10800044 	addi	r2,r2,1
 5085324:	18c00404 	addi	r3,r3,16
 5085328:	b7000015 	stw	fp,0(r22)
 508532c:	b5400115 	stw	r21,4(r22)
 5085330:	d8c01c15 	stw	r3,112(sp)
 5085334:	d8801b15 	stw	r2,108(sp)
 5085338:	11000208 	cmpgei	r4,r2,8
 508533c:	203ff426 	beq	r4,zero,5085310 <___vfprintf_internal_r+0x73c>
 5085340:	d9801a04 	addi	r6,sp,104
 5085344:	900b883a 	mov	r5,r18
 5085348:	9809883a 	mov	r4,r19
 508534c:	508d4bc0 	call	508d4bc <__sprint_r>
 5085350:	103f2d1e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5085354:	8c7ffc04 	addi	r17,r17,-16
 5085358:	89000448 	cmpgei	r4,r17,17
 508535c:	d8c01c17 	ldw	r3,112(sp)
 5085360:	d8801b17 	ldw	r2,108(sp)
 5085364:	dd802704 	addi	r22,sp,156
 5085368:	203fed1e 	bne	r4,zero,5085320 <___vfprintf_internal_r+0x74c>
 508536c:	e019883a 	mov	r12,fp
 5085370:	10800044 	addi	r2,r2,1
 5085374:	1c47883a 	add	r3,r3,r17
 5085378:	d8801b15 	stw	r2,108(sp)
 508537c:	b3000015 	stw	r12,0(r22)
 5085380:	b4400115 	stw	r17,4(r22)
 5085384:	d8c01c15 	stw	r3,112(sp)
 5085388:	10800210 	cmplti	r2,r2,8
 508538c:	103f121e 	bne	r2,zero,5084fd8 <___vfprintf_internal_r+0x404>
 5085390:	d9801a04 	addi	r6,sp,104
 5085394:	900b883a 	mov	r5,r18
 5085398:	9809883a 	mov	r4,r19
 508539c:	508d4bc0 	call	508d4bc <__sprint_r>
 50853a0:	103f191e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 50853a4:	d8c01c17 	ldw	r3,112(sp)
 50853a8:	003f0b06 	br	5084fd8 <___vfprintf_internal_r+0x404>
 50853ac:	9809883a 	mov	r4,r19
 50853b0:	50890380 	call	5089038 <__sinit>
 50853b4:	003e1f06 	br	5084c34 <___vfprintf_internal_r+0x60>
 50853b8:	21003fcc 	andi	r4,r4,255
 50853bc:	2005dc1e 	bne	r4,zero,5086b30 <___vfprintf_internal_r+0x1f5c>
 50853c0:	6080080c 	andi	r2,r12,32
 50853c4:	10004926 	beq	r2,zero,50854ec <___vfprintf_internal_r+0x918>
 50853c8:	d8c00617 	ldw	r3,24(sp)
 50853cc:	18800117 	ldw	r2,4(r3)
 50853d0:	1d000017 	ldw	r20,0(r3)
 50853d4:	18c00204 	addi	r3,r3,8
 50853d8:	d8c00615 	stw	r3,24(sp)
 50853dc:	102b883a 	mov	r21,r2
 50853e0:	10004e16 	blt	r2,zero,508551c <___vfprintf_internal_r+0x948>
 50853e4:	40bfffd8 	cmpnei	r2,r8,-1
 50853e8:	db401343 	ldbu	r13,77(sp)
 50853ec:	10000626 	beq	r2,zero,5085408 <___vfprintf_internal_r+0x834>
 50853f0:	047fdfc4 	movi	r17,-129
 50853f4:	6446703a 	and	r3,r12,r17
 50853f8:	a544b03a 	or	r2,r20,r21
 50853fc:	d8c00415 	stw	r3,16(sp)
 5085400:	1002bb26 	beq	r2,zero,5085ef0 <___vfprintf_internal_r+0x131c>
 5085404:	db000417 	ldw	r12,16(sp)
 5085408:	a8036e1e 	bne	r21,zero,50861c4 <___vfprintf_internal_r+0x15f0>
 508540c:	a08002a8 	cmpgeui	r2,r20,10
 5085410:	10036c1e 	bne	r2,zero,50861c4 <___vfprintf_internal_r+0x15f0>
 5085414:	a5000c04 	addi	r20,r20,48
 5085418:	dd0026c5 	stb	r20,155(sp)
 508541c:	db000415 	stw	r12,16(sp)
 5085420:	05400044 	movi	r21,1
 5085424:	dc4026c4 	addi	r17,sp,155
 5085428:	4029883a 	mov	r20,r8
 508542c:	4540010e 	bge	r8,r21,5085434 <___vfprintf_internal_r+0x860>
 5085430:	a829883a 	mov	r20,r21
 5085434:	d8000715 	stw	zero,28(sp)
 5085438:	6b403fcc 	andi	r13,r13,255
 508543c:	6b40201c 	xori	r13,r13,128
 5085440:	6b7fe004 	addi	r13,r13,-128
 5085444:	683ea926 	beq	r13,zero,5084eec <___vfprintf_internal_r+0x318>
 5085448:	a5000044 	addi	r20,r20,1
 508544c:	003ea706 	br	5084eec <___vfprintf_internal_r+0x318>
 5085450:	bac00007 	ldb	r11,0(r23)
 5085454:	63001014 	ori	r12,r12,64
 5085458:	003e2a06 	br	5084d04 <___vfprintf_internal_r+0x130>
 508545c:	d8c00617 	ldw	r3,24(sp)
 5085460:	d8001345 	stb	zero,77(sp)
 5085464:	05000044 	movi	r20,1
 5085468:	18800017 	ldw	r2,0(r3)
 508546c:	18c00104 	addi	r3,r3,4
 5085470:	d8c00615 	stw	r3,24(sp)
 5085474:	d8801d05 	stb	r2,116(sp)
 5085478:	05400044 	movi	r21,1
 508547c:	dc401d04 	addi	r17,sp,116
 5085480:	003e9706 	br	5084ee0 <___vfprintf_internal_r+0x30c>
 5085484:	21003fcc 	andi	r4,r4,255
 5085488:	2005a51e 	bne	r4,zero,5086b20 <___vfprintf_internal_r+0x1f4c>
 508548c:	00814274 	movhi	r2,1289
 5085490:	10981404 	addi	r2,r2,24656
 5085494:	d8800c15 	stw	r2,48(sp)
 5085498:	6080080c 	andi	r2,r12,32
 508549c:	10008526 	beq	r2,zero,50856b4 <___vfprintf_internal_r+0xae0>
 50854a0:	d8800617 	ldw	r2,24(sp)
 50854a4:	15000017 	ldw	r20,0(r2)
 50854a8:	15400117 	ldw	r21,4(r2)
 50854ac:	10800204 	addi	r2,r2,8
 50854b0:	d8800615 	stw	r2,24(sp)
 50854b4:	6080004c 	andi	r2,r12,1
 50854b8:	10000226 	beq	r2,zero,50854c4 <___vfprintf_internal_r+0x8f0>
 50854bc:	a544b03a 	or	r2,r20,r21
 50854c0:	1002cb1e 	bne	r2,zero,5085ff0 <___vfprintf_internal_r+0x141c>
 50854c4:	00800084 	movi	r2,2
 50854c8:	003f0c06 	br	50850fc <___vfprintf_internal_r+0x528>
 50854cc:	bac00007 	ldb	r11,0(r23)
 50854d0:	63000214 	ori	r12,r12,8
 50854d4:	003e0b06 	br	5084d04 <___vfprintf_internal_r+0x130>
 50854d8:	21003fcc 	andi	r4,r4,255
 50854dc:	2005961e 	bne	r4,zero,5086b38 <___vfprintf_internal_r+0x1f64>
 50854e0:	63000414 	ori	r12,r12,16
 50854e4:	6080080c 	andi	r2,r12,32
 50854e8:	103fb71e 	bne	r2,zero,50853c8 <___vfprintf_internal_r+0x7f4>
 50854ec:	d9000617 	ldw	r4,24(sp)
 50854f0:	6080040c 	andi	r2,r12,16
 50854f4:	20c00104 	addi	r3,r4,4
 50854f8:	1002db1e 	bne	r2,zero,5086068 <___vfprintf_internal_r+0x1494>
 50854fc:	6080100c 	andi	r2,r12,64
 5085500:	10048226 	beq	r2,zero,508670c <___vfprintf_internal_r+0x1b38>
 5085504:	d8800617 	ldw	r2,24(sp)
 5085508:	d8c00615 	stw	r3,24(sp)
 508550c:	1500000f 	ldh	r20,0(r2)
 5085510:	a02bd7fa 	srai	r21,r20,31
 5085514:	a805883a 	mov	r2,r21
 5085518:	103fb20e 	bge	r2,zero,50853e4 <___vfprintf_internal_r+0x810>
 508551c:	a004c03a 	cmpne	r2,r20,zero
 5085520:	056bc83a 	sub	r21,zero,r21
 5085524:	a8abc83a 	sub	r21,r21,r2
 5085528:	00800b44 	movi	r2,45
 508552c:	d8801345 	stb	r2,77(sp)
 5085530:	40ffffe0 	cmpeqi	r3,r8,-1
 5085534:	0529c83a 	sub	r20,zero,r20
 5085538:	03400b44 	movi	r13,45
 508553c:	00800044 	movi	r2,1
 5085540:	183ef226 	beq	r3,zero,508510c <___vfprintf_internal_r+0x538>
 5085544:	10c00060 	cmpeqi	r3,r2,1
 5085548:	183faf1e 	bne	r3,zero,5085408 <___vfprintf_internal_r+0x834>
 508554c:	108000a0 	cmpeqi	r2,r2,2
 5085550:	1001561e 	bne	r2,zero,5085aac <___vfprintf_internal_r+0xed8>
 5085554:	dc402704 	addi	r17,sp,156
 5085558:	a006d0fa 	srli	r3,r20,3
 508555c:	a808977a 	slli	r4,r21,29
 5085560:	a82ad0fa 	srli	r21,r21,3
 5085564:	a50001cc 	andi	r20,r20,7
 5085568:	a0800c04 	addi	r2,r20,48
 508556c:	20e8b03a 	or	r20,r4,r3
 5085570:	88bfffc5 	stb	r2,-1(r17)
 5085574:	a546b03a 	or	r3,r20,r21
 5085578:	880b883a 	mov	r5,r17
 508557c:	8c7fffc4 	addi	r17,r17,-1
 5085580:	183ff51e 	bne	r3,zero,5085558 <___vfprintf_internal_r+0x984>
 5085584:	60c0004c 	andi	r3,r12,1
 5085588:	18015526 	beq	r3,zero,5085ae0 <___vfprintf_internal_r+0xf0c>
 508558c:	10803fcc 	andi	r2,r2,255
 5085590:	1080201c 	xori	r2,r2,128
 5085594:	10bfe004 	addi	r2,r2,-128
 5085598:	10800c18 	cmpnei	r2,r2,48
 508559c:	10015026 	beq	r2,zero,5085ae0 <___vfprintf_internal_r+0xf0c>
 50855a0:	00800c04 	movi	r2,48
 50855a4:	297fff84 	addi	r5,r5,-2
 50855a8:	88bfffc5 	stb	r2,-1(r17)
 50855ac:	d8802704 	addi	r2,sp,156
 50855b0:	116bc83a 	sub	r21,r2,r5
 50855b4:	db000415 	stw	r12,16(sp)
 50855b8:	2823883a 	mov	r17,r5
 50855bc:	003f9a06 	br	5085428 <___vfprintf_internal_r+0x854>
 50855c0:	bac00007 	ldb	r11,0(r23)
 50855c4:	63002014 	ori	r12,r12,128
 50855c8:	003dce06 	br	5084d04 <___vfprintf_internal_r+0x130>
 50855cc:	bf000007 	ldb	fp,0(r23)
 50855d0:	b8c00044 	addi	r3,r23,1
 50855d4:	e0800aa0 	cmpeqi	r2,fp,42
 50855d8:	1005af1e 	bne	r2,zero,5086c98 <___vfprintf_internal_r+0x20c4>
 50855dc:	e0bff404 	addi	r2,fp,-48
 50855e0:	118002b0 	cmpltui	r6,r2,10
 50855e4:	182f883a 	mov	r23,r3
 50855e8:	0011883a 	mov	r8,zero
 50855ec:	303dc726 	beq	r6,zero,5084d0c <___vfprintf_internal_r+0x138>
 50855f0:	bf000007 	ldb	fp,0(r23)
 50855f4:	420002a4 	muli	r8,r8,10
 50855f8:	bdc00044 	addi	r23,r23,1
 50855fc:	4091883a 	add	r8,r8,r2
 5085600:	e0bff404 	addi	r2,fp,-48
 5085604:	10c002b0 	cmpltui	r3,r2,10
 5085608:	183ff91e 	bne	r3,zero,50855f0 <___vfprintf_internal_r+0xa1c>
 508560c:	003dbf06 	br	5084d0c <___vfprintf_internal_r+0x138>
 5085610:	bf000003 	ldbu	fp,0(r23)
 5085614:	e2c03fcc 	andi	r11,fp,255
 5085618:	5ac0201c 	xori	r11,r11,128
 508561c:	63000114 	ori	r12,r12,4
 5085620:	5affe004 	addi	r11,r11,-128
 5085624:	003db706 	br	5084d04 <___vfprintf_internal_r+0x130>
 5085628:	bac00007 	ldb	r11,0(r23)
 508562c:	01000044 	movi	r4,1
 5085630:	01400ac4 	movi	r5,43
 5085634:	003db306 	br	5084d04 <___vfprintf_internal_r+0x130>
 5085638:	d8800617 	ldw	r2,24(sp)
 508563c:	bf000003 	ldbu	fp,0(r23)
 5085640:	14000017 	ldw	r16,0(r2)
 5085644:	10800104 	addi	r2,r2,4
 5085648:	80028c16 	blt	r16,zero,508607c <___vfprintf_internal_r+0x14a8>
 508564c:	d8800615 	stw	r2,24(sp)
 5085650:	e2c03fcc 	andi	r11,fp,255
 5085654:	5ac0201c 	xori	r11,r11,128
 5085658:	5affe004 	addi	r11,r11,-128
 508565c:	003da906 	br	5084d04 <___vfprintf_internal_r+0x130>
 5085660:	bac00007 	ldb	r11,0(r23)
 5085664:	63000054 	ori	r12,r12,1
 5085668:	003da606 	br	5084d04 <___vfprintf_internal_r+0x130>
 508566c:	28803fcc 	andi	r2,r5,255
 5085670:	1080201c 	xori	r2,r2,128
 5085674:	10bfe004 	addi	r2,r2,-128
 5085678:	bf000003 	ldbu	fp,0(r23)
 508567c:	103ff41e 	bne	r2,zero,5085650 <___vfprintf_internal_r+0xa7c>
 5085680:	e2c03fcc 	andi	r11,fp,255
 5085684:	5ac0201c 	xori	r11,r11,128
 5085688:	01000044 	movi	r4,1
 508568c:	01400804 	movi	r5,32
 5085690:	5affe004 	addi	r11,r11,-128
 5085694:	003d9b06 	br	5084d04 <___vfprintf_internal_r+0x130>
 5085698:	21003fcc 	andi	r4,r4,255
 508569c:	20051e1e 	bne	r4,zero,5086b18 <___vfprintf_internal_r+0x1f44>
 50856a0:	00814274 	movhi	r2,1289
 50856a4:	10980f04 	addi	r2,r2,24636
 50856a8:	d8800c15 	stw	r2,48(sp)
 50856ac:	6080080c 	andi	r2,r12,32
 50856b0:	103f7b1e 	bne	r2,zero,50854a0 <___vfprintf_internal_r+0x8cc>
 50856b4:	d9000617 	ldw	r4,24(sp)
 50856b8:	6080040c 	andi	r2,r12,16
 50856bc:	20c00104 	addi	r3,r4,4
 50856c0:	10025b1e 	bne	r2,zero,5086030 <___vfprintf_internal_r+0x145c>
 50856c4:	6080100c 	andi	r2,r12,64
 50856c8:	10046026 	beq	r2,zero,508684c <___vfprintf_internal_r+0x1c78>
 50856cc:	d8800617 	ldw	r2,24(sp)
 50856d0:	002b883a 	mov	r21,zero
 50856d4:	d8c00615 	stw	r3,24(sp)
 50856d8:	1500000b 	ldhu	r20,0(r2)
 50856dc:	003f7506 	br	50854b4 <___vfprintf_internal_r+0x8e0>
 50856e0:	d8800617 	ldw	r2,24(sp)
 50856e4:	d8001345 	stb	zero,77(sp)
 50856e8:	14400017 	ldw	r17,0(r2)
 50856ec:	10c00104 	addi	r3,r2,4
 50856f0:	88028e26 	beq	r17,zero,508612c <___vfprintf_internal_r+0x1558>
 50856f4:	40bfffe0 	cmpeqi	r2,r8,-1
 50856f8:	1003c01e 	bne	r2,zero,50865fc <___vfprintf_internal_r+0x1a28>
 50856fc:	400d883a 	mov	r6,r8
 5085700:	000b883a 	mov	r5,zero
 5085704:	8809883a 	mov	r4,r17
 5085708:	d8c00715 	stw	r3,28(sp)
 508570c:	db000615 	stw	r12,24(sp)
 5085710:	da000415 	stw	r8,16(sp)
 5085714:	508a4d80 	call	508a4d8 <memchr>
 5085718:	da000417 	ldw	r8,16(sp)
 508571c:	db000617 	ldw	r12,24(sp)
 5085720:	d8c00717 	ldw	r3,28(sp)
 5085724:	1004ec26 	beq	r2,zero,5086ad8 <___vfprintf_internal_r+0x1f04>
 5085728:	146bc83a 	sub	r21,r2,r17
 508572c:	a829883a 	mov	r20,r21
 5085730:	d8c00615 	stw	r3,24(sp)
 5085734:	003dea06 	br	5084ee0 <___vfprintf_internal_r+0x30c>
 5085738:	bac00007 	ldb	r11,0(r23)
 508573c:	63000814 	ori	r12,r12,32
 5085740:	003d7006 	br	5084d04 <___vfprintf_internal_r+0x130>
 5085744:	d8c00617 	ldw	r3,24(sp)
 5085748:	00800c04 	movi	r2,48
 508574c:	d8801385 	stb	r2,78(sp)
 5085750:	00801e04 	movi	r2,120
 5085754:	01014274 	movhi	r4,1289
 5085758:	d88013c5 	stb	r2,79(sp)
 508575c:	18800104 	addi	r2,r3,4
 5085760:	d8800615 	stw	r2,24(sp)
 5085764:	20980f04 	addi	r2,r4,24636
 5085768:	d8800c15 	stw	r2,48(sp)
 508576c:	1d000017 	ldw	r20,0(r3)
 5085770:	002b883a 	mov	r21,zero
 5085774:	63000094 	ori	r12,r12,2
 5085778:	00800084 	movi	r2,2
 508577c:	07001e04 	movi	fp,120
 5085780:	003e5e06 	br	50850fc <___vfprintf_internal_r+0x528>
 5085784:	21003fcc 	andi	r4,r4,255
 5085788:	2004e71e 	bne	r4,zero,5086b28 <___vfprintf_internal_r+0x1f54>
 508578c:	d9000617 	ldw	r4,24(sp)
 5085790:	6080080c 	andi	r2,r12,32
 5085794:	20c00017 	ldw	r3,0(r4)
 5085798:	21000104 	addi	r4,r4,4
 508579c:	d9000615 	stw	r4,24(sp)
 50857a0:	10021e1e 	bne	r2,zero,508601c <___vfprintf_internal_r+0x1448>
 50857a4:	6080040c 	andi	r2,r12,16
 50857a8:	1002ae1e 	bne	r2,zero,5086264 <___vfprintf_internal_r+0x1690>
 50857ac:	6300100c 	andi	r12,r12,64
 50857b0:	6002ac26 	beq	r12,zero,5086264 <___vfprintf_internal_r+0x1690>
 50857b4:	d8800517 	ldw	r2,20(sp)
 50857b8:	1880000d 	sth	r2,0(r3)
 50857bc:	003d3906 	br	5084ca4 <___vfprintf_internal_r+0xd0>
 50857c0:	bac00007 	ldb	r11,0(r23)
 50857c4:	58801b18 	cmpnei	r2,r11,108
 50857c8:	10024926 	beq	r2,zero,50860f0 <___vfprintf_internal_r+0x151c>
 50857cc:	63000414 	ori	r12,r12,16
 50857d0:	003d4c06 	br	5084d04 <___vfprintf_internal_r+0x130>
 50857d4:	e2c01990 	cmplti	r11,fp,102
 50857d8:	5800cb1e 	bne	r11,zero,5085b08 <___vfprintf_internal_r+0xf34>
 50857dc:	d9000917 	ldw	r4,36(sp)
 50857e0:	d9400a17 	ldw	r5,40(sp)
 50857e4:	000d883a 	mov	r6,zero
 50857e8:	000f883a 	mov	r7,zero
 50857ec:	d8c00e15 	stw	r3,56(sp)
 50857f0:	509164c0 	call	509164c <__eqdf2>
 50857f4:	d8c00e17 	ldw	r3,56(sp)
 50857f8:	1001641e 	bne	r2,zero,5085d8c <___vfprintf_internal_r+0x11b8>
 50857fc:	d8801b17 	ldw	r2,108(sp)
 5085800:	01014274 	movhi	r4,1289
 5085804:	21181b04 	addi	r4,r4,24684
 5085808:	10800044 	addi	r2,r2,1
 508580c:	18c00044 	addi	r3,r3,1
 5085810:	b1000015 	stw	r4,0(r22)
 5085814:	01000044 	movi	r4,1
 5085818:	d8801b15 	stw	r2,108(sp)
 508581c:	b1000115 	stw	r4,4(r22)
 5085820:	d8c01c15 	stw	r3,112(sp)
 5085824:	10800208 	cmpgei	r2,r2,8
 5085828:	1003621e 	bne	r2,zero,50865b4 <___vfprintf_internal_r+0x19e0>
 508582c:	b5800204 	addi	r22,r22,8
 5085830:	d8801417 	ldw	r2,80(sp)
 5085834:	d9000817 	ldw	r4,32(sp)
 5085838:	1101e70e 	bge	r2,r4,5085fd8 <___vfprintf_internal_r+0x1404>
 508583c:	d8800d17 	ldw	r2,52(sp)
 5085840:	d9000b17 	ldw	r4,44(sp)
 5085844:	b0800015 	stw	r2,0(r22)
 5085848:	d8801b17 	ldw	r2,108(sp)
 508584c:	1907883a 	add	r3,r3,r4
 5085850:	b1000115 	stw	r4,4(r22)
 5085854:	10800044 	addi	r2,r2,1
 5085858:	d8801b15 	stw	r2,108(sp)
 508585c:	d8c01c15 	stw	r3,112(sp)
 5085860:	10800208 	cmpgei	r2,r2,8
 5085864:	1002291e 	bne	r2,zero,508610c <___vfprintf_internal_r+0x1538>
 5085868:	b5800204 	addi	r22,r22,8
 508586c:	d8800817 	ldw	r2,32(sp)
 5085870:	157fffc4 	addi	r21,r2,-1
 5085874:	057dd30e 	bge	zero,r21,5084fc4 <___vfprintf_internal_r+0x3f0>
 5085878:	01c14274 	movhi	r7,1289
 508587c:	a9000450 	cmplti	r4,r21,17
 5085880:	d8801b17 	ldw	r2,108(sp)
 5085884:	39d82404 	addi	r7,r7,24720
 5085888:	2003461e 	bne	r4,zero,50865a4 <___vfprintf_internal_r+0x19d0>
 508588c:	07000404 	movi	fp,16
 5085890:	3823883a 	mov	r17,r7
 5085894:	00000406 	br	50858a8 <___vfprintf_internal_r+0xcd4>
 5085898:	b5800204 	addi	r22,r22,8
 508589c:	ad7ffc04 	addi	r21,r21,-16
 50858a0:	a9000448 	cmpgei	r4,r21,17
 50858a4:	20033e26 	beq	r4,zero,50865a0 <___vfprintf_internal_r+0x19cc>
 50858a8:	10800044 	addi	r2,r2,1
 50858ac:	18c00404 	addi	r3,r3,16
 50858b0:	b4400015 	stw	r17,0(r22)
 50858b4:	b7000115 	stw	fp,4(r22)
 50858b8:	d8c01c15 	stw	r3,112(sp)
 50858bc:	d8801b15 	stw	r2,108(sp)
 50858c0:	11000208 	cmpgei	r4,r2,8
 50858c4:	203ff426 	beq	r4,zero,5085898 <___vfprintf_internal_r+0xcc4>
 50858c8:	d9801a04 	addi	r6,sp,104
 50858cc:	900b883a 	mov	r5,r18
 50858d0:	9809883a 	mov	r4,r19
 50858d4:	508d4bc0 	call	508d4bc <__sprint_r>
 50858d8:	103dcb1e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 50858dc:	d8c01c17 	ldw	r3,112(sp)
 50858e0:	d8801b17 	ldw	r2,108(sp)
 50858e4:	dd802704 	addi	r22,sp,156
 50858e8:	003fec06 	br	508589c <___vfprintf_internal_r+0xcc8>
 50858ec:	8519c83a 	sub	r12,r16,r20
 50858f0:	033da50e 	bge	zero,r12,5084f88 <___vfprintf_internal_r+0x3b4>
 50858f4:	01c14274 	movhi	r7,1289
 50858f8:	61000450 	cmplti	r4,r12,17
 50858fc:	d8801b17 	ldw	r2,108(sp)
 5085900:	39d82404 	addi	r7,r7,24720
 5085904:	2000281e 	bne	r4,zero,50859a8 <___vfprintf_internal_r+0xdd4>
 5085908:	dc400e15 	stw	r17,56(sp)
 508590c:	dc000f15 	stw	r16,60(sp)
 5085910:	b009883a 	mov	r4,r22
 5085914:	03400404 	movi	r13,16
 5085918:	a02d883a 	mov	r22,r20
 508591c:	6021883a 	mov	r16,r12
 5085920:	4029883a 	mov	r20,r8
 5085924:	3823883a 	mov	r17,r7
 5085928:	00000406 	br	508593c <___vfprintf_internal_r+0xd68>
 508592c:	843ffc04 	addi	r16,r16,-16
 5085930:	81400448 	cmpgei	r5,r16,17
 5085934:	21000204 	addi	r4,r4,8
 5085938:	28001426 	beq	r5,zero,508598c <___vfprintf_internal_r+0xdb8>
 508593c:	10800044 	addi	r2,r2,1
 5085940:	18c00404 	addi	r3,r3,16
 5085944:	24400015 	stw	r17,0(r4)
 5085948:	23400115 	stw	r13,4(r4)
 508594c:	d8c01c15 	stw	r3,112(sp)
 5085950:	d8801b15 	stw	r2,108(sp)
 5085954:	11400208 	cmpgei	r5,r2,8
 5085958:	283ff426 	beq	r5,zero,508592c <___vfprintf_internal_r+0xd58>
 508595c:	d9801a04 	addi	r6,sp,104
 5085960:	900b883a 	mov	r5,r18
 5085964:	9809883a 	mov	r4,r19
 5085968:	508d4bc0 	call	508d4bc <__sprint_r>
 508596c:	103da61e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5085970:	843ffc04 	addi	r16,r16,-16
 5085974:	81400448 	cmpgei	r5,r16,17
 5085978:	d8c01c17 	ldw	r3,112(sp)
 508597c:	d8801b17 	ldw	r2,108(sp)
 5085980:	d9002704 	addi	r4,sp,156
 5085984:	03400404 	movi	r13,16
 5085988:	283fec1e 	bne	r5,zero,508593c <___vfprintf_internal_r+0xd68>
 508598c:	8019883a 	mov	r12,r16
 5085990:	880f883a 	mov	r7,r17
 5085994:	dc000f17 	ldw	r16,60(sp)
 5085998:	dc400e17 	ldw	r17,56(sp)
 508599c:	a011883a 	mov	r8,r20
 50859a0:	b029883a 	mov	r20,r22
 50859a4:	202d883a 	mov	r22,r4
 50859a8:	10800044 	addi	r2,r2,1
 50859ac:	1b07883a 	add	r3,r3,r12
 50859b0:	d8801b15 	stw	r2,108(sp)
 50859b4:	b1c00015 	stw	r7,0(r22)
 50859b8:	b3000115 	stw	r12,4(r22)
 50859bc:	d8c01c15 	stw	r3,112(sp)
 50859c0:	10800208 	cmpgei	r2,r2,8
 50859c4:	1003031e 	bne	r2,zero,50865d4 <___vfprintf_internal_r+0x1a00>
 50859c8:	4551c83a 	sub	r8,r8,r21
 50859cc:	b5800204 	addi	r22,r22,8
 50859d0:	023d6f0e 	bge	zero,r8,5084f90 <___vfprintf_internal_r+0x3bc>
 50859d4:	01c14274 	movhi	r7,1289
 50859d8:	41000450 	cmplti	r4,r8,17
 50859dc:	d8801b17 	ldw	r2,108(sp)
 50859e0:	39d82404 	addi	r7,r7,24720
 50859e4:	2000221e 	bne	r4,zero,5085a70 <___vfprintf_internal_r+0xe9c>
 50859e8:	dc400e15 	stw	r17,56(sp)
 50859ec:	dc000f15 	stw	r16,60(sp)
 50859f0:	03000404 	movi	r12,16
 50859f4:	4021883a 	mov	r16,r8
 50859f8:	3823883a 	mov	r17,r7
 50859fc:	00000406 	br	5085a10 <___vfprintf_internal_r+0xe3c>
 5085a00:	843ffc04 	addi	r16,r16,-16
 5085a04:	81000448 	cmpgei	r4,r16,17
 5085a08:	b5800204 	addi	r22,r22,8
 5085a0c:	20001426 	beq	r4,zero,5085a60 <___vfprintf_internal_r+0xe8c>
 5085a10:	10800044 	addi	r2,r2,1
 5085a14:	18c00404 	addi	r3,r3,16
 5085a18:	b4400015 	stw	r17,0(r22)
 5085a1c:	b3000115 	stw	r12,4(r22)
 5085a20:	d8c01c15 	stw	r3,112(sp)
 5085a24:	d8801b15 	stw	r2,108(sp)
 5085a28:	11000208 	cmpgei	r4,r2,8
 5085a2c:	203ff426 	beq	r4,zero,5085a00 <___vfprintf_internal_r+0xe2c>
 5085a30:	d9801a04 	addi	r6,sp,104
 5085a34:	900b883a 	mov	r5,r18
 5085a38:	9809883a 	mov	r4,r19
 5085a3c:	508d4bc0 	call	508d4bc <__sprint_r>
 5085a40:	103d711e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5085a44:	843ffc04 	addi	r16,r16,-16
 5085a48:	81000448 	cmpgei	r4,r16,17
 5085a4c:	d8c01c17 	ldw	r3,112(sp)
 5085a50:	d8801b17 	ldw	r2,108(sp)
 5085a54:	dd802704 	addi	r22,sp,156
 5085a58:	03000404 	movi	r12,16
 5085a5c:	203fec1e 	bne	r4,zero,5085a10 <___vfprintf_internal_r+0xe3c>
 5085a60:	8011883a 	mov	r8,r16
 5085a64:	880f883a 	mov	r7,r17
 5085a68:	dc000f17 	ldw	r16,60(sp)
 5085a6c:	dc400e17 	ldw	r17,56(sp)
 5085a70:	10800044 	addi	r2,r2,1
 5085a74:	1a07883a 	add	r3,r3,r8
 5085a78:	d8801b15 	stw	r2,108(sp)
 5085a7c:	b1c00015 	stw	r7,0(r22)
 5085a80:	b2000115 	stw	r8,4(r22)
 5085a84:	d8c01c15 	stw	r3,112(sp)
 5085a88:	10800208 	cmpgei	r2,r2,8
 5085a8c:	10014a1e 	bne	r2,zero,5085fb8 <___vfprintf_internal_r+0x13e4>
 5085a90:	b5800204 	addi	r22,r22,8
 5085a94:	003d3e06 	br	5084f90 <___vfprintf_internal_r+0x3bc>
 5085a98:	10c00060 	cmpeqi	r3,r2,1
 5085a9c:	1803bc1e 	bne	r3,zero,5086990 <___vfprintf_internal_r+0x1dbc>
 5085aa0:	108000a0 	cmpeqi	r2,r2,2
 5085aa4:	db000417 	ldw	r12,16(sp)
 5085aa8:	103eaa26 	beq	r2,zero,5085554 <___vfprintf_internal_r+0x980>
 5085aac:	d9000c17 	ldw	r4,48(sp)
 5085ab0:	dc402704 	addi	r17,sp,156
 5085ab4:	a08003cc 	andi	r2,r20,15
 5085ab8:	a806973a 	slli	r3,r21,28
 5085abc:	a028d13a 	srli	r20,r20,4
 5085ac0:	2085883a 	add	r2,r4,r2
 5085ac4:	10800003 	ldbu	r2,0(r2)
 5085ac8:	a82ad13a 	srli	r21,r21,4
 5085acc:	1d28b03a 	or	r20,r3,r20
 5085ad0:	88bfffc5 	stb	r2,-1(r17)
 5085ad4:	a544b03a 	or	r2,r20,r21
 5085ad8:	8c7fffc4 	addi	r17,r17,-1
 5085adc:	103ff51e 	bne	r2,zero,5085ab4 <___vfprintf_internal_r+0xee0>
 5085ae0:	d8802704 	addi	r2,sp,156
 5085ae4:	146bc83a 	sub	r21,r2,r17
 5085ae8:	db000415 	stw	r12,16(sp)
 5085aec:	003e4e06 	br	5085428 <___vfprintf_internal_r+0x854>
 5085af0:	d9801a04 	addi	r6,sp,104
 5085af4:	900b883a 	mov	r5,r18
 5085af8:	9809883a 	mov	r4,r19
 5085afc:	508d4bc0 	call	508d4bc <__sprint_r>
 5085b00:	103d3b26 	beq	r2,zero,5084ff0 <___vfprintf_internal_r+0x41c>
 5085b04:	003d4006 	br	5085008 <___vfprintf_internal_r+0x434>
 5085b08:	d8800817 	ldw	r2,32(sp)
 5085b0c:	da001b17 	ldw	r8,108(sp)
 5085b10:	18c00044 	addi	r3,r3,1
 5085b14:	10800088 	cmpgei	r2,r2,2
 5085b18:	45400044 	addi	r21,r8,1
 5085b1c:	b7000204 	addi	fp,r22,8
 5085b20:	1000f826 	beq	r2,zero,5085f04 <___vfprintf_internal_r+0x1330>
 5085b24:	00800044 	movi	r2,1
 5085b28:	b0800115 	stw	r2,4(r22)
 5085b2c:	b4400015 	stw	r17,0(r22)
 5085b30:	d8c01c15 	stw	r3,112(sp)
 5085b34:	dd401b15 	stw	r21,108(sp)
 5085b38:	a8800210 	cmplti	r2,r21,8
 5085b3c:	1001cc26 	beq	r2,zero,5086270 <___vfprintf_internal_r+0x169c>
 5085b40:	d8800b17 	ldw	r2,44(sp)
 5085b44:	d9000d17 	ldw	r4,52(sp)
 5085b48:	ad400044 	addi	r21,r21,1
 5085b4c:	1887883a 	add	r3,r3,r2
 5085b50:	e0800115 	stw	r2,4(fp)
 5085b54:	e1000015 	stw	r4,0(fp)
 5085b58:	d8c01c15 	stw	r3,112(sp)
 5085b5c:	dd401b15 	stw	r21,108(sp)
 5085b60:	a8800208 	cmpgei	r2,r21,8
 5085b64:	1001cb1e 	bne	r2,zero,5086294 <___vfprintf_internal_r+0x16c0>
 5085b68:	e7000204 	addi	fp,fp,8
 5085b6c:	d9000917 	ldw	r4,36(sp)
 5085b70:	d9400a17 	ldw	r5,40(sp)
 5085b74:	aa000044 	addi	r8,r21,1
 5085b78:	000d883a 	mov	r6,zero
 5085b7c:	000f883a 	mov	r7,zero
 5085b80:	d8c00e15 	stw	r3,56(sp)
 5085b84:	da000715 	stw	r8,28(sp)
 5085b88:	509164c0 	call	509164c <__eqdf2>
 5085b8c:	d8c00817 	ldw	r3,32(sp)
 5085b90:	da000717 	ldw	r8,28(sp)
 5085b94:	e5800204 	addi	r22,fp,8
 5085b98:	1affffc4 	addi	r11,r3,-1
 5085b9c:	d8c00e17 	ldw	r3,56(sp)
 5085ba0:	1000e526 	beq	r2,zero,5085f38 <___vfprintf_internal_r+0x1364>
 5085ba4:	8a400044 	addi	r9,r17,1
 5085ba8:	1ac7883a 	add	r3,r3,r11
 5085bac:	da001b15 	stw	r8,108(sp)
 5085bb0:	e2400015 	stw	r9,0(fp)
 5085bb4:	e2c00115 	stw	r11,4(fp)
 5085bb8:	d8c01c15 	stw	r3,112(sp)
 5085bbc:	42000208 	cmpgei	r8,r8,8
 5085bc0:	40013e1e 	bne	r8,zero,50860bc <___vfprintf_internal_r+0x14e8>
 5085bc4:	e0800404 	addi	r2,fp,16
 5085bc8:	aa000084 	addi	r8,r21,2
 5085bcc:	b039883a 	mov	fp,r22
 5085bd0:	102d883a 	mov	r22,r2
 5085bd4:	d9001017 	ldw	r4,64(sp)
 5085bd8:	d8801644 	addi	r2,sp,89
 5085bdc:	da001b15 	stw	r8,108(sp)
 5085be0:	20c7883a 	add	r3,r4,r3
 5085be4:	e0800015 	stw	r2,0(fp)
 5085be8:	e1000115 	stw	r4,4(fp)
 5085bec:	d8c01c15 	stw	r3,112(sp)
 5085bf0:	42000210 	cmplti	r8,r8,8
 5085bf4:	403cf31e 	bne	r8,zero,5084fc4 <___vfprintf_internal_r+0x3f0>
 5085bf8:	d9801a04 	addi	r6,sp,104
 5085bfc:	900b883a 	mov	r5,r18
 5085c00:	9809883a 	mov	r4,r19
 5085c04:	508d4bc0 	call	508d4bc <__sprint_r>
 5085c08:	103cff1e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5085c0c:	d8c01c17 	ldw	r3,112(sp)
 5085c10:	dd802704 	addi	r22,sp,156
 5085c14:	003ceb06 	br	5084fc4 <___vfprintf_internal_r+0x3f0>
 5085c18:	db000417 	ldw	r12,16(sp)
 5085c1c:	003e4906 	br	5085544 <___vfprintf_internal_r+0x970>
 5085c20:	03014274 	movhi	r12,1289
 5085c24:	39000450 	cmplti	r4,r7,17
 5085c28:	d8801b17 	ldw	r2,108(sp)
 5085c2c:	63182804 	addi	r12,r12,24736
 5085c30:	2000321e 	bne	r4,zero,5085cfc <___vfprintf_internal_r+0x1128>
 5085c34:	dc401115 	stw	r17,68(sp)
 5085c38:	b009883a 	mov	r4,r22
 5085c3c:	9023883a 	mov	r17,r18
 5085c40:	a82d883a 	mov	r22,r21
 5085c44:	ddc01215 	stw	r23,72(sp)
 5085c48:	03c00404 	movi	r15,16
 5085c4c:	a02f883a 	mov	r23,r20
 5085c50:	db800e15 	stw	r14,56(sp)
 5085c54:	8029883a 	mov	r20,r16
 5085c58:	db400f15 	stw	r13,60(sp)
 5085c5c:	402b883a 	mov	r21,r8
 5085c60:	3821883a 	mov	r16,r7
 5085c64:	6025883a 	mov	r18,r12
 5085c68:	00000406 	br	5085c7c <___vfprintf_internal_r+0x10a8>
 5085c6c:	843ffc04 	addi	r16,r16,-16
 5085c70:	81800448 	cmpgei	r6,r16,17
 5085c74:	21000204 	addi	r4,r4,8
 5085c78:	30001426 	beq	r6,zero,5085ccc <___vfprintf_internal_r+0x10f8>
 5085c7c:	10800044 	addi	r2,r2,1
 5085c80:	18c00404 	addi	r3,r3,16
 5085c84:	24800015 	stw	r18,0(r4)
 5085c88:	23c00115 	stw	r15,4(r4)
 5085c8c:	d8c01c15 	stw	r3,112(sp)
 5085c90:	d8801b15 	stw	r2,108(sp)
 5085c94:	11800208 	cmpgei	r6,r2,8
 5085c98:	303ff426 	beq	r6,zero,5085c6c <___vfprintf_internal_r+0x1098>
 5085c9c:	d9801a04 	addi	r6,sp,104
 5085ca0:	880b883a 	mov	r5,r17
 5085ca4:	9809883a 	mov	r4,r19
 5085ca8:	508d4bc0 	call	508d4bc <__sprint_r>
 5085cac:	1001b91e 	bne	r2,zero,5086394 <___vfprintf_internal_r+0x17c0>
 5085cb0:	843ffc04 	addi	r16,r16,-16
 5085cb4:	81800448 	cmpgei	r6,r16,17
 5085cb8:	d8c01c17 	ldw	r3,112(sp)
 5085cbc:	d8801b17 	ldw	r2,108(sp)
 5085cc0:	d9002704 	addi	r4,sp,156
 5085cc4:	03c00404 	movi	r15,16
 5085cc8:	303fec1e 	bne	r6,zero,5085c7c <___vfprintf_internal_r+0x10a8>
 5085ccc:	800f883a 	mov	r7,r16
 5085cd0:	9019883a 	mov	r12,r18
 5085cd4:	a021883a 	mov	r16,r20
 5085cd8:	8825883a 	mov	r18,r17
 5085cdc:	b829883a 	mov	r20,r23
 5085ce0:	db800e17 	ldw	r14,56(sp)
 5085ce4:	db400f17 	ldw	r13,60(sp)
 5085ce8:	ddc01217 	ldw	r23,72(sp)
 5085cec:	dc401117 	ldw	r17,68(sp)
 5085cf0:	a811883a 	mov	r8,r21
 5085cf4:	b02b883a 	mov	r21,r22
 5085cf8:	202d883a 	mov	r22,r4
 5085cfc:	10800044 	addi	r2,r2,1
 5085d00:	19c7883a 	add	r3,r3,r7
 5085d04:	d8801b15 	stw	r2,108(sp)
 5085d08:	b3000015 	stw	r12,0(r22)
 5085d0c:	b1c00115 	stw	r7,4(r22)
 5085d10:	d8c01c15 	stw	r3,112(sp)
 5085d14:	10800208 	cmpgei	r2,r2,8
 5085d18:	1001671e 	bne	r2,zero,50862b8 <___vfprintf_internal_r+0x16e4>
 5085d1c:	b5800204 	addi	r22,r22,8
 5085d20:	003c7c06 	br	5084f14 <___vfprintf_internal_r+0x340>
 5085d24:	d9801a04 	addi	r6,sp,104
 5085d28:	900b883a 	mov	r5,r18
 5085d2c:	9809883a 	mov	r4,r19
 5085d30:	da001115 	stw	r8,68(sp)
 5085d34:	db400f15 	stw	r13,60(sp)
 5085d38:	db800e15 	stw	r14,56(sp)
 5085d3c:	508d4bc0 	call	508d4bc <__sprint_r>
 5085d40:	103cb11e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5085d44:	d8c01c17 	ldw	r3,112(sp)
 5085d48:	da001117 	ldw	r8,68(sp)
 5085d4c:	db400f17 	ldw	r13,60(sp)
 5085d50:	db800e17 	ldw	r14,56(sp)
 5085d54:	dd802704 	addi	r22,sp,156
 5085d58:	003c7c06 	br	5084f4c <___vfprintf_internal_r+0x378>
 5085d5c:	d9801a04 	addi	r6,sp,104
 5085d60:	900b883a 	mov	r5,r18
 5085d64:	9809883a 	mov	r4,r19
 5085d68:	da000f15 	stw	r8,60(sp)
 5085d6c:	db400e15 	stw	r13,56(sp)
 5085d70:	508d4bc0 	call	508d4bc <__sprint_r>
 5085d74:	103ca41e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5085d78:	d8c01c17 	ldw	r3,112(sp)
 5085d7c:	da000f17 	ldw	r8,60(sp)
 5085d80:	db400e17 	ldw	r13,56(sp)
 5085d84:	dd802704 	addi	r22,sp,156
 5085d88:	003c7d06 	br	5084f80 <___vfprintf_internal_r+0x3ac>
 5085d8c:	d9401417 	ldw	r5,80(sp)
 5085d90:	0141570e 	bge	zero,r5,50862f0 <___vfprintf_internal_r+0x171c>
 5085d94:	d8800717 	ldw	r2,28(sp)
 5085d98:	d9000817 	ldw	r4,32(sp)
 5085d9c:	102b883a 	mov	r21,r2
 5085da0:	2080b916 	blt	r4,r2,5086088 <___vfprintf_internal_r+0x14b4>
 5085da4:	05400a0e 	bge	zero,r21,5085dd0 <___vfprintf_internal_r+0x11fc>
 5085da8:	d8801b17 	ldw	r2,108(sp)
 5085dac:	1d47883a 	add	r3,r3,r21
 5085db0:	b4400015 	stw	r17,0(r22)
 5085db4:	10800044 	addi	r2,r2,1
 5085db8:	d8801b15 	stw	r2,108(sp)
 5085dbc:	b5400115 	stw	r21,4(r22)
 5085dc0:	d8c01c15 	stw	r3,112(sp)
 5085dc4:	10800208 	cmpgei	r2,r2,8
 5085dc8:	10032d1e 	bne	r2,zero,5086a80 <___vfprintf_internal_r+0x1eac>
 5085dcc:	b5800204 	addi	r22,r22,8
 5085dd0:	a800c516 	blt	r21,zero,50860e8 <___vfprintf_internal_r+0x1514>
 5085dd4:	d8800717 	ldw	r2,28(sp)
 5085dd8:	156bc83a 	sub	r21,r2,r21
 5085ddc:	0540db16 	blt	zero,r21,508614c <___vfprintf_internal_r+0x1578>
 5085de0:	dd401417 	ldw	r21,80(sp)
 5085de4:	d8800817 	ldw	r2,32(sp)
 5085de8:	a880aa0e 	bge	r21,r2,5086094 <___vfprintf_internal_r+0x14c0>
 5085dec:	d8800d17 	ldw	r2,52(sp)
 5085df0:	d9000b17 	ldw	r4,44(sp)
 5085df4:	b0800015 	stw	r2,0(r22)
 5085df8:	d8801b17 	ldw	r2,108(sp)
 5085dfc:	1907883a 	add	r3,r3,r4
 5085e00:	b1000115 	stw	r4,4(r22)
 5085e04:	10800044 	addi	r2,r2,1
 5085e08:	d8801b15 	stw	r2,108(sp)
 5085e0c:	d8c01c15 	stw	r3,112(sp)
 5085e10:	10800208 	cmpgei	r2,r2,8
 5085e14:	1003111e 	bne	r2,zero,5086a5c <___vfprintf_internal_r+0x1e88>
 5085e18:	b5800204 	addi	r22,r22,8
 5085e1c:	d9000817 	ldw	r4,32(sp)
 5085e20:	d9400717 	ldw	r5,28(sp)
 5085e24:	2545c83a 	sub	r2,r4,r21
 5085e28:	2149c83a 	sub	r4,r4,r5
 5085e2c:	102b883a 	mov	r21,r2
 5085e30:	2080010e 	bge	r4,r2,5085e38 <___vfprintf_internal_r+0x1264>
 5085e34:	202b883a 	mov	r21,r4
 5085e38:	05400c0e 	bge	zero,r21,5085e6c <___vfprintf_internal_r+0x1298>
 5085e3c:	d9000717 	ldw	r4,28(sp)
 5085e40:	1d47883a 	add	r3,r3,r21
 5085e44:	b5400115 	stw	r21,4(r22)
 5085e48:	8913883a 	add	r9,r17,r4
 5085e4c:	d9001b17 	ldw	r4,108(sp)
 5085e50:	b2400015 	stw	r9,0(r22)
 5085e54:	d8c01c15 	stw	r3,112(sp)
 5085e58:	21000044 	addi	r4,r4,1
 5085e5c:	d9001b15 	stw	r4,108(sp)
 5085e60:	21000208 	cmpgei	r4,r4,8
 5085e64:	2003111e 	bne	r4,zero,5086aac <___vfprintf_internal_r+0x1ed8>
 5085e68:	b5800204 	addi	r22,r22,8
 5085e6c:	a800010e 	bge	r21,zero,5085e74 <___vfprintf_internal_r+0x12a0>
 5085e70:	002b883a 	mov	r21,zero
 5085e74:	156bc83a 	sub	r21,r2,r21
 5085e78:	057c520e 	bge	zero,r21,5084fc4 <___vfprintf_internal_r+0x3f0>
 5085e7c:	01c14274 	movhi	r7,1289
 5085e80:	a9000450 	cmplti	r4,r21,17
 5085e84:	d8801b17 	ldw	r2,108(sp)
 5085e88:	39d82404 	addi	r7,r7,24720
 5085e8c:	2001c51e 	bne	r4,zero,50865a4 <___vfprintf_internal_r+0x19d0>
 5085e90:	07000404 	movi	fp,16
 5085e94:	3823883a 	mov	r17,r7
 5085e98:	00000406 	br	5085eac <___vfprintf_internal_r+0x12d8>
 5085e9c:	b5800204 	addi	r22,r22,8
 5085ea0:	ad7ffc04 	addi	r21,r21,-16
 5085ea4:	a9000448 	cmpgei	r4,r21,17
 5085ea8:	2001bd26 	beq	r4,zero,50865a0 <___vfprintf_internal_r+0x19cc>
 5085eac:	10800044 	addi	r2,r2,1
 5085eb0:	18c00404 	addi	r3,r3,16
 5085eb4:	b4400015 	stw	r17,0(r22)
 5085eb8:	b7000115 	stw	fp,4(r22)
 5085ebc:	d8c01c15 	stw	r3,112(sp)
 5085ec0:	d8801b15 	stw	r2,108(sp)
 5085ec4:	11000208 	cmpgei	r4,r2,8
 5085ec8:	203ff426 	beq	r4,zero,5085e9c <___vfprintf_internal_r+0x12c8>
 5085ecc:	d9801a04 	addi	r6,sp,104
 5085ed0:	900b883a 	mov	r5,r18
 5085ed4:	9809883a 	mov	r4,r19
 5085ed8:	508d4bc0 	call	508d4bc <__sprint_r>
 5085edc:	103c4a1e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5085ee0:	d8c01c17 	ldw	r3,112(sp)
 5085ee4:	d8801b17 	ldw	r2,108(sp)
 5085ee8:	dd802704 	addi	r22,sp,156
 5085eec:	003fec06 	br	5085ea0 <___vfprintf_internal_r+0x12cc>
 5085ef0:	4002a71e 	bne	r8,zero,5086990 <___vfprintf_internal_r+0x1dbc>
 5085ef4:	0011883a 	mov	r8,zero
 5085ef8:	002b883a 	mov	r21,zero
 5085efc:	dc402704 	addi	r17,sp,156
 5085f00:	003d4906 	br	5085428 <___vfprintf_internal_r+0x854>
 5085f04:	d8800417 	ldw	r2,16(sp)
 5085f08:	1080004c 	andi	r2,r2,1
 5085f0c:	103f051e 	bne	r2,zero,5085b24 <___vfprintf_internal_r+0xf50>
 5085f10:	00800044 	movi	r2,1
 5085f14:	dd401b15 	stw	r21,108(sp)
 5085f18:	b4400015 	stw	r17,0(r22)
 5085f1c:	b0800115 	stw	r2,4(r22)
 5085f20:	d8c01c15 	stw	r3,112(sp)
 5085f24:	ad400208 	cmpgei	r21,r21,8
 5085f28:	a800641e 	bne	r21,zero,50860bc <___vfprintf_internal_r+0x14e8>
 5085f2c:	42000084 	addi	r8,r8,2
 5085f30:	b5800404 	addi	r22,r22,16
 5085f34:	003f2706 	br	5085bd4 <___vfprintf_internal_r+0x1000>
 5085f38:	02ff260e 	bge	zero,r11,5085bd4 <___vfprintf_internal_r+0x1000>
 5085f3c:	58800450 	cmplti	r2,r11,17
 5085f40:	01c14274 	movhi	r7,1289
 5085f44:	10034c1e 	bne	r2,zero,5086c78 <___vfprintf_internal_r+0x20a4>
 5085f48:	39d82404 	addi	r7,r7,24720
 5085f4c:	dc000715 	stw	r16,28(sp)
 5085f50:	05800404 	movi	r22,16
 5085f54:	5823883a 	mov	r17,r11
 5085f58:	3821883a 	mov	r16,r7
 5085f5c:	402b883a 	mov	r21,r8
 5085f60:	00000506 	br	5085f78 <___vfprintf_internal_r+0x13a4>
 5085f64:	e7000204 	addi	fp,fp,8
 5085f68:	8c7ffc04 	addi	r17,r17,-16
 5085f6c:	88800448 	cmpgei	r2,r17,17
 5085f70:	1001d626 	beq	r2,zero,50866cc <___vfprintf_internal_r+0x1af8>
 5085f74:	ad400044 	addi	r21,r21,1
 5085f78:	18c00404 	addi	r3,r3,16
 5085f7c:	e4000015 	stw	r16,0(fp)
 5085f80:	e5800115 	stw	r22,4(fp)
 5085f84:	d8c01c15 	stw	r3,112(sp)
 5085f88:	dd401b15 	stw	r21,108(sp)
 5085f8c:	a8800208 	cmpgei	r2,r21,8
 5085f90:	103ff426 	beq	r2,zero,5085f64 <___vfprintf_internal_r+0x1390>
 5085f94:	d9801a04 	addi	r6,sp,104
 5085f98:	900b883a 	mov	r5,r18
 5085f9c:	9809883a 	mov	r4,r19
 5085fa0:	508d4bc0 	call	508d4bc <__sprint_r>
 5085fa4:	103c181e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5085fa8:	dd401b17 	ldw	r21,108(sp)
 5085fac:	d8c01c17 	ldw	r3,112(sp)
 5085fb0:	df002704 	addi	fp,sp,156
 5085fb4:	003fec06 	br	5085f68 <___vfprintf_internal_r+0x1394>
 5085fb8:	d9801a04 	addi	r6,sp,104
 5085fbc:	900b883a 	mov	r5,r18
 5085fc0:	9809883a 	mov	r4,r19
 5085fc4:	508d4bc0 	call	508d4bc <__sprint_r>
 5085fc8:	103c0f1e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5085fcc:	d8c01c17 	ldw	r3,112(sp)
 5085fd0:	dd802704 	addi	r22,sp,156
 5085fd4:	003bee06 	br	5084f90 <___vfprintf_internal_r+0x3bc>
 5085fd8:	d8800417 	ldw	r2,16(sp)
 5085fdc:	1080004c 	andi	r2,r2,1
 5085fe0:	103bf826 	beq	r2,zero,5084fc4 <___vfprintf_internal_r+0x3f0>
 5085fe4:	003e1506 	br	508583c <___vfprintf_internal_r+0xc68>
 5085fe8:	dc402704 	addi	r17,sp,156
 5085fec:	003d0e06 	br	5085428 <___vfprintf_internal_r+0x854>
 5085ff0:	00800c04 	movi	r2,48
 5085ff4:	d8801385 	stb	r2,78(sp)
 5085ff8:	df0013c5 	stb	fp,79(sp)
 5085ffc:	63000094 	ori	r12,r12,2
 5086000:	00800084 	movi	r2,2
 5086004:	003c3d06 	br	50850fc <___vfprintf_internal_r+0x528>
 5086008:	25000017 	ldw	r20,0(r4)
 508600c:	002b883a 	mov	r21,zero
 5086010:	d8c00615 	stw	r3,24(sp)
 5086014:	00800044 	movi	r2,1
 5086018:	003c3806 	br	50850fc <___vfprintf_internal_r+0x528>
 508601c:	d9000517 	ldw	r4,20(sp)
 5086020:	2005d7fa 	srai	r2,r4,31
 5086024:	19000015 	stw	r4,0(r3)
 5086028:	18800115 	stw	r2,4(r3)
 508602c:	003b1d06 	br	5084ca4 <___vfprintf_internal_r+0xd0>
 5086030:	25000017 	ldw	r20,0(r4)
 5086034:	002b883a 	mov	r21,zero
 5086038:	d8c00615 	stw	r3,24(sp)
 508603c:	003d1d06 	br	50854b4 <___vfprintf_internal_r+0x8e0>
 5086040:	25000017 	ldw	r20,0(r4)
 5086044:	002b883a 	mov	r21,zero
 5086048:	d8c00615 	stw	r3,24(sp)
 508604c:	0005883a 	mov	r2,zero
 5086050:	003c2a06 	br	50850fc <___vfprintf_internal_r+0x528>
 5086054:	18800017 	ldw	r2,0(r3)
 5086058:	d8800915 	stw	r2,36(sp)
 508605c:	18800117 	ldw	r2,4(r3)
 5086060:	d8800a15 	stw	r2,40(sp)
 5086064:	003c5b06 	br	50851d4 <___vfprintf_internal_r+0x600>
 5086068:	25000017 	ldw	r20,0(r4)
 508606c:	d8c00615 	stw	r3,24(sp)
 5086070:	a02bd7fa 	srai	r21,r20,31
 5086074:	a805883a 	mov	r2,r21
 5086078:	003cd906 	br	50853e0 <___vfprintf_internal_r+0x80c>
 508607c:	0421c83a 	sub	r16,zero,r16
 5086080:	d8800615 	stw	r2,24(sp)
 5086084:	003d6306 	br	5085614 <___vfprintf_internal_r+0xa40>
 5086088:	202b883a 	mov	r21,r4
 508608c:	057f4616 	blt	zero,r21,5085da8 <___vfprintf_internal_r+0x11d4>
 5086090:	003f4f06 	br	5085dd0 <___vfprintf_internal_r+0x11fc>
 5086094:	d8800417 	ldw	r2,16(sp)
 5086098:	1080004c 	andi	r2,r2,1
 508609c:	103f531e 	bne	r2,zero,5085dec <___vfprintf_internal_r+0x1218>
 50860a0:	d9000817 	ldw	r4,32(sp)
 50860a4:	d9400717 	ldw	r5,28(sp)
 50860a8:	2545c83a 	sub	r2,r4,r21
 50860ac:	216bc83a 	sub	r21,r4,r5
 50860b0:	157f6e0e 	bge	r2,r21,5085e6c <___vfprintf_internal_r+0x1298>
 50860b4:	102b883a 	mov	r21,r2
 50860b8:	003f6c06 	br	5085e6c <___vfprintf_internal_r+0x1298>
 50860bc:	d9801a04 	addi	r6,sp,104
 50860c0:	900b883a 	mov	r5,r18
 50860c4:	9809883a 	mov	r4,r19
 50860c8:	508d4bc0 	call	508d4bc <__sprint_r>
 50860cc:	103bce1e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 50860d0:	da001b17 	ldw	r8,108(sp)
 50860d4:	d8c01c17 	ldw	r3,112(sp)
 50860d8:	dd802904 	addi	r22,sp,164
 50860dc:	42000044 	addi	r8,r8,1
 50860e0:	df002704 	addi	fp,sp,156
 50860e4:	003ebb06 	br	5085bd4 <___vfprintf_internal_r+0x1000>
 50860e8:	002b883a 	mov	r21,zero
 50860ec:	003f3906 	br	5085dd4 <___vfprintf_internal_r+0x1200>
 50860f0:	bf000043 	ldbu	fp,1(r23)
 50860f4:	63000814 	ori	r12,r12,32
 50860f8:	bdc00044 	addi	r23,r23,1
 50860fc:	e2c03fcc 	andi	r11,fp,255
 5086100:	5ac0201c 	xori	r11,r11,128
 5086104:	5affe004 	addi	r11,r11,-128
 5086108:	003afe06 	br	5084d04 <___vfprintf_internal_r+0x130>
 508610c:	d9801a04 	addi	r6,sp,104
 5086110:	900b883a 	mov	r5,r18
 5086114:	9809883a 	mov	r4,r19
 5086118:	508d4bc0 	call	508d4bc <__sprint_r>
 508611c:	103bba1e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5086120:	d8c01c17 	ldw	r3,112(sp)
 5086124:	dd802704 	addi	r22,sp,156
 5086128:	003dd006 	br	508586c <___vfprintf_internal_r+0xc98>
 508612c:	408001f0 	cmpltui	r2,r8,7
 5086130:	402b883a 	mov	r21,r8
 5086134:	1001e726 	beq	r2,zero,50868d4 <___vfprintf_internal_r+0x1d00>
 5086138:	04414274 	movhi	r17,1289
 508613c:	a829883a 	mov	r20,r21
 5086140:	d8c00615 	stw	r3,24(sp)
 5086144:	8c581904 	addi	r17,r17,24676
 5086148:	003b6506 	br	5084ee0 <___vfprintf_internal_r+0x30c>
 508614c:	01c14274 	movhi	r7,1289
 5086150:	a9000450 	cmplti	r4,r21,17
 5086154:	d8801b17 	ldw	r2,108(sp)
 5086158:	39d82404 	addi	r7,r7,24720
 508615c:	2001c21e 	bne	r4,zero,5086868 <___vfprintf_internal_r+0x1c94>
 5086160:	dc000e15 	stw	r16,56(sp)
 5086164:	07000404 	movi	fp,16
 5086168:	3821883a 	mov	r16,r7
 508616c:	00000406 	br	5086180 <___vfprintf_internal_r+0x15ac>
 5086170:	b5800204 	addi	r22,r22,8
 5086174:	ad7ffc04 	addi	r21,r21,-16
 5086178:	a9000448 	cmpgei	r4,r21,17
 508617c:	2001b826 	beq	r4,zero,5086860 <___vfprintf_internal_r+0x1c8c>
 5086180:	10800044 	addi	r2,r2,1
 5086184:	18c00404 	addi	r3,r3,16
 5086188:	b4000015 	stw	r16,0(r22)
 508618c:	b7000115 	stw	fp,4(r22)
 5086190:	d8c01c15 	stw	r3,112(sp)
 5086194:	d8801b15 	stw	r2,108(sp)
 5086198:	11000208 	cmpgei	r4,r2,8
 508619c:	203ff426 	beq	r4,zero,5086170 <___vfprintf_internal_r+0x159c>
 50861a0:	d9801a04 	addi	r6,sp,104
 50861a4:	900b883a 	mov	r5,r18
 50861a8:	9809883a 	mov	r4,r19
 50861ac:	508d4bc0 	call	508d4bc <__sprint_r>
 50861b0:	103b951e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 50861b4:	d8c01c17 	ldw	r3,112(sp)
 50861b8:	d8801b17 	ldw	r2,108(sp)
 50861bc:	dd802704 	addi	r22,sp,156
 50861c0:	003fec06 	br	5086174 <___vfprintf_internal_r+0x15a0>
 50861c4:	dc402704 	addi	r17,sp,156
 50861c8:	a805883a 	mov	r2,r21
 50861cc:	dc000715 	stw	r16,28(sp)
 50861d0:	902b883a 	mov	r21,r18
 50861d4:	8821883a 	mov	r16,r17
 50861d8:	db000415 	stw	r12,16(sp)
 50861dc:	a023883a 	mov	r17,r20
 50861e0:	da000e15 	stw	r8,56(sp)
 50861e4:	9829883a 	mov	r20,r19
 50861e8:	1025883a 	mov	r18,r2
 50861ec:	6827883a 	mov	r19,r13
 50861f0:	8809883a 	mov	r4,r17
 50861f4:	900b883a 	mov	r5,r18
 50861f8:	01800284 	movi	r6,10
 50861fc:	000f883a 	mov	r7,zero
 5086200:	508ffcc0 	call	508ffcc <__umoddi3>
 5086204:	10800c04 	addi	r2,r2,48
 5086208:	8809883a 	mov	r4,r17
 508620c:	900b883a 	mov	r5,r18
 5086210:	01800284 	movi	r6,10
 5086214:	000f883a 	mov	r7,zero
 5086218:	80bfffc5 	stb	r2,-1(r16)
 508621c:	508fa3c0 	call	508fa3c <__udivdi3>
 5086220:	900d883a 	mov	r6,r18
 5086224:	880f883a 	mov	r7,r17
 5086228:	843fffc4 	addi	r16,r16,-1
 508622c:	1023883a 	mov	r17,r2
 5086230:	1825883a 	mov	r18,r3
 5086234:	303fee1e 	bne	r6,zero,50861f0 <___vfprintf_internal_r+0x161c>
 5086238:	39c002a8 	cmpgeui	r7,r7,10
 508623c:	383fec1e 	bne	r7,zero,50861f0 <___vfprintf_internal_r+0x161c>
 5086240:	8023883a 	mov	r17,r16
 5086244:	d8802704 	addi	r2,sp,156
 5086248:	981b883a 	mov	r13,r19
 508624c:	a825883a 	mov	r18,r21
 5086250:	dc000717 	ldw	r16,28(sp)
 5086254:	da000e17 	ldw	r8,56(sp)
 5086258:	a027883a 	mov	r19,r20
 508625c:	146bc83a 	sub	r21,r2,r17
 5086260:	003c7106 	br	5085428 <___vfprintf_internal_r+0x854>
 5086264:	d8800517 	ldw	r2,20(sp)
 5086268:	18800015 	stw	r2,0(r3)
 508626c:	003a8d06 	br	5084ca4 <___vfprintf_internal_r+0xd0>
 5086270:	d9801a04 	addi	r6,sp,104
 5086274:	900b883a 	mov	r5,r18
 5086278:	9809883a 	mov	r4,r19
 508627c:	508d4bc0 	call	508d4bc <__sprint_r>
 5086280:	103b611e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5086284:	d8c01c17 	ldw	r3,112(sp)
 5086288:	dd401b17 	ldw	r21,108(sp)
 508628c:	df002704 	addi	fp,sp,156
 5086290:	003e2b06 	br	5085b40 <___vfprintf_internal_r+0xf6c>
 5086294:	d9801a04 	addi	r6,sp,104
 5086298:	900b883a 	mov	r5,r18
 508629c:	9809883a 	mov	r4,r19
 50862a0:	508d4bc0 	call	508d4bc <__sprint_r>
 50862a4:	103b581e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 50862a8:	d8c01c17 	ldw	r3,112(sp)
 50862ac:	dd401b17 	ldw	r21,108(sp)
 50862b0:	df002704 	addi	fp,sp,156
 50862b4:	003e2d06 	br	5085b6c <___vfprintf_internal_r+0xf98>
 50862b8:	d9801a04 	addi	r6,sp,104
 50862bc:	900b883a 	mov	r5,r18
 50862c0:	9809883a 	mov	r4,r19
 50862c4:	da001115 	stw	r8,68(sp)
 50862c8:	db400f15 	stw	r13,60(sp)
 50862cc:	db800e15 	stw	r14,56(sp)
 50862d0:	508d4bc0 	call	508d4bc <__sprint_r>
 50862d4:	103b4c1e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 50862d8:	d8c01c17 	ldw	r3,112(sp)
 50862dc:	da001117 	ldw	r8,68(sp)
 50862e0:	db400f17 	ldw	r13,60(sp)
 50862e4:	db800e17 	ldw	r14,56(sp)
 50862e8:	dd802704 	addi	r22,sp,156
 50862ec:	003b0906 	br	5084f14 <___vfprintf_internal_r+0x340>
 50862f0:	d8801b17 	ldw	r2,108(sp)
 50862f4:	01014274 	movhi	r4,1289
 50862f8:	21181b04 	addi	r4,r4,24684
 50862fc:	10800044 	addi	r2,r2,1
 5086300:	18c00044 	addi	r3,r3,1
 5086304:	b1000015 	stw	r4,0(r22)
 5086308:	01000044 	movi	r4,1
 508630c:	d8801b15 	stw	r2,108(sp)
 5086310:	b1000115 	stw	r4,4(r22)
 5086314:	d8c01c15 	stw	r3,112(sp)
 5086318:	10800208 	cmpgei	r2,r2,8
 508631c:	1001641e 	bne	r2,zero,50868b0 <___vfprintf_internal_r+0x1cdc>
 5086320:	b5800204 	addi	r22,r22,8
 5086324:	2800bd1e 	bne	r5,zero,508661c <___vfprintf_internal_r+0x1a48>
 5086328:	d8800417 	ldw	r2,16(sp)
 508632c:	d9000817 	ldw	r4,32(sp)
 5086330:	1080004c 	andi	r2,r2,1
 5086334:	1104b03a 	or	r2,r2,r4
 5086338:	103b2226 	beq	r2,zero,5084fc4 <___vfprintf_internal_r+0x3f0>
 508633c:	d8800d17 	ldw	r2,52(sp)
 5086340:	d9000b17 	ldw	r4,44(sp)
 5086344:	b0800015 	stw	r2,0(r22)
 5086348:	d8801b17 	ldw	r2,108(sp)
 508634c:	20c7883a 	add	r3,r4,r3
 5086350:	b1000115 	stw	r4,4(r22)
 5086354:	10800044 	addi	r2,r2,1
 5086358:	d8c01c15 	stw	r3,112(sp)
 508635c:	d8801b15 	stw	r2,108(sp)
 5086360:	11000208 	cmpgei	r4,r2,8
 5086364:	2001771e 	bne	r4,zero,5086944 <___vfprintf_internal_r+0x1d70>
 5086368:	b5800204 	addi	r22,r22,8
 508636c:	d9000817 	ldw	r4,32(sp)
 5086370:	10800044 	addi	r2,r2,1
 5086374:	d8801b15 	stw	r2,108(sp)
 5086378:	20c7883a 	add	r3,r4,r3
 508637c:	b4400015 	stw	r17,0(r22)
 5086380:	b1000115 	stw	r4,4(r22)
 5086384:	d8c01c15 	stw	r3,112(sp)
 5086388:	10800208 	cmpgei	r2,r2,8
 508638c:	103b0c26 	beq	r2,zero,5084fc0 <___vfprintf_internal_r+0x3ec>
 5086390:	003e1906 	br	5085bf8 <___vfprintf_internal_r+0x1024>
 5086394:	8825883a 	mov	r18,r17
 5086398:	003b1b06 	br	5085008 <___vfprintf_internal_r+0x434>
 508639c:	d9000917 	ldw	r4,36(sp)
 50863a0:	d9400a17 	ldw	r5,40(sp)
 50863a4:	da000615 	stw	r8,24(sp)
 50863a8:	200d883a 	mov	r6,r4
 50863ac:	280f883a 	mov	r7,r5
 50863b0:	db000415 	stw	r12,16(sp)
 50863b4:	50927c40 	call	50927c4 <__unorddf2>
 50863b8:	db000417 	ldw	r12,16(sp)
 50863bc:	da000617 	ldw	r8,24(sp)
 50863c0:	1002061e 	bne	r2,zero,5086bdc <___vfprintf_internal_r+0x2008>
 50863c4:	057ff7c4 	movi	r21,-33
 50863c8:	40bfffe0 	cmpeqi	r2,r8,-1
 50863cc:	e56a703a 	and	r21,fp,r21
 50863d0:	1001b41e 	bne	r2,zero,5086aa4 <___vfprintf_internal_r+0x1ed0>
 50863d4:	a88011d8 	cmpnei	r2,r21,71
 50863d8:	10015726 	beq	r2,zero,5086938 <___vfprintf_internal_r+0x1d64>
 50863dc:	60804014 	ori	r2,r12,256
 50863e0:	d8800415 	stw	r2,16(sp)
 50863e4:	d8800a17 	ldw	r2,40(sp)
 50863e8:	10012d16 	blt	r2,zero,50868a0 <___vfprintf_internal_r+0x1ccc>
 50863ec:	dd000a17 	ldw	r20,40(sp)
 50863f0:	d8000605 	stb	zero,24(sp)
 50863f4:	e08019a0 	cmpeqi	r2,fp,102
 50863f8:	d8800f15 	stw	r2,60(sp)
 50863fc:	1000d21e 	bne	r2,zero,5086748 <___vfprintf_internal_r+0x1b74>
 5086400:	e08011a0 	cmpeqi	r2,fp,70
 5086404:	1000d01e 	bne	r2,zero,5086748 <___vfprintf_internal_r+0x1b74>
 5086408:	a8801158 	cmpnei	r2,r21,69
 508640c:	10016226 	beq	r2,zero,5086998 <___vfprintf_internal_r+0x1dc4>
 5086410:	d8801804 	addi	r2,sp,96
 5086414:	d8800315 	stw	r2,12(sp)
 5086418:	d9400917 	ldw	r5,36(sp)
 508641c:	d8801504 	addi	r2,sp,84
 5086420:	d8800215 	stw	r2,8(sp)
 5086424:	d8801404 	addi	r2,sp,80
 5086428:	da000015 	stw	r8,0(sp)
 508642c:	9809883a 	mov	r4,r19
 5086430:	d8800115 	stw	r2,4(sp)
 5086434:	01c00084 	movi	r7,2
 5086438:	a00d883a 	mov	r6,r20
 508643c:	db000815 	stw	r12,32(sp)
 5086440:	da000715 	stw	r8,28(sp)
 5086444:	50872900 	call	5087290 <_dtoa_r>
 5086448:	da000717 	ldw	r8,28(sp)
 508644c:	e10019d8 	cmpnei	r4,fp,103
 5086450:	db000817 	ldw	r12,32(sp)
 5086454:	1023883a 	mov	r17,r2
 5086458:	4007883a 	mov	r3,r8
 508645c:	2001621e 	bne	r4,zero,50869e8 <___vfprintf_internal_r+0x1e14>
 5086460:	6080004c 	andi	r2,r12,1
 5086464:	1001621e 	bne	r2,zero,50869f0 <___vfprintf_internal_r+0x1e1c>
 5086468:	d8801417 	ldw	r2,80(sp)
 508646c:	ad4011e0 	cmpeqi	r21,r21,71
 5086470:	d8800715 	stw	r2,28(sp)
 5086474:	d8801817 	ldw	r2,96(sp)
 5086478:	1445c83a 	sub	r2,r2,r17
 508647c:	d8800815 	stw	r2,32(sp)
 5086480:	a8000526 	beq	r21,zero,5086498 <___vfprintf_internal_r+0x18c4>
 5086484:	d8c00717 	ldw	r3,28(sp)
 5086488:	18bfff50 	cmplti	r2,r3,-3
 508648c:	1000011e 	bne	r2,zero,5086494 <___vfprintf_internal_r+0x18c0>
 5086490:	40c1670e 	bge	r8,r3,5086a30 <___vfprintf_internal_r+0x1e5c>
 5086494:	e73fff84 	addi	fp,fp,-2
 5086498:	d8800717 	ldw	r2,28(sp)
 508649c:	df001645 	stb	fp,89(sp)
 50864a0:	157fffc4 	addi	r21,r2,-1
 50864a4:	dd401415 	stw	r21,80(sp)
 50864a8:	a801d416 	blt	r21,zero,5086bfc <___vfprintf_internal_r+0x2028>
 50864ac:	00800ac4 	movi	r2,43
 50864b0:	d8801685 	stb	r2,90(sp)
 50864b4:	a8800290 	cmplti	r2,r21,10
 50864b8:	1001c11e 	bne	r2,zero,5086bc0 <___vfprintf_internal_r+0x1fec>
 50864bc:	d98019c4 	addi	r6,sp,103
 50864c0:	9029883a 	mov	r20,r18
 50864c4:	dc400715 	stw	r17,28(sp)
 50864c8:	8025883a 	mov	r18,r16
 50864cc:	db000f15 	stw	r12,60(sp)
 50864d0:	3021883a 	mov	r16,r6
 50864d4:	a809883a 	mov	r4,r21
 50864d8:	01400284 	movi	r5,10
 50864dc:	508278c0 	call	508278c <__modsi3>
 50864e0:	10800c04 	addi	r2,r2,48
 50864e4:	a809883a 	mov	r4,r21
 50864e8:	80bfffc5 	stb	r2,-1(r16)
 50864ec:	01400284 	movi	r5,10
 50864f0:	508270c0 	call	508270c <__divsi3>
 50864f4:	a9001908 	cmpgei	r4,r21,100
 50864f8:	8023883a 	mov	r17,r16
 50864fc:	102b883a 	mov	r21,r2
 5086500:	843fffc4 	addi	r16,r16,-1
 5086504:	203ff31e 	bne	r4,zero,50864d4 <___vfprintf_internal_r+0x1900>
 5086508:	800d883a 	mov	r6,r16
 508650c:	11000c04 	addi	r4,r2,48
 5086510:	9021883a 	mov	r16,r18
 5086514:	a025883a 	mov	r18,r20
 5086518:	8829883a 	mov	r20,r17
 508651c:	a0bfff84 	addi	r2,r20,-2
 5086520:	313fffc5 	stb	r4,-1(r6)
 5086524:	d8c019c4 	addi	r3,sp,103
 5086528:	db000f17 	ldw	r12,60(sp)
 508652c:	dc400717 	ldw	r17,28(sp)
 5086530:	10c1d62e 	bgeu	r2,r3,5086c8c <___vfprintf_internal_r+0x20b8>
 5086534:	d8c016c4 	addi	r3,sp,91
 5086538:	00000106 	br	5086540 <___vfprintf_internal_r+0x196c>
 508653c:	11000003 	ldbu	r4,0(r2)
 5086540:	19000005 	stb	r4,0(r3)
 5086544:	10800044 	addi	r2,r2,1
 5086548:	d90019c4 	addi	r4,sp,103
 508654c:	18c00044 	addi	r3,r3,1
 5086550:	113ffa1e 	bne	r2,r4,508653c <___vfprintf_internal_r+0x1968>
 5086554:	d8801a44 	addi	r2,sp,105
 5086558:	d8c016c4 	addi	r3,sp,91
 508655c:	1505c83a 	sub	r2,r2,r20
 5086560:	1885883a 	add	r2,r3,r2
 5086564:	d8c01644 	addi	r3,sp,89
 5086568:	10c5c83a 	sub	r2,r2,r3
 508656c:	d8801015 	stw	r2,64(sp)
 5086570:	d8c00817 	ldw	r3,32(sp)
 5086574:	d9001017 	ldw	r4,64(sp)
 5086578:	18800088 	cmpgei	r2,r3,2
 508657c:	192b883a 	add	r21,r3,r4
 5086580:	1001aa26 	beq	r2,zero,5086c2c <___vfprintf_internal_r+0x2058>
 5086584:	d8800b17 	ldw	r2,44(sp)
 5086588:	a8ab883a 	add	r21,r21,r2
 508658c:	a829883a 	mov	r20,r21
 5086590:	a800010e 	bge	r21,zero,5086598 <___vfprintf_internal_r+0x19c4>
 5086594:	0029883a 	mov	r20,zero
 5086598:	d8000715 	stw	zero,28(sp)
 508659c:	00009d06 	br	5086814 <___vfprintf_internal_r+0x1c40>
 50865a0:	880f883a 	mov	r7,r17
 50865a4:	10800044 	addi	r2,r2,1
 50865a8:	1d47883a 	add	r3,r3,r21
 50865ac:	b1c00015 	stw	r7,0(r22)
 50865b0:	003a7e06 	br	5084fac <___vfprintf_internal_r+0x3d8>
 50865b4:	d9801a04 	addi	r6,sp,104
 50865b8:	900b883a 	mov	r5,r18
 50865bc:	9809883a 	mov	r4,r19
 50865c0:	508d4bc0 	call	508d4bc <__sprint_r>
 50865c4:	103a901e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 50865c8:	d8c01c17 	ldw	r3,112(sp)
 50865cc:	dd802704 	addi	r22,sp,156
 50865d0:	003c9706 	br	5085830 <___vfprintf_internal_r+0xc5c>
 50865d4:	d9801a04 	addi	r6,sp,104
 50865d8:	900b883a 	mov	r5,r18
 50865dc:	9809883a 	mov	r4,r19
 50865e0:	da000e15 	stw	r8,56(sp)
 50865e4:	508d4bc0 	call	508d4bc <__sprint_r>
 50865e8:	103a871e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 50865ec:	d8c01c17 	ldw	r3,112(sp)
 50865f0:	da000e17 	ldw	r8,56(sp)
 50865f4:	dd802704 	addi	r22,sp,156
 50865f8:	003a6306 	br	5084f88 <___vfprintf_internal_r+0x3b4>
 50865fc:	8809883a 	mov	r4,r17
 5086600:	db000415 	stw	r12,16(sp)
 5086604:	d8c00615 	stw	r3,24(sp)
 5086608:	5082abc0 	call	5082abc <strlen>
 508660c:	db000417 	ldw	r12,16(sp)
 5086610:	102b883a 	mov	r21,r2
 5086614:	1029883a 	mov	r20,r2
 5086618:	003a3106 	br	5084ee0 <___vfprintf_internal_r+0x30c>
 508661c:	d8800d17 	ldw	r2,52(sp)
 5086620:	d9000b17 	ldw	r4,44(sp)
 5086624:	b0800015 	stw	r2,0(r22)
 5086628:	d8801b17 	ldw	r2,108(sp)
 508662c:	20c7883a 	add	r3,r4,r3
 5086630:	b1000115 	stw	r4,4(r22)
 5086634:	10800044 	addi	r2,r2,1
 5086638:	d8c01c15 	stw	r3,112(sp)
 508663c:	d8801b15 	stw	r2,108(sp)
 5086640:	11000208 	cmpgei	r4,r2,8
 5086644:	2000bf1e 	bne	r4,zero,5086944 <___vfprintf_internal_r+0x1d70>
 5086648:	b5800204 	addi	r22,r22,8
 508664c:	283f470e 	bge	r5,zero,508636c <___vfprintf_internal_r+0x1798>
 5086650:	01c14274 	movhi	r7,1289
 5086654:	293ffc08 	cmpgei	r4,r5,-16
 5086658:	39d82404 	addi	r7,r7,24720
 508665c:	0179c83a 	sub	fp,zero,r5
 5086660:	20013f1e 	bne	r4,zero,5086b60 <___vfprintf_internal_r+0x1f8c>
 5086664:	dc000715 	stw	r16,28(sp)
 5086668:	05400404 	movi	r21,16
 508666c:	9021883a 	mov	r16,r18
 5086670:	3825883a 	mov	r18,r7
 5086674:	00000406 	br	5086688 <___vfprintf_internal_r+0x1ab4>
 5086678:	b5800204 	addi	r22,r22,8
 508667c:	e73ffc04 	addi	fp,fp,-16
 5086680:	e1800448 	cmpgei	r6,fp,17
 5086684:	30013326 	beq	r6,zero,5086b54 <___vfprintf_internal_r+0x1f80>
 5086688:	10800044 	addi	r2,r2,1
 508668c:	18c00404 	addi	r3,r3,16
 5086690:	b4800015 	stw	r18,0(r22)
 5086694:	b5400115 	stw	r21,4(r22)
 5086698:	d8c01c15 	stw	r3,112(sp)
 508669c:	d8801b15 	stw	r2,108(sp)
 50866a0:	11800208 	cmpgei	r6,r2,8
 50866a4:	303ff426 	beq	r6,zero,5086678 <___vfprintf_internal_r+0x1aa4>
 50866a8:	d9801a04 	addi	r6,sp,104
 50866ac:	800b883a 	mov	r5,r16
 50866b0:	9809883a 	mov	r4,r19
 50866b4:	508d4bc0 	call	508d4bc <__sprint_r>
 50866b8:	1001721e 	bne	r2,zero,5086c84 <___vfprintf_internal_r+0x20b0>
 50866bc:	d8c01c17 	ldw	r3,112(sp)
 50866c0:	d8801b17 	ldw	r2,108(sp)
 50866c4:	dd802704 	addi	r22,sp,156
 50866c8:	003fec06 	br	508667c <___vfprintf_internal_r+0x1aa8>
 50866cc:	800f883a 	mov	r7,r16
 50866d0:	dc000717 	ldw	r16,28(sp)
 50866d4:	8817883a 	mov	r11,r17
 50866d8:	aa000044 	addi	r8,r21,1
 50866dc:	e0800204 	addi	r2,fp,8
 50866e0:	1ac7883a 	add	r3,r3,r11
 50866e4:	e1c00015 	stw	r7,0(fp)
 50866e8:	e2c00115 	stw	r11,4(fp)
 50866ec:	d8c01c15 	stw	r3,112(sp)
 50866f0:	da001b15 	stw	r8,108(sp)
 50866f4:	41000208 	cmpgei	r4,r8,8
 50866f8:	203e701e 	bne	r4,zero,50860bc <___vfprintf_internal_r+0x14e8>
 50866fc:	42000044 	addi	r8,r8,1
 5086700:	15800204 	addi	r22,r2,8
 5086704:	1039883a 	mov	fp,r2
 5086708:	003d3206 	br	5085bd4 <___vfprintf_internal_r+0x1000>
 508670c:	d8800617 	ldw	r2,24(sp)
 5086710:	d8c00615 	stw	r3,24(sp)
 5086714:	15000017 	ldw	r20,0(r2)
 5086718:	a02bd7fa 	srai	r21,r20,31
 508671c:	a805883a 	mov	r2,r21
 5086720:	003b2f06 	br	50853e0 <___vfprintf_internal_r+0x80c>
 5086724:	d8800617 	ldw	r2,24(sp)
 5086728:	002b883a 	mov	r21,zero
 508672c:	d8c00615 	stw	r3,24(sp)
 5086730:	15000017 	ldw	r20,0(r2)
 5086734:	0005883a 	mov	r2,zero
 5086738:	003a7006 	br	50850fc <___vfprintf_internal_r+0x528>
 508673c:	04414274 	movhi	r17,1289
 5086740:	8c580b04 	addi	r17,r17,24620
 5086744:	003ac806 	br	5085268 <___vfprintf_internal_r+0x694>
 5086748:	d8801804 	addi	r2,sp,96
 508674c:	d8800315 	stw	r2,12(sp)
 5086750:	d9400917 	ldw	r5,36(sp)
 5086754:	d8801504 	addi	r2,sp,84
 5086758:	d8800215 	stw	r2,8(sp)
 508675c:	d8801404 	addi	r2,sp,80
 5086760:	da000015 	stw	r8,0(sp)
 5086764:	d8800115 	stw	r2,4(sp)
 5086768:	01c000c4 	movi	r7,3
 508676c:	a00d883a 	mov	r6,r20
 5086770:	9809883a 	mov	r4,r19
 5086774:	db000815 	stw	r12,32(sp)
 5086778:	da000715 	stw	r8,28(sp)
 508677c:	50872900 	call	5087290 <_dtoa_r>
 5086780:	da000717 	ldw	r8,28(sp)
 5086784:	1023883a 	mov	r17,r2
 5086788:	db000817 	ldw	r12,32(sp)
 508678c:	1207883a 	add	r3,r2,r8
 5086790:	88800007 	ldb	r2,0(r17)
 5086794:	10800c20 	cmpeqi	r2,r2,48
 5086798:	1000571e 	bne	r2,zero,50868f8 <___vfprintf_internal_r+0x1d24>
 508679c:	d8801417 	ldw	r2,80(sp)
 50867a0:	1893883a 	add	r9,r3,r2
 50867a4:	d9000917 	ldw	r4,36(sp)
 50867a8:	000d883a 	mov	r6,zero
 50867ac:	000f883a 	mov	r7,zero
 50867b0:	a00b883a 	mov	r5,r20
 50867b4:	da401115 	stw	r9,68(sp)
 50867b8:	da000815 	stw	r8,32(sp)
 50867bc:	db000715 	stw	r12,28(sp)
 50867c0:	509164c0 	call	509164c <__eqdf2>
 50867c4:	db000717 	ldw	r12,28(sp)
 50867c8:	da000817 	ldw	r8,32(sp)
 50867cc:	da401117 	ldw	r9,68(sp)
 50867d0:	1000891e 	bne	r2,zero,50869f8 <___vfprintf_internal_r+0x1e24>
 50867d4:	4805883a 	mov	r2,r9
 50867d8:	d8c01417 	ldw	r3,80(sp)
 50867dc:	1445c83a 	sub	r2,r2,r17
 50867e0:	ad4011d8 	cmpnei	r21,r21,71
 50867e4:	d8c00715 	stw	r3,28(sp)
 50867e8:	d8800815 	stw	r2,32(sp)
 50867ec:	a83f2526 	beq	r21,zero,5086484 <___vfprintf_internal_r+0x18b0>
 50867f0:	d8800f17 	ldw	r2,60(sp)
 50867f4:	103f2826 	beq	r2,zero,5086498 <___vfprintf_internal_r+0x18c4>
 50867f8:	d8c00717 	ldw	r3,28(sp)
 50867fc:	6080004c 	andi	r2,r12,1
 5086800:	1204b03a 	or	r2,r2,r8
 5086804:	00c1140e 	bge	zero,r3,5086c58 <___vfprintf_internal_r+0x2084>
 5086808:	1001011e 	bne	r2,zero,5086c10 <___vfprintf_internal_r+0x203c>
 508680c:	dd400717 	ldw	r21,28(sp)
 5086810:	a829883a 	mov	r20,r21
 5086814:	d8800607 	ldb	r2,24(sp)
 5086818:	10008026 	beq	r2,zero,5086a1c <___vfprintf_internal_r+0x1e48>
 508681c:	00800b44 	movi	r2,45
 5086820:	d8801345 	stb	r2,77(sp)
 5086824:	d8800e17 	ldw	r2,56(sp)
 5086828:	0011883a 	mov	r8,zero
 508682c:	d8800615 	stw	r2,24(sp)
 5086830:	003b0506 	br	5085448 <___vfprintf_internal_r+0x874>
 5086834:	d8800617 	ldw	r2,24(sp)
 5086838:	002b883a 	mov	r21,zero
 508683c:	d8c00615 	stw	r3,24(sp)
 5086840:	15000017 	ldw	r20,0(r2)
 5086844:	00800044 	movi	r2,1
 5086848:	003a2c06 	br	50850fc <___vfprintf_internal_r+0x528>
 508684c:	d8800617 	ldw	r2,24(sp)
 5086850:	002b883a 	mov	r21,zero
 5086854:	d8c00615 	stw	r3,24(sp)
 5086858:	15000017 	ldw	r20,0(r2)
 508685c:	003b1506 	br	50854b4 <___vfprintf_internal_r+0x8e0>
 5086860:	800f883a 	mov	r7,r16
 5086864:	dc000e17 	ldw	r16,56(sp)
 5086868:	10800044 	addi	r2,r2,1
 508686c:	1d47883a 	add	r3,r3,r21
 5086870:	d8801b15 	stw	r2,108(sp)
 5086874:	b1c00015 	stw	r7,0(r22)
 5086878:	b5400115 	stw	r21,4(r22)
 508687c:	d8c01c15 	stw	r3,112(sp)
 5086880:	10800208 	cmpgei	r2,r2,8
 5086884:	10003a1e 	bne	r2,zero,5086970 <___vfprintf_internal_r+0x1d9c>
 5086888:	b5800204 	addi	r22,r22,8
 508688c:	003d5406 	br	5085de0 <___vfprintf_internal_r+0x120c>
 5086890:	00800b44 	movi	r2,45
 5086894:	d8801345 	stb	r2,77(sp)
 5086898:	03400b44 	movi	r13,45
 508689c:	003a6e06 	br	5085258 <___vfprintf_internal_r+0x684>
 50868a0:	1520003c 	xorhi	r20,r2,32768
 50868a4:	00800b44 	movi	r2,45
 50868a8:	d8800605 	stb	r2,24(sp)
 50868ac:	003ed106 	br	50863f4 <___vfprintf_internal_r+0x1820>
 50868b0:	d9801a04 	addi	r6,sp,104
 50868b4:	900b883a 	mov	r5,r18
 50868b8:	9809883a 	mov	r4,r19
 50868bc:	508d4bc0 	call	508d4bc <__sprint_r>
 50868c0:	1039d11e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 50868c4:	d9401417 	ldw	r5,80(sp)
 50868c8:	d8c01c17 	ldw	r3,112(sp)
 50868cc:	dd802704 	addi	r22,sp,156
 50868d0:	003e9406 	br	5086324 <___vfprintf_internal_r+0x1750>
 50868d4:	05400184 	movi	r21,6
 50868d8:	003e1706 	br	5086138 <___vfprintf_internal_r+0x1564>
 50868dc:	d9401345 	stb	r5,77(sp)
 50868e0:	00397906 	br	5084ec8 <___vfprintf_internal_r+0x2f4>
 50868e4:	d9801a04 	addi	r6,sp,104
 50868e8:	900b883a 	mov	r5,r18
 50868ec:	9809883a 	mov	r4,r19
 50868f0:	508d4bc0 	call	508d4bc <__sprint_r>
 50868f4:	0039c406 	br	5085008 <___vfprintf_internal_r+0x434>
 50868f8:	d9000917 	ldw	r4,36(sp)
 50868fc:	000d883a 	mov	r6,zero
 5086900:	000f883a 	mov	r7,zero
 5086904:	a00b883a 	mov	r5,r20
 5086908:	d8c01115 	stw	r3,68(sp)
 508690c:	da000815 	stw	r8,32(sp)
 5086910:	db000715 	stw	r12,28(sp)
 5086914:	509164c0 	call	509164c <__eqdf2>
 5086918:	db000717 	ldw	r12,28(sp)
 508691c:	da000817 	ldw	r8,32(sp)
 5086920:	d8c01117 	ldw	r3,68(sp)
 5086924:	103f9d26 	beq	r2,zero,508679c <___vfprintf_internal_r+0x1bc8>
 5086928:	00800044 	movi	r2,1
 508692c:	1205c83a 	sub	r2,r2,r8
 5086930:	d8801415 	stw	r2,80(sp)
 5086934:	003f9a06 	br	50867a0 <___vfprintf_internal_r+0x1bcc>
 5086938:	403ea81e 	bne	r8,zero,50863dc <___vfprintf_internal_r+0x1808>
 508693c:	02000044 	movi	r8,1
 5086940:	003ea606 	br	50863dc <___vfprintf_internal_r+0x1808>
 5086944:	d9801a04 	addi	r6,sp,104
 5086948:	900b883a 	mov	r5,r18
 508694c:	9809883a 	mov	r4,r19
 5086950:	508d4bc0 	call	508d4bc <__sprint_r>
 5086954:	1039ac1e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5086958:	d9401417 	ldw	r5,80(sp)
 508695c:	d8c01c17 	ldw	r3,112(sp)
 5086960:	d8801b17 	ldw	r2,108(sp)
 5086964:	dd802704 	addi	r22,sp,156
 5086968:	283e800e 	bge	r5,zero,508636c <___vfprintf_internal_r+0x1798>
 508696c:	003f3806 	br	5086650 <___vfprintf_internal_r+0x1a7c>
 5086970:	d9801a04 	addi	r6,sp,104
 5086974:	900b883a 	mov	r5,r18
 5086978:	9809883a 	mov	r4,r19
 508697c:	508d4bc0 	call	508d4bc <__sprint_r>
 5086980:	1039a11e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5086984:	d8c01c17 	ldw	r3,112(sp)
 5086988:	dd802704 	addi	r22,sp,156
 508698c:	003d1406 	br	5085de0 <___vfprintf_internal_r+0x120c>
 5086990:	db000417 	ldw	r12,16(sp)
 5086994:	003a9f06 	br	5085414 <___vfprintf_internal_r+0x840>
 5086998:	d8801804 	addi	r2,sp,96
 508699c:	d8800315 	stw	r2,12(sp)
 50869a0:	d9400917 	ldw	r5,36(sp)
 50869a4:	d8801504 	addi	r2,sp,84
 50869a8:	40c00044 	addi	r3,r8,1
 50869ac:	d8800215 	stw	r2,8(sp)
 50869b0:	d8801404 	addi	r2,sp,80
 50869b4:	d8c00015 	stw	r3,0(sp)
 50869b8:	d8800115 	stw	r2,4(sp)
 50869bc:	01c00084 	movi	r7,2
 50869c0:	a00d883a 	mov	r6,r20
 50869c4:	9809883a 	mov	r4,r19
 50869c8:	db001115 	stw	r12,68(sp)
 50869cc:	da000815 	stw	r8,32(sp)
 50869d0:	d8c00715 	stw	r3,28(sp)
 50869d4:	50872900 	call	5087290 <_dtoa_r>
 50869d8:	d8c00717 	ldw	r3,28(sp)
 50869dc:	da000817 	ldw	r8,32(sp)
 50869e0:	db001117 	ldw	r12,68(sp)
 50869e4:	1023883a 	mov	r17,r2
 50869e8:	e08011d8 	cmpnei	r2,fp,71
 50869ec:	103e9c26 	beq	r2,zero,5086460 <___vfprintf_internal_r+0x188c>
 50869f0:	88d3883a 	add	r9,r17,r3
 50869f4:	003f6b06 	br	50867a4 <___vfprintf_internal_r+0x1bd0>
 50869f8:	d8801817 	ldw	r2,96(sp)
 50869fc:	127f762e 	bgeu	r2,r9,50867d8 <___vfprintf_internal_r+0x1c04>
 5086a00:	01000c04 	movi	r4,48
 5086a04:	10c00044 	addi	r3,r2,1
 5086a08:	d8c01815 	stw	r3,96(sp)
 5086a0c:	11000005 	stb	r4,0(r2)
 5086a10:	d8801817 	ldw	r2,96(sp)
 5086a14:	127ffb36 	bltu	r2,r9,5086a04 <___vfprintf_internal_r+0x1e30>
 5086a18:	003f6f06 	br	50867d8 <___vfprintf_internal_r+0x1c04>
 5086a1c:	d8800e17 	ldw	r2,56(sp)
 5086a20:	db401343 	ldbu	r13,77(sp)
 5086a24:	0011883a 	mov	r8,zero
 5086a28:	d8800615 	stw	r2,24(sp)
 5086a2c:	003a8206 	br	5085438 <___vfprintf_internal_r+0x864>
 5086a30:	d8800717 	ldw	r2,28(sp)
 5086a34:	d8c00817 	ldw	r3,32(sp)
 5086a38:	10c02b16 	blt	r2,r3,5086ae8 <___vfprintf_internal_r+0x1f14>
 5086a3c:	6300004c 	andi	r12,r12,1
 5086a40:	6000581e 	bne	r12,zero,5086ba4 <___vfprintf_internal_r+0x1fd0>
 5086a44:	1029883a 	mov	r20,r2
 5086a48:	1000010e 	bge	r2,zero,5086a50 <___vfprintf_internal_r+0x1e7c>
 5086a4c:	0029883a 	mov	r20,zero
 5086a50:	dd400717 	ldw	r21,28(sp)
 5086a54:	070019c4 	movi	fp,103
 5086a58:	003f6e06 	br	5086814 <___vfprintf_internal_r+0x1c40>
 5086a5c:	d9801a04 	addi	r6,sp,104
 5086a60:	900b883a 	mov	r5,r18
 5086a64:	9809883a 	mov	r4,r19
 5086a68:	508d4bc0 	call	508d4bc <__sprint_r>
 5086a6c:	1039661e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5086a70:	dd401417 	ldw	r21,80(sp)
 5086a74:	d8c01c17 	ldw	r3,112(sp)
 5086a78:	dd802704 	addi	r22,sp,156
 5086a7c:	003ce706 	br	5085e1c <___vfprintf_internal_r+0x1248>
 5086a80:	d9801a04 	addi	r6,sp,104
 5086a84:	900b883a 	mov	r5,r18
 5086a88:	9809883a 	mov	r4,r19
 5086a8c:	508d4bc0 	call	508d4bc <__sprint_r>
 5086a90:	10395d1e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5086a94:	d8c01c17 	ldw	r3,112(sp)
 5086a98:	dd802704 	addi	r22,sp,156
 5086a9c:	a83ccd0e 	bge	r21,zero,5085dd4 <___vfprintf_internal_r+0x1200>
 5086aa0:	003d9106 	br	50860e8 <___vfprintf_internal_r+0x1514>
 5086aa4:	02000184 	movi	r8,6
 5086aa8:	003e4c06 	br	50863dc <___vfprintf_internal_r+0x1808>
 5086aac:	d9801a04 	addi	r6,sp,104
 5086ab0:	900b883a 	mov	r5,r18
 5086ab4:	9809883a 	mov	r4,r19
 5086ab8:	508d4bc0 	call	508d4bc <__sprint_r>
 5086abc:	1039521e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5086ac0:	d8801417 	ldw	r2,80(sp)
 5086ac4:	d9000817 	ldw	r4,32(sp)
 5086ac8:	d8c01c17 	ldw	r3,112(sp)
 5086acc:	dd802704 	addi	r22,sp,156
 5086ad0:	2085c83a 	sub	r2,r4,r2
 5086ad4:	003ce506 	br	5085e6c <___vfprintf_internal_r+0x1298>
 5086ad8:	4029883a 	mov	r20,r8
 5086adc:	d8c00615 	stw	r3,24(sp)
 5086ae0:	402b883a 	mov	r21,r8
 5086ae4:	0038fe06 	br	5084ee0 <___vfprintf_internal_r+0x30c>
 5086ae8:	d8800817 	ldw	r2,32(sp)
 5086aec:	d8c00b17 	ldw	r3,44(sp)
 5086af0:	10eb883a 	add	r21,r2,r3
 5086af4:	d8800717 	ldw	r2,28(sp)
 5086af8:	00800316 	blt	zero,r2,5086b08 <___vfprintf_internal_r+0x1f34>
 5086afc:	d8800717 	ldw	r2,28(sp)
 5086b00:	a8abc83a 	sub	r21,r21,r2
 5086b04:	ad400044 	addi	r21,r21,1
 5086b08:	a829883a 	mov	r20,r21
 5086b0c:	a8002a16 	blt	r21,zero,5086bb8 <___vfprintf_internal_r+0x1fe4>
 5086b10:	070019c4 	movi	fp,103
 5086b14:	003f3f06 	br	5086814 <___vfprintf_internal_r+0x1c40>
 5086b18:	d9401345 	stb	r5,77(sp)
 5086b1c:	003ae006 	br	50856a0 <___vfprintf_internal_r+0xacc>
 5086b20:	d9401345 	stb	r5,77(sp)
 5086b24:	003a5906 	br	508548c <___vfprintf_internal_r+0x8b8>
 5086b28:	d9401345 	stb	r5,77(sp)
 5086b2c:	003b1706 	br	508578c <___vfprintf_internal_r+0xbb8>
 5086b30:	d9401345 	stb	r5,77(sp)
 5086b34:	003a2206 	br	50853c0 <___vfprintf_internal_r+0x7ec>
 5086b38:	d9401345 	stb	r5,77(sp)
 5086b3c:	003a6806 	br	50854e0 <___vfprintf_internal_r+0x90c>
 5086b40:	d9401345 	stb	r5,77(sp)
 5086b44:	00399906 	br	50851ac <___vfprintf_internal_r+0x5d8>
 5086b48:	00bfffc4 	movi	r2,-1
 5086b4c:	d8800515 	stw	r2,20(sp)
 5086b50:	00393006 	br	5085014 <___vfprintf_internal_r+0x440>
 5086b54:	900f883a 	mov	r7,r18
 5086b58:	8025883a 	mov	r18,r16
 5086b5c:	dc000717 	ldw	r16,28(sp)
 5086b60:	10800044 	addi	r2,r2,1
 5086b64:	1f07883a 	add	r3,r3,fp
 5086b68:	b1c00015 	stw	r7,0(r22)
 5086b6c:	b7000115 	stw	fp,4(r22)
 5086b70:	d8c01c15 	stw	r3,112(sp)
 5086b74:	d8801b15 	stw	r2,108(sp)
 5086b78:	11000208 	cmpgei	r4,r2,8
 5086b7c:	203dfa26 	beq	r4,zero,5086368 <___vfprintf_internal_r+0x1794>
 5086b80:	d9801a04 	addi	r6,sp,104
 5086b84:	900b883a 	mov	r5,r18
 5086b88:	9809883a 	mov	r4,r19
 5086b8c:	508d4bc0 	call	508d4bc <__sprint_r>
 5086b90:	10391d1e 	bne	r2,zero,5085008 <___vfprintf_internal_r+0x434>
 5086b94:	d8c01c17 	ldw	r3,112(sp)
 5086b98:	d8801b17 	ldw	r2,108(sp)
 5086b9c:	dd802704 	addi	r22,sp,156
 5086ba0:	003df206 	br	508636c <___vfprintf_internal_r+0x1798>
 5086ba4:	d8800717 	ldw	r2,28(sp)
 5086ba8:	d8c00b17 	ldw	r3,44(sp)
 5086bac:	10eb883a 	add	r21,r2,r3
 5086bb0:	a829883a 	mov	r20,r21
 5086bb4:	a83fd60e 	bge	r21,zero,5086b10 <___vfprintf_internal_r+0x1f3c>
 5086bb8:	0029883a 	mov	r20,zero
 5086bbc:	003fd406 	br	5086b10 <___vfprintf_internal_r+0x1f3c>
 5086bc0:	00800c04 	movi	r2,48
 5086bc4:	ad400c04 	addi	r21,r21,48
 5086bc8:	d88016c5 	stb	r2,91(sp)
 5086bcc:	00800104 	movi	r2,4
 5086bd0:	dd401705 	stb	r21,92(sp)
 5086bd4:	d8801015 	stw	r2,64(sp)
 5086bd8:	003e6506 	br	5086570 <___vfprintf_internal_r+0x199c>
 5086bdc:	d8800a17 	ldw	r2,40(sp)
 5086be0:	10001916 	blt	r2,zero,5086c48 <___vfprintf_internal_r+0x2074>
 5086be4:	db401343 	ldbu	r13,77(sp)
 5086be8:	e0801210 	cmplti	r2,fp,72
 5086bec:	1000131e 	bne	r2,zero,5086c3c <___vfprintf_internal_r+0x2068>
 5086bf0:	04414274 	movhi	r17,1289
 5086bf4:	8c580e04 	addi	r17,r17,24632
 5086bf8:	00399b06 	br	5085268 <___vfprintf_internal_r+0x694>
 5086bfc:	05400044 	movi	r21,1
 5086c00:	a8abc83a 	sub	r21,r21,r2
 5086c04:	00800b44 	movi	r2,45
 5086c08:	d8801685 	stb	r2,90(sp)
 5086c0c:	003e2906 	br	50864b4 <___vfprintf_internal_r+0x18e0>
 5086c10:	d8800b17 	ldw	r2,44(sp)
 5086c14:	18ab883a 	add	r21,r3,r2
 5086c18:	aa2b883a 	add	r21,r21,r8
 5086c1c:	a829883a 	mov	r20,r21
 5086c20:	a83efc0e 	bge	r21,zero,5086814 <___vfprintf_internal_r+0x1c40>
 5086c24:	0029883a 	mov	r20,zero
 5086c28:	003efa06 	br	5086814 <___vfprintf_internal_r+0x1c40>
 5086c2c:	6080004c 	andi	r2,r12,1
 5086c30:	d8800715 	stw	r2,28(sp)
 5086c34:	103e531e 	bne	r2,zero,5086584 <___vfprintf_internal_r+0x19b0>
 5086c38:	003ff806 	br	5086c1c <___vfprintf_internal_r+0x2048>
 5086c3c:	04414274 	movhi	r17,1289
 5086c40:	8c580d04 	addi	r17,r17,24628
 5086c44:	00398806 	br	5085268 <___vfprintf_internal_r+0x694>
 5086c48:	00800b44 	movi	r2,45
 5086c4c:	d8801345 	stb	r2,77(sp)
 5086c50:	03400b44 	movi	r13,45
 5086c54:	003fe406 	br	5086be8 <___vfprintf_internal_r+0x2014>
 5086c58:	1000031e 	bne	r2,zero,5086c68 <___vfprintf_internal_r+0x2094>
 5086c5c:	05000044 	movi	r20,1
 5086c60:	05400044 	movi	r21,1
 5086c64:	003eeb06 	br	5086814 <___vfprintf_internal_r+0x1c40>
 5086c68:	d8800b17 	ldw	r2,44(sp)
 5086c6c:	15400044 	addi	r21,r2,1
 5086c70:	aa2b883a 	add	r21,r21,r8
 5086c74:	003fe906 	br	5086c1c <___vfprintf_internal_r+0x2048>
 5086c78:	b005883a 	mov	r2,r22
 5086c7c:	39d82404 	addi	r7,r7,24720
 5086c80:	003e9706 	br	50866e0 <___vfprintf_internal_r+0x1b0c>
 5086c84:	8025883a 	mov	r18,r16
 5086c88:	0038df06 	br	5085008 <___vfprintf_internal_r+0x434>
 5086c8c:	00800084 	movi	r2,2
 5086c90:	d8801015 	stw	r2,64(sp)
 5086c94:	003e3606 	br	5086570 <___vfprintf_internal_r+0x199c>
 5086c98:	d8800617 	ldw	r2,24(sp)
 5086c9c:	12000017 	ldw	r8,0(r2)
 5086ca0:	10800104 	addi	r2,r2,4
 5086ca4:	4000010e 	bge	r8,zero,5086cac <___vfprintf_internal_r+0x20d8>
 5086ca8:	023fffc4 	movi	r8,-1
 5086cac:	bf000043 	ldbu	fp,1(r23)
 5086cb0:	d8800615 	stw	r2,24(sp)
 5086cb4:	182f883a 	mov	r23,r3
 5086cb8:	e2c03fcc 	andi	r11,fp,255
 5086cbc:	5ac0201c 	xori	r11,r11,128
 5086cc0:	5affe004 	addi	r11,r11,-128
 5086cc4:	00380f06 	br	5084d04 <___vfprintf_internal_r+0x130>

05086cc8 <__vfprintf_internal>:
 5086cc8:	00c142b4 	movhi	r3,1290
 5086ccc:	2005883a 	mov	r2,r4
 5086cd0:	19209917 	ldw	r4,-32156(r3)
 5086cd4:	300f883a 	mov	r7,r6
 5086cd8:	280d883a 	mov	r6,r5
 5086cdc:	100b883a 	mov	r5,r2
 5086ce0:	5084bd41 	jmpi	5084bd4 <___vfprintf_internal_r>

05086ce4 <__sbprintf>:
 5086ce4:	2880030b 	ldhu	r2,12(r5)
 5086ce8:	2b001917 	ldw	r12,100(r5)
 5086cec:	2ac0038b 	ldhu	r11,14(r5)
 5086cf0:	2a800717 	ldw	r10,28(r5)
 5086cf4:	2a400917 	ldw	r9,36(r5)
 5086cf8:	defee204 	addi	sp,sp,-1144
 5086cfc:	da001a04 	addi	r8,sp,104
 5086d00:	00c10004 	movi	r3,1024
 5086d04:	dc011a15 	stw	r16,1128(sp)
 5086d08:	10bfff4c 	andi	r2,r2,65533
 5086d0c:	2821883a 	mov	r16,r5
 5086d10:	d80b883a 	mov	r5,sp
 5086d14:	dc811c15 	stw	r18,1136(sp)
 5086d18:	dc411b15 	stw	r17,1132(sp)
 5086d1c:	dfc11d15 	stw	ra,1140(sp)
 5086d20:	2025883a 	mov	r18,r4
 5086d24:	d880030d 	sth	r2,12(sp)
 5086d28:	db001915 	stw	r12,100(sp)
 5086d2c:	dac0038d 	sth	r11,14(sp)
 5086d30:	da800715 	stw	r10,28(sp)
 5086d34:	da400915 	stw	r9,36(sp)
 5086d38:	da000015 	stw	r8,0(sp)
 5086d3c:	da000415 	stw	r8,16(sp)
 5086d40:	d8c00215 	stw	r3,8(sp)
 5086d44:	d8c00515 	stw	r3,20(sp)
 5086d48:	d8000615 	stw	zero,24(sp)
 5086d4c:	5084bd40 	call	5084bd4 <___vfprintf_internal_r>
 5086d50:	1023883a 	mov	r17,r2
 5086d54:	10000d0e 	bge	r2,zero,5086d8c <__sbprintf+0xa8>
 5086d58:	d880030b 	ldhu	r2,12(sp)
 5086d5c:	1080100c 	andi	r2,r2,64
 5086d60:	10000326 	beq	r2,zero,5086d70 <__sbprintf+0x8c>
 5086d64:	8080030b 	ldhu	r2,12(r16)
 5086d68:	10801014 	ori	r2,r2,64
 5086d6c:	8080030d 	sth	r2,12(r16)
 5086d70:	8805883a 	mov	r2,r17
 5086d74:	dfc11d17 	ldw	ra,1140(sp)
 5086d78:	dc811c17 	ldw	r18,1136(sp)
 5086d7c:	dc411b17 	ldw	r17,1132(sp)
 5086d80:	dc011a17 	ldw	r16,1128(sp)
 5086d84:	dec11e04 	addi	sp,sp,1144
 5086d88:	f800283a 	ret
 5086d8c:	d80b883a 	mov	r5,sp
 5086d90:	9009883a 	mov	r4,r18
 5086d94:	5088c000 	call	5088c00 <_fflush_r>
 5086d98:	103fef26 	beq	r2,zero,5086d58 <__sbprintf+0x74>
 5086d9c:	047fffc4 	movi	r17,-1
 5086da0:	003fed06 	br	5086d58 <__sbprintf+0x74>

05086da4 <vsnprintf>:
 5086da4:	deffe404 	addi	sp,sp,-112
 5086da8:	dc001a15 	stw	r16,104(sp)
 5086dac:	008142b4 	movhi	r2,1290
 5086db0:	dfc01b15 	stw	ra,108(sp)
 5086db4:	14209917 	ldw	r16,-32156(r2)
 5086db8:	28002616 	blt	r5,zero,5086e54 <vsnprintf+0xb0>
 5086dbc:	00c08204 	movi	r3,520
 5086dc0:	d8c0030d 	sth	r3,12(sp)
 5086dc4:	d9000015 	stw	r4,0(sp)
 5086dc8:	d9000415 	stw	r4,16(sp)
 5086dcc:	28001226 	beq	r5,zero,5086e18 <vsnprintf+0x74>
 5086dd0:	28bfffc4 	addi	r2,r5,-1
 5086dd4:	d8800215 	stw	r2,8(sp)
 5086dd8:	d8800515 	stw	r2,20(sp)
 5086ddc:	d80b883a 	mov	r5,sp
 5086de0:	00bfffc4 	movi	r2,-1
 5086de4:	8009883a 	mov	r4,r16
 5086de8:	d880038d 	sth	r2,14(sp)
 5086dec:	5082b540 	call	5082b54 <___svfprintf_internal_r>
 5086df0:	10ffffd0 	cmplti	r3,r2,-1
 5086df4:	18000226 	beq	r3,zero,5086e00 <vsnprintf+0x5c>
 5086df8:	00c022c4 	movi	r3,139
 5086dfc:	80c00015 	stw	r3,0(r16)
 5086e00:	d8c00017 	ldw	r3,0(sp)
 5086e04:	18000005 	stb	zero,0(r3)
 5086e08:	dfc01b17 	ldw	ra,108(sp)
 5086e0c:	dc001a17 	ldw	r16,104(sp)
 5086e10:	dec01c04 	addi	sp,sp,112
 5086e14:	f800283a 	ret
 5086e18:	00bfffc4 	movi	r2,-1
 5086e1c:	d80b883a 	mov	r5,sp
 5086e20:	8009883a 	mov	r4,r16
 5086e24:	d8000215 	stw	zero,8(sp)
 5086e28:	d8000515 	stw	zero,20(sp)
 5086e2c:	d880038d 	sth	r2,14(sp)
 5086e30:	5082b540 	call	5082b54 <___svfprintf_internal_r>
 5086e34:	10ffffd0 	cmplti	r3,r2,-1
 5086e38:	18000226 	beq	r3,zero,5086e44 <vsnprintf+0xa0>
 5086e3c:	00c022c4 	movi	r3,139
 5086e40:	80c00015 	stw	r3,0(r16)
 5086e44:	dfc01b17 	ldw	ra,108(sp)
 5086e48:	dc001a17 	ldw	r16,104(sp)
 5086e4c:	dec01c04 	addi	sp,sp,112
 5086e50:	f800283a 	ret
 5086e54:	008022c4 	movi	r2,139
 5086e58:	80800015 	stw	r2,0(r16)
 5086e5c:	00bfffc4 	movi	r2,-1
 5086e60:	003ff806 	br	5086e44 <vsnprintf+0xa0>

05086e64 <_vsnprintf_r>:
 5086e64:	deffe404 	addi	sp,sp,-112
 5086e68:	dc001a15 	stw	r16,104(sp)
 5086e6c:	dfc01b15 	stw	ra,108(sp)
 5086e70:	3005883a 	mov	r2,r6
 5086e74:	2021883a 	mov	r16,r4
 5086e78:	30002916 	blt	r6,zero,5086f20 <_vsnprintf_r+0xbc>
 5086e7c:	00c08204 	movi	r3,520
 5086e80:	d8c0030d 	sth	r3,12(sp)
 5086e84:	d9400015 	stw	r5,0(sp)
 5086e88:	00c142b4 	movhi	r3,1290
 5086e8c:	d9400415 	stw	r5,16(sp)
 5086e90:	19209917 	ldw	r4,-32156(r3)
 5086e94:	380d883a 	mov	r6,r7
 5086e98:	10001226 	beq	r2,zero,5086ee4 <_vsnprintf_r+0x80>
 5086e9c:	d9c01c17 	ldw	r7,112(sp)
 5086ea0:	10bfffc4 	addi	r2,r2,-1
 5086ea4:	d8800215 	stw	r2,8(sp)
 5086ea8:	d8800515 	stw	r2,20(sp)
 5086eac:	d80b883a 	mov	r5,sp
 5086eb0:	00bfffc4 	movi	r2,-1
 5086eb4:	d880038d 	sth	r2,14(sp)
 5086eb8:	5082b540 	call	5082b54 <___svfprintf_internal_r>
 5086ebc:	10ffffd0 	cmplti	r3,r2,-1
 5086ec0:	18000226 	beq	r3,zero,5086ecc <_vsnprintf_r+0x68>
 5086ec4:	00c022c4 	movi	r3,139
 5086ec8:	80c00015 	stw	r3,0(r16)
 5086ecc:	d8c00017 	ldw	r3,0(sp)
 5086ed0:	18000005 	stb	zero,0(r3)
 5086ed4:	dfc01b17 	ldw	ra,108(sp)
 5086ed8:	dc001a17 	ldw	r16,104(sp)
 5086edc:	dec01c04 	addi	sp,sp,112
 5086ee0:	f800283a 	ret
 5086ee4:	d9c01c17 	ldw	r7,112(sp)
 5086ee8:	00bfffc4 	movi	r2,-1
 5086eec:	d80b883a 	mov	r5,sp
 5086ef0:	d8000215 	stw	zero,8(sp)
 5086ef4:	d8000515 	stw	zero,20(sp)
 5086ef8:	d880038d 	sth	r2,14(sp)
 5086efc:	5082b540 	call	5082b54 <___svfprintf_internal_r>
 5086f00:	10ffffd0 	cmplti	r3,r2,-1
 5086f04:	18000226 	beq	r3,zero,5086f10 <_vsnprintf_r+0xac>
 5086f08:	00c022c4 	movi	r3,139
 5086f0c:	80c00015 	stw	r3,0(r16)
 5086f10:	dfc01b17 	ldw	ra,108(sp)
 5086f14:	dc001a17 	ldw	r16,104(sp)
 5086f18:	dec01c04 	addi	sp,sp,112
 5086f1c:	f800283a 	ret
 5086f20:	008022c4 	movi	r2,139
 5086f24:	20800015 	stw	r2,0(r4)
 5086f28:	00bfffc4 	movi	r2,-1
 5086f2c:	003ff806 	br	5086f10 <_vsnprintf_r+0xac>

05086f30 <__swsetup_r>:
 5086f30:	008142b4 	movhi	r2,1290
 5086f34:	10a09917 	ldw	r2,-32156(r2)
 5086f38:	defffd04 	addi	sp,sp,-12
 5086f3c:	dc400115 	stw	r17,4(sp)
 5086f40:	dc000015 	stw	r16,0(sp)
 5086f44:	dfc00215 	stw	ra,8(sp)
 5086f48:	2023883a 	mov	r17,r4
 5086f4c:	2821883a 	mov	r16,r5
 5086f50:	10000226 	beq	r2,zero,5086f5c <__swsetup_r+0x2c>
 5086f54:	10c00e17 	ldw	r3,56(r2)
 5086f58:	18001f26 	beq	r3,zero,5086fd8 <__swsetup_r+0xa8>
 5086f5c:	8180030b 	ldhu	r6,12(r16)
 5086f60:	30c0020c 	andi	r3,r6,8
 5086f64:	3005883a 	mov	r2,r6
 5086f68:	18002126 	beq	r3,zero,5086ff0 <__swsetup_r+0xc0>
 5086f6c:	80c00417 	ldw	r3,16(r16)
 5086f70:	18002826 	beq	r3,zero,5087014 <__swsetup_r+0xe4>
 5086f74:	1100004c 	andi	r4,r2,1
 5086f78:	20000b1e 	bne	r4,zero,5086fa8 <__swsetup_r+0x78>
 5086f7c:	1100008c 	andi	r4,r2,2
 5086f80:	20002e1e 	bne	r4,zero,508703c <__swsetup_r+0x10c>
 5086f84:	81000517 	ldw	r4,20(r16)
 5086f88:	81000215 	stw	r4,8(r16)
 5086f8c:	18000b26 	beq	r3,zero,5086fbc <__swsetup_r+0x8c>
 5086f90:	0005883a 	mov	r2,zero
 5086f94:	dfc00217 	ldw	ra,8(sp)
 5086f98:	dc400117 	ldw	r17,4(sp)
 5086f9c:	dc000017 	ldw	r16,0(sp)
 5086fa0:	dec00304 	addi	sp,sp,12
 5086fa4:	f800283a 	ret
 5086fa8:	81000517 	ldw	r4,20(r16)
 5086fac:	80000215 	stw	zero,8(r16)
 5086fb0:	0109c83a 	sub	r4,zero,r4
 5086fb4:	81000615 	stw	r4,24(r16)
 5086fb8:	183ff51e 	bne	r3,zero,5086f90 <__swsetup_r+0x60>
 5086fbc:	10c0200c 	andi	r3,r2,128
 5086fc0:	0005883a 	mov	r2,zero
 5086fc4:	183ff326 	beq	r3,zero,5086f94 <__swsetup_r+0x64>
 5086fc8:	31801014 	ori	r6,r6,64
 5086fcc:	8180030d 	sth	r6,12(r16)
 5086fd0:	00bfffc4 	movi	r2,-1
 5086fd4:	003fef06 	br	5086f94 <__swsetup_r+0x64>
 5086fd8:	1009883a 	mov	r4,r2
 5086fdc:	50890380 	call	5089038 <__sinit>
 5086fe0:	8180030b 	ldhu	r6,12(r16)
 5086fe4:	30c0020c 	andi	r3,r6,8
 5086fe8:	3005883a 	mov	r2,r6
 5086fec:	183fdf1e 	bne	r3,zero,5086f6c <__swsetup_r+0x3c>
 5086ff0:	3080040c 	andi	r2,r6,16
 5086ff4:	10002126 	beq	r2,zero,508707c <__swsetup_r+0x14c>
 5086ff8:	3080010c 	andi	r2,r6,4
 5086ffc:	1000111e 	bne	r2,zero,5087044 <__swsetup_r+0x114>
 5087000:	80c00417 	ldw	r3,16(r16)
 5087004:	30800214 	ori	r2,r6,8
 5087008:	8080030d 	sth	r2,12(r16)
 508700c:	100d883a 	mov	r6,r2
 5087010:	183fd81e 	bne	r3,zero,5086f74 <__swsetup_r+0x44>
 5087014:	1100a00c 	andi	r4,r2,640
 5087018:	21008020 	cmpeqi	r4,r4,512
 508701c:	203fd51e 	bne	r4,zero,5086f74 <__swsetup_r+0x44>
 5087020:	800b883a 	mov	r5,r16
 5087024:	8809883a 	mov	r4,r17
 5087028:	5089ab00 	call	5089ab0 <__smakebuf_r>
 508702c:	8180030b 	ldhu	r6,12(r16)
 5087030:	80c00417 	ldw	r3,16(r16)
 5087034:	3005883a 	mov	r2,r6
 5087038:	003fce06 	br	5086f74 <__swsetup_r+0x44>
 508703c:	0009883a 	mov	r4,zero
 5087040:	003fd106 	br	5086f88 <__swsetup_r+0x58>
 5087044:	81400c17 	ldw	r5,48(r16)
 5087048:	28000626 	beq	r5,zero,5087064 <__swsetup_r+0x134>
 508704c:	80801004 	addi	r2,r16,64
 5087050:	28800326 	beq	r5,r2,5087060 <__swsetup_r+0x130>
 5087054:	8809883a 	mov	r4,r17
 5087058:	508919c0 	call	508919c <_free_r>
 508705c:	8180030b 	ldhu	r6,12(r16)
 5087060:	80000c15 	stw	zero,48(r16)
 5087064:	80c00417 	ldw	r3,16(r16)
 5087068:	00bff6c4 	movi	r2,-37
 508706c:	118c703a 	and	r6,r2,r6
 5087070:	80000115 	stw	zero,4(r16)
 5087074:	80c00015 	stw	r3,0(r16)
 5087078:	003fe206 	br	5087004 <__swsetup_r+0xd4>
 508707c:	00800244 	movi	r2,9
 5087080:	88800015 	stw	r2,0(r17)
 5087084:	31801014 	ori	r6,r6,64
 5087088:	8180030d 	sth	r6,12(r16)
 508708c:	00bfffc4 	movi	r2,-1
 5087090:	003fc006 	br	5086f94 <__swsetup_r+0x64>

05087094 <quorem>:
 5087094:	defff504 	addi	sp,sp,-44
 5087098:	dc800315 	stw	r18,12(sp)
 508709c:	20800417 	ldw	r2,16(r4)
 50870a0:	2c800417 	ldw	r18,16(r5)
 50870a4:	dfc00a15 	stw	ra,40(sp)
 50870a8:	df000915 	stw	fp,36(sp)
 50870ac:	ddc00815 	stw	r23,32(sp)
 50870b0:	dd800715 	stw	r22,28(sp)
 50870b4:	dd400615 	stw	r21,24(sp)
 50870b8:	dd000515 	stw	r20,20(sp)
 50870bc:	dcc00415 	stw	r19,16(sp)
 50870c0:	dc400215 	stw	r17,8(sp)
 50870c4:	dc000115 	stw	r16,4(sp)
 50870c8:	14806f16 	blt	r2,r18,5087288 <quorem+0x1f4>
 50870cc:	94bfffc4 	addi	r18,r18,-1
 50870d0:	902c90ba 	slli	r22,r18,2
 50870d4:	2c000504 	addi	r16,r5,20
 50870d8:	25000504 	addi	r20,r4,20
 50870dc:	85a7883a 	add	r19,r16,r22
 50870e0:	9f000017 	ldw	fp,0(r19)
 50870e4:	a5ad883a 	add	r22,r20,r22
 50870e8:	202b883a 	mov	r21,r4
 50870ec:	b1000017 	ldw	r4,0(r22)
 50870f0:	e7000044 	addi	fp,fp,1
 50870f4:	282f883a 	mov	r23,r5
 50870f8:	e00b883a 	mov	r5,fp
 50870fc:	d9000015 	stw	r4,0(sp)
 5087100:	50828000 	call	5082800 <__udivsi3>
 5087104:	d9000017 	ldw	r4,0(sp)
 5087108:	1023883a 	mov	r17,r2
 508710c:	27002a36 	bltu	r4,fp,50871b8 <quorem+0x124>
 5087110:	800b883a 	mov	r5,r16
 5087114:	a009883a 	mov	r4,r20
 5087118:	0013883a 	mov	r9,zero
 508711c:	0007883a 	mov	r3,zero
 5087120:	2a000017 	ldw	r8,0(r5)
 5087124:	21800017 	ldw	r6,0(r4)
 5087128:	21000104 	addi	r4,r4,4
 508712c:	40bfffcc 	andi	r2,r8,65535
 5087130:	1445383a 	mul	r2,r2,r17
 5087134:	400ed43a 	srli	r7,r8,16
 5087138:	32bfffcc 	andi	r10,r6,65535
 508713c:	1245883a 	add	r2,r2,r9
 5087140:	1012d43a 	srli	r9,r2,16
 5087144:	123fffcc 	andi	r8,r2,65535
 5087148:	3c4f383a 	mul	r7,r7,r17
 508714c:	1a07c83a 	sub	r3,r3,r8
 5087150:	1a91883a 	add	r8,r3,r10
 5087154:	3006d43a 	srli	r3,r6,16
 5087158:	4005d43a 	srai	r2,r8,16
 508715c:	3a4f883a 	add	r7,r7,r9
 5087160:	39bfffcc 	andi	r6,r7,65535
 5087164:	1987c83a 	sub	r3,r3,r6
 5087168:	1887883a 	add	r3,r3,r2
 508716c:	1804943a 	slli	r2,r3,16
 5087170:	423fffcc 	andi	r8,r8,65535
 5087174:	29400104 	addi	r5,r5,4
 5087178:	1210b03a 	or	r8,r2,r8
 508717c:	223fff15 	stw	r8,-4(r4)
 5087180:	3812d43a 	srli	r9,r7,16
 5087184:	1807d43a 	srai	r3,r3,16
 5087188:	997fe52e 	bgeu	r19,r5,5087120 <quorem+0x8c>
 508718c:	b0800017 	ldw	r2,0(r22)
 5087190:	1000091e 	bne	r2,zero,50871b8 <quorem+0x124>
 5087194:	b5bfff04 	addi	r22,r22,-4
 5087198:	a5800336 	bltu	r20,r22,50871a8 <quorem+0x114>
 508719c:	00000506 	br	50871b4 <quorem+0x120>
 50871a0:	94bfffc4 	addi	r18,r18,-1
 50871a4:	a580032e 	bgeu	r20,r22,50871b4 <quorem+0x120>
 50871a8:	b0800017 	ldw	r2,0(r22)
 50871ac:	b5bfff04 	addi	r22,r22,-4
 50871b0:	103ffb26 	beq	r2,zero,50871a0 <quorem+0x10c>
 50871b4:	ac800415 	stw	r18,16(r21)
 50871b8:	b80b883a 	mov	r5,r23
 50871bc:	a809883a 	mov	r4,r21
 50871c0:	508b2e40 	call	508b2e4 <__mcmp>
 50871c4:	10002316 	blt	r2,zero,5087254 <quorem+0x1c0>
 50871c8:	8c400044 	addi	r17,r17,1
 50871cc:	a00d883a 	mov	r6,r20
 50871d0:	0007883a 	mov	r3,zero
 50871d4:	81000017 	ldw	r4,0(r16)
 50871d8:	31400017 	ldw	r5,0(r6)
 50871dc:	31800104 	addi	r6,r6,4
 50871e0:	20bfffcc 	andi	r2,r4,65535
 50871e4:	1887c83a 	sub	r3,r3,r2
 50871e8:	28bfffcc 	andi	r2,r5,65535
 50871ec:	1885883a 	add	r2,r3,r2
 50871f0:	2008d43a 	srli	r4,r4,16
 50871f4:	2806d43a 	srli	r3,r5,16
 50871f8:	100fd43a 	srai	r7,r2,16
 50871fc:	117fffcc 	andi	r5,r2,65535
 5087200:	1907c83a 	sub	r3,r3,r4
 5087204:	19c7883a 	add	r3,r3,r7
 5087208:	1804943a 	slli	r2,r3,16
 508720c:	84000104 	addi	r16,r16,4
 5087210:	1807d43a 	srai	r3,r3,16
 5087214:	1144b03a 	or	r2,r2,r5
 5087218:	30bfff15 	stw	r2,-4(r6)
 508721c:	9c3fed2e 	bgeu	r19,r16,50871d4 <quorem+0x140>
 5087220:	900490ba 	slli	r2,r18,2
 5087224:	a085883a 	add	r2,r20,r2
 5087228:	10c00017 	ldw	r3,0(r2)
 508722c:	1800091e 	bne	r3,zero,5087254 <quorem+0x1c0>
 5087230:	10bfff04 	addi	r2,r2,-4
 5087234:	a0800336 	bltu	r20,r2,5087244 <quorem+0x1b0>
 5087238:	00000506 	br	5087250 <quorem+0x1bc>
 508723c:	94bfffc4 	addi	r18,r18,-1
 5087240:	a080032e 	bgeu	r20,r2,5087250 <quorem+0x1bc>
 5087244:	10c00017 	ldw	r3,0(r2)
 5087248:	10bfff04 	addi	r2,r2,-4
 508724c:	183ffb26 	beq	r3,zero,508723c <quorem+0x1a8>
 5087250:	ac800415 	stw	r18,16(r21)
 5087254:	8805883a 	mov	r2,r17
 5087258:	dfc00a17 	ldw	ra,40(sp)
 508725c:	df000917 	ldw	fp,36(sp)
 5087260:	ddc00817 	ldw	r23,32(sp)
 5087264:	dd800717 	ldw	r22,28(sp)
 5087268:	dd400617 	ldw	r21,24(sp)
 508726c:	dd000517 	ldw	r20,20(sp)
 5087270:	dcc00417 	ldw	r19,16(sp)
 5087274:	dc800317 	ldw	r18,12(sp)
 5087278:	dc400217 	ldw	r17,8(sp)
 508727c:	dc000117 	ldw	r16,4(sp)
 5087280:	dec00b04 	addi	sp,sp,44
 5087284:	f800283a 	ret
 5087288:	0005883a 	mov	r2,zero
 508728c:	003ff206 	br	5087258 <quorem+0x1c4>

05087290 <_dtoa_r>:
 5087290:	20801017 	ldw	r2,64(r4)
 5087294:	deffe204 	addi	sp,sp,-120
 5087298:	ddc01b15 	stw	r23,108(sp)
 508729c:	dcc01715 	stw	r19,92(sp)
 50872a0:	dc801615 	stw	r18,88(sp)
 50872a4:	dc401515 	stw	r17,84(sp)
 50872a8:	dc001415 	stw	r16,80(sp)
 50872ac:	dfc01d15 	stw	ra,116(sp)
 50872b0:	df001c15 	stw	fp,112(sp)
 50872b4:	dd801a15 	stw	r22,104(sp)
 50872b8:	dd401915 	stw	r21,100(sp)
 50872bc:	dd001815 	stw	r20,96(sp)
 50872c0:	d9c00215 	stw	r7,8(sp)
 50872c4:	dc002017 	ldw	r16,128(sp)
 50872c8:	202f883a 	mov	r23,r4
 50872cc:	3025883a 	mov	r18,r6
 50872d0:	2827883a 	mov	r19,r5
 50872d4:	3023883a 	mov	r17,r6
 50872d8:	10000826 	beq	r2,zero,50872fc <_dtoa_r+0x6c>
 50872dc:	21801117 	ldw	r6,68(r4)
 50872e0:	00c00044 	movi	r3,1
 50872e4:	100b883a 	mov	r5,r2
 50872e8:	1986983a 	sll	r3,r3,r6
 50872ec:	11800115 	stw	r6,4(r2)
 50872f0:	10c00215 	stw	r3,8(r2)
 50872f4:	508a9680 	call	508a968 <_Bfree>
 50872f8:	b8001015 	stw	zero,64(r23)
 50872fc:	90018816 	blt	r18,zero,5087920 <_dtoa_r+0x690>
 5087300:	80000015 	stw	zero,0(r16)
 5087304:	909ffc2c 	andhi	r2,r18,32752
 5087308:	00dffc34 	movhi	r3,32752
 508730c:	10c18d26 	beq	r2,r3,5087944 <_dtoa_r+0x6b4>
 5087310:	000d883a 	mov	r6,zero
 5087314:	000f883a 	mov	r7,zero
 5087318:	9809883a 	mov	r4,r19
 508731c:	880b883a 	mov	r5,r17
 5087320:	509164c0 	call	509164c <__eqdf2>
 5087324:	1000191e 	bne	r2,zero,508738c <_dtoa_r+0xfc>
 5087328:	d8c01f17 	ldw	r3,124(sp)
 508732c:	00800044 	movi	r2,1
 5087330:	18800015 	stw	r2,0(r3)
 5087334:	d8802117 	ldw	r2,132(sp)
 5087338:	1002f926 	beq	r2,zero,5087f20 <_dtoa_r+0xc90>
 508733c:	d9002117 	ldw	r4,132(sp)
 5087340:	00814274 	movhi	r2,1289
 5087344:	10981b44 	addi	r2,r2,24685
 5087348:	00c14274 	movhi	r3,1289
 508734c:	20800015 	stw	r2,0(r4)
 5087350:	18981b04 	addi	r2,r3,24684
 5087354:	d8800115 	stw	r2,4(sp)
 5087358:	d8800117 	ldw	r2,4(sp)
 508735c:	dfc01d17 	ldw	ra,116(sp)
 5087360:	df001c17 	ldw	fp,112(sp)
 5087364:	ddc01b17 	ldw	r23,108(sp)
 5087368:	dd801a17 	ldw	r22,104(sp)
 508736c:	dd401917 	ldw	r21,100(sp)
 5087370:	dd001817 	ldw	r20,96(sp)
 5087374:	dcc01717 	ldw	r19,92(sp)
 5087378:	dc801617 	ldw	r18,88(sp)
 508737c:	dc401517 	ldw	r17,84(sp)
 5087380:	dc001417 	ldw	r16,80(sp)
 5087384:	dec01e04 	addi	sp,sp,120
 5087388:	f800283a 	ret
 508738c:	d8801204 	addi	r2,sp,72
 5087390:	9020d53a 	srli	r16,r18,20
 5087394:	d8800015 	stw	r2,0(sp)
 5087398:	d9c01304 	addi	r7,sp,76
 508739c:	980b883a 	mov	r5,r19
 50873a0:	880d883a 	mov	r6,r17
 50873a4:	b809883a 	mov	r4,r23
 50873a8:	508b6cc0 	call	508b6cc <__d2b>
 50873ac:	1039883a 	mov	fp,r2
 50873b0:	8001771e 	bne	r16,zero,5087990 <_dtoa_r+0x700>
 50873b4:	dd001217 	ldw	r20,72(sp)
 50873b8:	dc001317 	ldw	r16,76(sp)
 50873bc:	a421883a 	add	r16,r20,r16
 50873c0:	80810c84 	addi	r2,r16,1074
 50873c4:	10c00850 	cmplti	r3,r2,33
 50873c8:	1802e51e 	bne	r3,zero,5087f60 <_dtoa_r+0xcd0>
 50873cc:	01001004 	movi	r4,64
 50873d0:	2085c83a 	sub	r2,r4,r2
 50873d4:	81010484 	addi	r4,r16,1042
 50873d8:	90a4983a 	sll	r18,r18,r2
 50873dc:	9908d83a 	srl	r4,r19,r4
 50873e0:	9108b03a 	or	r4,r18,r4
 50873e4:	50929500 	call	5092950 <__floatunsidf>
 50873e8:	1009883a 	mov	r4,r2
 50873ec:	017f8434 	movhi	r5,65040
 50873f0:	00800044 	movi	r2,1
 50873f4:	194b883a 	add	r5,r3,r5
 50873f8:	843fffc4 	addi	r16,r16,-1
 50873fc:	d8800a15 	stw	r2,40(sp)
 5087400:	000d883a 	mov	r6,zero
 5087404:	01cffe34 	movhi	r7,16376
 5087408:	5091f100 	call	5091f10 <__subdf3>
 508740c:	0198dbf4 	movhi	r6,25455
 5087410:	01cff4f4 	movhi	r7,16339
 5087414:	3190d844 	addi	r6,r6,17249
 5087418:	39e1e9c4 	addi	r7,r7,-30809
 508741c:	1009883a 	mov	r4,r2
 5087420:	180b883a 	mov	r5,r3
 5087424:	509189c0 	call	509189c <__muldf3>
 5087428:	01a2d874 	movhi	r6,35681
 508742c:	01cff1f4 	movhi	r7,16327
 5087430:	31b22cc4 	addi	r6,r6,-14157
 5087434:	39e28a04 	addi	r7,r7,-30168
 5087438:	180b883a 	mov	r5,r3
 508743c:	1009883a 	mov	r4,r2
 5087440:	50905000 	call	5090500 <__adddf3>
 5087444:	8009883a 	mov	r4,r16
 5087448:	102b883a 	mov	r21,r2
 508744c:	1825883a 	mov	r18,r3
 5087450:	50928980 	call	5092898 <__floatsidf>
 5087454:	019427f4 	movhi	r6,20639
 5087458:	01cff4f4 	movhi	r7,16339
 508745c:	319e7ec4 	addi	r6,r6,31227
 5087460:	39d104c4 	addi	r7,r7,17427
 5087464:	1009883a 	mov	r4,r2
 5087468:	180b883a 	mov	r5,r3
 508746c:	509189c0 	call	509189c <__muldf3>
 5087470:	100d883a 	mov	r6,r2
 5087474:	180f883a 	mov	r7,r3
 5087478:	a809883a 	mov	r4,r21
 508747c:	900b883a 	mov	r5,r18
 5087480:	50905000 	call	5090500 <__adddf3>
 5087484:	1009883a 	mov	r4,r2
 5087488:	180b883a 	mov	r5,r3
 508748c:	1025883a 	mov	r18,r2
 5087490:	182d883a 	mov	r22,r3
 5087494:	50928180 	call	5092818 <__fixdfsi>
 5087498:	000d883a 	mov	r6,zero
 508749c:	000f883a 	mov	r7,zero
 50874a0:	9009883a 	mov	r4,r18
 50874a4:	b00b883a 	mov	r5,r22
 50874a8:	102b883a 	mov	r21,r2
 50874ac:	d8800315 	stw	r2,12(sp)
 50874b0:	50917b40 	call	50917b4 <__ledf2>
 50874b4:	10028f16 	blt	r2,zero,5087ef4 <_dtoa_r+0xc64>
 50874b8:	dc800317 	ldw	r18,12(sp)
 50874bc:	a421c83a 	sub	r16,r20,r16
 50874c0:	85bfffc4 	addi	r22,r16,-1
 50874c4:	908005e8 	cmpgeui	r2,r18,23
 50874c8:	1002821e 	bne	r2,zero,5087ed4 <_dtoa_r+0xc44>
 50874cc:	900690fa 	slli	r3,r18,3
 50874d0:	00814274 	movhi	r2,1289
 50874d4:	10986a04 	addi	r2,r2,25000
 50874d8:	10c5883a 	add	r2,r2,r3
 50874dc:	11800017 	ldw	r6,0(r2)
 50874e0:	11c00117 	ldw	r7,4(r2)
 50874e4:	9809883a 	mov	r4,r19
 50874e8:	880b883a 	mov	r5,r17
 50874ec:	50917b40 	call	50917b4 <__ledf2>
 50874f0:	1002550e 	bge	r2,zero,5087e48 <_dtoa_r+0xbb8>
 50874f4:	90bfffc4 	addi	r2,r18,-1
 50874f8:	d8800315 	stw	r2,12(sp)
 50874fc:	d8000915 	stw	zero,36(sp)
 5087500:	b0027716 	blt	r22,zero,5087ee0 <_dtoa_r+0xc50>
 5087504:	d8000615 	stw	zero,24(sp)
 5087508:	d8800317 	ldw	r2,12(sp)
 508750c:	1002510e 	bge	r2,zero,5087e54 <_dtoa_r+0xbc4>
 5087510:	d8800317 	ldw	r2,12(sp)
 5087514:	d8c00617 	ldw	r3,24(sp)
 5087518:	d8000315 	stw	zero,12(sp)
 508751c:	d8800415 	stw	r2,16(sp)
 5087520:	1887c83a 	sub	r3,r3,r2
 5087524:	d8c00615 	stw	r3,24(sp)
 5087528:	0087c83a 	sub	r3,zero,r2
 508752c:	d8c00815 	stw	r3,32(sp)
 5087530:	d8c00217 	ldw	r3,8(sp)
 5087534:	188002a8 	cmpgeui	r2,r3,10
 5087538:	10024d1e 	bne	r2,zero,5087e70 <_dtoa_r+0xbe0>
 508753c:	18800190 	cmplti	r2,r3,6
 5087540:	10028b1e 	bne	r2,zero,5087f70 <_dtoa_r+0xce0>
 5087544:	18bfff04 	addi	r2,r3,-4
 5087548:	d8800215 	stw	r2,8(sp)
 508754c:	0021883a 	mov	r16,zero
 5087550:	d8c00217 	ldw	r3,8(sp)
 5087554:	18800120 	cmpeqi	r2,r3,4
 5087558:	10035d1e 	bne	r2,zero,50882d0 <_dtoa_r+0x1040>
 508755c:	18800160 	cmpeqi	r2,r3,5
 5087560:	10031b1e 	bne	r2,zero,50881d0 <_dtoa_r+0xf40>
 5087564:	188000a0 	cmpeqi	r2,r3,2
 5087568:	10024d26 	beq	r2,zero,5087ea0 <_dtoa_r+0xc10>
 508756c:	d8000715 	stw	zero,28(sp)
 5087570:	d8801e17 	ldw	r2,120(sp)
 5087574:	0083260e 	bge	zero,r2,5088210 <_dtoa_r+0xf80>
 5087578:	d8800b15 	stw	r2,44(sp)
 508757c:	d8800515 	stw	r2,20(sp)
 5087580:	100d883a 	mov	r6,r2
 5087584:	b8001115 	stw	zero,68(r23)
 5087588:	30800610 	cmplti	r2,r6,24
 508758c:	1004f11e 	bne	r2,zero,5088954 <_dtoa_r+0x16c4>
 5087590:	00c00044 	movi	r3,1
 5087594:	00800104 	movi	r2,4
 5087598:	1085883a 	add	r2,r2,r2
 508759c:	11000504 	addi	r4,r2,20
 50875a0:	180b883a 	mov	r5,r3
 50875a4:	18c00044 	addi	r3,r3,1
 50875a8:	313ffb2e 	bgeu	r6,r4,5087598 <_dtoa_r+0x308>
 50875ac:	b9401115 	stw	r5,68(r23)
 50875b0:	b809883a 	mov	r4,r23
 50875b4:	508a8c40 	call	508a8c4 <_Balloc>
 50875b8:	d8800115 	stw	r2,4(sp)
 50875bc:	1004de26 	beq	r2,zero,5088938 <_dtoa_r+0x16a8>
 50875c0:	d8800117 	ldw	r2,4(sp)
 50875c4:	b8801015 	stw	r2,64(r23)
 50875c8:	d8800517 	ldw	r2,20(sp)
 50875cc:	108003e8 	cmpgeui	r2,r2,15
 50875d0:	1001021e 	bne	r2,zero,50879dc <_dtoa_r+0x74c>
 50875d4:	80010126 	beq	r16,zero,50879dc <_dtoa_r+0x74c>
 50875d8:	d9000417 	ldw	r4,16(sp)
 50875dc:	01038b0e 	bge	zero,r4,508840c <_dtoa_r+0x117c>
 50875e0:	208003cc 	andi	r2,r4,15
 50875e4:	100690fa 	slli	r3,r2,3
 50875e8:	2029d13a 	srai	r20,r4,4
 50875ec:	00814274 	movhi	r2,1289
 50875f0:	10986a04 	addi	r2,r2,25000
 50875f4:	10c5883a 	add	r2,r2,r3
 50875f8:	a0c0040c 	andi	r3,r20,16
 50875fc:	12800017 	ldw	r10,0(r2)
 5087600:	12400117 	ldw	r9,4(r2)
 5087604:	18032c26 	beq	r3,zero,50882b8 <_dtoa_r+0x1028>
 5087608:	00814274 	movhi	r2,1289
 508760c:	10986004 	addi	r2,r2,24960
 5087610:	11800817 	ldw	r6,32(r2)
 5087614:	11c00917 	ldw	r7,36(r2)
 5087618:	9809883a 	mov	r4,r19
 508761c:	880b883a 	mov	r5,r17
 5087620:	da400e15 	stw	r9,56(sp)
 5087624:	da800d15 	stw	r10,52(sp)
 5087628:	5090df00 	call	5090df0 <__divdf3>
 508762c:	da800d17 	ldw	r10,52(sp)
 5087630:	da400e17 	ldw	r9,56(sp)
 5087634:	a50003cc 	andi	r20,r20,15
 5087638:	d8800c15 	stw	r2,48(sp)
 508763c:	1825883a 	mov	r18,r3
 5087640:	054000c4 	movi	r21,3
 5087644:	a0001126 	beq	r20,zero,508768c <_dtoa_r+0x3fc>
 5087648:	04014274 	movhi	r16,1289
 508764c:	84186004 	addi	r16,r16,24960
 5087650:	5009883a 	mov	r4,r10
 5087654:	480b883a 	mov	r5,r9
 5087658:	a180004c 	andi	r6,r20,1
 508765c:	30000626 	beq	r6,zero,5087678 <_dtoa_r+0x3e8>
 5087660:	81800017 	ldw	r6,0(r16)
 5087664:	81c00117 	ldw	r7,4(r16)
 5087668:	ad400044 	addi	r21,r21,1
 508766c:	509189c0 	call	509189c <__muldf3>
 5087670:	1009883a 	mov	r4,r2
 5087674:	180b883a 	mov	r5,r3
 5087678:	a029d07a 	srai	r20,r20,1
 508767c:	84000204 	addi	r16,r16,8
 5087680:	a03ff51e 	bne	r20,zero,5087658 <_dtoa_r+0x3c8>
 5087684:	2015883a 	mov	r10,r4
 5087688:	2813883a 	mov	r9,r5
 508768c:	d9000c17 	ldw	r4,48(sp)
 5087690:	900b883a 	mov	r5,r18
 5087694:	500d883a 	mov	r6,r10
 5087698:	480f883a 	mov	r7,r9
 508769c:	5090df00 	call	5090df0 <__divdf3>
 50876a0:	1021883a 	mov	r16,r2
 50876a4:	1825883a 	mov	r18,r3
 50876a8:	d8800917 	ldw	r2,36(sp)
 50876ac:	10000626 	beq	r2,zero,50876c8 <_dtoa_r+0x438>
 50876b0:	000d883a 	mov	r6,zero
 50876b4:	01cffc34 	movhi	r7,16368
 50876b8:	8009883a 	mov	r4,r16
 50876bc:	900b883a 	mov	r5,r18
 50876c0:	50917b40 	call	50917b4 <__ledf2>
 50876c4:	10044416 	blt	r2,zero,50887d8 <_dtoa_r+0x1548>
 50876c8:	a809883a 	mov	r4,r21
 50876cc:	50928980 	call	5092898 <__floatsidf>
 50876d0:	800d883a 	mov	r6,r16
 50876d4:	900f883a 	mov	r7,r18
 50876d8:	1009883a 	mov	r4,r2
 50876dc:	180b883a 	mov	r5,r3
 50876e0:	509189c0 	call	509189c <__muldf3>
 50876e4:	000d883a 	mov	r6,zero
 50876e8:	01d00734 	movhi	r7,16412
 50876ec:	1009883a 	mov	r4,r2
 50876f0:	180b883a 	mov	r5,r3
 50876f4:	50905000 	call	5090500 <__adddf3>
 50876f8:	1029883a 	mov	r20,r2
 50876fc:	00bf3034 	movhi	r2,64704
 5087700:	1885883a 	add	r2,r3,r2
 5087704:	d8800c15 	stw	r2,48(sp)
 5087708:	d8800517 	ldw	r2,20(sp)
 508770c:	10032226 	beq	r2,zero,5088398 <_dtoa_r+0x1108>
 5087710:	d8800417 	ldw	r2,16(sp)
 5087714:	d8801115 	stw	r2,68(sp)
 5087718:	d8800517 	ldw	r2,20(sp)
 508771c:	d8800d15 	stw	r2,52(sp)
 5087720:	d8800d17 	ldw	r2,52(sp)
 5087724:	900b883a 	mov	r5,r18
 5087728:	8009883a 	mov	r4,r16
 508772c:	10bfffc4 	addi	r2,r2,-1
 5087730:	100690fa 	slli	r3,r2,3
 5087734:	00814274 	movhi	r2,1289
 5087738:	10986a04 	addi	r2,r2,25000
 508773c:	10c5883a 	add	r2,r2,r3
 5087740:	12800017 	ldw	r10,0(r2)
 5087744:	12c00117 	ldw	r11,4(r2)
 5087748:	da800f15 	stw	r10,60(sp)
 508774c:	dac00e15 	stw	r11,56(sp)
 5087750:	50928180 	call	5092818 <__fixdfsi>
 5087754:	1009883a 	mov	r4,r2
 5087758:	10800c04 	addi	r2,r2,48
 508775c:	d8801015 	stw	r2,64(sp)
 5087760:	50928980 	call	5092898 <__floatsidf>
 5087764:	8009883a 	mov	r4,r16
 5087768:	100d883a 	mov	r6,r2
 508776c:	180f883a 	mov	r7,r3
 5087770:	900b883a 	mov	r5,r18
 5087774:	5091f100 	call	5091f10 <__subdf3>
 5087778:	d9000117 	ldw	r4,4(sp)
 508777c:	dac00e17 	ldw	r11,56(sp)
 5087780:	da800f17 	ldw	r10,60(sp)
 5087784:	1825883a 	mov	r18,r3
 5087788:	d8c00717 	ldw	r3,28(sp)
 508778c:	25400044 	addi	r21,r4,1
 5087790:	1021883a 	mov	r16,r2
 5087794:	500d883a 	mov	r6,r10
 5087798:	580f883a 	mov	r7,r11
 508779c:	1803b626 	beq	r3,zero,5088678 <_dtoa_r+0x13e8>
 50877a0:	0009883a 	mov	r4,zero
 50877a4:	014ff834 	movhi	r5,16352
 50877a8:	5090df00 	call	5090df0 <__divdf3>
 50877ac:	d9c00c17 	ldw	r7,48(sp)
 50877b0:	a00d883a 	mov	r6,r20
 50877b4:	1009883a 	mov	r4,r2
 50877b8:	180b883a 	mov	r5,r3
 50877bc:	5091f100 	call	5091f10 <__subdf3>
 50877c0:	d9000117 	ldw	r4,4(sp)
 50877c4:	1029883a 	mov	r20,r2
 50877c8:	d8801017 	ldw	r2,64(sp)
 50877cc:	800d883a 	mov	r6,r16
 50877d0:	900f883a 	mov	r7,r18
 50877d4:	20800005 	stb	r2,0(r4)
 50877d8:	180b883a 	mov	r5,r3
 50877dc:	a009883a 	mov	r4,r20
 50877e0:	d8c00c15 	stw	r3,48(sp)
 50877e4:	50916cc0 	call	50916cc <__gedf2>
 50877e8:	0083e716 	blt	zero,r2,5088788 <_dtoa_r+0x14f8>
 50877ec:	0005883a 	mov	r2,zero
 50877f0:	dd800e15 	stw	r22,56(sp)
 50877f4:	dc400f15 	stw	r17,60(sp)
 50877f8:	dd800d17 	ldw	r22,52(sp)
 50877fc:	dc400c17 	ldw	r17,48(sp)
 5087800:	ddc00d15 	stw	r23,52(sp)
 5087804:	dcc00c15 	stw	r19,48(sp)
 5087808:	1027883a 	mov	r19,r2
 508780c:	00002606 	br	50878a8 <_dtoa_r+0x618>
 5087810:	9cc00044 	addi	r19,r19,1
 5087814:	9d806d0e 	bge	r19,r22,50879cc <_dtoa_r+0x73c>
 5087818:	a009883a 	mov	r4,r20
 508781c:	880b883a 	mov	r5,r17
 5087820:	000d883a 	mov	r6,zero
 5087824:	01d00934 	movhi	r7,16420
 5087828:	509189c0 	call	509189c <__muldf3>
 508782c:	000d883a 	mov	r6,zero
 5087830:	01d00934 	movhi	r7,16420
 5087834:	8009883a 	mov	r4,r16
 5087838:	900b883a 	mov	r5,r18
 508783c:	1029883a 	mov	r20,r2
 5087840:	1823883a 	mov	r17,r3
 5087844:	509189c0 	call	509189c <__muldf3>
 5087848:	180b883a 	mov	r5,r3
 508784c:	1009883a 	mov	r4,r2
 5087850:	1821883a 	mov	r16,r3
 5087854:	1025883a 	mov	r18,r2
 5087858:	50928180 	call	5092818 <__fixdfsi>
 508785c:	1009883a 	mov	r4,r2
 5087860:	102f883a 	mov	r23,r2
 5087864:	50928980 	call	5092898 <__floatsidf>
 5087868:	9009883a 	mov	r4,r18
 508786c:	800b883a 	mov	r5,r16
 5087870:	100d883a 	mov	r6,r2
 5087874:	180f883a 	mov	r7,r3
 5087878:	5091f100 	call	5091f10 <__subdf3>
 508787c:	ad400044 	addi	r21,r21,1
 5087880:	ba000c04 	addi	r8,r23,48
 5087884:	aa3fffc5 	stb	r8,-1(r21)
 5087888:	a00d883a 	mov	r6,r20
 508788c:	880f883a 	mov	r7,r17
 5087890:	1009883a 	mov	r4,r2
 5087894:	180b883a 	mov	r5,r3
 5087898:	1021883a 	mov	r16,r2
 508789c:	1825883a 	mov	r18,r3
 50878a0:	50917b40 	call	50917b4 <__ledf2>
 50878a4:	10040516 	blt	r2,zero,50888bc <_dtoa_r+0x162c>
 50878a8:	800d883a 	mov	r6,r16
 50878ac:	900f883a 	mov	r7,r18
 50878b0:	0009883a 	mov	r4,zero
 50878b4:	014ffc34 	movhi	r5,16368
 50878b8:	5091f100 	call	5091f10 <__subdf3>
 50878bc:	a00d883a 	mov	r6,r20
 50878c0:	880f883a 	mov	r7,r17
 50878c4:	1009883a 	mov	r4,r2
 50878c8:	180b883a 	mov	r5,r3
 50878cc:	50917b40 	call	50917b4 <__ledf2>
 50878d0:	103fcf0e 	bge	r2,zero,5087810 <_dtoa_r+0x580>
 50878d4:	d8801117 	ldw	r2,68(sp)
 50878d8:	ddc00d17 	ldw	r23,52(sp)
 50878dc:	d9000117 	ldw	r4,4(sp)
 50878e0:	10800044 	addi	r2,r2,1
 50878e4:	d8800415 	stw	r2,16(sp)
 50878e8:	a829883a 	mov	r20,r21
 50878ec:	00000106 	br	50878f4 <_dtoa_r+0x664>
 50878f0:	a103da26 	beq	r20,r4,508885c <_dtoa_r+0x15cc>
 50878f4:	a0ffffc3 	ldbu	r3,-1(r20)
 50878f8:	a02b883a 	mov	r21,r20
 50878fc:	a53fffc4 	addi	r20,r20,-1
 5087900:	18803fcc 	andi	r2,r3,255
 5087904:	1080201c 	xori	r2,r2,128
 5087908:	10bfe004 	addi	r2,r2,-128
 508790c:	10800e60 	cmpeqi	r2,r2,57
 5087910:	103ff71e 	bne	r2,zero,50878f0 <_dtoa_r+0x660>
 5087914:	18c00044 	addi	r3,r3,1
 5087918:	a0c00005 	stb	r3,0(r20)
 508791c:	00013f06 	br	5087e1c <_dtoa_r+0xb8c>
 5087920:	04600034 	movhi	r17,32768
 5087924:	8c7fffc4 	addi	r17,r17,-1
 5087928:	9462703a 	and	r17,r18,r17
 508792c:	00800044 	movi	r2,1
 5087930:	8825883a 	mov	r18,r17
 5087934:	80800015 	stw	r2,0(r16)
 5087938:	00dffc34 	movhi	r3,32752
 508793c:	909ffc2c 	andhi	r2,r18,32752
 5087940:	10fe731e 	bne	r2,r3,5087310 <_dtoa_r+0x80>
 5087944:	d9001f17 	ldw	r4,124(sp)
 5087948:	00800434 	movhi	r2,16
 508794c:	10bfffc4 	addi	r2,r2,-1
 5087950:	9084703a 	and	r2,r18,r2
 5087954:	00c9c3c4 	movi	r3,9999
 5087958:	20c00015 	stw	r3,0(r4)
 508795c:	14e6b03a 	or	r19,r2,r19
 5087960:	9800141e 	bne	r19,zero,50879b4 <_dtoa_r+0x724>
 5087964:	d8802117 	ldw	r2,132(sp)
 5087968:	10041226 	beq	r2,zero,50889b4 <_dtoa_r+0x1724>
 508796c:	00814274 	movhi	r2,1289
 5087970:	1007883a 	mov	r3,r2
 5087974:	18d82d04 	addi	r3,r3,24756
 5087978:	00814274 	movhi	r2,1289
 508797c:	d8c00115 	stw	r3,4(sp)
 5087980:	10982f04 	addi	r2,r2,24764
 5087984:	d8c02117 	ldw	r3,132(sp)
 5087988:	18800015 	stw	r2,0(r3)
 508798c:	003e7206 	br	5087358 <_dtoa_r+0xc8>
 5087990:	01400434 	movhi	r5,16
 5087994:	297fffc4 	addi	r5,r5,-1
 5087998:	894a703a 	and	r5,r17,r5
 508799c:	dd001217 	ldw	r20,72(sp)
 50879a0:	9809883a 	mov	r4,r19
 50879a4:	294ffc34 	orhi	r5,r5,16368
 50879a8:	843f0044 	addi	r16,r16,-1023
 50879ac:	d8000a15 	stw	zero,40(sp)
 50879b0:	003e9306 	br	5087400 <_dtoa_r+0x170>
 50879b4:	d8802117 	ldw	r2,132(sp)
 50879b8:	1001fe1e 	bne	r2,zero,50881b4 <_dtoa_r+0xf24>
 50879bc:	00814274 	movhi	r2,1289
 50879c0:	10982c04 	addi	r2,r2,24752
 50879c4:	d8800115 	stw	r2,4(sp)
 50879c8:	003e6306 	br	5087358 <_dtoa_r+0xc8>
 50879cc:	dd800e17 	ldw	r22,56(sp)
 50879d0:	ddc00d17 	ldw	r23,52(sp)
 50879d4:	dc400f17 	ldw	r17,60(sp)
 50879d8:	dcc00c17 	ldw	r19,48(sp)
 50879dc:	d8801317 	ldw	r2,76(sp)
 50879e0:	10006e16 	blt	r2,zero,5087b9c <_dtoa_r+0x90c>
 50879e4:	d9000417 	ldw	r4,16(sp)
 50879e8:	20c003c8 	cmpgei	r3,r4,15
 50879ec:	18006b1e 	bne	r3,zero,5087b9c <_dtoa_r+0x90c>
 50879f0:	200690fa 	slli	r3,r4,3
 50879f4:	00814274 	movhi	r2,1289
 50879f8:	10986a04 	addi	r2,r2,25000
 50879fc:	10c5883a 	add	r2,r2,r3
 5087a00:	14000017 	ldw	r16,0(r2)
 5087a04:	14800117 	ldw	r18,4(r2)
 5087a08:	d8801e17 	ldw	r2,120(sp)
 5087a0c:	1000150e 	bge	r2,zero,5087a64 <_dtoa_r+0x7d4>
 5087a10:	d8800517 	ldw	r2,20(sp)
 5087a14:	00801316 	blt	zero,r2,5087a64 <_dtoa_r+0x7d4>
 5087a18:	d8800517 	ldw	r2,20(sp)
 5087a1c:	1002721e 	bne	r2,zero,50883e8 <_dtoa_r+0x1158>
 5087a20:	8009883a 	mov	r4,r16
 5087a24:	000d883a 	mov	r6,zero
 5087a28:	01d00534 	movhi	r7,16404
 5087a2c:	900b883a 	mov	r5,r18
 5087a30:	509189c0 	call	509189c <__muldf3>
 5087a34:	100d883a 	mov	r6,r2
 5087a38:	180f883a 	mov	r7,r3
 5087a3c:	9809883a 	mov	r4,r19
 5087a40:	880b883a 	mov	r5,r17
 5087a44:	50917b40 	call	50917b4 <__ledf2>
 5087a48:	0029883a 	mov	r20,zero
 5087a4c:	0021883a 	mov	r16,zero
 5087a50:	00820216 	blt	zero,r2,508825c <_dtoa_r+0xfcc>
 5087a54:	d8801e17 	ldw	r2,120(sp)
 5087a58:	dd400117 	ldw	r21,4(sp)
 5087a5c:	00a2303a 	nor	r17,zero,r2
 5087a60:	00020406 	br	5088274 <_dtoa_r+0xfe4>
 5087a64:	800d883a 	mov	r6,r16
 5087a68:	900f883a 	mov	r7,r18
 5087a6c:	9809883a 	mov	r4,r19
 5087a70:	880b883a 	mov	r5,r17
 5087a74:	5090df00 	call	5090df0 <__divdf3>
 5087a78:	180b883a 	mov	r5,r3
 5087a7c:	1009883a 	mov	r4,r2
 5087a80:	50928180 	call	5092818 <__fixdfsi>
 5087a84:	1009883a 	mov	r4,r2
 5087a88:	102b883a 	mov	r21,r2
 5087a8c:	50928980 	call	5092898 <__floatsidf>
 5087a90:	800d883a 	mov	r6,r16
 5087a94:	900f883a 	mov	r7,r18
 5087a98:	1009883a 	mov	r4,r2
 5087a9c:	180b883a 	mov	r5,r3
 5087aa0:	509189c0 	call	509189c <__muldf3>
 5087aa4:	100d883a 	mov	r6,r2
 5087aa8:	9809883a 	mov	r4,r19
 5087aac:	880b883a 	mov	r5,r17
 5087ab0:	180f883a 	mov	r7,r3
 5087ab4:	5091f100 	call	5091f10 <__subdf3>
 5087ab8:	d9800117 	ldw	r6,4(sp)
 5087abc:	dd800517 	ldw	r22,20(sp)
 5087ac0:	1009883a 	mov	r4,r2
 5087ac4:	a8800c04 	addi	r2,r21,48
 5087ac8:	30800005 	stb	r2,0(r6)
 5087acc:	b0800060 	cmpeqi	r2,r22,1
 5087ad0:	180b883a 	mov	r5,r3
 5087ad4:	35000044 	addi	r20,r6,1
 5087ad8:	10029f1e 	bne	r2,zero,5088558 <_dtoa_r+0x12c8>
 5087adc:	04400044 	movi	r17,1
 5087ae0:	ddc00215 	stw	r23,8(sp)
 5087ae4:	00001c06 	br	5087b58 <_dtoa_r+0x8c8>
 5087ae8:	800d883a 	mov	r6,r16
 5087aec:	900f883a 	mov	r7,r18
 5087af0:	a809883a 	mov	r4,r21
 5087af4:	980b883a 	mov	r5,r19
 5087af8:	5090df00 	call	5090df0 <__divdf3>
 5087afc:	180b883a 	mov	r5,r3
 5087b00:	1009883a 	mov	r4,r2
 5087b04:	50928180 	call	5092818 <__fixdfsi>
 5087b08:	1009883a 	mov	r4,r2
 5087b0c:	102f883a 	mov	r23,r2
 5087b10:	50928980 	call	5092898 <__floatsidf>
 5087b14:	800d883a 	mov	r6,r16
 5087b18:	900f883a 	mov	r7,r18
 5087b1c:	1009883a 	mov	r4,r2
 5087b20:	180b883a 	mov	r5,r3
 5087b24:	509189c0 	call	509189c <__muldf3>
 5087b28:	a809883a 	mov	r4,r21
 5087b2c:	980b883a 	mov	r5,r19
 5087b30:	100d883a 	mov	r6,r2
 5087b34:	180f883a 	mov	r7,r3
 5087b38:	5091f100 	call	5091f10 <__subdf3>
 5087b3c:	b9000c04 	addi	r4,r23,48
 5087b40:	a1000005 	stb	r4,0(r20)
 5087b44:	8c400044 	addi	r17,r17,1
 5087b48:	a5000044 	addi	r20,r20,1
 5087b4c:	1009883a 	mov	r4,r2
 5087b50:	180b883a 	mov	r5,r3
 5087b54:	8d827e26 	beq	r17,r22,5088550 <_dtoa_r+0x12c0>
 5087b58:	000d883a 	mov	r6,zero
 5087b5c:	01d00934 	movhi	r7,16420
 5087b60:	509189c0 	call	509189c <__muldf3>
 5087b64:	000d883a 	mov	r6,zero
 5087b68:	000f883a 	mov	r7,zero
 5087b6c:	1009883a 	mov	r4,r2
 5087b70:	180b883a 	mov	r5,r3
 5087b74:	102b883a 	mov	r21,r2
 5087b78:	1827883a 	mov	r19,r3
 5087b7c:	509164c0 	call	509164c <__eqdf2>
 5087b80:	103fd91e 	bne	r2,zero,5087ae8 <_dtoa_r+0x858>
 5087b84:	d8800417 	ldw	r2,16(sp)
 5087b88:	ddc00217 	ldw	r23,8(sp)
 5087b8c:	a02b883a 	mov	r21,r20
 5087b90:	10800044 	addi	r2,r2,1
 5087b94:	d8800415 	stw	r2,16(sp)
 5087b98:	0000a006 	br	5087e1c <_dtoa_r+0xb8c>
 5087b9c:	d8c00717 	ldw	r3,28(sp)
 5087ba0:	1800e326 	beq	r3,zero,5087f30 <_dtoa_r+0xca0>
 5087ba4:	d8c00217 	ldw	r3,8(sp)
 5087ba8:	18c00088 	cmpgei	r3,r3,2
 5087bac:	1801e026 	beq	r3,zero,5088330 <_dtoa_r+0x10a0>
 5087bb0:	d8800517 	ldw	r2,20(sp)
 5087bb4:	153fffc4 	addi	r20,r2,-1
 5087bb8:	d8800817 	ldw	r2,32(sp)
 5087bbc:	1501bc0e 	bge	r2,r20,50882b0 <_dtoa_r+0x1020>
 5087bc0:	d8800817 	ldw	r2,32(sp)
 5087bc4:	d8c00317 	ldw	r3,12(sp)
 5087bc8:	dd000815 	stw	r20,32(sp)
 5087bcc:	a085c83a 	sub	r2,r20,r2
 5087bd0:	1885883a 	add	r2,r3,r2
 5087bd4:	d8800315 	stw	r2,12(sp)
 5087bd8:	0029883a 	mov	r20,zero
 5087bdc:	d8800517 	ldw	r2,20(sp)
 5087be0:	10028b16 	blt	r2,zero,5088610 <_dtoa_r+0x1380>
 5087be4:	d8c00617 	ldw	r3,24(sp)
 5087be8:	b0ad883a 	add	r22,r22,r2
 5087bec:	1885883a 	add	r2,r3,r2
 5087bf0:	1825883a 	mov	r18,r3
 5087bf4:	d8800615 	stw	r2,24(sp)
 5087bf8:	01400044 	movi	r5,1
 5087bfc:	b809883a 	mov	r4,r23
 5087c00:	508ad100 	call	508ad10 <__i2b>
 5087c04:	1021883a 	mov	r16,r2
 5087c08:	0480080e 	bge	zero,r18,5087c2c <_dtoa_r+0x99c>
 5087c0c:	0580070e 	bge	zero,r22,5087c2c <_dtoa_r+0x99c>
 5087c10:	9005883a 	mov	r2,r18
 5087c14:	b4819e16 	blt	r22,r18,5088290 <_dtoa_r+0x1000>
 5087c18:	d8c00617 	ldw	r3,24(sp)
 5087c1c:	90a5c83a 	sub	r18,r18,r2
 5087c20:	b0adc83a 	sub	r22,r22,r2
 5087c24:	1887c83a 	sub	r3,r3,r2
 5087c28:	d8c00615 	stw	r3,24(sp)
 5087c2c:	d8800817 	ldw	r2,32(sp)
 5087c30:	10001426 	beq	r2,zero,5087c84 <_dtoa_r+0x9f4>
 5087c34:	d8800717 	ldw	r2,28(sp)
 5087c38:	1001ee26 	beq	r2,zero,50883f4 <_dtoa_r+0x1164>
 5087c3c:	05000e0e 	bge	zero,r20,5087c78 <_dtoa_r+0x9e8>
 5087c40:	800b883a 	mov	r5,r16
 5087c44:	a00d883a 	mov	r6,r20
 5087c48:	b809883a 	mov	r4,r23
 5087c4c:	508b0140 	call	508b014 <__pow5mult>
 5087c50:	e00d883a 	mov	r6,fp
 5087c54:	100b883a 	mov	r5,r2
 5087c58:	b809883a 	mov	r4,r23
 5087c5c:	1021883a 	mov	r16,r2
 5087c60:	508adc00 	call	508adc0 <__multiply>
 5087c64:	102b883a 	mov	r21,r2
 5087c68:	e00b883a 	mov	r5,fp
 5087c6c:	b809883a 	mov	r4,r23
 5087c70:	508a9680 	call	508a968 <_Bfree>
 5087c74:	a839883a 	mov	fp,r21
 5087c78:	d8800817 	ldw	r2,32(sp)
 5087c7c:	150dc83a 	sub	r6,r2,r20
 5087c80:	15025e1e 	bne	r2,r20,50885fc <_dtoa_r+0x136c>
 5087c84:	01400044 	movi	r5,1
 5087c88:	b809883a 	mov	r4,r23
 5087c8c:	508ad100 	call	508ad10 <__i2b>
 5087c90:	d9800317 	ldw	r6,12(sp)
 5087c94:	1029883a 	mov	r20,r2
 5087c98:	0180b716 	blt	zero,r6,5087f78 <_dtoa_r+0xce8>
 5087c9c:	d8800217 	ldw	r2,8(sp)
 5087ca0:	10800088 	cmpgei	r2,r2,2
 5087ca4:	10014d26 	beq	r2,zero,50881dc <_dtoa_r+0xf4c>
 5087ca8:	0023883a 	mov	r17,zero
 5087cac:	d8c00317 	ldw	r3,12(sp)
 5087cb0:	00800044 	movi	r2,1
 5087cb4:	1800b81e 	bne	r3,zero,5087f98 <_dtoa_r+0xd08>
 5087cb8:	1585883a 	add	r2,r2,r22
 5087cbc:	108007cc 	andi	r2,r2,31
 5087cc0:	1000a526 	beq	r2,zero,5087f58 <_dtoa_r+0xcc8>
 5087cc4:	00c00804 	movi	r3,32
 5087cc8:	1887c83a 	sub	r3,r3,r2
 5087ccc:	19000150 	cmplti	r4,r3,5
 5087cd0:	20033c1e 	bne	r4,zero,50889c4 <_dtoa_r+0x1734>
 5087cd4:	00c00704 	movi	r3,28
 5087cd8:	1885c83a 	sub	r2,r3,r2
 5087cdc:	d8c00617 	ldw	r3,24(sp)
 5087ce0:	90a5883a 	add	r18,r18,r2
 5087ce4:	b0ad883a 	add	r22,r22,r2
 5087ce8:	1887883a 	add	r3,r3,r2
 5087cec:	d8c00615 	stw	r3,24(sp)
 5087cf0:	d8800617 	ldw	r2,24(sp)
 5087cf4:	00809216 	blt	zero,r2,5087f40 <_dtoa_r+0xcb0>
 5087cf8:	0580050e 	bge	zero,r22,5087d10 <_dtoa_r+0xa80>
 5087cfc:	a00b883a 	mov	r5,r20
 5087d00:	b00d883a 	mov	r6,r22
 5087d04:	b809883a 	mov	r4,r23
 5087d08:	508b15c0 	call	508b15c <__lshift>
 5087d0c:	1029883a 	mov	r20,r2
 5087d10:	d8800917 	ldw	r2,36(sp)
 5087d14:	1001151e 	bne	r2,zero,508816c <_dtoa_r+0xedc>
 5087d18:	d8800517 	ldw	r2,20(sp)
 5087d1c:	0081020e 	bge	zero,r2,5088128 <_dtoa_r+0xe98>
 5087d20:	d8800717 	ldw	r2,28(sp)
 5087d24:	1000af1e 	bne	r2,zero,5087fe4 <_dtoa_r+0xd54>
 5087d28:	d8800417 	ldw	r2,16(sp)
 5087d2c:	10800044 	addi	r2,r2,1
 5087d30:	d8800415 	stw	r2,16(sp)
 5087d34:	dc800517 	ldw	r18,20(sp)
 5087d38:	dd400117 	ldw	r21,4(sp)
 5087d3c:	04400044 	movi	r17,1
 5087d40:	00000706 	br	5087d60 <_dtoa_r+0xad0>
 5087d44:	e00b883a 	mov	r5,fp
 5087d48:	000f883a 	mov	r7,zero
 5087d4c:	01800284 	movi	r6,10
 5087d50:	b809883a 	mov	r4,r23
 5087d54:	508a98c0 	call	508a98c <__multadd>
 5087d58:	1039883a 	mov	fp,r2
 5087d5c:	8c400044 	addi	r17,r17,1
 5087d60:	a00b883a 	mov	r5,r20
 5087d64:	e009883a 	mov	r4,fp
 5087d68:	50870940 	call	5087094 <quorem>
 5087d6c:	14c00c04 	addi	r19,r2,48
 5087d70:	ac45883a 	add	r2,r21,r17
 5087d74:	14ffffc5 	stb	r19,-1(r2)
 5087d78:	8cbff216 	blt	r17,r18,5087d44 <_dtoa_r+0xab4>
 5087d7c:	d8800517 	ldw	r2,20(sp)
 5087d80:	0081510e 	bge	zero,r2,50882c8 <_dtoa_r+0x1038>
 5087d84:	d8c00117 	ldw	r3,4(sp)
 5087d88:	0023883a 	mov	r17,zero
 5087d8c:	18ab883a 	add	r21,r3,r2
 5087d90:	e00b883a 	mov	r5,fp
 5087d94:	01800044 	movi	r6,1
 5087d98:	b809883a 	mov	r4,r23
 5087d9c:	508b15c0 	call	508b15c <__lshift>
 5087da0:	1009883a 	mov	r4,r2
 5087da4:	a00b883a 	mov	r5,r20
 5087da8:	1039883a 	mov	fp,r2
 5087dac:	508b2e40 	call	508b2e4 <__mcmp>
 5087db0:	a93fffc3 	ldbu	r4,-1(r21)
 5087db4:	0081490e 	bge	zero,r2,50882dc <_dtoa_r+0x104c>
 5087db8:	d9400117 	ldw	r5,4(sp)
 5087dbc:	00000306 	br	5087dcc <_dtoa_r+0xb3c>
 5087dc0:	19415426 	beq	r3,r5,5088314 <_dtoa_r+0x1084>
 5087dc4:	193fffc3 	ldbu	r4,-1(r3)
 5087dc8:	182b883a 	mov	r21,r3
 5087dcc:	20803fcc 	andi	r2,r4,255
 5087dd0:	1080201c 	xori	r2,r2,128
 5087dd4:	10bfe004 	addi	r2,r2,-128
 5087dd8:	10800e60 	cmpeqi	r2,r2,57
 5087ddc:	a8ffffc4 	addi	r3,r21,-1
 5087de0:	103ff71e 	bne	r2,zero,5087dc0 <_dtoa_r+0xb30>
 5087de4:	21000044 	addi	r4,r4,1
 5087de8:	19000005 	stb	r4,0(r3)
 5087dec:	a00b883a 	mov	r5,r20
 5087df0:	b809883a 	mov	r4,r23
 5087df4:	508a9680 	call	508a968 <_Bfree>
 5087df8:	80000826 	beq	r16,zero,5087e1c <_dtoa_r+0xb8c>
 5087dfc:	88000426 	beq	r17,zero,5087e10 <_dtoa_r+0xb80>
 5087e00:	8c000326 	beq	r17,r16,5087e10 <_dtoa_r+0xb80>
 5087e04:	880b883a 	mov	r5,r17
 5087e08:	b809883a 	mov	r4,r23
 5087e0c:	508a9680 	call	508a968 <_Bfree>
 5087e10:	800b883a 	mov	r5,r16
 5087e14:	b809883a 	mov	r4,r23
 5087e18:	508a9680 	call	508a968 <_Bfree>
 5087e1c:	e00b883a 	mov	r5,fp
 5087e20:	b809883a 	mov	r4,r23
 5087e24:	508a9680 	call	508a968 <_Bfree>
 5087e28:	d8801f17 	ldw	r2,124(sp)
 5087e2c:	d8c00417 	ldw	r3,16(sp)
 5087e30:	a8000005 	stb	zero,0(r21)
 5087e34:	10c00015 	stw	r3,0(r2)
 5087e38:	d8802117 	ldw	r2,132(sp)
 5087e3c:	103d4626 	beq	r2,zero,5087358 <_dtoa_r+0xc8>
 5087e40:	15400015 	stw	r21,0(r2)
 5087e44:	003d4406 	br	5087358 <_dtoa_r+0xc8>
 5087e48:	d8000915 	stw	zero,36(sp)
 5087e4c:	b0002416 	blt	r22,zero,5087ee0 <_dtoa_r+0xc50>
 5087e50:	d8000615 	stw	zero,24(sp)
 5087e54:	d8800317 	ldw	r2,12(sp)
 5087e58:	d8c00217 	ldw	r3,8(sp)
 5087e5c:	d8000815 	stw	zero,32(sp)
 5087e60:	b0ad883a 	add	r22,r22,r2
 5087e64:	d8800415 	stw	r2,16(sp)
 5087e68:	188002a8 	cmpgeui	r2,r3,10
 5087e6c:	103db326 	beq	r2,zero,508753c <_dtoa_r+0x2ac>
 5087e70:	00800044 	movi	r2,1
 5087e74:	d8800715 	stw	r2,28(sp)
 5087e78:	00bfffc4 	movi	r2,-1
 5087e7c:	04000044 	movi	r16,1
 5087e80:	d8000215 	stw	zero,8(sp)
 5087e84:	d8800515 	stw	r2,20(sp)
 5087e88:	d8001e15 	stw	zero,120(sp)
 5087e8c:	d8800517 	ldw	r2,20(sp)
 5087e90:	b8001115 	stw	zero,68(r23)
 5087e94:	000b883a 	mov	r5,zero
 5087e98:	d8800b15 	stw	r2,44(sp)
 5087e9c:	003dc406 	br	50875b0 <_dtoa_r+0x320>
 5087ea0:	188000e0 	cmpeqi	r2,r3,3
 5087ea4:	d8000715 	stw	zero,28(sp)
 5087ea8:	1002ac26 	beq	r2,zero,508895c <_dtoa_r+0x16cc>
 5087eac:	d8801e17 	ldw	r2,120(sp)
 5087eb0:	d8c00417 	ldw	r3,16(sp)
 5087eb4:	10c5883a 	add	r2,r2,r3
 5087eb8:	d8800b15 	stw	r2,44(sp)
 5087ebc:	10800044 	addi	r2,r2,1
 5087ec0:	d8800515 	stw	r2,20(sp)
 5087ec4:	100d883a 	mov	r6,r2
 5087ec8:	00bdae16 	blt	zero,r2,5087584 <_dtoa_r+0x2f4>
 5087ecc:	01800044 	movi	r6,1
 5087ed0:	003dac06 	br	5087584 <_dtoa_r+0x2f4>
 5087ed4:	00800044 	movi	r2,1
 5087ed8:	d8800915 	stw	r2,36(sp)
 5087edc:	b03d890e 	bge	r22,zero,5087504 <_dtoa_r+0x274>
 5087ee0:	00800044 	movi	r2,1
 5087ee4:	1405c83a 	sub	r2,r2,r16
 5087ee8:	d8800615 	stw	r2,24(sp)
 5087eec:	002d883a 	mov	r22,zero
 5087ef0:	003d8506 	br	5087508 <_dtoa_r+0x278>
 5087ef4:	a809883a 	mov	r4,r21
 5087ef8:	50928980 	call	5092898 <__floatsidf>
 5087efc:	900d883a 	mov	r6,r18
 5087f00:	b00f883a 	mov	r7,r22
 5087f04:	1009883a 	mov	r4,r2
 5087f08:	180b883a 	mov	r5,r3
 5087f0c:	509164c0 	call	509164c <__eqdf2>
 5087f10:	103d6926 	beq	r2,zero,50874b8 <_dtoa_r+0x228>
 5087f14:	a8bfffc4 	addi	r2,r21,-1
 5087f18:	d8800315 	stw	r2,12(sp)
 5087f1c:	003d6606 	br	50874b8 <_dtoa_r+0x228>
 5087f20:	00814274 	movhi	r2,1289
 5087f24:	10981b04 	addi	r2,r2,24684
 5087f28:	d8800115 	stw	r2,4(sp)
 5087f2c:	003d0a06 	br	5087358 <_dtoa_r+0xc8>
 5087f30:	dd000817 	ldw	r20,32(sp)
 5087f34:	dc800617 	ldw	r18,24(sp)
 5087f38:	0021883a 	mov	r16,zero
 5087f3c:	003f3206 	br	5087c08 <_dtoa_r+0x978>
 5087f40:	e00b883a 	mov	r5,fp
 5087f44:	100d883a 	mov	r6,r2
 5087f48:	b809883a 	mov	r4,r23
 5087f4c:	508b15c0 	call	508b15c <__lshift>
 5087f50:	1039883a 	mov	fp,r2
 5087f54:	003f6806 	br	5087cf8 <_dtoa_r+0xa68>
 5087f58:	00800704 	movi	r2,28
 5087f5c:	003f5f06 	br	5087cdc <_dtoa_r+0xa4c>
 5087f60:	01000804 	movi	r4,32
 5087f64:	2089c83a 	sub	r4,r4,r2
 5087f68:	9908983a 	sll	r4,r19,r4
 5087f6c:	003d1d06 	br	50873e4 <_dtoa_r+0x154>
 5087f70:	04000044 	movi	r16,1
 5087f74:	003d7606 	br	5087550 <_dtoa_r+0x2c0>
 5087f78:	100b883a 	mov	r5,r2
 5087f7c:	b809883a 	mov	r4,r23
 5087f80:	508b0140 	call	508b014 <__pow5mult>
 5087f84:	d8c00217 	ldw	r3,8(sp)
 5087f88:	1029883a 	mov	r20,r2
 5087f8c:	18c00090 	cmplti	r3,r3,2
 5087f90:	1801511e 	bne	r3,zero,50884d8 <_dtoa_r+0x1248>
 5087f94:	0023883a 	mov	r17,zero
 5087f98:	a0800417 	ldw	r2,16(r20)
 5087f9c:	10800104 	addi	r2,r2,4
 5087fa0:	100490ba 	slli	r2,r2,2
 5087fa4:	a085883a 	add	r2,r20,r2
 5087fa8:	11000017 	ldw	r4,0(r2)
 5087fac:	508abfc0 	call	508abfc <__hi0bits>
 5087fb0:	00c00804 	movi	r3,32
 5087fb4:	1885c83a 	sub	r2,r3,r2
 5087fb8:	003f3f06 	br	5087cb8 <_dtoa_r+0xa28>
 5087fbc:	800b883a 	mov	r5,r16
 5087fc0:	000f883a 	mov	r7,zero
 5087fc4:	01800284 	movi	r6,10
 5087fc8:	b809883a 	mov	r4,r23
 5087fcc:	508a98c0 	call	508a98c <__multadd>
 5087fd0:	1021883a 	mov	r16,r2
 5087fd4:	d8800b17 	ldw	r2,44(sp)
 5087fd8:	00824b0e 	bge	zero,r2,5088908 <_dtoa_r+0x1678>
 5087fdc:	dd400415 	stw	r21,16(sp)
 5087fe0:	d8800515 	stw	r2,20(sp)
 5087fe4:	0480ac16 	blt	zero,r18,5088298 <_dtoa_r+0x1008>
 5087fe8:	8801731e 	bne	r17,zero,50885b8 <_dtoa_r+0x1328>
 5087fec:	8025883a 	mov	r18,r16
 5087ff0:	dd800117 	ldw	r22,4(sp)
 5087ff4:	d9000517 	ldw	r4,20(sp)
 5087ff8:	98c0004c 	andi	r3,r19,1
 5087ffc:	b0bfffc4 	addi	r2,r22,-1
 5088000:	1105883a 	add	r2,r2,r4
 5088004:	d8800515 	stw	r2,20(sp)
 5088008:	d8800217 	ldw	r2,8(sp)
 508800c:	d8c00815 	stw	r3,32(sp)
 5088010:	1884b03a 	or	r2,r3,r2
 5088014:	d8800715 	stw	r2,28(sp)
 5088018:	00002906 	br	50880c0 <_dtoa_r+0xe30>
 508801c:	e009883a 	mov	r4,fp
 5088020:	508b2e40 	call	508b2e4 <__mcmp>
 5088024:	980b883a 	mov	r5,r19
 5088028:	b809883a 	mov	r4,r23
 508802c:	d8800315 	stw	r2,12(sp)
 5088030:	508a9680 	call	508a968 <_Bfree>
 5088034:	d8800317 	ldw	r2,12(sp)
 5088038:	1000021e 	bne	r2,zero,5088044 <_dtoa_r+0xdb4>
 508803c:	d8c00717 	ldw	r3,28(sp)
 5088040:	18022326 	beq	r3,zero,50888d0 <_dtoa_r+0x1640>
 5088044:	b4c00044 	addi	r19,r22,1
 5088048:	88012916 	blt	r17,zero,50884f0 <_dtoa_r+0x1260>
 508804c:	d8c00217 	ldw	r3,8(sp)
 5088050:	88e2b03a 	or	r17,r17,r3
 5088054:	d8c00817 	ldw	r3,32(sp)
 5088058:	1c62b03a 	or	r17,r3,r17
 508805c:	88012426 	beq	r17,zero,50884f0 <_dtoa_r+0x1260>
 5088060:	00816f16 	blt	zero,r2,5088620 <_dtoa_r+0x1390>
 5088064:	d8800517 	ldw	r2,20(sp)
 5088068:	b5400005 	stb	r21,0(r22)
 508806c:	15817926 	beq	r2,r22,5088654 <_dtoa_r+0x13c4>
 5088070:	e00b883a 	mov	r5,fp
 5088074:	000f883a 	mov	r7,zero
 5088078:	01800284 	movi	r6,10
 508807c:	b809883a 	mov	r4,r23
 5088080:	508a98c0 	call	508a98c <__multadd>
 5088084:	1039883a 	mov	fp,r2
 5088088:	800b883a 	mov	r5,r16
 508808c:	000f883a 	mov	r7,zero
 5088090:	01800284 	movi	r6,10
 5088094:	b809883a 	mov	r4,r23
 5088098:	84801f26 	beq	r16,r18,5088118 <_dtoa_r+0xe88>
 508809c:	508a98c0 	call	508a98c <__multadd>
 50880a0:	900b883a 	mov	r5,r18
 50880a4:	000f883a 	mov	r7,zero
 50880a8:	01800284 	movi	r6,10
 50880ac:	b809883a 	mov	r4,r23
 50880b0:	1021883a 	mov	r16,r2
 50880b4:	508a98c0 	call	508a98c <__multadd>
 50880b8:	1025883a 	mov	r18,r2
 50880bc:	982d883a 	mov	r22,r19
 50880c0:	a00b883a 	mov	r5,r20
 50880c4:	e009883a 	mov	r4,fp
 50880c8:	50870940 	call	5087094 <quorem>
 50880cc:	800b883a 	mov	r5,r16
 50880d0:	e009883a 	mov	r4,fp
 50880d4:	102b883a 	mov	r21,r2
 50880d8:	d8800615 	stw	r2,24(sp)
 50880dc:	508b2e40 	call	508b2e4 <__mcmp>
 50880e0:	a00b883a 	mov	r5,r20
 50880e4:	900d883a 	mov	r6,r18
 50880e8:	b809883a 	mov	r4,r23
 50880ec:	1023883a 	mov	r17,r2
 50880f0:	508b33c0 	call	508b33c <__mdiff>
 50880f4:	1027883a 	mov	r19,r2
 50880f8:	10800317 	ldw	r2,12(r2)
 50880fc:	ad400c04 	addi	r21,r21,48
 5088100:	980b883a 	mov	r5,r19
 5088104:	103fc526 	beq	r2,zero,508801c <_dtoa_r+0xd8c>
 5088108:	b809883a 	mov	r4,r23
 508810c:	508a9680 	call	508a968 <_Bfree>
 5088110:	00800044 	movi	r2,1
 5088114:	003fcb06 	br	5088044 <_dtoa_r+0xdb4>
 5088118:	508a98c0 	call	508a98c <__multadd>
 508811c:	1021883a 	mov	r16,r2
 5088120:	1025883a 	mov	r18,r2
 5088124:	003fe506 	br	50880bc <_dtoa_r+0xe2c>
 5088128:	d8800217 	ldw	r2,8(sp)
 508812c:	108000d0 	cmplti	r2,r2,3
 5088130:	10003e26 	beq	r2,zero,508822c <_dtoa_r+0xf9c>
 5088134:	d8800717 	ldw	r2,28(sp)
 5088138:	103faa1e 	bne	r2,zero,5087fe4 <_dtoa_r+0xd54>
 508813c:	a00b883a 	mov	r5,r20
 5088140:	e009883a 	mov	r4,fp
 5088144:	50870940 	call	5087094 <quorem>
 5088148:	14c00c04 	addi	r19,r2,48
 508814c:	d8800117 	ldw	r2,4(sp)
 5088150:	0023883a 	mov	r17,zero
 5088154:	15400044 	addi	r21,r2,1
 5088158:	14c00005 	stb	r19,0(r2)
 508815c:	d8800417 	ldw	r2,16(sp)
 5088160:	10800044 	addi	r2,r2,1
 5088164:	d8800415 	stw	r2,16(sp)
 5088168:	003f0906 	br	5087d90 <_dtoa_r+0xb00>
 508816c:	a00b883a 	mov	r5,r20
 5088170:	e009883a 	mov	r4,fp
 5088174:	508b2e40 	call	508b2e4 <__mcmp>
 5088178:	103ee70e 	bge	r2,zero,5087d18 <_dtoa_r+0xa88>
 508817c:	e00b883a 	mov	r5,fp
 5088180:	000f883a 	mov	r7,zero
 5088184:	01800284 	movi	r6,10
 5088188:	b809883a 	mov	r4,r23
 508818c:	508a98c0 	call	508a98c <__multadd>
 5088190:	d8c00417 	ldw	r3,16(sp)
 5088194:	1039883a 	mov	fp,r2
 5088198:	d8800717 	ldw	r2,28(sp)
 508819c:	1d7fffc4 	addi	r21,r3,-1
 50881a0:	103f861e 	bne	r2,zero,5087fbc <_dtoa_r+0xd2c>
 50881a4:	d8800b17 	ldw	r2,44(sp)
 50881a8:	0081d20e 	bge	zero,r2,50888f4 <_dtoa_r+0x1664>
 50881ac:	d8800515 	stw	r2,20(sp)
 50881b0:	003ee006 	br	5087d34 <_dtoa_r+0xaa4>
 50881b4:	00814274 	movhi	r2,1289
 50881b8:	1007883a 	mov	r3,r2
 50881bc:	18d82c04 	addi	r3,r3,24752
 50881c0:	00814274 	movhi	r2,1289
 50881c4:	d8c00115 	stw	r3,4(sp)
 50881c8:	10982cc4 	addi	r2,r2,24755
 50881cc:	003ded06 	br	5087984 <_dtoa_r+0x6f4>
 50881d0:	00800044 	movi	r2,1
 50881d4:	d8800715 	stw	r2,28(sp)
 50881d8:	003f3406 	br	5087eac <_dtoa_r+0xc1c>
 50881dc:	983eb21e 	bne	r19,zero,5087ca8 <_dtoa_r+0xa18>
 50881e0:	00800434 	movhi	r2,16
 50881e4:	10bfffc4 	addi	r2,r2,-1
 50881e8:	8884703a 	and	r2,r17,r2
 50881ec:	103eae1e 	bne	r2,zero,5087ca8 <_dtoa_r+0xa18>
 50881f0:	8c5ffc2c 	andhi	r17,r17,32752
 50881f4:	883eac26 	beq	r17,zero,5087ca8 <_dtoa_r+0xa18>
 50881f8:	d8800617 	ldw	r2,24(sp)
 50881fc:	b5800044 	addi	r22,r22,1
 5088200:	04400044 	movi	r17,1
 5088204:	10800044 	addi	r2,r2,1
 5088208:	d8800615 	stw	r2,24(sp)
 508820c:	003ea706 	br	5087cac <_dtoa_r+0xa1c>
 5088210:	00800044 	movi	r2,1
 5088214:	d8800515 	stw	r2,20(sp)
 5088218:	d8801e15 	stw	r2,120(sp)
 508821c:	003f1b06 	br	5087e8c <_dtoa_r+0xbfc>
 5088220:	d8800b17 	ldw	r2,44(sp)
 5088224:	dd400415 	stw	r21,16(sp)
 5088228:	d8800515 	stw	r2,20(sp)
 508822c:	d8800517 	ldw	r2,20(sp)
 5088230:	103e081e 	bne	r2,zero,5087a54 <_dtoa_r+0x7c4>
 5088234:	a00b883a 	mov	r5,r20
 5088238:	b809883a 	mov	r4,r23
 508823c:	000f883a 	mov	r7,zero
 5088240:	01800144 	movi	r6,5
 5088244:	508a98c0 	call	508a98c <__multadd>
 5088248:	100b883a 	mov	r5,r2
 508824c:	e009883a 	mov	r4,fp
 5088250:	1029883a 	mov	r20,r2
 5088254:	508b2e40 	call	508b2e4 <__mcmp>
 5088258:	00bdfe0e 	bge	zero,r2,5087a54 <_dtoa_r+0x7c4>
 508825c:	d8c00117 	ldw	r3,4(sp)
 5088260:	00800c44 	movi	r2,49
 5088264:	18800005 	stb	r2,0(r3)
 5088268:	d8800417 	ldw	r2,16(sp)
 508826c:	1d400044 	addi	r21,r3,1
 5088270:	14400044 	addi	r17,r2,1
 5088274:	a00b883a 	mov	r5,r20
 5088278:	b809883a 	mov	r4,r23
 508827c:	508a9680 	call	508a968 <_Bfree>
 5088280:	88800044 	addi	r2,r17,1
 5088284:	d8800415 	stw	r2,16(sp)
 5088288:	803ee11e 	bne	r16,zero,5087e10 <_dtoa_r+0xb80>
 508828c:	003ee306 	br	5087e1c <_dtoa_r+0xb8c>
 5088290:	b005883a 	mov	r2,r22
 5088294:	003e6006 	br	5087c18 <_dtoa_r+0x988>
 5088298:	800b883a 	mov	r5,r16
 508829c:	900d883a 	mov	r6,r18
 50882a0:	b809883a 	mov	r4,r23
 50882a4:	508b15c0 	call	508b15c <__lshift>
 50882a8:	1021883a 	mov	r16,r2
 50882ac:	003f4e06 	br	5087fe8 <_dtoa_r+0xd58>
 50882b0:	1529c83a 	sub	r20,r2,r20
 50882b4:	003e4906 	br	5087bdc <_dtoa_r+0x94c>
 50882b8:	dcc00c15 	stw	r19,48(sp)
 50882bc:	8825883a 	mov	r18,r17
 50882c0:	05400084 	movi	r21,2
 50882c4:	003cdf06 	br	5087644 <_dtoa_r+0x3b4>
 50882c8:	00800044 	movi	r2,1
 50882cc:	003ead06 	br	5087d84 <_dtoa_r+0xaf4>
 50882d0:	00800044 	movi	r2,1
 50882d4:	d8800715 	stw	r2,28(sp)
 50882d8:	003ca506 	br	5087570 <_dtoa_r+0x2e0>
 50882dc:	1000021e 	bne	r2,zero,50882e8 <_dtoa_r+0x1058>
 50882e0:	98c0004c 	andi	r3,r19,1
 50882e4:	183eb41e 	bne	r3,zero,5087db8 <_dtoa_r+0xb28>
 50882e8:	2005883a 	mov	r2,r4
 50882ec:	00000206 	br	50882f8 <_dtoa_r+0x1068>
 50882f0:	a8bfff83 	ldbu	r2,-2(r21)
 50882f4:	182b883a 	mov	r21,r3
 50882f8:	10803fcc 	andi	r2,r2,255
 50882fc:	1080201c 	xori	r2,r2,128
 5088300:	10bfe004 	addi	r2,r2,-128
 5088304:	10800c18 	cmpnei	r2,r2,48
 5088308:	a8ffffc4 	addi	r3,r21,-1
 508830c:	103ff826 	beq	r2,zero,50882f0 <_dtoa_r+0x1060>
 5088310:	003eb606 	br	5087dec <_dtoa_r+0xb5c>
 5088314:	d8c00117 	ldw	r3,4(sp)
 5088318:	00800c44 	movi	r2,49
 508831c:	18800005 	stb	r2,0(r3)
 5088320:	d8800417 	ldw	r2,16(sp)
 5088324:	10800044 	addi	r2,r2,1
 5088328:	d8800415 	stw	r2,16(sp)
 508832c:	003eaf06 	br	5087dec <_dtoa_r+0xb5c>
 5088330:	d8c00a17 	ldw	r3,40(sp)
 5088334:	18011826 	beq	r3,zero,5088798 <_dtoa_r+0x1508>
 5088338:	d8c00617 	ldw	r3,24(sp)
 508833c:	10810cc4 	addi	r2,r2,1075
 5088340:	b0ad883a 	add	r22,r22,r2
 5088344:	1885883a 	add	r2,r3,r2
 5088348:	dd000817 	ldw	r20,32(sp)
 508834c:	1825883a 	mov	r18,r3
 5088350:	d8800615 	stw	r2,24(sp)
 5088354:	003e2806 	br	5087bf8 <_dtoa_r+0x968>
 5088358:	a809883a 	mov	r4,r21
 508835c:	50928980 	call	5092898 <__floatsidf>
 5088360:	800d883a 	mov	r6,r16
 5088364:	900f883a 	mov	r7,r18
 5088368:	1009883a 	mov	r4,r2
 508836c:	180b883a 	mov	r5,r3
 5088370:	509189c0 	call	509189c <__muldf3>
 5088374:	000d883a 	mov	r6,zero
 5088378:	01d00734 	movhi	r7,16412
 508837c:	1009883a 	mov	r4,r2
 5088380:	180b883a 	mov	r5,r3
 5088384:	50905000 	call	5090500 <__adddf3>
 5088388:	1029883a 	mov	r20,r2
 508838c:	00bf3034 	movhi	r2,64704
 5088390:	1885883a 	add	r2,r3,r2
 5088394:	d8800c15 	stw	r2,48(sp)
 5088398:	8009883a 	mov	r4,r16
 508839c:	900b883a 	mov	r5,r18
 50883a0:	000d883a 	mov	r6,zero
 50883a4:	01d00534 	movhi	r7,16404
 50883a8:	5091f100 	call	5091f10 <__subdf3>
 50883ac:	dd400c17 	ldw	r21,48(sp)
 50883b0:	a00d883a 	mov	r6,r20
 50883b4:	1009883a 	mov	r4,r2
 50883b8:	a80f883a 	mov	r7,r21
 50883bc:	180b883a 	mov	r5,r3
 50883c0:	1025883a 	mov	r18,r2
 50883c4:	1821883a 	mov	r16,r3
 50883c8:	50916cc0 	call	50916cc <__gedf2>
 50883cc:	00812f16 	blt	zero,r2,508888c <_dtoa_r+0x15fc>
 50883d0:	a9e0003c 	xorhi	r7,r21,32768
 50883d4:	a00d883a 	mov	r6,r20
 50883d8:	9009883a 	mov	r4,r18
 50883dc:	800b883a 	mov	r5,r16
 50883e0:	50917b40 	call	50917b4 <__ledf2>
 50883e4:	103d7d0e 	bge	r2,zero,50879dc <_dtoa_r+0x74c>
 50883e8:	0029883a 	mov	r20,zero
 50883ec:	0021883a 	mov	r16,zero
 50883f0:	003d9806 	br	5087a54 <_dtoa_r+0x7c4>
 50883f4:	d9800817 	ldw	r6,32(sp)
 50883f8:	e00b883a 	mov	r5,fp
 50883fc:	b809883a 	mov	r4,r23
 5088400:	508b0140 	call	508b014 <__pow5mult>
 5088404:	1039883a 	mov	fp,r2
 5088408:	003e1e06 	br	5087c84 <_dtoa_r+0x9f4>
 508840c:	d8800417 	ldw	r2,16(sp)
 5088410:	1000ed26 	beq	r2,zero,50887c8 <_dtoa_r+0x1538>
 5088414:	00a9c83a 	sub	r20,zero,r2
 5088418:	a08003cc 	andi	r2,r20,15
 508841c:	100690fa 	slli	r3,r2,3
 5088420:	00814274 	movhi	r2,1289
 5088424:	10986a04 	addi	r2,r2,25000
 5088428:	10c5883a 	add	r2,r2,r3
 508842c:	11800017 	ldw	r6,0(r2)
 5088430:	11c00117 	ldw	r7,4(r2)
 5088434:	a029d13a 	srai	r20,r20,4
 5088438:	9809883a 	mov	r4,r19
 508843c:	880b883a 	mov	r5,r17
 5088440:	509189c0 	call	509189c <__muldf3>
 5088444:	1021883a 	mov	r16,r2
 5088448:	1825883a 	mov	r18,r3
 508844c:	a0013826 	beq	r20,zero,5088930 <_dtoa_r+0x16a0>
 5088450:	02014274 	movhi	r8,1289
 5088454:	05400084 	movi	r21,2
 5088458:	42186004 	addi	r8,r8,24960
 508845c:	1009883a 	mov	r4,r2
 5088460:	9805883a 	mov	r2,r19
 5088464:	180b883a 	mov	r5,r3
 5088468:	dc000c15 	stw	r16,48(sp)
 508846c:	8827883a 	mov	r19,r17
 5088470:	0007883a 	mov	r3,zero
 5088474:	a823883a 	mov	r17,r21
 5088478:	4021883a 	mov	r16,r8
 508847c:	102b883a 	mov	r21,r2
 5088480:	a180004c 	andi	r6,r20,1
 5088484:	30000726 	beq	r6,zero,50884a4 <_dtoa_r+0x1214>
 5088488:	81800017 	ldw	r6,0(r16)
 508848c:	81c00117 	ldw	r7,4(r16)
 5088490:	8c400044 	addi	r17,r17,1
 5088494:	509189c0 	call	509189c <__muldf3>
 5088498:	180b883a 	mov	r5,r3
 508849c:	1009883a 	mov	r4,r2
 50884a0:	00c00044 	movi	r3,1
 50884a4:	a029d07a 	srai	r20,r20,1
 50884a8:	84000204 	addi	r16,r16,8
 50884ac:	a03ff41e 	bne	r20,zero,5088480 <_dtoa_r+0x11f0>
 50884b0:	a805883a 	mov	r2,r21
 50884b4:	18c03fcc 	andi	r3,r3,255
 50884b8:	882b883a 	mov	r21,r17
 50884bc:	dc000c17 	ldw	r16,48(sp)
 50884c0:	9823883a 	mov	r17,r19
 50884c4:	1027883a 	mov	r19,r2
 50884c8:	183c7726 	beq	r3,zero,50876a8 <_dtoa_r+0x418>
 50884cc:	2021883a 	mov	r16,r4
 50884d0:	2825883a 	mov	r18,r5
 50884d4:	003c7406 	br	50876a8 <_dtoa_r+0x418>
 50884d8:	983eae1e 	bne	r19,zero,5087f94 <_dtoa_r+0xd04>
 50884dc:	00800434 	movhi	r2,16
 50884e0:	10bfffc4 	addi	r2,r2,-1
 50884e4:	8884703a 	and	r2,r17,r2
 50884e8:	103f4126 	beq	r2,zero,50881f0 <_dtoa_r+0xf60>
 50884ec:	003ea906 	br	5087f94 <_dtoa_r+0xd04>
 50884f0:	9807883a 	mov	r3,r19
 50884f4:	a827883a 	mov	r19,r21
 50884f8:	182b883a 	mov	r21,r3
 50884fc:	d8c00417 	ldw	r3,16(sp)
 5088500:	18c00044 	addi	r3,r3,1
 5088504:	d8c00415 	stw	r3,16(sp)
 5088508:	00800d0e 	bge	zero,r2,5088540 <_dtoa_r+0x12b0>
 508850c:	e00b883a 	mov	r5,fp
 5088510:	b809883a 	mov	r4,r23
 5088514:	01800044 	movi	r6,1
 5088518:	508b15c0 	call	508b15c <__lshift>
 508851c:	a00b883a 	mov	r5,r20
 5088520:	1009883a 	mov	r4,r2
 5088524:	1039883a 	mov	fp,r2
 5088528:	508b2e40 	call	508b2e4 <__mcmp>
 508852c:	0080df0e 	bge	zero,r2,50888ac <_dtoa_r+0x161c>
 5088530:	98c00e60 	cmpeqi	r3,r19,57
 5088534:	1800ce1e 	bne	r3,zero,5088870 <_dtoa_r+0x15e0>
 5088538:	d8800617 	ldw	r2,24(sp)
 508853c:	14c00c44 	addi	r19,r2,49
 5088540:	8023883a 	mov	r17,r16
 5088544:	b4c00005 	stb	r19,0(r22)
 5088548:	9021883a 	mov	r16,r18
 508854c:	003e2706 	br	5087dec <_dtoa_r+0xb5c>
 5088550:	b82b883a 	mov	r21,r23
 5088554:	ddc00217 	ldw	r23,8(sp)
 5088558:	200d883a 	mov	r6,r4
 508855c:	280f883a 	mov	r7,r5
 5088560:	50905000 	call	5090500 <__adddf3>
 5088564:	180b883a 	mov	r5,r3
 5088568:	800d883a 	mov	r6,r16
 508856c:	900f883a 	mov	r7,r18
 5088570:	1009883a 	mov	r4,r2
 5088574:	1823883a 	mov	r17,r3
 5088578:	1027883a 	mov	r19,r2
 508857c:	50916cc0 	call	50916cc <__gedf2>
 5088580:	d8c00417 	ldw	r3,16(sp)
 5088584:	18c00044 	addi	r3,r3,1
 5088588:	d8c00415 	stw	r3,16(sp)
 508858c:	00808c16 	blt	zero,r2,50887c0 <_dtoa_r+0x1530>
 5088590:	800d883a 	mov	r6,r16
 5088594:	900f883a 	mov	r7,r18
 5088598:	9809883a 	mov	r4,r19
 508859c:	880b883a 	mov	r5,r17
 50885a0:	509164c0 	call	509164c <__eqdf2>
 50885a4:	1000021e 	bne	r2,zero,50885b0 <_dtoa_r+0x1320>
 50885a8:	ad40004c 	andi	r21,r21,1
 50885ac:	a800841e 	bne	r21,zero,50887c0 <_dtoa_r+0x1530>
 50885b0:	a02b883a 	mov	r21,r20
 50885b4:	003e1906 	br	5087e1c <_dtoa_r+0xb8c>
 50885b8:	81400117 	ldw	r5,4(r16)
 50885bc:	b809883a 	mov	r4,r23
 50885c0:	508a8c40 	call	508a8c4 <_Balloc>
 50885c4:	1023883a 	mov	r17,r2
 50885c8:	1000f326 	beq	r2,zero,5088998 <_dtoa_r+0x1708>
 50885cc:	81800417 	ldw	r6,16(r16)
 50885d0:	81400304 	addi	r5,r16,12
 50885d4:	11000304 	addi	r4,r2,12
 50885d8:	31800084 	addi	r6,r6,2
 50885dc:	300c90ba 	slli	r6,r6,2
 50885e0:	508a5a80 	call	508a5a8 <memcpy>
 50885e4:	01800044 	movi	r6,1
 50885e8:	880b883a 	mov	r5,r17
 50885ec:	b809883a 	mov	r4,r23
 50885f0:	508b15c0 	call	508b15c <__lshift>
 50885f4:	1025883a 	mov	r18,r2
 50885f8:	003e7d06 	br	5087ff0 <_dtoa_r+0xd60>
 50885fc:	e00b883a 	mov	r5,fp
 5088600:	b809883a 	mov	r4,r23
 5088604:	508b0140 	call	508b014 <__pow5mult>
 5088608:	1039883a 	mov	fp,r2
 508860c:	003d9d06 	br	5087c84 <_dtoa_r+0x9f4>
 5088610:	d8800617 	ldw	r2,24(sp)
 5088614:	d8c00517 	ldw	r3,20(sp)
 5088618:	10e5c83a 	sub	r18,r2,r3
 508861c:	003d7606 	br	5087bf8 <_dtoa_r+0x968>
 5088620:	d8c00417 	ldw	r3,16(sp)
 5088624:	9805883a 	mov	r2,r19
 5088628:	a827883a 	mov	r19,r21
 508862c:	18c00044 	addi	r3,r3,1
 5088630:	102b883a 	mov	r21,r2
 5088634:	d8c00415 	stw	r3,16(sp)
 5088638:	98800e58 	cmpnei	r2,r19,57
 508863c:	10008c26 	beq	r2,zero,5088870 <_dtoa_r+0x15e0>
 5088640:	98c00044 	addi	r3,r19,1
 5088644:	8023883a 	mov	r17,r16
 5088648:	b0c00005 	stb	r3,0(r22)
 508864c:	9021883a 	mov	r16,r18
 5088650:	003de606 	br	5087dec <_dtoa_r+0xb5c>
 5088654:	9805883a 	mov	r2,r19
 5088658:	a827883a 	mov	r19,r21
 508865c:	102b883a 	mov	r21,r2
 5088660:	d8800417 	ldw	r2,16(sp)
 5088664:	8023883a 	mov	r17,r16
 5088668:	9021883a 	mov	r16,r18
 508866c:	10800044 	addi	r2,r2,1
 5088670:	d8800415 	stw	r2,16(sp)
 5088674:	003dc606 	br	5087d90 <_dtoa_r+0xb00>
 5088678:	d9400c17 	ldw	r5,48(sp)
 508867c:	a009883a 	mov	r4,r20
 5088680:	509189c0 	call	509189c <__muldf3>
 5088684:	d9800d17 	ldw	r6,52(sp)
 5088688:	d9400117 	ldw	r5,4(sp)
 508868c:	d9001017 	ldw	r4,64(sp)
 5088690:	d8800c15 	stw	r2,48(sp)
 5088694:	d8c00d15 	stw	r3,52(sp)
 5088698:	29000005 	stb	r4,0(r5)
 508869c:	31000058 	cmpnei	r4,r6,1
 50886a0:	29a9883a 	add	r20,r5,r6
 50886a4:	2000a026 	beq	r4,zero,5088928 <_dtoa_r+0x1698>
 50886a8:	dc400e15 	stw	r17,56(sp)
 50886ac:	8009883a 	mov	r4,r16
 50886b0:	900b883a 	mov	r5,r18
 50886b4:	a823883a 	mov	r17,r21
 50886b8:	000d883a 	mov	r6,zero
 50886bc:	01d00934 	movhi	r7,16420
 50886c0:	509189c0 	call	509189c <__muldf3>
 50886c4:	180b883a 	mov	r5,r3
 50886c8:	1009883a 	mov	r4,r2
 50886cc:	1825883a 	mov	r18,r3
 50886d0:	102b883a 	mov	r21,r2
 50886d4:	50928180 	call	5092818 <__fixdfsi>
 50886d8:	1009883a 	mov	r4,r2
 50886dc:	1021883a 	mov	r16,r2
 50886e0:	50928980 	call	5092898 <__floatsidf>
 50886e4:	a809883a 	mov	r4,r21
 50886e8:	900b883a 	mov	r5,r18
 50886ec:	100d883a 	mov	r6,r2
 50886f0:	180f883a 	mov	r7,r3
 50886f4:	8c400044 	addi	r17,r17,1
 50886f8:	84000c04 	addi	r16,r16,48
 50886fc:	5091f100 	call	5091f10 <__subdf3>
 5088700:	8c3fffc5 	stb	r16,-1(r17)
 5088704:	1009883a 	mov	r4,r2
 5088708:	180b883a 	mov	r5,r3
 508870c:	a47fea1e 	bne	r20,r17,50886b8 <_dtoa_r+0x1428>
 5088710:	dc400e17 	ldw	r17,56(sp)
 5088714:	1021883a 	mov	r16,r2
 5088718:	1825883a 	mov	r18,r3
 508871c:	d9000c17 	ldw	r4,48(sp)
 5088720:	d9400d17 	ldw	r5,52(sp)
 5088724:	000d883a 	mov	r6,zero
 5088728:	01cff834 	movhi	r7,16352
 508872c:	50905000 	call	5090500 <__adddf3>
 5088730:	800d883a 	mov	r6,r16
 5088734:	900f883a 	mov	r7,r18
 5088738:	1009883a 	mov	r4,r2
 508873c:	180b883a 	mov	r5,r3
 5088740:	50917b40 	call	50917b4 <__ledf2>
 5088744:	10005416 	blt	r2,zero,5088898 <_dtoa_r+0x1608>
 5088748:	d9800c17 	ldw	r6,48(sp)
 508874c:	d9c00d17 	ldw	r7,52(sp)
 5088750:	0009883a 	mov	r4,zero
 5088754:	014ff834 	movhi	r5,16352
 5088758:	5091f100 	call	5091f10 <__subdf3>
 508875c:	800d883a 	mov	r6,r16
 5088760:	900f883a 	mov	r7,r18
 5088764:	1009883a 	mov	r4,r2
 5088768:	180b883a 	mov	r5,r3
 508876c:	50916cc0 	call	50916cc <__gedf2>
 5088770:	00bc9a0e 	bge	zero,r2,50879dc <_dtoa_r+0x74c>
 5088774:	a0bfffc7 	ldb	r2,-1(r20)
 5088778:	a02b883a 	mov	r21,r20
 508877c:	a53fffc4 	addi	r20,r20,-1
 5088780:	10800c20 	cmpeqi	r2,r2,48
 5088784:	103ffb1e 	bne	r2,zero,5088774 <_dtoa_r+0x14e4>
 5088788:	d8801117 	ldw	r2,68(sp)
 508878c:	10800044 	addi	r2,r2,1
 5088790:	d8800415 	stw	r2,16(sp)
 5088794:	003da106 	br	5087e1c <_dtoa_r+0xb8c>
 5088798:	d8c01217 	ldw	r3,72(sp)
 508879c:	d9000617 	ldw	r4,24(sp)
 50887a0:	00800d84 	movi	r2,54
 50887a4:	10c5c83a 	sub	r2,r2,r3
 50887a8:	b0ad883a 	add	r22,r22,r2
 50887ac:	2085883a 	add	r2,r4,r2
 50887b0:	dd000817 	ldw	r20,32(sp)
 50887b4:	2025883a 	mov	r18,r4
 50887b8:	d8800615 	stw	r2,24(sp)
 50887bc:	003d0e06 	br	5087bf8 <_dtoa_r+0x968>
 50887c0:	d9000117 	ldw	r4,4(sp)
 50887c4:	003c4b06 	br	50878f4 <_dtoa_r+0x664>
 50887c8:	9821883a 	mov	r16,r19
 50887cc:	8825883a 	mov	r18,r17
 50887d0:	05400084 	movi	r21,2
 50887d4:	003bb406 	br	50876a8 <_dtoa_r+0x418>
 50887d8:	d8800517 	ldw	r2,20(sp)
 50887dc:	103ede26 	beq	r2,zero,5088358 <_dtoa_r+0x10c8>
 50887e0:	d8800b17 	ldw	r2,44(sp)
 50887e4:	00bc7d0e 	bge	zero,r2,50879dc <_dtoa_r+0x74c>
 50887e8:	900b883a 	mov	r5,r18
 50887ec:	8009883a 	mov	r4,r16
 50887f0:	000d883a 	mov	r6,zero
 50887f4:	01d00934 	movhi	r7,16420
 50887f8:	509189c0 	call	509189c <__muldf3>
 50887fc:	a9000044 	addi	r4,r21,1
 5088800:	1021883a 	mov	r16,r2
 5088804:	1825883a 	mov	r18,r3
 5088808:	50928980 	call	5092898 <__floatsidf>
 508880c:	800d883a 	mov	r6,r16
 5088810:	900f883a 	mov	r7,r18
 5088814:	1009883a 	mov	r4,r2
 5088818:	180b883a 	mov	r5,r3
 508881c:	509189c0 	call	509189c <__muldf3>
 5088820:	1009883a 	mov	r4,r2
 5088824:	000d883a 	mov	r6,zero
 5088828:	01d00734 	movhi	r7,16412
 508882c:	180b883a 	mov	r5,r3
 5088830:	50905000 	call	5090500 <__adddf3>
 5088834:	d9000417 	ldw	r4,16(sp)
 5088838:	1029883a 	mov	r20,r2
 508883c:	00bf3034 	movhi	r2,64704
 5088840:	1887883a 	add	r3,r3,r2
 5088844:	d8800b17 	ldw	r2,44(sp)
 5088848:	213fffc4 	addi	r4,r4,-1
 508884c:	d9001115 	stw	r4,68(sp)
 5088850:	d8c00c15 	stw	r3,48(sp)
 5088854:	d8800d15 	stw	r2,52(sp)
 5088858:	003bb106 	br	5087720 <_dtoa_r+0x490>
 508885c:	d8800417 	ldw	r2,16(sp)
 5088860:	00c00c44 	movi	r3,49
 5088864:	10800044 	addi	r2,r2,1
 5088868:	d8800415 	stw	r2,16(sp)
 508886c:	003c2a06 	br	5087918 <_dtoa_r+0x688>
 5088870:	00800e44 	movi	r2,57
 5088874:	8023883a 	mov	r17,r16
 5088878:	d9400117 	ldw	r5,4(sp)
 508887c:	b0800005 	stb	r2,0(r22)
 5088880:	9021883a 	mov	r16,r18
 5088884:	01000e44 	movi	r4,57
 5088888:	003d5006 	br	5087dcc <_dtoa_r+0xb3c>
 508888c:	0029883a 	mov	r20,zero
 5088890:	0021883a 	mov	r16,zero
 5088894:	003e7106 	br	508825c <_dtoa_r+0xfcc>
 5088898:	d8801117 	ldw	r2,68(sp)
 508889c:	d9000117 	ldw	r4,4(sp)
 50888a0:	10800044 	addi	r2,r2,1
 50888a4:	d8800415 	stw	r2,16(sp)
 50888a8:	003c1206 	br	50878f4 <_dtoa_r+0x664>
 50888ac:	103f241e 	bne	r2,zero,5088540 <_dtoa_r+0x12b0>
 50888b0:	9880004c 	andi	r2,r19,1
 50888b4:	103f1e1e 	bne	r2,zero,5088530 <_dtoa_r+0x12a0>
 50888b8:	003f2106 	br	5088540 <_dtoa_r+0x12b0>
 50888bc:	d8801117 	ldw	r2,68(sp)
 50888c0:	ddc00d17 	ldw	r23,52(sp)
 50888c4:	10800044 	addi	r2,r2,1
 50888c8:	d8800415 	stw	r2,16(sp)
 50888cc:	003d5306 	br	5087e1c <_dtoa_r+0xb8c>
 50888d0:	d8c00417 	ldw	r3,16(sp)
 50888d4:	a8800e60 	cmpeqi	r2,r21,57
 50888d8:	a827883a 	mov	r19,r21
 50888dc:	18c00044 	addi	r3,r3,1
 50888e0:	d8c00415 	stw	r3,16(sp)
 50888e4:	b5400044 	addi	r21,r22,1
 50888e8:	103fe11e 	bne	r2,zero,5088870 <_dtoa_r+0x15e0>
 50888ec:	047f1216 	blt	zero,r17,5088538 <_dtoa_r+0x12a8>
 50888f0:	003f1306 	br	5088540 <_dtoa_r+0x12b0>
 50888f4:	d8800217 	ldw	r2,8(sp)
 50888f8:	108000c8 	cmpgei	r2,r2,3
 50888fc:	103e481e 	bne	r2,zero,5088220 <_dtoa_r+0xf90>
 5088900:	dd400415 	stw	r21,16(sp)
 5088904:	003e0d06 	br	508813c <_dtoa_r+0xeac>
 5088908:	d8800217 	ldw	r2,8(sp)
 508890c:	108000c8 	cmpgei	r2,r2,3
 5088910:	103e431e 	bne	r2,zero,5088220 <_dtoa_r+0xf90>
 5088914:	d8800b17 	ldw	r2,44(sp)
 5088918:	dd400415 	stw	r21,16(sp)
 508891c:	d8800515 	stw	r2,20(sp)
 5088920:	04bdb10e 	bge	zero,r18,5087fe8 <_dtoa_r+0xd58>
 5088924:	003e5c06 	br	5088298 <_dtoa_r+0x1008>
 5088928:	a829883a 	mov	r20,r21
 508892c:	003f7b06 	br	508871c <_dtoa_r+0x148c>
 5088930:	05400084 	movi	r21,2
 5088934:	003b5c06 	br	50876a8 <_dtoa_r+0x418>
 5088938:	01c14274 	movhi	r7,1289
 508893c:	01014274 	movhi	r4,1289
 5088940:	39d83004 	addi	r7,r7,24768
 5088944:	000d883a 	mov	r6,zero
 5088948:	01406a84 	movi	r5,426
 508894c:	21183504 	addi	r4,r4,24788
 5088950:	508e9a00 	call	508e9a0 <__assert_func>
 5088954:	000b883a 	mov	r5,zero
 5088958:	003b1506 	br	50875b0 <_dtoa_r+0x320>
 508895c:	b8001115 	stw	zero,68(r23)
 5088960:	000b883a 	mov	r5,zero
 5088964:	b809883a 	mov	r4,r23
 5088968:	508a8c40 	call	508a8c4 <_Balloc>
 508896c:	d8800115 	stw	r2,4(sp)
 5088970:	103ff126 	beq	r2,zero,5088938 <_dtoa_r+0x16a8>
 5088974:	d8800117 	ldw	r2,4(sp)
 5088978:	d8001e15 	stw	zero,120(sp)
 508897c:	b8801015 	stw	r2,64(r23)
 5088980:	00bfffc4 	movi	r2,-1
 5088984:	d8800515 	stw	r2,20(sp)
 5088988:	d8800b15 	stw	r2,44(sp)
 508898c:	00800044 	movi	r2,1
 5088990:	d8800715 	stw	r2,28(sp)
 5088994:	003c1106 	br	50879dc <_dtoa_r+0x74c>
 5088998:	01c14274 	movhi	r7,1289
 508899c:	01014274 	movhi	r4,1289
 50889a0:	39d83004 	addi	r7,r7,24768
 50889a4:	000d883a 	mov	r6,zero
 50889a8:	0140ba84 	movi	r5,746
 50889ac:	21183504 	addi	r4,r4,24788
 50889b0:	508e9a00 	call	508e9a0 <__assert_func>
 50889b4:	00814274 	movhi	r2,1289
 50889b8:	10982d04 	addi	r2,r2,24756
 50889bc:	d8800115 	stw	r2,4(sp)
 50889c0:	003a6506 	br	5087358 <_dtoa_r+0xc8>
 50889c4:	18c00120 	cmpeqi	r3,r3,4
 50889c8:	183cc91e 	bne	r3,zero,5087cf0 <_dtoa_r+0xa60>
 50889cc:	00c00f04 	movi	r3,60
 50889d0:	1885c83a 	sub	r2,r3,r2
 50889d4:	003cc106 	br	5087cdc <_dtoa_r+0xa4c>

050889d8 <__sflush_r>:
 50889d8:	2880030b 	ldhu	r2,12(r5)
 50889dc:	defffb04 	addi	sp,sp,-20
 50889e0:	dcc00315 	stw	r19,12(sp)
 50889e4:	dc000015 	stw	r16,0(sp)
 50889e8:	dfc00415 	stw	ra,16(sp)
 50889ec:	dc800215 	stw	r18,8(sp)
 50889f0:	dc400115 	stw	r17,4(sp)
 50889f4:	10c0020c 	andi	r3,r2,8
 50889f8:	2821883a 	mov	r16,r5
 50889fc:	2027883a 	mov	r19,r4
 5088a00:	18003f1e 	bne	r3,zero,5088b00 <__sflush_r+0x128>
 5088a04:	28c00117 	ldw	r3,4(r5)
 5088a08:	10820014 	ori	r2,r2,2048
 5088a0c:	2880030d 	sth	r2,12(r5)
 5088a10:	00c0550e 	bge	zero,r3,5088b68 <__sflush_r+0x190>
 5088a14:	82000a17 	ldw	r8,40(r16)
 5088a18:	40003126 	beq	r8,zero,5088ae0 <__sflush_r+0x108>
 5088a1c:	9c400017 	ldw	r17,0(r19)
 5088a20:	1104000c 	andi	r4,r2,4096
 5088a24:	98000015 	stw	zero,0(r19)
 5088a28:	81400717 	ldw	r5,28(r16)
 5088a2c:	1007883a 	mov	r3,r2
 5088a30:	2000521e 	bne	r4,zero,5088b7c <__sflush_r+0x1a4>
 5088a34:	01c00044 	movi	r7,1
 5088a38:	000d883a 	mov	r6,zero
 5088a3c:	9809883a 	mov	r4,r19
 5088a40:	403ee83a 	callr	r8
 5088a44:	10ffffd8 	cmpnei	r3,r2,-1
 5088a48:	18005826 	beq	r3,zero,5088bac <__sflush_r+0x1d4>
 5088a4c:	80c0030b 	ldhu	r3,12(r16)
 5088a50:	82000a17 	ldw	r8,40(r16)
 5088a54:	81400717 	ldw	r5,28(r16)
 5088a58:	18c0010c 	andi	r3,r3,4
 5088a5c:	18000626 	beq	r3,zero,5088a78 <__sflush_r+0xa0>
 5088a60:	81000117 	ldw	r4,4(r16)
 5088a64:	80c00c17 	ldw	r3,48(r16)
 5088a68:	1105c83a 	sub	r2,r2,r4
 5088a6c:	18000226 	beq	r3,zero,5088a78 <__sflush_r+0xa0>
 5088a70:	80c00f17 	ldw	r3,60(r16)
 5088a74:	10c5c83a 	sub	r2,r2,r3
 5088a78:	100d883a 	mov	r6,r2
 5088a7c:	000f883a 	mov	r7,zero
 5088a80:	9809883a 	mov	r4,r19
 5088a84:	403ee83a 	callr	r8
 5088a88:	10ffffd8 	cmpnei	r3,r2,-1
 5088a8c:	18003d1e 	bne	r3,zero,5088b84 <__sflush_r+0x1ac>
 5088a90:	99000017 	ldw	r4,0(r19)
 5088a94:	80c0030b 	ldhu	r3,12(r16)
 5088a98:	20004e26 	beq	r4,zero,5088bd4 <__sflush_r+0x1fc>
 5088a9c:	21400760 	cmpeqi	r5,r4,29
 5088aa0:	2800021e 	bne	r5,zero,5088aac <__sflush_r+0xd4>
 5088aa4:	210005a0 	cmpeqi	r4,r4,22
 5088aa8:	20002c26 	beq	r4,zero,5088b5c <__sflush_r+0x184>
 5088aac:	80800417 	ldw	r2,16(r16)
 5088ab0:	18fdffcc 	andi	r3,r3,63487
 5088ab4:	80c0030d 	sth	r3,12(r16)
 5088ab8:	80000115 	stw	zero,4(r16)
 5088abc:	80800015 	stw	r2,0(r16)
 5088ac0:	81400c17 	ldw	r5,48(r16)
 5088ac4:	9c400015 	stw	r17,0(r19)
 5088ac8:	28000526 	beq	r5,zero,5088ae0 <__sflush_r+0x108>
 5088acc:	80801004 	addi	r2,r16,64
 5088ad0:	28800226 	beq	r5,r2,5088adc <__sflush_r+0x104>
 5088ad4:	9809883a 	mov	r4,r19
 5088ad8:	508919c0 	call	508919c <_free_r>
 5088adc:	80000c15 	stw	zero,48(r16)
 5088ae0:	0005883a 	mov	r2,zero
 5088ae4:	dfc00417 	ldw	ra,16(sp)
 5088ae8:	dcc00317 	ldw	r19,12(sp)
 5088aec:	dc800217 	ldw	r18,8(sp)
 5088af0:	dc400117 	ldw	r17,4(sp)
 5088af4:	dc000017 	ldw	r16,0(sp)
 5088af8:	dec00504 	addi	sp,sp,20
 5088afc:	f800283a 	ret
 5088b00:	2c800417 	ldw	r18,16(r5)
 5088b04:	903ff626 	beq	r18,zero,5088ae0 <__sflush_r+0x108>
 5088b08:	2c400017 	ldw	r17,0(r5)
 5088b0c:	108000cc 	andi	r2,r2,3
 5088b10:	2c800015 	stw	r18,0(r5)
 5088b14:	8ca3c83a 	sub	r17,r17,r18
 5088b18:	1000161e 	bne	r2,zero,5088b74 <__sflush_r+0x19c>
 5088b1c:	28800517 	ldw	r2,20(r5)
 5088b20:	80800215 	stw	r2,8(r16)
 5088b24:	04400316 	blt	zero,r17,5088b34 <__sflush_r+0x15c>
 5088b28:	003fed06 	br	5088ae0 <__sflush_r+0x108>
 5088b2c:	90a5883a 	add	r18,r18,r2
 5088b30:	047feb0e 	bge	zero,r17,5088ae0 <__sflush_r+0x108>
 5088b34:	80800917 	ldw	r2,36(r16)
 5088b38:	81400717 	ldw	r5,28(r16)
 5088b3c:	880f883a 	mov	r7,r17
 5088b40:	900d883a 	mov	r6,r18
 5088b44:	9809883a 	mov	r4,r19
 5088b48:	103ee83a 	callr	r2
 5088b4c:	88a3c83a 	sub	r17,r17,r2
 5088b50:	00bff616 	blt	zero,r2,5088b2c <__sflush_r+0x154>
 5088b54:	80c0030b 	ldhu	r3,12(r16)
 5088b58:	00bfffc4 	movi	r2,-1
 5088b5c:	18c01014 	ori	r3,r3,64
 5088b60:	80c0030d 	sth	r3,12(r16)
 5088b64:	003fdf06 	br	5088ae4 <__sflush_r+0x10c>
 5088b68:	28c00f17 	ldw	r3,60(r5)
 5088b6c:	00ffa916 	blt	zero,r3,5088a14 <__sflush_r+0x3c>
 5088b70:	003fdb06 	br	5088ae0 <__sflush_r+0x108>
 5088b74:	0005883a 	mov	r2,zero
 5088b78:	003fe906 	br	5088b20 <__sflush_r+0x148>
 5088b7c:	80801417 	ldw	r2,80(r16)
 5088b80:	003fb506 	br	5088a58 <__sflush_r+0x80>
 5088b84:	80c0030b 	ldhu	r3,12(r16)
 5088b88:	81000417 	ldw	r4,16(r16)
 5088b8c:	80000115 	stw	zero,4(r16)
 5088b90:	197dffcc 	andi	r5,r3,63487
 5088b94:	8140030d 	sth	r5,12(r16)
 5088b98:	81000015 	stw	r4,0(r16)
 5088b9c:	18c4000c 	andi	r3,r3,4096
 5088ba0:	183fc726 	beq	r3,zero,5088ac0 <__sflush_r+0xe8>
 5088ba4:	80801415 	stw	r2,80(r16)
 5088ba8:	003fc506 	br	5088ac0 <__sflush_r+0xe8>
 5088bac:	98c00017 	ldw	r3,0(r19)
 5088bb0:	183fa626 	beq	r3,zero,5088a4c <__sflush_r+0x74>
 5088bb4:	19000760 	cmpeqi	r4,r3,29
 5088bb8:	20000e1e 	bne	r4,zero,5088bf4 <__sflush_r+0x21c>
 5088bbc:	18c00598 	cmpnei	r3,r3,22
 5088bc0:	18000c26 	beq	r3,zero,5088bf4 <__sflush_r+0x21c>
 5088bc4:	80c0030b 	ldhu	r3,12(r16)
 5088bc8:	18c01014 	ori	r3,r3,64
 5088bcc:	80c0030d 	sth	r3,12(r16)
 5088bd0:	003fc406 	br	5088ae4 <__sflush_r+0x10c>
 5088bd4:	81000417 	ldw	r4,16(r16)
 5088bd8:	197dffcc 	andi	r5,r3,63487
 5088bdc:	8140030d 	sth	r5,12(r16)
 5088be0:	80000115 	stw	zero,4(r16)
 5088be4:	81000015 	stw	r4,0(r16)
 5088be8:	18c4000c 	andi	r3,r3,4096
 5088bec:	183fb426 	beq	r3,zero,5088ac0 <__sflush_r+0xe8>
 5088bf0:	003fec06 	br	5088ba4 <__sflush_r+0x1cc>
 5088bf4:	9c400015 	stw	r17,0(r19)
 5088bf8:	0005883a 	mov	r2,zero
 5088bfc:	003fb906 	br	5088ae4 <__sflush_r+0x10c>

05088c00 <_fflush_r>:
 5088c00:	defffd04 	addi	sp,sp,-12
 5088c04:	dc000115 	stw	r16,4(sp)
 5088c08:	dfc00215 	stw	ra,8(sp)
 5088c0c:	2021883a 	mov	r16,r4
 5088c10:	20000226 	beq	r4,zero,5088c1c <_fflush_r+0x1c>
 5088c14:	20800e17 	ldw	r2,56(r4)
 5088c18:	10000726 	beq	r2,zero,5088c38 <_fflush_r+0x38>
 5088c1c:	2880030f 	ldh	r2,12(r5)
 5088c20:	10000a1e 	bne	r2,zero,5088c4c <_fflush_r+0x4c>
 5088c24:	0005883a 	mov	r2,zero
 5088c28:	dfc00217 	ldw	ra,8(sp)
 5088c2c:	dc000117 	ldw	r16,4(sp)
 5088c30:	dec00304 	addi	sp,sp,12
 5088c34:	f800283a 	ret
 5088c38:	d9400015 	stw	r5,0(sp)
 5088c3c:	50890380 	call	5089038 <__sinit>
 5088c40:	d9400017 	ldw	r5,0(sp)
 5088c44:	2880030f 	ldh	r2,12(r5)
 5088c48:	103ff626 	beq	r2,zero,5088c24 <_fflush_r+0x24>
 5088c4c:	8009883a 	mov	r4,r16
 5088c50:	dfc00217 	ldw	ra,8(sp)
 5088c54:	dc000117 	ldw	r16,4(sp)
 5088c58:	dec00304 	addi	sp,sp,12
 5088c5c:	50889d81 	jmpi	50889d8 <__sflush_r>

05088c60 <fflush>:
 5088c60:	20001726 	beq	r4,zero,5088cc0 <fflush+0x60>
 5088c64:	008142b4 	movhi	r2,1290
 5088c68:	200b883a 	mov	r5,r4
 5088c6c:	11209917 	ldw	r4,-32156(r2)
 5088c70:	20000226 	beq	r4,zero,5088c7c <fflush+0x1c>
 5088c74:	20800e17 	ldw	r2,56(r4)
 5088c78:	10000526 	beq	r2,zero,5088c90 <fflush+0x30>
 5088c7c:	2880030f 	ldh	r2,12(r5)
 5088c80:	1000021e 	bne	r2,zero,5088c8c <fflush+0x2c>
 5088c84:	0005883a 	mov	r2,zero
 5088c88:	f800283a 	ret
 5088c8c:	50889d81 	jmpi	50889d8 <__sflush_r>
 5088c90:	defffd04 	addi	sp,sp,-12
 5088c94:	d9400115 	stw	r5,4(sp)
 5088c98:	d9000015 	stw	r4,0(sp)
 5088c9c:	dfc00215 	stw	ra,8(sp)
 5088ca0:	50890380 	call	5089038 <__sinit>
 5088ca4:	d9400117 	ldw	r5,4(sp)
 5088ca8:	d9000017 	ldw	r4,0(sp)
 5088cac:	2880030f 	ldh	r2,12(r5)
 5088cb0:	10000826 	beq	r2,zero,5088cd4 <fflush+0x74>
 5088cb4:	dfc00217 	ldw	ra,8(sp)
 5088cb8:	dec00304 	addi	sp,sp,12
 5088cbc:	50889d81 	jmpi	50889d8 <__sflush_r>
 5088cc0:	008142b4 	movhi	r2,1290
 5088cc4:	11209817 	ldw	r4,-32160(r2)
 5088cc8:	01414274 	movhi	r5,1289
 5088ccc:	29630004 	addi	r5,r5,-29696
 5088cd0:	50899e81 	jmpi	50899e8 <_fwalk_reent>
 5088cd4:	0005883a 	mov	r2,zero
 5088cd8:	dfc00217 	ldw	ra,8(sp)
 5088cdc:	dec00304 	addi	sp,sp,12
 5088ce0:	f800283a 	ret

05088ce4 <__fp_lock>:
 5088ce4:	0005883a 	mov	r2,zero
 5088ce8:	f800283a 	ret

05088cec <_cleanup_r>:
 5088cec:	01414274 	movhi	r5,1289
 5088cf0:	297ae304 	addi	r5,r5,-5236
 5088cf4:	50899e81 	jmpi	50899e8 <_fwalk_reent>

05088cf8 <__fp_unlock>:
 5088cf8:	0005883a 	mov	r2,zero
 5088cfc:	f800283a 	ret

05088d00 <__sinit.part.0>:
 5088d00:	00c14274 	movhi	r3,1289
 5088d04:	20800117 	ldw	r2,4(r4)
 5088d08:	18e33b04 	addi	r3,r3,-29460
 5088d0c:	20c00f15 	stw	r3,60(r4)
 5088d10:	2140bb04 	addi	r5,r4,748
 5088d14:	00c000c4 	movi	r3,3
 5088d18:	20c0b915 	stw	r3,740(r4)
 5088d1c:	2140ba15 	stw	r5,744(r4)
 5088d20:	2000b815 	stw	zero,736(r4)
 5088d24:	10001705 	stb	zero,92(r2)
 5088d28:	10001745 	stb	zero,93(r2)
 5088d2c:	10001785 	stb	zero,94(r2)
 5088d30:	100017c5 	stb	zero,95(r2)
 5088d34:	10001805 	stb	zero,96(r2)
 5088d38:	10001845 	stb	zero,97(r2)
 5088d3c:	10001885 	stb	zero,98(r2)
 5088d40:	100018c5 	stb	zero,99(r2)
 5088d44:	00c00104 	movi	r3,4
 5088d48:	10c00315 	stw	r3,12(r2)
 5088d4c:	02014274 	movhi	r8,1289
 5088d50:	20c00217 	ldw	r3,8(r4)
 5088d54:	01c14274 	movhi	r7,1289
 5088d58:	01814274 	movhi	r6,1289
 5088d5c:	01414274 	movhi	r5,1289
 5088d60:	422ff804 	addi	r8,r8,-16416
 5088d64:	39f00f04 	addi	r7,r7,-16324
 5088d68:	31b02f04 	addi	r6,r6,-16196
 5088d6c:	29704604 	addi	r5,r5,-16104
 5088d70:	02400074 	movhi	r9,1
 5088d74:	10001915 	stw	zero,100(r2)
 5088d78:	10000015 	stw	zero,0(r2)
 5088d7c:	10000115 	stw	zero,4(r2)
 5088d80:	10000215 	stw	zero,8(r2)
 5088d84:	10000415 	stw	zero,16(r2)
 5088d88:	10000515 	stw	zero,20(r2)
 5088d8c:	10000615 	stw	zero,24(r2)
 5088d90:	10800715 	stw	r2,28(r2)
 5088d94:	12000815 	stw	r8,32(r2)
 5088d98:	11c00915 	stw	r7,36(r2)
 5088d9c:	11800a15 	stw	r6,40(r2)
 5088da0:	11400b15 	stw	r5,44(r2)
 5088da4:	4a400284 	addi	r9,r9,10
 5088da8:	1a400315 	stw	r9,12(r3)
 5088dac:	18001915 	stw	zero,100(r3)
 5088db0:	18000015 	stw	zero,0(r3)
 5088db4:	18000115 	stw	zero,4(r3)
 5088db8:	18000215 	stw	zero,8(r3)
 5088dbc:	18000415 	stw	zero,16(r3)
 5088dc0:	18001705 	stb	zero,92(r3)
 5088dc4:	18001745 	stb	zero,93(r3)
 5088dc8:	18001785 	stb	zero,94(r3)
 5088dcc:	180017c5 	stb	zero,95(r3)
 5088dd0:	18001805 	stb	zero,96(r3)
 5088dd4:	18001845 	stb	zero,97(r3)
 5088dd8:	18001885 	stb	zero,98(r3)
 5088ddc:	180018c5 	stb	zero,99(r3)
 5088de0:	20800317 	ldw	r2,12(r4)
 5088de4:	024000b4 	movhi	r9,2
 5088de8:	18000515 	stw	zero,20(r3)
 5088dec:	18000615 	stw	zero,24(r3)
 5088df0:	18c00715 	stw	r3,28(r3)
 5088df4:	1a000815 	stw	r8,32(r3)
 5088df8:	19c00915 	stw	r7,36(r3)
 5088dfc:	19800a15 	stw	r6,40(r3)
 5088e00:	19400b15 	stw	r5,44(r3)
 5088e04:	4a400484 	addi	r9,r9,18
 5088e08:	10001915 	stw	zero,100(r2)
 5088e0c:	10000015 	stw	zero,0(r2)
 5088e10:	10000115 	stw	zero,4(r2)
 5088e14:	10000215 	stw	zero,8(r2)
 5088e18:	12400315 	stw	r9,12(r2)
 5088e1c:	10000415 	stw	zero,16(r2)
 5088e20:	10000515 	stw	zero,20(r2)
 5088e24:	10000615 	stw	zero,24(r2)
 5088e28:	10001705 	stb	zero,92(r2)
 5088e2c:	10001745 	stb	zero,93(r2)
 5088e30:	10001785 	stb	zero,94(r2)
 5088e34:	100017c5 	stb	zero,95(r2)
 5088e38:	10001805 	stb	zero,96(r2)
 5088e3c:	10001845 	stb	zero,97(r2)
 5088e40:	10001885 	stb	zero,98(r2)
 5088e44:	100018c5 	stb	zero,99(r2)
 5088e48:	10800715 	stw	r2,28(r2)
 5088e4c:	12000815 	stw	r8,32(r2)
 5088e50:	11c00915 	stw	r7,36(r2)
 5088e54:	11800a15 	stw	r6,40(r2)
 5088e58:	11400b15 	stw	r5,44(r2)
 5088e5c:	00800044 	movi	r2,1
 5088e60:	20800e15 	stw	r2,56(r4)
 5088e64:	f800283a 	ret

05088e68 <__sfmoreglue>:
 5088e68:	defffc04 	addi	sp,sp,-16
 5088e6c:	dc400115 	stw	r17,4(sp)
 5088e70:	2c7fffc4 	addi	r17,r5,-1
 5088e74:	8c401a24 	muli	r17,r17,104
 5088e78:	dc800215 	stw	r18,8(sp)
 5088e7c:	2825883a 	mov	r18,r5
 5088e80:	89401d04 	addi	r5,r17,116
 5088e84:	dc000015 	stw	r16,0(sp)
 5088e88:	dfc00315 	stw	ra,12(sp)
 5088e8c:	5089cf80 	call	5089cf8 <_malloc_r>
 5088e90:	1021883a 	mov	r16,r2
 5088e94:	10000726 	beq	r2,zero,5088eb4 <__sfmoreglue+0x4c>
 5088e98:	11000304 	addi	r4,r2,12
 5088e9c:	10000015 	stw	zero,0(r2)
 5088ea0:	14800115 	stw	r18,4(r2)
 5088ea4:	11000215 	stw	r4,8(r2)
 5088ea8:	89801a04 	addi	r6,r17,104
 5088eac:	000b883a 	mov	r5,zero
 5088eb0:	508a7d40 	call	508a7d4 <memset>
 5088eb4:	8005883a 	mov	r2,r16
 5088eb8:	dfc00317 	ldw	ra,12(sp)
 5088ebc:	dc800217 	ldw	r18,8(sp)
 5088ec0:	dc400117 	ldw	r17,4(sp)
 5088ec4:	dc000017 	ldw	r16,0(sp)
 5088ec8:	dec00404 	addi	sp,sp,16
 5088ecc:	f800283a 	ret

05088ed0 <__sfp>:
 5088ed0:	defffb04 	addi	sp,sp,-20
 5088ed4:	008142b4 	movhi	r2,1290
 5088ed8:	dc000015 	stw	r16,0(sp)
 5088edc:	14209817 	ldw	r16,-32160(r2)
 5088ee0:	dc400115 	stw	r17,4(sp)
 5088ee4:	dfc00415 	stw	ra,16(sp)
 5088ee8:	80800e17 	ldw	r2,56(r16)
 5088eec:	dcc00315 	stw	r19,12(sp)
 5088ef0:	dc800215 	stw	r18,8(sp)
 5088ef4:	2023883a 	mov	r17,r4
 5088ef8:	10003126 	beq	r2,zero,5088fc0 <__sfp+0xf0>
 5088efc:	8100ba17 	ldw	r4,744(r16)
 5088f00:	8140b917 	ldw	r5,740(r16)
 5088f04:	04c00104 	movi	r19,4
 5088f08:	8400b804 	addi	r16,r16,736
 5088f0c:	297fffc4 	addi	r5,r5,-1
 5088f10:	2800050e 	bge	r5,zero,5088f28 <__sfp+0x58>
 5088f14:	00002406 	br	5088fa8 <__sfp+0xd8>
 5088f18:	297fffc4 	addi	r5,r5,-1
 5088f1c:	28bfffd8 	cmpnei	r2,r5,-1
 5088f20:	21001a04 	addi	r4,r4,104
 5088f24:	10002026 	beq	r2,zero,5088fa8 <__sfp+0xd8>
 5088f28:	2080030f 	ldh	r2,12(r4)
 5088f2c:	103ffa1e 	bne	r2,zero,5088f18 <__sfp+0x48>
 5088f30:	00bffff4 	movhi	r2,65535
 5088f34:	10800044 	addi	r2,r2,1
 5088f38:	20001915 	stw	zero,100(r4)
 5088f3c:	20000015 	stw	zero,0(r4)
 5088f40:	20000115 	stw	zero,4(r4)
 5088f44:	20000215 	stw	zero,8(r4)
 5088f48:	20800315 	stw	r2,12(r4)
 5088f4c:	20000415 	stw	zero,16(r4)
 5088f50:	20000515 	stw	zero,20(r4)
 5088f54:	20000615 	stw	zero,24(r4)
 5088f58:	20001705 	stb	zero,92(r4)
 5088f5c:	20001745 	stb	zero,93(r4)
 5088f60:	20001785 	stb	zero,94(r4)
 5088f64:	200017c5 	stb	zero,95(r4)
 5088f68:	20001805 	stb	zero,96(r4)
 5088f6c:	20001845 	stb	zero,97(r4)
 5088f70:	20001885 	stb	zero,98(r4)
 5088f74:	200018c5 	stb	zero,99(r4)
 5088f78:	20000c15 	stw	zero,48(r4)
 5088f7c:	20000d15 	stw	zero,52(r4)
 5088f80:	20001115 	stw	zero,68(r4)
 5088f84:	20001215 	stw	zero,72(r4)
 5088f88:	2005883a 	mov	r2,r4
 5088f8c:	dfc00417 	ldw	ra,16(sp)
 5088f90:	dcc00317 	ldw	r19,12(sp)
 5088f94:	dc800217 	ldw	r18,8(sp)
 5088f98:	dc400117 	ldw	r17,4(sp)
 5088f9c:	dc000017 	ldw	r16,0(sp)
 5088fa0:	dec00504 	addi	sp,sp,20
 5088fa4:	f800283a 	ret
 5088fa8:	80800017 	ldw	r2,0(r16)
 5088fac:	10000726 	beq	r2,zero,5088fcc <__sfp+0xfc>
 5088fb0:	11000217 	ldw	r4,8(r2)
 5088fb4:	11400117 	ldw	r5,4(r2)
 5088fb8:	1021883a 	mov	r16,r2
 5088fbc:	003fd306 	br	5088f0c <__sfp+0x3c>
 5088fc0:	8009883a 	mov	r4,r16
 5088fc4:	5088d000 	call	5088d00 <__sinit.part.0>
 5088fc8:	003fcc06 	br	5088efc <__sfp+0x2c>
 5088fcc:	01406b04 	movi	r5,428
 5088fd0:	8809883a 	mov	r4,r17
 5088fd4:	5089cf80 	call	5089cf8 <_malloc_r>
 5088fd8:	1025883a 	mov	r18,r2
 5088fdc:	10000c26 	beq	r2,zero,5089010 <__sfp+0x140>
 5088fe0:	11000304 	addi	r4,r2,12
 5088fe4:	11000215 	stw	r4,8(r2)
 5088fe8:	000b883a 	mov	r5,zero
 5088fec:	10000015 	stw	zero,0(r2)
 5088ff0:	14c00115 	stw	r19,4(r2)
 5088ff4:	01806804 	movi	r6,416
 5088ff8:	508a7d40 	call	508a7d4 <memset>
 5088ffc:	1009883a 	mov	r4,r2
 5089000:	84800015 	stw	r18,0(r16)
 5089004:	014000c4 	movi	r5,3
 5089008:	9021883a 	mov	r16,r18
 508900c:	003fc606 	br	5088f28 <__sfp+0x58>
 5089010:	80000015 	stw	zero,0(r16)
 5089014:	00800304 	movi	r2,12
 5089018:	88800015 	stw	r2,0(r17)
 508901c:	0009883a 	mov	r4,zero
 5089020:	003fd906 	br	5088f88 <__sfp+0xb8>

05089024 <_cleanup>:
 5089024:	008142b4 	movhi	r2,1290
 5089028:	11209817 	ldw	r4,-32160(r2)
 508902c:	01414274 	movhi	r5,1289
 5089030:	297ae304 	addi	r5,r5,-5236
 5089034:	50899e81 	jmpi	50899e8 <_fwalk_reent>

05089038 <__sinit>:
 5089038:	20800e17 	ldw	r2,56(r4)
 508903c:	10000126 	beq	r2,zero,5089044 <__sinit+0xc>
 5089040:	f800283a 	ret
 5089044:	5088d001 	jmpi	5088d00 <__sinit.part.0>

05089048 <__sfp_lock_acquire>:
 5089048:	f800283a 	ret

0508904c <__sfp_lock_release>:
 508904c:	f800283a 	ret

05089050 <__sinit_lock_acquire>:
 5089050:	f800283a 	ret

05089054 <__sinit_lock_release>:
 5089054:	f800283a 	ret

05089058 <__fp_lock_all>:
 5089058:	008142b4 	movhi	r2,1290
 508905c:	11209917 	ldw	r4,-32156(r2)
 5089060:	01414274 	movhi	r5,1289
 5089064:	29633904 	addi	r5,r5,-29468
 5089068:	50899501 	jmpi	5089950 <_fwalk>

0508906c <__fp_unlock_all>:
 508906c:	008142b4 	movhi	r2,1290
 5089070:	11209917 	ldw	r4,-32156(r2)
 5089074:	01414274 	movhi	r5,1289
 5089078:	29633e04 	addi	r5,r5,-29448
 508907c:	50899501 	jmpi	5089950 <_fwalk>

05089080 <_malloc_trim_r>:
 5089080:	defffb04 	addi	sp,sp,-20
 5089084:	dcc00315 	stw	r19,12(sp)
 5089088:	04c14274 	movhi	r19,1289
 508908c:	dc800215 	stw	r18,8(sp)
 5089090:	dc400115 	stw	r17,4(sp)
 5089094:	dc000015 	stw	r16,0(sp)
 5089098:	dfc00415 	stw	ra,16(sp)
 508909c:	2821883a 	mov	r16,r5
 50890a0:	9cdab904 	addi	r19,r19,27364
 50890a4:	2025883a 	mov	r18,r4
 50890a8:	50932f00 	call	50932f0 <__malloc_lock>
 50890ac:	98800217 	ldw	r2,8(r19)
 50890b0:	14400117 	ldw	r17,4(r2)
 50890b4:	00bfff04 	movi	r2,-4
 50890b8:	88a2703a 	and	r17,r17,r2
 50890bc:	8c21c83a 	sub	r16,r17,r16
 50890c0:	8403fbc4 	addi	r16,r16,4079
 50890c4:	8020d33a 	srli	r16,r16,12
 50890c8:	843fffc4 	addi	r16,r16,-1
 50890cc:	8020933a 	slli	r16,r16,12
 50890d0:	80840008 	cmpgei	r2,r16,4096
 50890d4:	10000626 	beq	r2,zero,50890f0 <_malloc_trim_r+0x70>
 50890d8:	000b883a 	mov	r5,zero
 50890dc:	9009883a 	mov	r4,r18
 50890e0:	508bf880 	call	508bf88 <_sbrk_r>
 50890e4:	98c00217 	ldw	r3,8(r19)
 50890e8:	1c47883a 	add	r3,r3,r17
 50890ec:	10c00a26 	beq	r2,r3,5089118 <_malloc_trim_r+0x98>
 50890f0:	9009883a 	mov	r4,r18
 50890f4:	50933140 	call	5093314 <__malloc_unlock>
 50890f8:	0005883a 	mov	r2,zero
 50890fc:	dfc00417 	ldw	ra,16(sp)
 5089100:	dcc00317 	ldw	r19,12(sp)
 5089104:	dc800217 	ldw	r18,8(sp)
 5089108:	dc400117 	ldw	r17,4(sp)
 508910c:	dc000017 	ldw	r16,0(sp)
 5089110:	dec00504 	addi	sp,sp,20
 5089114:	f800283a 	ret
 5089118:	040bc83a 	sub	r5,zero,r16
 508911c:	9009883a 	mov	r4,r18
 5089120:	508bf880 	call	508bf88 <_sbrk_r>
 5089124:	10bfffd8 	cmpnei	r2,r2,-1
 5089128:	10000d26 	beq	r2,zero,5089160 <_malloc_trim_r+0xe0>
 508912c:	008142b4 	movhi	r2,1290
 5089130:	10a7b917 	ldw	r2,-24860(r2)
 5089134:	98c00217 	ldw	r3,8(r19)
 5089138:	8c23c83a 	sub	r17,r17,r16
 508913c:	8c400054 	ori	r17,r17,1
 5089140:	1421c83a 	sub	r16,r2,r16
 5089144:	1c400115 	stw	r17,4(r3)
 5089148:	008142b4 	movhi	r2,1290
 508914c:	9009883a 	mov	r4,r18
 5089150:	1427b915 	stw	r16,-24860(r2)
 5089154:	50933140 	call	5093314 <__malloc_unlock>
 5089158:	00800044 	movi	r2,1
 508915c:	003fe706 	br	50890fc <_malloc_trim_r+0x7c>
 5089160:	000b883a 	mov	r5,zero
 5089164:	9009883a 	mov	r4,r18
 5089168:	508bf880 	call	508bf88 <_sbrk_r>
 508916c:	99000217 	ldw	r4,8(r19)
 5089170:	1107c83a 	sub	r3,r2,r4
 5089174:	19400410 	cmplti	r5,r3,16
 5089178:	283fdd1e 	bne	r5,zero,50890f0 <_malloc_trim_r+0x70>
 508917c:	014142b4 	movhi	r5,1290
 5089180:	29609a17 	ldw	r5,-32152(r5)
 5089184:	18c00054 	ori	r3,r3,1
 5089188:	20c00115 	stw	r3,4(r4)
 508918c:	1145c83a 	sub	r2,r2,r5
 5089190:	014142b4 	movhi	r5,1290
 5089194:	28a7b915 	stw	r2,-24860(r5)
 5089198:	003fd506 	br	50890f0 <_malloc_trim_r+0x70>

0508919c <_free_r>:
 508919c:	28004f26 	beq	r5,zero,50892dc <_free_r+0x140>
 50891a0:	defffd04 	addi	sp,sp,-12
 50891a4:	dc400115 	stw	r17,4(sp)
 50891a8:	dc000015 	stw	r16,0(sp)
 50891ac:	2023883a 	mov	r17,r4
 50891b0:	2821883a 	mov	r16,r5
 50891b4:	dfc00215 	stw	ra,8(sp)
 50891b8:	50932f00 	call	50932f0 <__malloc_lock>
 50891bc:	81ffff17 	ldw	r7,-4(r16)
 50891c0:	00bfff84 	movi	r2,-2
 50891c4:	80fffe04 	addi	r3,r16,-8
 50891c8:	3884703a 	and	r2,r7,r2
 50891cc:	01014274 	movhi	r4,1289
 50891d0:	188d883a 	add	r6,r3,r2
 50891d4:	211ab904 	addi	r4,r4,27364
 50891d8:	31400117 	ldw	r5,4(r6)
 50891dc:	22000217 	ldw	r8,8(r4)
 50891e0:	027fff04 	movi	r9,-4
 50891e4:	2a4a703a 	and	r5,r5,r9
 50891e8:	41806426 	beq	r8,r6,508937c <_free_r+0x1e0>
 50891ec:	31400115 	stw	r5,4(r6)
 50891f0:	39c0004c 	andi	r7,r7,1
 50891f4:	3151883a 	add	r8,r6,r5
 50891f8:	3800281e 	bne	r7,zero,508929c <_free_r+0x100>
 50891fc:	82bffe17 	ldw	r10,-8(r16)
 5089200:	42000117 	ldw	r8,4(r8)
 5089204:	01c14274 	movhi	r7,1289
 5089208:	1a87c83a 	sub	r3,r3,r10
 508920c:	1a400217 	ldw	r9,8(r3)
 5089210:	39dabb04 	addi	r7,r7,27372
 5089214:	1285883a 	add	r2,r2,r10
 5089218:	4200004c 	andi	r8,r8,1
 508921c:	49c04c26 	beq	r9,r7,5089350 <_free_r+0x1b4>
 5089220:	1a800317 	ldw	r10,12(r3)
 5089224:	4a800315 	stw	r10,12(r9)
 5089228:	52400215 	stw	r9,8(r10)
 508922c:	40007126 	beq	r8,zero,50893f4 <_free_r+0x258>
 5089230:	11400054 	ori	r5,r2,1
 5089234:	19400115 	stw	r5,4(r3)
 5089238:	30800015 	stw	r2,0(r6)
 508923c:	11408028 	cmpgeui	r5,r2,512
 5089240:	28002c1e 	bne	r5,zero,50892f4 <_free_r+0x158>
 5089244:	100ad0fa 	srli	r5,r2,3
 5089248:	100cd17a 	srli	r6,r2,5
 508924c:	00800044 	movi	r2,1
 5089250:	29400044 	addi	r5,r5,1
 5089254:	280a90fa 	slli	r5,r5,3
 5089258:	21c00117 	ldw	r7,4(r4)
 508925c:	1184983a 	sll	r2,r2,r6
 5089260:	214b883a 	add	r5,r4,r5
 5089264:	29800017 	ldw	r6,0(r5)
 5089268:	11c4b03a 	or	r2,r2,r7
 508926c:	29fffe04 	addi	r7,r5,-8
 5089270:	19c00315 	stw	r7,12(r3)
 5089274:	19800215 	stw	r6,8(r3)
 5089278:	20800115 	stw	r2,4(r4)
 508927c:	28c00015 	stw	r3,0(r5)
 5089280:	30c00315 	stw	r3,12(r6)
 5089284:	8809883a 	mov	r4,r17
 5089288:	dfc00217 	ldw	ra,8(sp)
 508928c:	dc400117 	ldw	r17,4(sp)
 5089290:	dc000017 	ldw	r16,0(sp)
 5089294:	dec00304 	addi	sp,sp,12
 5089298:	50933141 	jmpi	5093314 <__malloc_unlock>
 508929c:	41c00117 	ldw	r7,4(r8)
 50892a0:	39c0004c 	andi	r7,r7,1
 50892a4:	38000e1e 	bne	r7,zero,50892e0 <_free_r+0x144>
 50892a8:	01c14274 	movhi	r7,1289
 50892ac:	1145883a 	add	r2,r2,r5
 50892b0:	39dabb04 	addi	r7,r7,27372
 50892b4:	31400217 	ldw	r5,8(r6)
 50892b8:	12400054 	ori	r9,r2,1
 50892bc:	1891883a 	add	r8,r3,r2
 50892c0:	29c05226 	beq	r5,r7,508940c <_free_r+0x270>
 50892c4:	31800317 	ldw	r6,12(r6)
 50892c8:	29800315 	stw	r6,12(r5)
 50892cc:	31400215 	stw	r5,8(r6)
 50892d0:	1a400115 	stw	r9,4(r3)
 50892d4:	40800015 	stw	r2,0(r8)
 50892d8:	003fd806 	br	508923c <_free_r+0xa0>
 50892dc:	f800283a 	ret
 50892e0:	11400054 	ori	r5,r2,1
 50892e4:	817fff15 	stw	r5,-4(r16)
 50892e8:	30800015 	stw	r2,0(r6)
 50892ec:	11408028 	cmpgeui	r5,r2,512
 50892f0:	283fd426 	beq	r5,zero,5089244 <_free_r+0xa8>
 50892f4:	100ad27a 	srli	r5,r2,9
 50892f8:	29800168 	cmpgeui	r6,r5,5
 50892fc:	3000341e 	bne	r6,zero,50893d0 <_free_r+0x234>
 5089300:	100ad1ba 	srli	r5,r2,6
 5089304:	29800e44 	addi	r6,r5,57
 5089308:	300c90fa 	slli	r6,r6,3
 508930c:	29c00e04 	addi	r7,r5,56
 5089310:	218d883a 	add	r6,r4,r6
 5089314:	31400017 	ldw	r5,0(r6)
 5089318:	31bffe04 	addi	r6,r6,-8
 508931c:	31404226 	beq	r6,r5,5089428 <_free_r+0x28c>
 5089320:	01ffff04 	movi	r7,-4
 5089324:	29000117 	ldw	r4,4(r5)
 5089328:	21c8703a 	and	r4,r4,r7
 508932c:	1100022e 	bgeu	r2,r4,5089338 <_free_r+0x19c>
 5089330:	29400217 	ldw	r5,8(r5)
 5089334:	317ffb1e 	bne	r6,r5,5089324 <_free_r+0x188>
 5089338:	29800317 	ldw	r6,12(r5)
 508933c:	19800315 	stw	r6,12(r3)
 5089340:	19400215 	stw	r5,8(r3)
 5089344:	30c00215 	stw	r3,8(r6)
 5089348:	28c00315 	stw	r3,12(r5)
 508934c:	003fcd06 	br	5089284 <_free_r+0xe8>
 5089350:	40004d1e 	bne	r8,zero,5089488 <_free_r+0x2ec>
 5089354:	31000317 	ldw	r4,12(r6)
 5089358:	31800217 	ldw	r6,8(r6)
 508935c:	2885883a 	add	r2,r5,r2
 5089360:	11400054 	ori	r5,r2,1
 5089364:	31000315 	stw	r4,12(r6)
 5089368:	21800215 	stw	r6,8(r4)
 508936c:	19400115 	stw	r5,4(r3)
 5089370:	1887883a 	add	r3,r3,r2
 5089374:	18800015 	stw	r2,0(r3)
 5089378:	003fc206 	br	5089284 <_free_r+0xe8>
 508937c:	39c0004c 	andi	r7,r7,1
 5089380:	1145883a 	add	r2,r2,r5
 5089384:	3800071e 	bne	r7,zero,50893a4 <_free_r+0x208>
 5089388:	81fffe17 	ldw	r7,-8(r16)
 508938c:	19c7c83a 	sub	r3,r3,r7
 5089390:	19400317 	ldw	r5,12(r3)
 5089394:	19800217 	ldw	r6,8(r3)
 5089398:	11c5883a 	add	r2,r2,r7
 508939c:	31400315 	stw	r5,12(r6)
 50893a0:	29800215 	stw	r6,8(r5)
 50893a4:	014142b4 	movhi	r5,1290
 50893a8:	11800054 	ori	r6,r2,1
 50893ac:	29609b17 	ldw	r5,-32148(r5)
 50893b0:	19800115 	stw	r6,4(r3)
 50893b4:	20c00215 	stw	r3,8(r4)
 50893b8:	117fb236 	bltu	r2,r5,5089284 <_free_r+0xe8>
 50893bc:	008142b4 	movhi	r2,1290
 50893c0:	1167a517 	ldw	r5,-24940(r2)
 50893c4:	8809883a 	mov	r4,r17
 50893c8:	50890800 	call	5089080 <_malloc_trim_r>
 50893cc:	003fad06 	br	5089284 <_free_r+0xe8>
 50893d0:	29800568 	cmpgeui	r6,r5,21
 50893d4:	30000926 	beq	r6,zero,50893fc <_free_r+0x260>
 50893d8:	29801568 	cmpgeui	r6,r5,85
 50893dc:	3000191e 	bne	r6,zero,5089444 <_free_r+0x2a8>
 50893e0:	100ad33a 	srli	r5,r2,12
 50893e4:	29801bc4 	addi	r6,r5,111
 50893e8:	300c90fa 	slli	r6,r6,3
 50893ec:	29c01b84 	addi	r7,r5,110
 50893f0:	003fc706 	br	5089310 <_free_r+0x174>
 50893f4:	1145883a 	add	r2,r2,r5
 50893f8:	003fae06 	br	50892b4 <_free_r+0x118>
 50893fc:	29801704 	addi	r6,r5,92
 5089400:	300c90fa 	slli	r6,r6,3
 5089404:	29c016c4 	addi	r7,r5,91
 5089408:	003fc106 	br	5089310 <_free_r+0x174>
 508940c:	20c00515 	stw	r3,20(r4)
 5089410:	20c00415 	stw	r3,16(r4)
 5089414:	19c00315 	stw	r7,12(r3)
 5089418:	19c00215 	stw	r7,8(r3)
 508941c:	1a400115 	stw	r9,4(r3)
 5089420:	40800015 	stw	r2,0(r8)
 5089424:	003f9706 	br	5089284 <_free_r+0xe8>
 5089428:	380fd0ba 	srai	r7,r7,2
 508942c:	00800044 	movi	r2,1
 5089430:	22000117 	ldw	r8,4(r4)
 5089434:	11ce983a 	sll	r7,r2,r7
 5089438:	3a0eb03a 	or	r7,r7,r8
 508943c:	21c00115 	stw	r7,4(r4)
 5089440:	003fbe06 	br	508933c <_free_r+0x1a0>
 5089444:	29805568 	cmpgeui	r6,r5,341
 5089448:	3000051e 	bne	r6,zero,5089460 <_free_r+0x2c4>
 508944c:	100ad3fa 	srli	r5,r2,15
 5089450:	29801e04 	addi	r6,r5,120
 5089454:	300c90fa 	slli	r6,r6,3
 5089458:	29c01dc4 	addi	r7,r5,119
 508945c:	003fac06 	br	5089310 <_free_r+0x174>
 5089460:	29415568 	cmpgeui	r5,r5,1365
 5089464:	2800051e 	bne	r5,zero,508947c <_free_r+0x2e0>
 5089468:	100ad4ba 	srli	r5,r2,18
 508946c:	29801f44 	addi	r6,r5,125
 5089470:	300c90fa 	slli	r6,r6,3
 5089474:	29c01f04 	addi	r7,r5,124
 5089478:	003fa506 	br	5089310 <_free_r+0x174>
 508947c:	0180fe04 	movi	r6,1016
 5089480:	01c01f84 	movi	r7,126
 5089484:	003fa206 	br	5089310 <_free_r+0x174>
 5089488:	11000054 	ori	r4,r2,1
 508948c:	19000115 	stw	r4,4(r3)
 5089490:	30800015 	stw	r2,0(r6)
 5089494:	003f7b06 	br	5089284 <_free_r+0xe8>

05089498 <__sfvwrite_r>:
 5089498:	30800217 	ldw	r2,8(r6)
 508949c:	1000a226 	beq	r2,zero,5089728 <__sfvwrite_r+0x290>
 50894a0:	29c0030b 	ldhu	r7,12(r5)
 50894a4:	defff404 	addi	sp,sp,-48
 50894a8:	ddc00915 	stw	r23,36(sp)
 50894ac:	dd400715 	stw	r21,28(sp)
 50894b0:	dc000215 	stw	r16,8(sp)
 50894b4:	dfc00b15 	stw	ra,44(sp)
 50894b8:	df000a15 	stw	fp,40(sp)
 50894bc:	dd800815 	stw	r22,32(sp)
 50894c0:	dd000615 	stw	r20,24(sp)
 50894c4:	dcc00515 	stw	r19,20(sp)
 50894c8:	dc800415 	stw	r18,16(sp)
 50894cc:	dc400315 	stw	r17,12(sp)
 50894d0:	3880020c 	andi	r2,r7,8
 50894d4:	302f883a 	mov	r23,r6
 50894d8:	202b883a 	mov	r21,r4
 50894dc:	2821883a 	mov	r16,r5
 50894e0:	10002226 	beq	r2,zero,508956c <__sfvwrite_r+0xd4>
 50894e4:	28800417 	ldw	r2,16(r5)
 50894e8:	10002026 	beq	r2,zero,508956c <__sfvwrite_r+0xd4>
 50894ec:	3880008c 	andi	r2,r7,2
 50894f0:	bc400017 	ldw	r17,0(r23)
 50894f4:	10002526 	beq	r2,zero,508958c <__sfvwrite_r+0xf4>
 50894f8:	80800917 	ldw	r2,36(r16)
 50894fc:	81400717 	ldw	r5,28(r16)
 5089500:	05200034 	movhi	r20,32768
 5089504:	0027883a 	mov	r19,zero
 5089508:	0025883a 	mov	r18,zero
 508950c:	a53f0004 	addi	r20,r20,-1024
 5089510:	980d883a 	mov	r6,r19
 5089514:	a809883a 	mov	r4,r21
 5089518:	90001026 	beq	r18,zero,508955c <__sfvwrite_r+0xc4>
 508951c:	900f883a 	mov	r7,r18
 5089520:	a480012e 	bgeu	r20,r18,5089528 <__sfvwrite_r+0x90>
 5089524:	a00f883a 	mov	r7,r20
 5089528:	103ee83a 	callr	r2
 508952c:	0080790e 	bge	zero,r2,5089714 <__sfvwrite_r+0x27c>
 5089530:	b9000217 	ldw	r4,8(r23)
 5089534:	98a7883a 	add	r19,r19,r2
 5089538:	90a5c83a 	sub	r18,r18,r2
 508953c:	2085c83a 	sub	r2,r4,r2
 5089540:	b8800215 	stw	r2,8(r23)
 5089544:	10006226 	beq	r2,zero,50896d0 <__sfvwrite_r+0x238>
 5089548:	80800917 	ldw	r2,36(r16)
 508954c:	81400717 	ldw	r5,28(r16)
 5089550:	980d883a 	mov	r6,r19
 5089554:	a809883a 	mov	r4,r21
 5089558:	903ff01e 	bne	r18,zero,508951c <__sfvwrite_r+0x84>
 508955c:	8cc00017 	ldw	r19,0(r17)
 5089560:	8c800117 	ldw	r18,4(r17)
 5089564:	8c400204 	addi	r17,r17,8
 5089568:	003fe906 	br	5089510 <__sfvwrite_r+0x78>
 508956c:	800b883a 	mov	r5,r16
 5089570:	a809883a 	mov	r4,r21
 5089574:	5086f300 	call	5086f30 <__swsetup_r>
 5089578:	1000f31e 	bne	r2,zero,5089948 <__sfvwrite_r+0x4b0>
 508957c:	81c0030b 	ldhu	r7,12(r16)
 5089580:	bc400017 	ldw	r17,0(r23)
 5089584:	3880008c 	andi	r2,r7,2
 5089588:	103fdb1e 	bne	r2,zero,50894f8 <__sfvwrite_r+0x60>
 508958c:	3880004c 	andi	r2,r7,1
 5089590:	84800217 	ldw	r18,8(r16)
 5089594:	82000017 	ldw	r8,0(r16)
 5089598:	1000651e 	bne	r2,zero,5089730 <__sfvwrite_r+0x298>
 508959c:	00a00034 	movhi	r2,32768
 50895a0:	10bfff84 	addi	r2,r2,-2
 50895a4:	00e00034 	movhi	r3,32768
 50895a8:	d8800015 	stw	r2,0(sp)
 50895ac:	18bfffc4 	addi	r2,r3,-1
 50895b0:	0039883a 	mov	fp,zero
 50895b4:	0027883a 	mov	r19,zero
 50895b8:	d8800115 	stw	r2,4(sp)
 50895bc:	98004026 	beq	r19,zero,50896c0 <__sfvwrite_r+0x228>
 50895c0:	3880800c 	andi	r2,r7,512
 50895c4:	10009626 	beq	r2,zero,5089820 <__sfvwrite_r+0x388>
 50895c8:	902d883a 	mov	r22,r18
 50895cc:	9c80ba36 	bltu	r19,r18,50898b8 <__sfvwrite_r+0x420>
 50895d0:	3881200c 	andi	r2,r7,1152
 50895d4:	10002526 	beq	r2,zero,508966c <__sfvwrite_r+0x1d4>
 50895d8:	81000517 	ldw	r4,20(r16)
 50895dc:	81400417 	ldw	r5,16(r16)
 50895e0:	98800044 	addi	r2,r19,1
 50895e4:	210000e4 	muli	r4,r4,3
 50895e8:	4165c83a 	sub	r18,r8,r5
 50895ec:	1485883a 	add	r2,r2,r18
 50895f0:	2028d7fa 	srli	r20,r4,31
 50895f4:	a109883a 	add	r4,r20,r4
 50895f8:	2029d07a 	srai	r20,r4,1
 50895fc:	a00d883a 	mov	r6,r20
 5089600:	a080022e 	bgeu	r20,r2,508960c <__sfvwrite_r+0x174>
 5089604:	1029883a 	mov	r20,r2
 5089608:	100d883a 	mov	r6,r2
 508960c:	39c1000c 	andi	r7,r7,1024
 5089610:	3800bd26 	beq	r7,zero,5089908 <__sfvwrite_r+0x470>
 5089614:	a809883a 	mov	r4,r21
 5089618:	300b883a 	mov	r5,r6
 508961c:	5089cf80 	call	5089cf8 <_malloc_r>
 5089620:	1009883a 	mov	r4,r2
 5089624:	1000c426 	beq	r2,zero,5089938 <__sfvwrite_r+0x4a0>
 5089628:	81400417 	ldw	r5,16(r16)
 508962c:	900d883a 	mov	r6,r18
 5089630:	508a5a80 	call	508a5a8 <memcpy>
 5089634:	1009883a 	mov	r4,r2
 5089638:	8080030b 	ldhu	r2,12(r16)
 508963c:	00fedfc4 	movi	r3,-1153
 5089640:	10c4703a 	and	r2,r2,r3
 5089644:	10802014 	ori	r2,r2,128
 5089648:	8080030d 	sth	r2,12(r16)
 508964c:	2491883a 	add	r8,r4,r18
 5089650:	a485c83a 	sub	r2,r20,r18
 5089654:	81000415 	stw	r4,16(r16)
 5089658:	82000015 	stw	r8,0(r16)
 508965c:	85000515 	stw	r20,20(r16)
 5089660:	9825883a 	mov	r18,r19
 5089664:	80800215 	stw	r2,8(r16)
 5089668:	982d883a 	mov	r22,r19
 508966c:	4009883a 	mov	r4,r8
 5089670:	b00d883a 	mov	r6,r22
 5089674:	e00b883a 	mov	r5,fp
 5089678:	508a6a80 	call	508a6a8 <memmove>
 508967c:	81000217 	ldw	r4,8(r16)
 5089680:	80800017 	ldw	r2,0(r16)
 5089684:	9829883a 	mov	r20,r19
 5089688:	24a5c83a 	sub	r18,r4,r18
 508968c:	1585883a 	add	r2,r2,r22
 5089690:	84800215 	stw	r18,8(r16)
 5089694:	80800015 	stw	r2,0(r16)
 5089698:	0027883a 	mov	r19,zero
 508969c:	b8800217 	ldw	r2,8(r23)
 50896a0:	e539883a 	add	fp,fp,r20
 50896a4:	1529c83a 	sub	r20,r2,r20
 50896a8:	bd000215 	stw	r20,8(r23)
 50896ac:	a0000826 	beq	r20,zero,50896d0 <__sfvwrite_r+0x238>
 50896b0:	81c0030b 	ldhu	r7,12(r16)
 50896b4:	84800217 	ldw	r18,8(r16)
 50896b8:	82000017 	ldw	r8,0(r16)
 50896bc:	983fc01e 	bne	r19,zero,50895c0 <__sfvwrite_r+0x128>
 50896c0:	8f000017 	ldw	fp,0(r17)
 50896c4:	8cc00117 	ldw	r19,4(r17)
 50896c8:	8c400204 	addi	r17,r17,8
 50896cc:	003fbb06 	br	50895bc <__sfvwrite_r+0x124>
 50896d0:	0005883a 	mov	r2,zero
 50896d4:	dfc00b17 	ldw	ra,44(sp)
 50896d8:	df000a17 	ldw	fp,40(sp)
 50896dc:	ddc00917 	ldw	r23,36(sp)
 50896e0:	dd800817 	ldw	r22,32(sp)
 50896e4:	dd400717 	ldw	r21,28(sp)
 50896e8:	dd000617 	ldw	r20,24(sp)
 50896ec:	dcc00517 	ldw	r19,20(sp)
 50896f0:	dc800417 	ldw	r18,16(sp)
 50896f4:	dc400317 	ldw	r17,12(sp)
 50896f8:	dc000217 	ldw	r16,8(sp)
 50896fc:	dec00c04 	addi	sp,sp,48
 5089700:	f800283a 	ret
 5089704:	800b883a 	mov	r5,r16
 5089708:	a809883a 	mov	r4,r21
 508970c:	5088c000 	call	5088c00 <_fflush_r>
 5089710:	10002026 	beq	r2,zero,5089794 <__sfvwrite_r+0x2fc>
 5089714:	8080030b 	ldhu	r2,12(r16)
 5089718:	10801014 	ori	r2,r2,64
 508971c:	8080030d 	sth	r2,12(r16)
 5089720:	00bfffc4 	movi	r2,-1
 5089724:	003feb06 	br	50896d4 <__sfvwrite_r+0x23c>
 5089728:	0005883a 	mov	r2,zero
 508972c:	f800283a 	ret
 5089730:	002d883a 	mov	r22,zero
 5089734:	0027883a 	mov	r19,zero
 5089738:	0005883a 	mov	r2,zero
 508973c:	0039883a 	mov	fp,zero
 5089740:	b0001d26 	beq	r22,zero,50897b8 <__sfvwrite_r+0x320>
 5089744:	10002026 	beq	r2,zero,50897c8 <__sfvwrite_r+0x330>
 5089748:	9829883a 	mov	r20,r19
 508974c:	b500012e 	bgeu	r22,r20,5089754 <__sfvwrite_r+0x2bc>
 5089750:	b029883a 	mov	r20,r22
 5089754:	80800417 	ldw	r2,16(r16)
 5089758:	81c00517 	ldw	r7,20(r16)
 508975c:	1200022e 	bgeu	r2,r8,5089768 <__sfvwrite_r+0x2d0>
 5089760:	3ca5883a 	add	r18,r7,r18
 5089764:	95002216 	blt	r18,r20,50897f0 <__sfvwrite_r+0x358>
 5089768:	a1c05616 	blt	r20,r7,50898c4 <__sfvwrite_r+0x42c>
 508976c:	80800917 	ldw	r2,36(r16)
 5089770:	81400717 	ldw	r5,28(r16)
 5089774:	e00d883a 	mov	r6,fp
 5089778:	a809883a 	mov	r4,r21
 508977c:	103ee83a 	callr	r2
 5089780:	1025883a 	mov	r18,r2
 5089784:	00bfe30e 	bge	zero,r2,5089714 <__sfvwrite_r+0x27c>
 5089788:	9ca7c83a 	sub	r19,r19,r18
 508978c:	983fdd26 	beq	r19,zero,5089704 <__sfvwrite_r+0x26c>
 5089790:	00800044 	movi	r2,1
 5089794:	b9800217 	ldw	r6,8(r23)
 5089798:	e4b9883a 	add	fp,fp,r18
 508979c:	b4adc83a 	sub	r22,r22,r18
 50897a0:	34a5c83a 	sub	r18,r6,r18
 50897a4:	bc800215 	stw	r18,8(r23)
 50897a8:	903fc926 	beq	r18,zero,50896d0 <__sfvwrite_r+0x238>
 50897ac:	84800217 	ldw	r18,8(r16)
 50897b0:	82000017 	ldw	r8,0(r16)
 50897b4:	b03fe31e 	bne	r22,zero,5089744 <__sfvwrite_r+0x2ac>
 50897b8:	8d800117 	ldw	r22,4(r17)
 50897bc:	8f000017 	ldw	fp,0(r17)
 50897c0:	8c400204 	addi	r17,r17,8
 50897c4:	b03ffc26 	beq	r22,zero,50897b8 <__sfvwrite_r+0x320>
 50897c8:	b00d883a 	mov	r6,r22
 50897cc:	01400284 	movi	r5,10
 50897d0:	e009883a 	mov	r4,fp
 50897d4:	da000015 	stw	r8,0(sp)
 50897d8:	508a4d80 	call	508a4d8 <memchr>
 50897dc:	da000017 	ldw	r8,0(sp)
 50897e0:	10004626 	beq	r2,zero,50898fc <__sfvwrite_r+0x464>
 50897e4:	10800044 	addi	r2,r2,1
 50897e8:	1727c83a 	sub	r19,r2,fp
 50897ec:	003fd606 	br	5089748 <__sfvwrite_r+0x2b0>
 50897f0:	e00b883a 	mov	r5,fp
 50897f4:	4009883a 	mov	r4,r8
 50897f8:	900d883a 	mov	r6,r18
 50897fc:	508a6a80 	call	508a6a8 <memmove>
 5089800:	80800017 	ldw	r2,0(r16)
 5089804:	800b883a 	mov	r5,r16
 5089808:	a809883a 	mov	r4,r21
 508980c:	1485883a 	add	r2,r2,r18
 5089810:	80800015 	stw	r2,0(r16)
 5089814:	5088c000 	call	5088c00 <_fflush_r>
 5089818:	103fdb26 	beq	r2,zero,5089788 <__sfvwrite_r+0x2f0>
 508981c:	003fbd06 	br	5089714 <__sfvwrite_r+0x27c>
 5089820:	80800417 	ldw	r2,16(r16)
 5089824:	12001136 	bltu	r2,r8,508986c <__sfvwrite_r+0x3d4>
 5089828:	85000517 	ldw	r20,20(r16)
 508982c:	9d000f36 	bltu	r19,r20,508986c <__sfvwrite_r+0x3d4>
 5089830:	d8800017 	ldw	r2,0(sp)
 5089834:	14c02f2e 	bgeu	r2,r19,50898f4 <__sfvwrite_r+0x45c>
 5089838:	d9000117 	ldw	r4,4(sp)
 508983c:	a00b883a 	mov	r5,r20
 5089840:	508270c0 	call	508270c <__divsi3>
 5089844:	150f383a 	mul	r7,r2,r20
 5089848:	82000917 	ldw	r8,36(r16)
 508984c:	81400717 	ldw	r5,28(r16)
 5089850:	e00d883a 	mov	r6,fp
 5089854:	a809883a 	mov	r4,r21
 5089858:	403ee83a 	callr	r8
 508985c:	1029883a 	mov	r20,r2
 5089860:	00bfac0e 	bge	zero,r2,5089714 <__sfvwrite_r+0x27c>
 5089864:	9d27c83a 	sub	r19,r19,r20
 5089868:	003f8c06 	br	508969c <__sfvwrite_r+0x204>
 508986c:	9029883a 	mov	r20,r18
 5089870:	9c80012e 	bgeu	r19,r18,5089878 <__sfvwrite_r+0x3e0>
 5089874:	9829883a 	mov	r20,r19
 5089878:	4009883a 	mov	r4,r8
 508987c:	a00d883a 	mov	r6,r20
 5089880:	e00b883a 	mov	r5,fp
 5089884:	508a6a80 	call	508a6a8 <memmove>
 5089888:	80800217 	ldw	r2,8(r16)
 508988c:	81000017 	ldw	r4,0(r16)
 5089890:	1505c83a 	sub	r2,r2,r20
 5089894:	2509883a 	add	r4,r4,r20
 5089898:	80800215 	stw	r2,8(r16)
 508989c:	81000015 	stw	r4,0(r16)
 50898a0:	103ff01e 	bne	r2,zero,5089864 <__sfvwrite_r+0x3cc>
 50898a4:	800b883a 	mov	r5,r16
 50898a8:	a809883a 	mov	r4,r21
 50898ac:	5088c000 	call	5088c00 <_fflush_r>
 50898b0:	103fec26 	beq	r2,zero,5089864 <__sfvwrite_r+0x3cc>
 50898b4:	003f9706 	br	5089714 <__sfvwrite_r+0x27c>
 50898b8:	9825883a 	mov	r18,r19
 50898bc:	982d883a 	mov	r22,r19
 50898c0:	003f6a06 	br	508966c <__sfvwrite_r+0x1d4>
 50898c4:	4009883a 	mov	r4,r8
 50898c8:	a00d883a 	mov	r6,r20
 50898cc:	e00b883a 	mov	r5,fp
 50898d0:	508a6a80 	call	508a6a8 <memmove>
 50898d4:	81000217 	ldw	r4,8(r16)
 50898d8:	80800017 	ldw	r2,0(r16)
 50898dc:	a025883a 	mov	r18,r20
 50898e0:	2509c83a 	sub	r4,r4,r20
 50898e4:	1505883a 	add	r2,r2,r20
 50898e8:	81000215 	stw	r4,8(r16)
 50898ec:	80800015 	stw	r2,0(r16)
 50898f0:	003fa506 	br	5089788 <__sfvwrite_r+0x2f0>
 50898f4:	9809883a 	mov	r4,r19
 50898f8:	003fd006 	br	508983c <__sfvwrite_r+0x3a4>
 50898fc:	b5000044 	addi	r20,r22,1
 5089900:	a027883a 	mov	r19,r20
 5089904:	003f9106 	br	508974c <__sfvwrite_r+0x2b4>
 5089908:	a809883a 	mov	r4,r21
 508990c:	508ba240 	call	508ba24 <_realloc_r>
 5089910:	1009883a 	mov	r4,r2
 5089914:	103f4d1e 	bne	r2,zero,508964c <__sfvwrite_r+0x1b4>
 5089918:	81400417 	ldw	r5,16(r16)
 508991c:	a809883a 	mov	r4,r21
 5089920:	508919c0 	call	508919c <_free_r>
 5089924:	8080030b 	ldhu	r2,12(r16)
 5089928:	00c00304 	movi	r3,12
 508992c:	a8c00015 	stw	r3,0(r21)
 5089930:	10bfdfcc 	andi	r2,r2,65407
 5089934:	003f7806 	br	5089718 <__sfvwrite_r+0x280>
 5089938:	00c00304 	movi	r3,12
 508993c:	8080030b 	ldhu	r2,12(r16)
 5089940:	a8c00015 	stw	r3,0(r21)
 5089944:	003f7406 	br	5089718 <__sfvwrite_r+0x280>
 5089948:	00bfffc4 	movi	r2,-1
 508994c:	003f6106 	br	50896d4 <__sfvwrite_r+0x23c>

05089950 <_fwalk>:
 5089950:	defffa04 	addi	sp,sp,-24
 5089954:	dd000415 	stw	r20,16(sp)
 5089958:	dcc00315 	stw	r19,12(sp)
 508995c:	dc800215 	stw	r18,8(sp)
 5089960:	dfc00515 	stw	ra,20(sp)
 5089964:	dc400115 	stw	r17,4(sp)
 5089968:	dc000015 	stw	r16,0(sp)
 508996c:	2827883a 	mov	r19,r5
 5089970:	2480b804 	addi	r18,r4,736
 5089974:	0029883a 	mov	r20,zero
 5089978:	94400117 	ldw	r17,4(r18)
 508997c:	94000217 	ldw	r16,8(r18)
 5089980:	8c7fffc4 	addi	r17,r17,-1
 5089984:	88000d16 	blt	r17,zero,50899bc <_fwalk+0x6c>
 5089988:	8080030b 	ldhu	r2,12(r16)
 508998c:	8c7fffc4 	addi	r17,r17,-1
 5089990:	108000b0 	cmpltui	r2,r2,2
 5089994:	1000061e 	bne	r2,zero,50899b0 <_fwalk+0x60>
 5089998:	8080038f 	ldh	r2,14(r16)
 508999c:	8009883a 	mov	r4,r16
 50899a0:	10bfffe0 	cmpeqi	r2,r2,-1
 50899a4:	1000021e 	bne	r2,zero,50899b0 <_fwalk+0x60>
 50899a8:	983ee83a 	callr	r19
 50899ac:	a0a8b03a 	or	r20,r20,r2
 50899b0:	88bfffd8 	cmpnei	r2,r17,-1
 50899b4:	84001a04 	addi	r16,r16,104
 50899b8:	103ff31e 	bne	r2,zero,5089988 <_fwalk+0x38>
 50899bc:	94800017 	ldw	r18,0(r18)
 50899c0:	903fed1e 	bne	r18,zero,5089978 <_fwalk+0x28>
 50899c4:	a005883a 	mov	r2,r20
 50899c8:	dfc00517 	ldw	ra,20(sp)
 50899cc:	dd000417 	ldw	r20,16(sp)
 50899d0:	dcc00317 	ldw	r19,12(sp)
 50899d4:	dc800217 	ldw	r18,8(sp)
 50899d8:	dc400117 	ldw	r17,4(sp)
 50899dc:	dc000017 	ldw	r16,0(sp)
 50899e0:	dec00604 	addi	sp,sp,24
 50899e4:	f800283a 	ret

050899e8 <_fwalk_reent>:
 50899e8:	defff904 	addi	sp,sp,-28
 50899ec:	dd400515 	stw	r21,20(sp)
 50899f0:	dd000415 	stw	r20,16(sp)
 50899f4:	dcc00315 	stw	r19,12(sp)
 50899f8:	dc800215 	stw	r18,8(sp)
 50899fc:	dfc00615 	stw	ra,24(sp)
 5089a00:	dc400115 	stw	r17,4(sp)
 5089a04:	dc000015 	stw	r16,0(sp)
 5089a08:	202b883a 	mov	r21,r4
 5089a0c:	2827883a 	mov	r19,r5
 5089a10:	2480b804 	addi	r18,r4,736
 5089a14:	0029883a 	mov	r20,zero
 5089a18:	94400117 	ldw	r17,4(r18)
 5089a1c:	94000217 	ldw	r16,8(r18)
 5089a20:	8c7fffc4 	addi	r17,r17,-1
 5089a24:	88000e16 	blt	r17,zero,5089a60 <_fwalk_reent+0x78>
 5089a28:	8080030b 	ldhu	r2,12(r16)
 5089a2c:	8c7fffc4 	addi	r17,r17,-1
 5089a30:	108000b0 	cmpltui	r2,r2,2
 5089a34:	1000071e 	bne	r2,zero,5089a54 <_fwalk_reent+0x6c>
 5089a38:	8080038f 	ldh	r2,14(r16)
 5089a3c:	800b883a 	mov	r5,r16
 5089a40:	a809883a 	mov	r4,r21
 5089a44:	10bfffe0 	cmpeqi	r2,r2,-1
 5089a48:	1000021e 	bne	r2,zero,5089a54 <_fwalk_reent+0x6c>
 5089a4c:	983ee83a 	callr	r19
 5089a50:	a0a8b03a 	or	r20,r20,r2
 5089a54:	88bfffd8 	cmpnei	r2,r17,-1
 5089a58:	84001a04 	addi	r16,r16,104
 5089a5c:	103ff21e 	bne	r2,zero,5089a28 <_fwalk_reent+0x40>
 5089a60:	94800017 	ldw	r18,0(r18)
 5089a64:	903fec1e 	bne	r18,zero,5089a18 <_fwalk_reent+0x30>
 5089a68:	a005883a 	mov	r2,r20
 5089a6c:	dfc00617 	ldw	ra,24(sp)
 5089a70:	dd400517 	ldw	r21,20(sp)
 5089a74:	dd000417 	ldw	r20,16(sp)
 5089a78:	dcc00317 	ldw	r19,12(sp)
 5089a7c:	dc800217 	ldw	r18,8(sp)
 5089a80:	dc400117 	ldw	r17,4(sp)
 5089a84:	dc000017 	ldw	r16,0(sp)
 5089a88:	dec00704 	addi	sp,sp,28
 5089a8c:	f800283a 	ret

05089a90 <__localeconv_l>:
 5089a90:	20803c04 	addi	r2,r4,240
 5089a94:	f800283a 	ret

05089a98 <_localeconv_r>:
 5089a98:	00814274 	movhi	r2,1289
 5089a9c:	109bf704 	addi	r2,r2,28636
 5089aa0:	f800283a 	ret

05089aa4 <localeconv>:
 5089aa4:	00814274 	movhi	r2,1289
 5089aa8:	109bf704 	addi	r2,r2,28636
 5089aac:	f800283a 	ret

05089ab0 <__smakebuf_r>:
 5089ab0:	2880030b 	ldhu	r2,12(r5)
 5089ab4:	deffe804 	addi	sp,sp,-96
 5089ab8:	dc001215 	stw	r16,72(sp)
 5089abc:	dfc01715 	stw	ra,92(sp)
 5089ac0:	dd001615 	stw	r20,88(sp)
 5089ac4:	dcc01515 	stw	r19,84(sp)
 5089ac8:	dc801415 	stw	r18,80(sp)
 5089acc:	dc401315 	stw	r17,76(sp)
 5089ad0:	10c0008c 	andi	r3,r2,2
 5089ad4:	2821883a 	mov	r16,r5
 5089ad8:	18000d26 	beq	r3,zero,5089b10 <__smakebuf_r+0x60>
 5089adc:	288010c4 	addi	r2,r5,67
 5089ae0:	28800015 	stw	r2,0(r5)
 5089ae4:	28800415 	stw	r2,16(r5)
 5089ae8:	00800044 	movi	r2,1
 5089aec:	28800515 	stw	r2,20(r5)
 5089af0:	dfc01717 	ldw	ra,92(sp)
 5089af4:	dd001617 	ldw	r20,88(sp)
 5089af8:	dcc01517 	ldw	r19,84(sp)
 5089afc:	dc801417 	ldw	r18,80(sp)
 5089b00:	dc401317 	ldw	r17,76(sp)
 5089b04:	dc001217 	ldw	r16,72(sp)
 5089b08:	dec01804 	addi	sp,sp,96
 5089b0c:	f800283a 	ret
 5089b10:	2940038f 	ldh	r5,14(r5)
 5089b14:	2023883a 	mov	r17,r4
 5089b18:	28002816 	blt	r5,zero,5089bbc <__smakebuf_r+0x10c>
 5089b1c:	d80d883a 	mov	r6,sp
 5089b20:	508eec40 	call	508eec4 <_fstat_r>
 5089b24:	10002416 	blt	r2,zero,5089bb8 <__smakebuf_r+0x108>
 5089b28:	d8800117 	ldw	r2,4(sp)
 5089b2c:	10bc000c 	andi	r2,r2,61440
 5089b30:	10880018 	cmpnei	r2,r2,8192
 5089b34:	1000461e 	bne	r2,zero,5089c50 <__smakebuf_r+0x1a0>
 5089b38:	8140038f 	ldh	r5,14(r16)
 5089b3c:	8809883a 	mov	r4,r17
 5089b40:	508ef240 	call	508ef24 <_isatty_r>
 5089b44:	10003e26 	beq	r2,zero,5089c40 <__smakebuf_r+0x190>
 5089b48:	8080030b 	ldhu	r2,12(r16)
 5089b4c:	80c010c4 	addi	r3,r16,67
 5089b50:	80c00015 	stw	r3,0(r16)
 5089b54:	10800054 	ori	r2,r2,1
 5089b58:	8080030d 	sth	r2,12(r16)
 5089b5c:	00800044 	movi	r2,1
 5089b60:	80c00415 	stw	r3,16(r16)
 5089b64:	80800515 	stw	r2,20(r16)
 5089b68:	04c00044 	movi	r19,1
 5089b6c:	05010004 	movi	r20,1024
 5089b70:	04820004 	movi	r18,2048
 5089b74:	a00b883a 	mov	r5,r20
 5089b78:	8809883a 	mov	r4,r17
 5089b7c:	5089cf80 	call	5089cf8 <_malloc_r>
 5089b80:	10001726 	beq	r2,zero,5089be0 <__smakebuf_r+0x130>
 5089b84:	80c0030b 	ldhu	r3,12(r16)
 5089b88:	01014274 	movhi	r4,1289
 5089b8c:	21233b04 	addi	r4,r4,-29460
 5089b90:	89000f15 	stw	r4,60(r17)
 5089b94:	18c02014 	ori	r3,r3,128
 5089b98:	80c0030d 	sth	r3,12(r16)
 5089b9c:	80800015 	stw	r2,0(r16)
 5089ba0:	80800415 	stw	r2,16(r16)
 5089ba4:	85000515 	stw	r20,20(r16)
 5089ba8:	98001d1e 	bne	r19,zero,5089c20 <__smakebuf_r+0x170>
 5089bac:	90c6b03a 	or	r3,r18,r3
 5089bb0:	80c0030d 	sth	r3,12(r16)
 5089bb4:	003fce06 	br	5089af0 <__smakebuf_r+0x40>
 5089bb8:	8080030b 	ldhu	r2,12(r16)
 5089bbc:	1080200c 	andi	r2,r2,128
 5089bc0:	0027883a 	mov	r19,zero
 5089bc4:	10001326 	beq	r2,zero,5089c14 <__smakebuf_r+0x164>
 5089bc8:	05001004 	movi	r20,64
 5089bcc:	a00b883a 	mov	r5,r20
 5089bd0:	8809883a 	mov	r4,r17
 5089bd4:	0025883a 	mov	r18,zero
 5089bd8:	5089cf80 	call	5089cf8 <_malloc_r>
 5089bdc:	103fe91e 	bne	r2,zero,5089b84 <__smakebuf_r+0xd4>
 5089be0:	8080030b 	ldhu	r2,12(r16)
 5089be4:	10c0800c 	andi	r3,r2,512
 5089be8:	183fc11e 	bne	r3,zero,5089af0 <__smakebuf_r+0x40>
 5089bec:	00ffff04 	movi	r3,-4
 5089bf0:	10c4703a 	and	r2,r2,r3
 5089bf4:	10800094 	ori	r2,r2,2
 5089bf8:	80c010c4 	addi	r3,r16,67
 5089bfc:	8080030d 	sth	r2,12(r16)
 5089c00:	00800044 	movi	r2,1
 5089c04:	80c00015 	stw	r3,0(r16)
 5089c08:	80c00415 	stw	r3,16(r16)
 5089c0c:	80800515 	stw	r2,20(r16)
 5089c10:	003fb706 	br	5089af0 <__smakebuf_r+0x40>
 5089c14:	05010004 	movi	r20,1024
 5089c18:	0025883a 	mov	r18,zero
 5089c1c:	003fd506 	br	5089b74 <__smakebuf_r+0xc4>
 5089c20:	8140038f 	ldh	r5,14(r16)
 5089c24:	8809883a 	mov	r4,r17
 5089c28:	508ef240 	call	508ef24 <_isatty_r>
 5089c2c:	80c0030b 	ldhu	r3,12(r16)
 5089c30:	103fde26 	beq	r2,zero,5089bac <__smakebuf_r+0xfc>
 5089c34:	18ffff0c 	andi	r3,r3,65532
 5089c38:	18c00054 	ori	r3,r3,1
 5089c3c:	003fdb06 	br	5089bac <__smakebuf_r+0xfc>
 5089c40:	04c00044 	movi	r19,1
 5089c44:	05010004 	movi	r20,1024
 5089c48:	04820004 	movi	r18,2048
 5089c4c:	003fc906 	br	5089b74 <__smakebuf_r+0xc4>
 5089c50:	0027883a 	mov	r19,zero
 5089c54:	05010004 	movi	r20,1024
 5089c58:	04820004 	movi	r18,2048
 5089c5c:	003fc506 	br	5089b74 <__smakebuf_r+0xc4>

05089c60 <__swhatbuf_r>:
 5089c60:	deffea04 	addi	sp,sp,-88
 5089c64:	dc001215 	stw	r16,72(sp)
 5089c68:	2821883a 	mov	r16,r5
 5089c6c:	2940038f 	ldh	r5,14(r5)
 5089c70:	dc801415 	stw	r18,80(sp)
 5089c74:	dc401315 	stw	r17,76(sp)
 5089c78:	dfc01515 	stw	ra,84(sp)
 5089c7c:	3023883a 	mov	r17,r6
 5089c80:	3825883a 	mov	r18,r7
 5089c84:	28001016 	blt	r5,zero,5089cc8 <__swhatbuf_r+0x68>
 5089c88:	d80d883a 	mov	r6,sp
 5089c8c:	508eec40 	call	508eec4 <_fstat_r>
 5089c90:	10000d16 	blt	r2,zero,5089cc8 <__swhatbuf_r+0x68>
 5089c94:	d8c00117 	ldw	r3,4(sp)
 5089c98:	00820004 	movi	r2,2048
 5089c9c:	18fc000c 	andi	r3,r3,61440
 5089ca0:	18c80020 	cmpeqi	r3,r3,8192
 5089ca4:	90c00015 	stw	r3,0(r18)
 5089ca8:	00c10004 	movi	r3,1024
 5089cac:	88c00015 	stw	r3,0(r17)
 5089cb0:	dfc01517 	ldw	ra,84(sp)
 5089cb4:	dc801417 	ldw	r18,80(sp)
 5089cb8:	dc401317 	ldw	r17,76(sp)
 5089cbc:	dc001217 	ldw	r16,72(sp)
 5089cc0:	dec01604 	addi	sp,sp,88
 5089cc4:	f800283a 	ret
 5089cc8:	8080030b 	ldhu	r2,12(r16)
 5089ccc:	90000015 	stw	zero,0(r18)
 5089cd0:	1080200c 	andi	r2,r2,128
 5089cd4:	10000426 	beq	r2,zero,5089ce8 <__swhatbuf_r+0x88>
 5089cd8:	00801004 	movi	r2,64
 5089cdc:	88800015 	stw	r2,0(r17)
 5089ce0:	0005883a 	mov	r2,zero
 5089ce4:	003ff206 	br	5089cb0 <__swhatbuf_r+0x50>
 5089ce8:	00810004 	movi	r2,1024
 5089cec:	88800015 	stw	r2,0(r17)
 5089cf0:	0005883a 	mov	r2,zero
 5089cf4:	003fee06 	br	5089cb0 <__swhatbuf_r+0x50>

05089cf8 <_malloc_r>:
 5089cf8:	defff604 	addi	sp,sp,-40
 5089cfc:	dc400115 	stw	r17,4(sp)
 5089d00:	2c4002c4 	addi	r17,r5,11
 5089d04:	dc800215 	stw	r18,8(sp)
 5089d08:	dfc00915 	stw	ra,36(sp)
 5089d0c:	df000815 	stw	fp,32(sp)
 5089d10:	ddc00715 	stw	r23,28(sp)
 5089d14:	dd800615 	stw	r22,24(sp)
 5089d18:	dd400515 	stw	r21,20(sp)
 5089d1c:	dd000415 	stw	r20,16(sp)
 5089d20:	dcc00315 	stw	r19,12(sp)
 5089d24:	dc000015 	stw	r16,0(sp)
 5089d28:	888005e8 	cmpgeui	r2,r17,23
 5089d2c:	2025883a 	mov	r18,r4
 5089d30:	10001b1e 	bne	r2,zero,5089da0 <_malloc_r+0xa8>
 5089d34:	29400468 	cmpgeui	r5,r5,17
 5089d38:	2800821e 	bne	r5,zero,5089f44 <_malloc_r+0x24c>
 5089d3c:	50932f00 	call	50932f0 <__malloc_lock>
 5089d40:	04400404 	movi	r17,16
 5089d44:	00800604 	movi	r2,24
 5089d48:	01c00084 	movi	r7,2
 5089d4c:	04c14274 	movhi	r19,1289
 5089d50:	9cdab904 	addi	r19,r19,27364
 5089d54:	9885883a 	add	r2,r19,r2
 5089d58:	14000117 	ldw	r16,4(r2)
 5089d5c:	10fffe04 	addi	r3,r2,-8
 5089d60:	80c08b26 	beq	r16,r3,5089f90 <_malloc_r+0x298>
 5089d64:	80800117 	ldw	r2,4(r16)
 5089d68:	81000317 	ldw	r4,12(r16)
 5089d6c:	00ffff04 	movi	r3,-4
 5089d70:	10c4703a 	and	r2,r2,r3
 5089d74:	81400217 	ldw	r5,8(r16)
 5089d78:	8085883a 	add	r2,r16,r2
 5089d7c:	10c00117 	ldw	r3,4(r2)
 5089d80:	29000315 	stw	r4,12(r5)
 5089d84:	21400215 	stw	r5,8(r4)
 5089d88:	18c00054 	ori	r3,r3,1
 5089d8c:	10c00115 	stw	r3,4(r2)
 5089d90:	9009883a 	mov	r4,r18
 5089d94:	50933140 	call	5093314 <__malloc_unlock>
 5089d98:	80800204 	addi	r2,r16,8
 5089d9c:	00006c06 	br	5089f50 <_malloc_r+0x258>
 5089da0:	00bffe04 	movi	r2,-8
 5089da4:	88a2703a 	and	r17,r17,r2
 5089da8:	88006616 	blt	r17,zero,5089f44 <_malloc_r+0x24c>
 5089dac:	89406536 	bltu	r17,r5,5089f44 <_malloc_r+0x24c>
 5089db0:	50932f00 	call	50932f0 <__malloc_lock>
 5089db4:	88807e28 	cmpgeui	r2,r17,504
 5089db8:	10012226 	beq	r2,zero,508a244 <_malloc_r+0x54c>
 5089dbc:	8804d27a 	srli	r2,r17,9
 5089dc0:	10006f26 	beq	r2,zero,5089f80 <_malloc_r+0x288>
 5089dc4:	10c00168 	cmpgeui	r3,r2,5
 5089dc8:	1800fe1e 	bne	r3,zero,508a1c4 <_malloc_r+0x4cc>
 5089dcc:	8804d1ba 	srli	r2,r17,6
 5089dd0:	11c00e44 	addi	r7,r2,57
 5089dd4:	380890fa 	slli	r4,r7,3
 5089dd8:	12000e04 	addi	r8,r2,56
 5089ddc:	04c14274 	movhi	r19,1289
 5089de0:	9cdab904 	addi	r19,r19,27364
 5089de4:	9909883a 	add	r4,r19,r4
 5089de8:	24000117 	ldw	r16,4(r4)
 5089dec:	213ffe04 	addi	r4,r4,-8
 5089df0:	24000b26 	beq	r4,r16,5089e20 <_malloc_r+0x128>
 5089df4:	01bfff04 	movi	r6,-4
 5089df8:	00000306 	br	5089e08 <_malloc_r+0x110>
 5089dfc:	1800d60e 	bge	r3,zero,508a158 <_malloc_r+0x460>
 5089e00:	84000317 	ldw	r16,12(r16)
 5089e04:	24000626 	beq	r4,r16,5089e20 <_malloc_r+0x128>
 5089e08:	80800117 	ldw	r2,4(r16)
 5089e0c:	1184703a 	and	r2,r2,r6
 5089e10:	1447c83a 	sub	r3,r2,r17
 5089e14:	19400408 	cmpgei	r5,r3,16
 5089e18:	283ff826 	beq	r5,zero,5089dfc <_malloc_r+0x104>
 5089e1c:	400f883a 	mov	r7,r8
 5089e20:	9c000417 	ldw	r16,16(r19)
 5089e24:	02414274 	movhi	r9,1289
 5089e28:	4a5abb04 	addi	r9,r9,27372
 5089e2c:	82405f26 	beq	r16,r9,5089fac <_malloc_r+0x2b4>
 5089e30:	80c00117 	ldw	r3,4(r16)
 5089e34:	00bfff04 	movi	r2,-4
 5089e38:	1884703a 	and	r2,r3,r2
 5089e3c:	1447c83a 	sub	r3,r2,r17
 5089e40:	19000410 	cmplti	r4,r3,16
 5089e44:	20010a26 	beq	r4,zero,508a270 <_malloc_r+0x578>
 5089e48:	9a400515 	stw	r9,20(r19)
 5089e4c:	9a400415 	stw	r9,16(r19)
 5089e50:	1800ff0e 	bge	r3,zero,508a250 <_malloc_r+0x558>
 5089e54:	10c08028 	cmpgeui	r3,r2,512
 5089e58:	1800c11e 	bne	r3,zero,508a160 <_malloc_r+0x468>
 5089e5c:	1006d0fa 	srli	r3,r2,3
 5089e60:	1008d17a 	srli	r4,r2,5
 5089e64:	00800044 	movi	r2,1
 5089e68:	18c00044 	addi	r3,r3,1
 5089e6c:	180690fa 	slli	r3,r3,3
 5089e70:	99400117 	ldw	r5,4(r19)
 5089e74:	1104983a 	sll	r2,r2,r4
 5089e78:	98c7883a 	add	r3,r19,r3
 5089e7c:	19000017 	ldw	r4,0(r3)
 5089e80:	1144b03a 	or	r2,r2,r5
 5089e84:	197ffe04 	addi	r5,r3,-8
 5089e88:	81400315 	stw	r5,12(r16)
 5089e8c:	81000215 	stw	r4,8(r16)
 5089e90:	98800115 	stw	r2,4(r19)
 5089e94:	1c000015 	stw	r16,0(r3)
 5089e98:	24000315 	stw	r16,12(r4)
 5089e9c:	3807d0ba 	srai	r3,r7,2
 5089ea0:	01000044 	movi	r4,1
 5089ea4:	20c8983a 	sll	r4,r4,r3
 5089ea8:	11004536 	bltu	r2,r4,5089fc0 <_malloc_r+0x2c8>
 5089eac:	2086703a 	and	r3,r4,r2
 5089eb0:	18000a1e 	bne	r3,zero,5089edc <_malloc_r+0x1e4>
 5089eb4:	00ffff04 	movi	r3,-4
 5089eb8:	2109883a 	add	r4,r4,r4
 5089ebc:	38ce703a 	and	r7,r7,r3
 5089ec0:	2086703a 	and	r3,r4,r2
 5089ec4:	39c00104 	addi	r7,r7,4
 5089ec8:	1800041e 	bne	r3,zero,5089edc <_malloc_r+0x1e4>
 5089ecc:	2109883a 	add	r4,r4,r4
 5089ed0:	2086703a 	and	r3,r4,r2
 5089ed4:	39c00104 	addi	r7,r7,4
 5089ed8:	183ffc26 	beq	r3,zero,5089ecc <_malloc_r+0x1d4>
 5089edc:	02bfff04 	movi	r10,-4
 5089ee0:	381690fa 	slli	r11,r7,3
 5089ee4:	3819883a 	mov	r12,r7
 5089ee8:	9ad7883a 	add	r11,r19,r11
 5089eec:	5811883a 	mov	r8,r11
 5089ef0:	40800317 	ldw	r2,12(r8)
 5089ef4:	4080bc26 	beq	r8,r2,508a1e8 <_malloc_r+0x4f0>
 5089ef8:	10c00117 	ldw	r3,4(r2)
 5089efc:	1021883a 	mov	r16,r2
 5089f00:	10800317 	ldw	r2,12(r2)
 5089f04:	1a86703a 	and	r3,r3,r10
 5089f08:	1c4bc83a 	sub	r5,r3,r17
 5089f0c:	29800410 	cmplti	r6,r5,16
 5089f10:	3000ba26 	beq	r6,zero,508a1fc <_malloc_r+0x504>
 5089f14:	283ff716 	blt	r5,zero,5089ef4 <_malloc_r+0x1fc>
 5089f18:	80c7883a 	add	r3,r16,r3
 5089f1c:	19400117 	ldw	r5,4(r3)
 5089f20:	81800217 	ldw	r6,8(r16)
 5089f24:	9009883a 	mov	r4,r18
 5089f28:	29400054 	ori	r5,r5,1
 5089f2c:	19400115 	stw	r5,4(r3)
 5089f30:	30800315 	stw	r2,12(r6)
 5089f34:	11800215 	stw	r6,8(r2)
 5089f38:	50933140 	call	5093314 <__malloc_unlock>
 5089f3c:	80800204 	addi	r2,r16,8
 5089f40:	00000306 	br	5089f50 <_malloc_r+0x258>
 5089f44:	00800304 	movi	r2,12
 5089f48:	90800015 	stw	r2,0(r18)
 5089f4c:	0005883a 	mov	r2,zero
 5089f50:	dfc00917 	ldw	ra,36(sp)
 5089f54:	df000817 	ldw	fp,32(sp)
 5089f58:	ddc00717 	ldw	r23,28(sp)
 5089f5c:	dd800617 	ldw	r22,24(sp)
 5089f60:	dd400517 	ldw	r21,20(sp)
 5089f64:	dd000417 	ldw	r20,16(sp)
 5089f68:	dcc00317 	ldw	r19,12(sp)
 5089f6c:	dc800217 	ldw	r18,8(sp)
 5089f70:	dc400117 	ldw	r17,4(sp)
 5089f74:	dc000017 	ldw	r16,0(sp)
 5089f78:	dec00a04 	addi	sp,sp,40
 5089f7c:	f800283a 	ret
 5089f80:	01008004 	movi	r4,512
 5089f84:	01c01004 	movi	r7,64
 5089f88:	02000fc4 	movi	r8,63
 5089f8c:	003f9306 	br	5089ddc <_malloc_r+0xe4>
 5089f90:	14000317 	ldw	r16,12(r2)
 5089f94:	39c00084 	addi	r7,r7,2
 5089f98:	143f721e 	bne	r2,r16,5089d64 <_malloc_r+0x6c>
 5089f9c:	9c000417 	ldw	r16,16(r19)
 5089fa0:	02414274 	movhi	r9,1289
 5089fa4:	4a5abb04 	addi	r9,r9,27372
 5089fa8:	827fa11e 	bne	r16,r9,5089e30 <_malloc_r+0x138>
 5089fac:	3807d0ba 	srai	r3,r7,2
 5089fb0:	01000044 	movi	r4,1
 5089fb4:	98800117 	ldw	r2,4(r19)
 5089fb8:	20c8983a 	sll	r4,r4,r3
 5089fbc:	113fbb2e 	bgeu	r2,r4,5089eac <_malloc_r+0x1b4>
 5089fc0:	9c000217 	ldw	r16,8(r19)
 5089fc4:	00bfff04 	movi	r2,-4
 5089fc8:	85400117 	ldw	r21,4(r16)
 5089fcc:	a8ac703a 	and	r22,r21,r2
 5089fd0:	b4400336 	bltu	r22,r17,5089fe0 <_malloc_r+0x2e8>
 5089fd4:	b445c83a 	sub	r2,r22,r17
 5089fd8:	10c00408 	cmpgei	r3,r2,16
 5089fdc:	1800541e 	bne	r3,zero,508a130 <_malloc_r+0x438>
 5089fe0:	008142b4 	movhi	r2,1290
 5089fe4:	10a09a17 	ldw	r2,-32152(r2)
 5089fe8:	00c142b4 	movhi	r3,1290
 5089fec:	1d67a517 	ldw	r21,-24940(r3)
 5089ff0:	10bfffd8 	cmpnei	r2,r2,-1
 5089ff4:	85b9883a 	add	fp,r16,r22
 5089ff8:	8d6b883a 	add	r21,r17,r21
 5089ffc:	1000d626 	beq	r2,zero,508a358 <_malloc_r+0x660>
 508a000:	ad4403c4 	addi	r21,r21,4111
 508a004:	00bc0004 	movi	r2,-4096
 508a008:	a8aa703a 	and	r21,r21,r2
 508a00c:	a80b883a 	mov	r5,r21
 508a010:	9009883a 	mov	r4,r18
 508a014:	508bf880 	call	508bf88 <_sbrk_r>
 508a018:	102f883a 	mov	r23,r2
 508a01c:	10bfffd8 	cmpnei	r2,r2,-1
 508a020:	1000a826 	beq	r2,zero,508a2c4 <_malloc_r+0x5cc>
 508a024:	bf00a636 	bltu	r23,fp,508a2c0 <_malloc_r+0x5c8>
 508a028:	008142b4 	movhi	r2,1290
 508a02c:	1527b917 	ldw	r20,-24860(r2)
 508a030:	ad29883a 	add	r20,r21,r20
 508a034:	1527b915 	stw	r20,-24860(r2)
 508a038:	a007883a 	mov	r3,r20
 508a03c:	e5c0ec26 	beq	fp,r23,508a3f0 <_malloc_r+0x6f8>
 508a040:	008142b4 	movhi	r2,1290
 508a044:	10a09a17 	ldw	r2,-32152(r2)
 508a048:	10bfffd8 	cmpnei	r2,r2,-1
 508a04c:	1000ef26 	beq	r2,zero,508a40c <_malloc_r+0x714>
 508a050:	bf39c83a 	sub	fp,r23,fp
 508a054:	e0c7883a 	add	r3,fp,r3
 508a058:	008142b4 	movhi	r2,1290
 508a05c:	10e7b915 	stw	r3,-24860(r2)
 508a060:	bf0001cc 	andi	fp,r23,7
 508a064:	e000c526 	beq	fp,zero,508a37c <_malloc_r+0x684>
 508a068:	bf2fc83a 	sub	r23,r23,fp
 508a06c:	bdc00204 	addi	r23,r23,8
 508a070:	05040204 	movi	r20,4104
 508a074:	a729c83a 	sub	r20,r20,fp
 508a078:	bd6b883a 	add	r21,r23,r21
 508a07c:	a569c83a 	sub	r20,r20,r21
 508a080:	a503ffcc 	andi	r20,r20,4095
 508a084:	a00b883a 	mov	r5,r20
 508a088:	9009883a 	mov	r4,r18
 508a08c:	508bf880 	call	508bf88 <_sbrk_r>
 508a090:	10ffffe0 	cmpeqi	r3,r2,-1
 508a094:	1800f31e 	bne	r3,zero,508a464 <_malloc_r+0x76c>
 508a098:	15c5c83a 	sub	r2,r2,r23
 508a09c:	152b883a 	add	r21,r2,r20
 508a0a0:	008142b4 	movhi	r2,1290
 508a0a4:	1167b917 	ldw	r5,-24860(r2)
 508a0a8:	9dc00215 	stw	r23,8(r19)
 508a0ac:	ad400054 	ori	r21,r21,1
 508a0b0:	a169883a 	add	r20,r20,r5
 508a0b4:	1527b915 	stw	r20,-24860(r2)
 508a0b8:	bd400115 	stw	r21,4(r23)
 508a0bc:	84c0d626 	beq	r16,r19,508a418 <_malloc_r+0x720>
 508a0c0:	b0800428 	cmpgeui	r2,r22,16
 508a0c4:	1000d626 	beq	r2,zero,508a420 <_malloc_r+0x728>
 508a0c8:	80c00117 	ldw	r3,4(r16)
 508a0cc:	013ffe04 	movi	r4,-8
 508a0d0:	b0bffd04 	addi	r2,r22,-12
 508a0d4:	1104703a 	and	r2,r2,r4
 508a0d8:	18c0004c 	andi	r3,r3,1
 508a0dc:	1886b03a 	or	r3,r3,r2
 508a0e0:	80c00115 	stw	r3,4(r16)
 508a0e4:	01000144 	movi	r4,5
 508a0e8:	8087883a 	add	r3,r16,r2
 508a0ec:	19000115 	stw	r4,4(r3)
 508a0f0:	19000215 	stw	r4,8(r3)
 508a0f4:	10800428 	cmpgeui	r2,r2,16
 508a0f8:	1000df1e 	bne	r2,zero,508a478 <_malloc_r+0x780>
 508a0fc:	bd400117 	ldw	r21,4(r23)
 508a100:	b821883a 	mov	r16,r23
 508a104:	008142b4 	movhi	r2,1290
 508a108:	10a7a417 	ldw	r2,-24944(r2)
 508a10c:	1500022e 	bgeu	r2,r20,508a118 <_malloc_r+0x420>
 508a110:	008142b4 	movhi	r2,1290
 508a114:	1527a415 	stw	r20,-24944(r2)
 508a118:	008142b4 	movhi	r2,1290
 508a11c:	10a7a317 	ldw	r2,-24948(r2)
 508a120:	15006a2e 	bgeu	r2,r20,508a2cc <_malloc_r+0x5d4>
 508a124:	008142b4 	movhi	r2,1290
 508a128:	1527a315 	stw	r20,-24948(r2)
 508a12c:	00006706 	br	508a2cc <_malloc_r+0x5d4>
 508a130:	88c00054 	ori	r3,r17,1
 508a134:	80c00115 	stw	r3,4(r16)
 508a138:	8463883a 	add	r17,r16,r17
 508a13c:	10800054 	ori	r2,r2,1
 508a140:	9c400215 	stw	r17,8(r19)
 508a144:	88800115 	stw	r2,4(r17)
 508a148:	9009883a 	mov	r4,r18
 508a14c:	50933140 	call	5093314 <__malloc_unlock>
 508a150:	80800204 	addi	r2,r16,8
 508a154:	003f7e06 	br	5089f50 <_malloc_r+0x258>
 508a158:	81000317 	ldw	r4,12(r16)
 508a15c:	003f0506 	br	5089d74 <_malloc_r+0x7c>
 508a160:	1006d27a 	srli	r3,r2,9
 508a164:	19000168 	cmpgeui	r4,r3,5
 508a168:	20005026 	beq	r4,zero,508a2ac <_malloc_r+0x5b4>
 508a16c:	19000568 	cmpgeui	r4,r3,21
 508a170:	20008c1e 	bne	r4,zero,508a3a4 <_malloc_r+0x6ac>
 508a174:	19401704 	addi	r5,r3,92
 508a178:	280a90fa 	slli	r5,r5,3
 508a17c:	190016c4 	addi	r4,r3,91
 508a180:	994b883a 	add	r5,r19,r5
 508a184:	28c00017 	ldw	r3,0(r5)
 508a188:	297ffe04 	addi	r5,r5,-8
 508a18c:	28c07426 	beq	r5,r3,508a360 <_malloc_r+0x668>
 508a190:	01bfff04 	movi	r6,-4
 508a194:	19000117 	ldw	r4,4(r3)
 508a198:	2188703a 	and	r4,r4,r6
 508a19c:	1100022e 	bgeu	r2,r4,508a1a8 <_malloc_r+0x4b0>
 508a1a0:	18c00217 	ldw	r3,8(r3)
 508a1a4:	28fffb1e 	bne	r5,r3,508a194 <_malloc_r+0x49c>
 508a1a8:	19400317 	ldw	r5,12(r3)
 508a1ac:	98800117 	ldw	r2,4(r19)
 508a1b0:	81400315 	stw	r5,12(r16)
 508a1b4:	80c00215 	stw	r3,8(r16)
 508a1b8:	2c000215 	stw	r16,8(r5)
 508a1bc:	1c000315 	stw	r16,12(r3)
 508a1c0:	003f3606 	br	5089e9c <_malloc_r+0x1a4>
 508a1c4:	10c00568 	cmpgeui	r3,r2,21
 508a1c8:	18004a26 	beq	r3,zero,508a2f4 <_malloc_r+0x5fc>
 508a1cc:	10c01568 	cmpgeui	r3,r2,85
 508a1d0:	18007b1e 	bne	r3,zero,508a3c0 <_malloc_r+0x6c8>
 508a1d4:	8804d33a 	srli	r2,r17,12
 508a1d8:	11c01bc4 	addi	r7,r2,111
 508a1dc:	380890fa 	slli	r4,r7,3
 508a1e0:	12001b84 	addi	r8,r2,110
 508a1e4:	003efd06 	br	5089ddc <_malloc_r+0xe4>
 508a1e8:	63000044 	addi	r12,r12,1
 508a1ec:	608000cc 	andi	r2,r12,3
 508a1f0:	42000204 	addi	r8,r8,8
 508a1f4:	103f3e1e 	bne	r2,zero,5089ef0 <_malloc_r+0x1f8>
 508a1f8:	00004506 	br	508a310 <_malloc_r+0x618>
 508a1fc:	81000217 	ldw	r4,8(r16)
 508a200:	89800054 	ori	r6,r17,1
 508a204:	81800115 	stw	r6,4(r16)
 508a208:	20800315 	stw	r2,12(r4)
 508a20c:	11000215 	stw	r4,8(r2)
 508a210:	8463883a 	add	r17,r16,r17
 508a214:	9c400515 	stw	r17,20(r19)
 508a218:	9c400415 	stw	r17,16(r19)
 508a21c:	28800054 	ori	r2,r5,1
 508a220:	88800115 	stw	r2,4(r17)
 508a224:	8a400315 	stw	r9,12(r17)
 508a228:	8a400215 	stw	r9,8(r17)
 508a22c:	80c7883a 	add	r3,r16,r3
 508a230:	19400015 	stw	r5,0(r3)
 508a234:	9009883a 	mov	r4,r18
 508a238:	50933140 	call	5093314 <__malloc_unlock>
 508a23c:	80800204 	addi	r2,r16,8
 508a240:	003f4306 	br	5089f50 <_malloc_r+0x258>
 508a244:	880ed0fa 	srli	r7,r17,3
 508a248:	88800204 	addi	r2,r17,8
 508a24c:	003ebf06 	br	5089d4c <_malloc_r+0x54>
 508a250:	8085883a 	add	r2,r16,r2
 508a254:	10c00117 	ldw	r3,4(r2)
 508a258:	9009883a 	mov	r4,r18
 508a25c:	18c00054 	ori	r3,r3,1
 508a260:	10c00115 	stw	r3,4(r2)
 508a264:	50933140 	call	5093314 <__malloc_unlock>
 508a268:	80800204 	addi	r2,r16,8
 508a26c:	003f3806 	br	5089f50 <_malloc_r+0x258>
 508a270:	89000054 	ori	r4,r17,1
 508a274:	81000115 	stw	r4,4(r16)
 508a278:	8463883a 	add	r17,r16,r17
 508a27c:	9c400515 	stw	r17,20(r19)
 508a280:	9c400415 	stw	r17,16(r19)
 508a284:	19000054 	ori	r4,r3,1
 508a288:	89000115 	stw	r4,4(r17)
 508a28c:	8085883a 	add	r2,r16,r2
 508a290:	8a400315 	stw	r9,12(r17)
 508a294:	8a400215 	stw	r9,8(r17)
 508a298:	10c00015 	stw	r3,0(r2)
 508a29c:	9009883a 	mov	r4,r18
 508a2a0:	50933140 	call	5093314 <__malloc_unlock>
 508a2a4:	80800204 	addi	r2,r16,8
 508a2a8:	003f2906 	br	5089f50 <_malloc_r+0x258>
 508a2ac:	1006d1ba 	srli	r3,r2,6
 508a2b0:	19400e44 	addi	r5,r3,57
 508a2b4:	280a90fa 	slli	r5,r5,3
 508a2b8:	19000e04 	addi	r4,r3,56
 508a2bc:	003fb006 	br	508a180 <_malloc_r+0x488>
 508a2c0:	84c04626 	beq	r16,r19,508a3dc <_malloc_r+0x6e4>
 508a2c4:	9c000217 	ldw	r16,8(r19)
 508a2c8:	85400117 	ldw	r21,4(r16)
 508a2cc:	00bfff04 	movi	r2,-4
 508a2d0:	a8aa703a 	and	r21,r21,r2
 508a2d4:	ac45c83a 	sub	r2,r21,r17
 508a2d8:	ac400236 	bltu	r21,r17,508a2e4 <_malloc_r+0x5ec>
 508a2dc:	10c00408 	cmpgei	r3,r2,16
 508a2e0:	183f931e 	bne	r3,zero,508a130 <_malloc_r+0x438>
 508a2e4:	9009883a 	mov	r4,r18
 508a2e8:	50933140 	call	5093314 <__malloc_unlock>
 508a2ec:	0005883a 	mov	r2,zero
 508a2f0:	003f1706 	br	5089f50 <_malloc_r+0x258>
 508a2f4:	11c01704 	addi	r7,r2,92
 508a2f8:	380890fa 	slli	r4,r7,3
 508a2fc:	120016c4 	addi	r8,r2,91
 508a300:	003eb606 	br	5089ddc <_malloc_r+0xe4>
 508a304:	58800217 	ldw	r2,8(r11)
 508a308:	39ffffc4 	addi	r7,r7,-1
 508a30c:	12c0701e 	bne	r2,r11,508a4d0 <_malloc_r+0x7d8>
 508a310:	388000cc 	andi	r2,r7,3
 508a314:	5afffe04 	addi	r11,r11,-8
 508a318:	103ffa1e 	bne	r2,zero,508a304 <_malloc_r+0x60c>
 508a31c:	98c00117 	ldw	r3,4(r19)
 508a320:	0104303a 	nor	r2,zero,r4
 508a324:	10c4703a 	and	r2,r2,r3
 508a328:	98800115 	stw	r2,4(r19)
 508a32c:	2109883a 	add	r4,r4,r4
 508a330:	113f2336 	bltu	r2,r4,5089fc0 <_malloc_r+0x2c8>
 508a334:	203f2226 	beq	r4,zero,5089fc0 <_malloc_r+0x2c8>
 508a338:	2086703a 	and	r3,r4,r2
 508a33c:	1800041e 	bne	r3,zero,508a350 <_malloc_r+0x658>
 508a340:	2109883a 	add	r4,r4,r4
 508a344:	2086703a 	and	r3,r4,r2
 508a348:	63000104 	addi	r12,r12,4
 508a34c:	183ffc26 	beq	r3,zero,508a340 <_malloc_r+0x648>
 508a350:	600f883a 	mov	r7,r12
 508a354:	003ee206 	br	5089ee0 <_malloc_r+0x1e8>
 508a358:	ad400404 	addi	r21,r21,16
 508a35c:	003f2b06 	br	508a00c <_malloc_r+0x314>
 508a360:	2009d0ba 	srai	r4,r4,2
 508a364:	00800044 	movi	r2,1
 508a368:	99800117 	ldw	r6,4(r19)
 508a36c:	1104983a 	sll	r2,r2,r4
 508a370:	1184b03a 	or	r2,r2,r6
 508a374:	98800115 	stw	r2,4(r19)
 508a378:	003f8d06 	br	508a1b0 <_malloc_r+0x4b8>
 508a37c:	bd69883a 	add	r20,r23,r21
 508a380:	0529c83a 	sub	r20,zero,r20
 508a384:	a503ffcc 	andi	r20,r20,4095
 508a388:	a00b883a 	mov	r5,r20
 508a38c:	9009883a 	mov	r4,r18
 508a390:	508bf880 	call	508bf88 <_sbrk_r>
 508a394:	10ffffe0 	cmpeqi	r3,r2,-1
 508a398:	183f3f26 	beq	r3,zero,508a098 <_malloc_r+0x3a0>
 508a39c:	0029883a 	mov	r20,zero
 508a3a0:	003f3f06 	br	508a0a0 <_malloc_r+0x3a8>
 508a3a4:	19001568 	cmpgeui	r4,r3,85
 508a3a8:	2000201e 	bne	r4,zero,508a42c <_malloc_r+0x734>
 508a3ac:	1006d33a 	srli	r3,r2,12
 508a3b0:	19401bc4 	addi	r5,r3,111
 508a3b4:	280a90fa 	slli	r5,r5,3
 508a3b8:	19001b84 	addi	r4,r3,110
 508a3bc:	003f7006 	br	508a180 <_malloc_r+0x488>
 508a3c0:	10c05568 	cmpgeui	r3,r2,341
 508a3c4:	1800201e 	bne	r3,zero,508a448 <_malloc_r+0x750>
 508a3c8:	8804d3fa 	srli	r2,r17,15
 508a3cc:	11c01e04 	addi	r7,r2,120
 508a3d0:	380890fa 	slli	r4,r7,3
 508a3d4:	12001dc4 	addi	r8,r2,119
 508a3d8:	003e8006 	br	5089ddc <_malloc_r+0xe4>
 508a3dc:	008142b4 	movhi	r2,1290
 508a3e0:	10e7b917 	ldw	r3,-24860(r2)
 508a3e4:	a8c7883a 	add	r3,r21,r3
 508a3e8:	10e7b915 	stw	r3,-24860(r2)
 508a3ec:	003f1406 	br	508a040 <_malloc_r+0x348>
 508a3f0:	e083ffcc 	andi	r2,fp,4095
 508a3f4:	103f121e 	bne	r2,zero,508a040 <_malloc_r+0x348>
 508a3f8:	9c000217 	ldw	r16,8(r19)
 508a3fc:	b56b883a 	add	r21,r22,r21
 508a400:	ad400054 	ori	r21,r21,1
 508a404:	85400115 	stw	r21,4(r16)
 508a408:	003f3e06 	br	508a104 <_malloc_r+0x40c>
 508a40c:	008142b4 	movhi	r2,1290
 508a410:	15e09a15 	stw	r23,-32152(r2)
 508a414:	003f1206 	br	508a060 <_malloc_r+0x368>
 508a418:	b821883a 	mov	r16,r23
 508a41c:	003f3906 	br	508a104 <_malloc_r+0x40c>
 508a420:	00800044 	movi	r2,1
 508a424:	b8800115 	stw	r2,4(r23)
 508a428:	003fae06 	br	508a2e4 <_malloc_r+0x5ec>
 508a42c:	19005568 	cmpgeui	r4,r3,341
 508a430:	2000191e 	bne	r4,zero,508a498 <_malloc_r+0x7a0>
 508a434:	1006d3fa 	srli	r3,r2,15
 508a438:	19401e04 	addi	r5,r3,120
 508a43c:	280a90fa 	slli	r5,r5,3
 508a440:	19001dc4 	addi	r4,r3,119
 508a444:	003f4e06 	br	508a180 <_malloc_r+0x488>
 508a448:	10815568 	cmpgeui	r2,r2,1365
 508a44c:	1000191e 	bne	r2,zero,508a4b4 <_malloc_r+0x7bc>
 508a450:	8804d4ba 	srli	r2,r17,18
 508a454:	11c01f44 	addi	r7,r2,125
 508a458:	380890fa 	slli	r4,r7,3
 508a45c:	12001f04 	addi	r8,r2,124
 508a460:	003e5e06 	br	5089ddc <_malloc_r+0xe4>
 508a464:	e73ffe04 	addi	fp,fp,-8
 508a468:	af2b883a 	add	r21,r21,fp
 508a46c:	adebc83a 	sub	r21,r21,r23
 508a470:	0029883a 	mov	r20,zero
 508a474:	003f0a06 	br	508a0a0 <_malloc_r+0x3a8>
 508a478:	81400204 	addi	r5,r16,8
 508a47c:	9009883a 	mov	r4,r18
 508a480:	508919c0 	call	508919c <_free_r>
 508a484:	9c000217 	ldw	r16,8(r19)
 508a488:	008142b4 	movhi	r2,1290
 508a48c:	1527b917 	ldw	r20,-24860(r2)
 508a490:	85400117 	ldw	r21,4(r16)
 508a494:	003f1b06 	br	508a104 <_malloc_r+0x40c>
 508a498:	18c15568 	cmpgeui	r3,r3,1365
 508a49c:	1800091e 	bne	r3,zero,508a4c4 <_malloc_r+0x7cc>
 508a4a0:	1006d4ba 	srli	r3,r2,18
 508a4a4:	19401f44 	addi	r5,r3,125
 508a4a8:	280a90fa 	slli	r5,r5,3
 508a4ac:	19001f04 	addi	r4,r3,124
 508a4b0:	003f3306 	br	508a180 <_malloc_r+0x488>
 508a4b4:	0100fe04 	movi	r4,1016
 508a4b8:	01c01fc4 	movi	r7,127
 508a4bc:	02001f84 	movi	r8,126
 508a4c0:	003e4606 	br	5089ddc <_malloc_r+0xe4>
 508a4c4:	0140fe04 	movi	r5,1016
 508a4c8:	01001f84 	movi	r4,126
 508a4cc:	003f2c06 	br	508a180 <_malloc_r+0x488>
 508a4d0:	98800117 	ldw	r2,4(r19)
 508a4d4:	003f9506 	br	508a32c <_malloc_r+0x634>

0508a4d8 <memchr>:
 508a4d8:	208000cc 	andi	r2,r4,3
 508a4dc:	280f883a 	mov	r7,r5
 508a4e0:	10000e26 	beq	r2,zero,508a51c <memchr+0x44>
 508a4e4:	30bfffc4 	addi	r2,r6,-1
 508a4e8:	30001726 	beq	r6,zero,508a548 <memchr+0x70>
 508a4ec:	29803fcc 	andi	r6,r5,255
 508a4f0:	00000606 	br	508a50c <memchr+0x34>
 508a4f4:	21000044 	addi	r4,r4,1
 508a4f8:	20c000cc 	andi	r3,r4,3
 508a4fc:	18000826 	beq	r3,zero,508a520 <memchr+0x48>
 508a500:	10bfffc4 	addi	r2,r2,-1
 508a504:	10ffffe0 	cmpeqi	r3,r2,-1
 508a508:	18000f1e 	bne	r3,zero,508a548 <memchr+0x70>
 508a50c:	20c00003 	ldbu	r3,0(r4)
 508a510:	19bff81e 	bne	r3,r6,508a4f4 <memchr+0x1c>
 508a514:	2005883a 	mov	r2,r4
 508a518:	f800283a 	ret
 508a51c:	3005883a 	mov	r2,r6
 508a520:	10c00128 	cmpgeui	r3,r2,4
 508a524:	18000a1e 	bne	r3,zero,508a550 <memchr+0x78>
 508a528:	10001e26 	beq	r2,zero,508a5a4 <memchr+0xcc>
 508a52c:	2087883a 	add	r3,r4,r2
 508a530:	39803fcc 	andi	r6,r7,255
 508a534:	2005883a 	mov	r2,r4
 508a538:	11000003 	ldbu	r4,0(r2)
 508a53c:	21bff626 	beq	r4,r6,508a518 <memchr+0x40>
 508a540:	10800044 	addi	r2,r2,1
 508a544:	18bffc1e 	bne	r3,r2,508a538 <memchr+0x60>
 508a548:	0005883a 	mov	r2,zero
 508a54c:	f800283a 	ret
 508a550:	29403fcc 	andi	r5,r5,255
 508a554:	280c923a 	slli	r6,r5,8
 508a558:	027fbff4 	movhi	r9,65279
 508a55c:	02202074 	movhi	r8,32897
 508a560:	314ab03a 	or	r5,r6,r5
 508a564:	280c943a 	slli	r6,r5,16
 508a568:	4a7fbfc4 	addi	r9,r9,-257
 508a56c:	42202004 	addi	r8,r8,-32640
 508a570:	314cb03a 	or	r6,r6,r5
 508a574:	20c00017 	ldw	r3,0(r4)
 508a578:	30c6f03a 	xor	r3,r6,r3
 508a57c:	1a4b883a 	add	r5,r3,r9
 508a580:	00c6303a 	nor	r3,zero,r3
 508a584:	28c6703a 	and	r3,r5,r3
 508a588:	1a06703a 	and	r3,r3,r8
 508a58c:	183fe71e 	bne	r3,zero,508a52c <memchr+0x54>
 508a590:	10bfff04 	addi	r2,r2,-4
 508a594:	10c00128 	cmpgeui	r3,r2,4
 508a598:	21000104 	addi	r4,r4,4
 508a59c:	183ff51e 	bne	r3,zero,508a574 <memchr+0x9c>
 508a5a0:	003fe106 	br	508a528 <memchr+0x50>
 508a5a4:	f800283a 	ret

0508a5a8 <memcpy>:
 508a5a8:	30c00430 	cmpltui	r3,r6,16
 508a5ac:	2005883a 	mov	r2,r4
 508a5b0:	18002d1e 	bne	r3,zero,508a668 <memcpy+0xc0>
 508a5b4:	2906b03a 	or	r3,r5,r4
 508a5b8:	18c000cc 	andi	r3,r3,3
 508a5bc:	1800351e 	bne	r3,zero,508a694 <memcpy+0xec>
 508a5c0:	32fffc04 	addi	r11,r6,-16
 508a5c4:	5816d13a 	srli	r11,r11,4
 508a5c8:	280f883a 	mov	r7,r5
 508a5cc:	2007883a 	mov	r3,r4
 508a5d0:	5ac00044 	addi	r11,r11,1
 508a5d4:	5816913a 	slli	r11,r11,4
 508a5d8:	22d5883a 	add	r10,r4,r11
 508a5dc:	39000117 	ldw	r4,4(r7)
 508a5e0:	3a400017 	ldw	r9,0(r7)
 508a5e4:	3a000217 	ldw	r8,8(r7)
 508a5e8:	19000115 	stw	r4,4(r3)
 508a5ec:	39000317 	ldw	r4,12(r7)
 508a5f0:	1a400015 	stw	r9,0(r3)
 508a5f4:	1a000215 	stw	r8,8(r3)
 508a5f8:	19000315 	stw	r4,12(r3)
 508a5fc:	18c00404 	addi	r3,r3,16
 508a600:	39c00404 	addi	r7,r7,16
 508a604:	50fff51e 	bne	r10,r3,508a5dc <memcpy+0x34>
 508a608:	3100030c 	andi	r4,r6,12
 508a60c:	2acb883a 	add	r5,r5,r11
 508a610:	320003cc 	andi	r8,r6,15
 508a614:	20002226 	beq	r4,zero,508a6a0 <memcpy+0xf8>
 508a618:	280f883a 	mov	r7,r5
 508a61c:	1813883a 	mov	r9,r3
 508a620:	39c00104 	addi	r7,r7,4
 508a624:	3abfff17 	ldw	r10,-4(r7)
 508a628:	41c9c83a 	sub	r4,r8,r7
 508a62c:	2909883a 	add	r4,r5,r4
 508a630:	4a800015 	stw	r10,0(r9)
 508a634:	21000128 	cmpgeui	r4,r4,4
 508a638:	4a400104 	addi	r9,r9,4
 508a63c:	203ff81e 	bne	r4,zero,508a620 <memcpy+0x78>
 508a640:	413fff04 	addi	r4,r8,-4
 508a644:	2008d0ba 	srli	r4,r4,2
 508a648:	318000cc 	andi	r6,r6,3
 508a64c:	31ffffc4 	addi	r7,r6,-1
 508a650:	21000044 	addi	r4,r4,1
 508a654:	200890ba 	slli	r4,r4,2
 508a658:	1907883a 	add	r3,r3,r4
 508a65c:	290b883a 	add	r5,r5,r4
 508a660:	3000041e 	bne	r6,zero,508a674 <memcpy+0xcc>
 508a664:	f800283a 	ret
 508a668:	2007883a 	mov	r3,r4
 508a66c:	31ffffc4 	addi	r7,r6,-1
 508a670:	303ffc26 	beq	r6,zero,508a664 <memcpy+0xbc>
 508a674:	39c00044 	addi	r7,r7,1
 508a678:	19cf883a 	add	r7,r3,r7
 508a67c:	29800003 	ldbu	r6,0(r5)
 508a680:	18c00044 	addi	r3,r3,1
 508a684:	29400044 	addi	r5,r5,1
 508a688:	19bfffc5 	stb	r6,-1(r3)
 508a68c:	38fffb1e 	bne	r7,r3,508a67c <memcpy+0xd4>
 508a690:	f800283a 	ret
 508a694:	31ffffc4 	addi	r7,r6,-1
 508a698:	2007883a 	mov	r3,r4
 508a69c:	003ff506 	br	508a674 <memcpy+0xcc>
 508a6a0:	400d883a 	mov	r6,r8
 508a6a4:	003ff106 	br	508a66c <memcpy+0xc4>

0508a6a8 <memmove>:
 508a6a8:	2005883a 	mov	r2,r4
 508a6ac:	29000a2e 	bgeu	r5,r4,508a6d8 <memmove+0x30>
 508a6b0:	2989883a 	add	r4,r5,r6
 508a6b4:	1100082e 	bgeu	r2,r4,508a6d8 <memmove+0x30>
 508a6b8:	1187883a 	add	r3,r2,r6
 508a6bc:	30003e26 	beq	r6,zero,508a7b8 <memmove+0x110>
 508a6c0:	217fffc3 	ldbu	r5,-1(r4)
 508a6c4:	18ffffc4 	addi	r3,r3,-1
 508a6c8:	213fffc4 	addi	r4,r4,-1
 508a6cc:	19400005 	stb	r5,0(r3)
 508a6d0:	10fffb1e 	bne	r2,r3,508a6c0 <memmove+0x18>
 508a6d4:	f800283a 	ret
 508a6d8:	30c00430 	cmpltui	r3,r6,16
 508a6dc:	18000b26 	beq	r3,zero,508a70c <memmove+0x64>
 508a6e0:	1007883a 	mov	r3,r2
 508a6e4:	31ffffc4 	addi	r7,r6,-1
 508a6e8:	30003726 	beq	r6,zero,508a7c8 <memmove+0x120>
 508a6ec:	39c00044 	addi	r7,r7,1
 508a6f0:	29cf883a 	add	r7,r5,r7
 508a6f4:	29800003 	ldbu	r6,0(r5)
 508a6f8:	29400044 	addi	r5,r5,1
 508a6fc:	18c00044 	addi	r3,r3,1
 508a700:	19bfffc5 	stb	r6,-1(r3)
 508a704:	29fffb1e 	bne	r5,r7,508a6f4 <memmove+0x4c>
 508a708:	f800283a 	ret
 508a70c:	2886b03a 	or	r3,r5,r2
 508a710:	18c000cc 	andi	r3,r3,3
 508a714:	1800291e 	bne	r3,zero,508a7bc <memmove+0x114>
 508a718:	327ffc04 	addi	r9,r6,-16
 508a71c:	4812d13a 	srli	r9,r9,4
 508a720:	280f883a 	mov	r7,r5
 508a724:	1007883a 	mov	r3,r2
 508a728:	4a400044 	addi	r9,r9,1
 508a72c:	4812913a 	slli	r9,r9,4
 508a730:	1251883a 	add	r8,r2,r9
 508a734:	39000017 	ldw	r4,0(r7)
 508a738:	39c00404 	addi	r7,r7,16
 508a73c:	18c00404 	addi	r3,r3,16
 508a740:	193ffc15 	stw	r4,-16(r3)
 508a744:	393ffd17 	ldw	r4,-12(r7)
 508a748:	193ffd15 	stw	r4,-12(r3)
 508a74c:	393ffe17 	ldw	r4,-8(r7)
 508a750:	193ffe15 	stw	r4,-8(r3)
 508a754:	393fff17 	ldw	r4,-4(r7)
 508a758:	193fff15 	stw	r4,-4(r3)
 508a75c:	40fff51e 	bne	r8,r3,508a734 <memmove+0x8c>
 508a760:	3100030c 	andi	r4,r6,12
 508a764:	2a4b883a 	add	r5,r5,r9
 508a768:	320003cc 	andi	r8,r6,15
 508a76c:	20001726 	beq	r4,zero,508a7cc <memmove+0x124>
 508a770:	2813883a 	mov	r9,r5
 508a774:	180f883a 	mov	r7,r3
 508a778:	4a800017 	ldw	r10,0(r9)
 508a77c:	39c00104 	addi	r7,r7,4
 508a780:	41c9c83a 	sub	r4,r8,r7
 508a784:	1909883a 	add	r4,r3,r4
 508a788:	21000128 	cmpgeui	r4,r4,4
 508a78c:	3abfff15 	stw	r10,-4(r7)
 508a790:	4a400104 	addi	r9,r9,4
 508a794:	203ff81e 	bne	r4,zero,508a778 <memmove+0xd0>
 508a798:	413fff04 	addi	r4,r8,-4
 508a79c:	2008d0ba 	srli	r4,r4,2
 508a7a0:	318000cc 	andi	r6,r6,3
 508a7a4:	21000044 	addi	r4,r4,1
 508a7a8:	200890ba 	slli	r4,r4,2
 508a7ac:	1907883a 	add	r3,r3,r4
 508a7b0:	290b883a 	add	r5,r5,r4
 508a7b4:	003fcb06 	br	508a6e4 <memmove+0x3c>
 508a7b8:	f800283a 	ret
 508a7bc:	31ffffc4 	addi	r7,r6,-1
 508a7c0:	1007883a 	mov	r3,r2
 508a7c4:	003fc906 	br	508a6ec <memmove+0x44>
 508a7c8:	f800283a 	ret
 508a7cc:	400d883a 	mov	r6,r8
 508a7d0:	003fc406 	br	508a6e4 <memmove+0x3c>

0508a7d4 <memset>:
 508a7d4:	20c000cc 	andi	r3,r4,3
 508a7d8:	2005883a 	mov	r2,r4
 508a7dc:	18003626 	beq	r3,zero,508a8b8 <memset+0xe4>
 508a7e0:	31ffffc4 	addi	r7,r6,-1
 508a7e4:	30003326 	beq	r6,zero,508a8b4 <memset+0xe0>
 508a7e8:	2811883a 	mov	r8,r5
 508a7ec:	2007883a 	mov	r3,r4
 508a7f0:	00000306 	br	508a800 <memset+0x2c>
 508a7f4:	39ffffc4 	addi	r7,r7,-1
 508a7f8:	39bfffe0 	cmpeqi	r6,r7,-1
 508a7fc:	30002d1e 	bne	r6,zero,508a8b4 <memset+0xe0>
 508a800:	18c00044 	addi	r3,r3,1
 508a804:	198000cc 	andi	r6,r3,3
 508a808:	1a3fffc5 	stb	r8,-1(r3)
 508a80c:	303ff91e 	bne	r6,zero,508a7f4 <memset+0x20>
 508a810:	39000130 	cmpltui	r4,r7,4
 508a814:	2000221e 	bne	r4,zero,508a8a0 <memset+0xcc>
 508a818:	29003fcc 	andi	r4,r5,255
 508a81c:	200c923a 	slli	r6,r4,8
 508a820:	3a000430 	cmpltui	r8,r7,16
 508a824:	3108b03a 	or	r4,r6,r4
 508a828:	200c943a 	slli	r6,r4,16
 508a82c:	310cb03a 	or	r6,r6,r4
 508a830:	40000e1e 	bne	r8,zero,508a86c <memset+0x98>
 508a834:	393ffc04 	addi	r4,r7,-16
 508a838:	2008d13a 	srli	r4,r4,4
 508a83c:	21000044 	addi	r4,r4,1
 508a840:	2008913a 	slli	r4,r4,4
 508a844:	1909883a 	add	r4,r3,r4
 508a848:	19800015 	stw	r6,0(r3)
 508a84c:	19800115 	stw	r6,4(r3)
 508a850:	19800215 	stw	r6,8(r3)
 508a854:	19800315 	stw	r6,12(r3)
 508a858:	18c00404 	addi	r3,r3,16
 508a85c:	20fffa1e 	bne	r4,r3,508a848 <memset+0x74>
 508a860:	3900030c 	andi	r4,r7,12
 508a864:	39c003cc 	andi	r7,r7,15
 508a868:	20000d26 	beq	r4,zero,508a8a0 <memset+0xcc>
 508a86c:	1811883a 	mov	r8,r3
 508a870:	42000104 	addi	r8,r8,4
 508a874:	3a09c83a 	sub	r4,r7,r8
 508a878:	1909883a 	add	r4,r3,r4
 508a87c:	21000128 	cmpgeui	r4,r4,4
 508a880:	41bfff15 	stw	r6,-4(r8)
 508a884:	203ffa1e 	bne	r4,zero,508a870 <memset+0x9c>
 508a888:	393fff04 	addi	r4,r7,-4
 508a88c:	2008d0ba 	srli	r4,r4,2
 508a890:	39c000cc 	andi	r7,r7,3
 508a894:	21000044 	addi	r4,r4,1
 508a898:	200890ba 	slli	r4,r4,2
 508a89c:	1907883a 	add	r3,r3,r4
 508a8a0:	38000426 	beq	r7,zero,508a8b4 <memset+0xe0>
 508a8a4:	19cf883a 	add	r7,r3,r7
 508a8a8:	18c00044 	addi	r3,r3,1
 508a8ac:	197fffc5 	stb	r5,-1(r3)
 508a8b0:	38fffd1e 	bne	r7,r3,508a8a8 <memset+0xd4>
 508a8b4:	f800283a 	ret
 508a8b8:	2007883a 	mov	r3,r4
 508a8bc:	300f883a 	mov	r7,r6
 508a8c0:	003fd306 	br	508a810 <memset+0x3c>

0508a8c4 <_Balloc>:
 508a8c4:	20801317 	ldw	r2,76(r4)
 508a8c8:	defffc04 	addi	sp,sp,-16
 508a8cc:	dc400115 	stw	r17,4(sp)
 508a8d0:	dc000015 	stw	r16,0(sp)
 508a8d4:	dfc00315 	stw	ra,12(sp)
 508a8d8:	dc800215 	stw	r18,8(sp)
 508a8dc:	2021883a 	mov	r16,r4
 508a8e0:	2823883a 	mov	r17,r5
 508a8e4:	10000e26 	beq	r2,zero,508a920 <_Balloc+0x5c>
 508a8e8:	880690ba 	slli	r3,r17,2
 508a8ec:	10c7883a 	add	r3,r2,r3
 508a8f0:	18800017 	ldw	r2,0(r3)
 508a8f4:	10001126 	beq	r2,zero,508a93c <_Balloc+0x78>
 508a8f8:	11000017 	ldw	r4,0(r2)
 508a8fc:	19000015 	stw	r4,0(r3)
 508a900:	10000415 	stw	zero,16(r2)
 508a904:	10000315 	stw	zero,12(r2)
 508a908:	dfc00317 	ldw	ra,12(sp)
 508a90c:	dc800217 	ldw	r18,8(sp)
 508a910:	dc400117 	ldw	r17,4(sp)
 508a914:	dc000017 	ldw	r16,0(sp)
 508a918:	dec00404 	addi	sp,sp,16
 508a91c:	f800283a 	ret
 508a920:	01800844 	movi	r6,33
 508a924:	01400104 	movi	r5,4
 508a928:	508ea180 	call	508ea18 <_calloc_r>
 508a92c:	80801315 	stw	r2,76(r16)
 508a930:	103fed1e 	bne	r2,zero,508a8e8 <_Balloc+0x24>
 508a934:	0005883a 	mov	r2,zero
 508a938:	003ff306 	br	508a908 <_Balloc+0x44>
 508a93c:	04800044 	movi	r18,1
 508a940:	9464983a 	sll	r18,r18,r17
 508a944:	01400044 	movi	r5,1
 508a948:	8009883a 	mov	r4,r16
 508a94c:	91800144 	addi	r6,r18,5
 508a950:	300c90ba 	slli	r6,r6,2
 508a954:	508ea180 	call	508ea18 <_calloc_r>
 508a958:	103ff626 	beq	r2,zero,508a934 <_Balloc+0x70>
 508a95c:	14400115 	stw	r17,4(r2)
 508a960:	14800215 	stw	r18,8(r2)
 508a964:	003fe606 	br	508a900 <_Balloc+0x3c>

0508a968 <_Bfree>:
 508a968:	28000726 	beq	r5,zero,508a988 <_Bfree+0x20>
 508a96c:	28c00117 	ldw	r3,4(r5)
 508a970:	20801317 	ldw	r2,76(r4)
 508a974:	180690ba 	slli	r3,r3,2
 508a978:	10c5883a 	add	r2,r2,r3
 508a97c:	10c00017 	ldw	r3,0(r2)
 508a980:	28c00015 	stw	r3,0(r5)
 508a984:	11400015 	stw	r5,0(r2)
 508a988:	f800283a 	ret

0508a98c <__multadd>:
 508a98c:	defffa04 	addi	sp,sp,-24
 508a990:	dc400115 	stw	r17,4(sp)
 508a994:	2c400417 	ldw	r17,16(r5)
 508a998:	dcc00315 	stw	r19,12(sp)
 508a99c:	dc800215 	stw	r18,8(sp)
 508a9a0:	dc000015 	stw	r16,0(sp)
 508a9a4:	dfc00515 	stw	ra,20(sp)
 508a9a8:	dd000415 	stw	r20,16(sp)
 508a9ac:	2825883a 	mov	r18,r5
 508a9b0:	2027883a 	mov	r19,r4
 508a9b4:	3821883a 	mov	r16,r7
 508a9b8:	2a400504 	addi	r9,r5,20
 508a9bc:	0015883a 	mov	r10,zero
 508a9c0:	48c00017 	ldw	r3,0(r9)
 508a9c4:	4a400104 	addi	r9,r9,4
 508a9c8:	52800044 	addi	r10,r10,1
 508a9cc:	1a3fffcc 	andi	r8,r3,65535
 508a9d0:	4191383a 	mul	r8,r8,r6
 508a9d4:	180ed43a 	srli	r7,r3,16
 508a9d8:	4407883a 	add	r3,r8,r16
 508a9dc:	1810d43a 	srli	r8,r3,16
 508a9e0:	398f383a 	mul	r7,r7,r6
 508a9e4:	18ffffcc 	andi	r3,r3,65535
 508a9e8:	3a0f883a 	add	r7,r7,r8
 508a9ec:	3810943a 	slli	r8,r7,16
 508a9f0:	3820d43a 	srli	r16,r7,16
 508a9f4:	40c7883a 	add	r3,r8,r3
 508a9f8:	48ffff15 	stw	r3,-4(r9)
 508a9fc:	547ff016 	blt	r10,r17,508a9c0 <__multadd+0x34>
 508aa00:	80000826 	beq	r16,zero,508aa24 <__multadd+0x98>
 508aa04:	90800217 	ldw	r2,8(r18)
 508aa08:	88800f0e 	bge	r17,r2,508aa48 <__multadd+0xbc>
 508aa0c:	88800144 	addi	r2,r17,5
 508aa10:	100490ba 	slli	r2,r2,2
 508aa14:	8c400044 	addi	r17,r17,1
 508aa18:	9085883a 	add	r2,r18,r2
 508aa1c:	14000015 	stw	r16,0(r2)
 508aa20:	94400415 	stw	r17,16(r18)
 508aa24:	9005883a 	mov	r2,r18
 508aa28:	dfc00517 	ldw	ra,20(sp)
 508aa2c:	dd000417 	ldw	r20,16(sp)
 508aa30:	dcc00317 	ldw	r19,12(sp)
 508aa34:	dc800217 	ldw	r18,8(sp)
 508aa38:	dc400117 	ldw	r17,4(sp)
 508aa3c:	dc000017 	ldw	r16,0(sp)
 508aa40:	dec00604 	addi	sp,sp,24
 508aa44:	f800283a 	ret
 508aa48:	91400117 	ldw	r5,4(r18)
 508aa4c:	9809883a 	mov	r4,r19
 508aa50:	29400044 	addi	r5,r5,1
 508aa54:	508a8c40 	call	508a8c4 <_Balloc>
 508aa58:	1029883a 	mov	r20,r2
 508aa5c:	10001226 	beq	r2,zero,508aaa8 <__multadd+0x11c>
 508aa60:	91800417 	ldw	r6,16(r18)
 508aa64:	91400304 	addi	r5,r18,12
 508aa68:	11000304 	addi	r4,r2,12
 508aa6c:	31800084 	addi	r6,r6,2
 508aa70:	300c90ba 	slli	r6,r6,2
 508aa74:	508a5a80 	call	508a5a8 <memcpy>
 508aa78:	90000926 	beq	r18,zero,508aaa0 <__multadd+0x114>
 508aa7c:	90c00117 	ldw	r3,4(r18)
 508aa80:	98801317 	ldw	r2,76(r19)
 508aa84:	180690ba 	slli	r3,r3,2
 508aa88:	10c5883a 	add	r2,r2,r3
 508aa8c:	10c00017 	ldw	r3,0(r2)
 508aa90:	90c00015 	stw	r3,0(r18)
 508aa94:	14800015 	stw	r18,0(r2)
 508aa98:	a025883a 	mov	r18,r20
 508aa9c:	003fdb06 	br	508aa0c <__multadd+0x80>
 508aaa0:	a025883a 	mov	r18,r20
 508aaa4:	003fd906 	br	508aa0c <__multadd+0x80>
 508aaa8:	01c14274 	movhi	r7,1289
 508aaac:	01014274 	movhi	r4,1289
 508aab0:	39d83004 	addi	r7,r7,24768
 508aab4:	000d883a 	mov	r6,zero
 508aab8:	01402d44 	movi	r5,181
 508aabc:	21184404 	addi	r4,r4,24848
 508aac0:	508e9a00 	call	508e9a0 <__assert_func>

0508aac4 <__s2b>:
 508aac4:	defff904 	addi	sp,sp,-28
 508aac8:	dc800215 	stw	r18,8(sp)
 508aacc:	dc000015 	stw	r16,0(sp)
 508aad0:	2025883a 	mov	r18,r4
 508aad4:	2821883a 	mov	r16,r5
 508aad8:	39000204 	addi	r4,r7,8
 508aadc:	01400244 	movi	r5,9
 508aae0:	dcc00315 	stw	r19,12(sp)
 508aae4:	dc400115 	stw	r17,4(sp)
 508aae8:	dfc00615 	stw	ra,24(sp)
 508aaec:	3823883a 	mov	r17,r7
 508aaf0:	dd400515 	stw	r21,20(sp)
 508aaf4:	dd000415 	stw	r20,16(sp)
 508aaf8:	3027883a 	mov	r19,r6
 508aafc:	508270c0 	call	508270c <__divsi3>
 508ab00:	88c00290 	cmplti	r3,r17,10
 508ab04:	1800341e 	bne	r3,zero,508abd8 <__s2b+0x114>
 508ab08:	00c00044 	movi	r3,1
 508ab0c:	000b883a 	mov	r5,zero
 508ab10:	18c7883a 	add	r3,r3,r3
 508ab14:	29400044 	addi	r5,r5,1
 508ab18:	18bffd16 	blt	r3,r2,508ab10 <__s2b+0x4c>
 508ab1c:	9009883a 	mov	r4,r18
 508ab20:	508a8c40 	call	508a8c4 <_Balloc>
 508ab24:	100b883a 	mov	r5,r2
 508ab28:	10002d26 	beq	r2,zero,508abe0 <__s2b+0x11c>
 508ab2c:	d8800717 	ldw	r2,28(sp)
 508ab30:	28800515 	stw	r2,20(r5)
 508ab34:	00800044 	movi	r2,1
 508ab38:	28800415 	stw	r2,16(r5)
 508ab3c:	98800290 	cmplti	r2,r19,10
 508ab40:	1000221e 	bne	r2,zero,508abcc <__s2b+0x108>
 508ab44:	85400244 	addi	r21,r16,9
 508ab48:	a829883a 	mov	r20,r21
 508ab4c:	84e1883a 	add	r16,r16,r19
 508ab50:	a1c00007 	ldb	r7,0(r20)
 508ab54:	01800284 	movi	r6,10
 508ab58:	9009883a 	mov	r4,r18
 508ab5c:	39fff404 	addi	r7,r7,-48
 508ab60:	508a98c0 	call	508a98c <__multadd>
 508ab64:	a5000044 	addi	r20,r20,1
 508ab68:	100b883a 	mov	r5,r2
 508ab6c:	a43ff81e 	bne	r20,r16,508ab50 <__s2b+0x8c>
 508ab70:	9c3ffe04 	addi	r16,r19,-8
 508ab74:	ac21883a 	add	r16,r21,r16
 508ab78:	9c400a0e 	bge	r19,r17,508aba4 <__s2b+0xe0>
 508ab7c:	8ce3c83a 	sub	r17,r17,r19
 508ab80:	8463883a 	add	r17,r16,r17
 508ab84:	81c00007 	ldb	r7,0(r16)
 508ab88:	01800284 	movi	r6,10
 508ab8c:	9009883a 	mov	r4,r18
 508ab90:	39fff404 	addi	r7,r7,-48
 508ab94:	508a98c0 	call	508a98c <__multadd>
 508ab98:	84000044 	addi	r16,r16,1
 508ab9c:	100b883a 	mov	r5,r2
 508aba0:	8c3ff81e 	bne	r17,r16,508ab84 <__s2b+0xc0>
 508aba4:	2805883a 	mov	r2,r5
 508aba8:	dfc00617 	ldw	ra,24(sp)
 508abac:	dd400517 	ldw	r21,20(sp)
 508abb0:	dd000417 	ldw	r20,16(sp)
 508abb4:	dcc00317 	ldw	r19,12(sp)
 508abb8:	dc800217 	ldw	r18,8(sp)
 508abbc:	dc400117 	ldw	r17,4(sp)
 508abc0:	dc000017 	ldw	r16,0(sp)
 508abc4:	dec00704 	addi	sp,sp,28
 508abc8:	f800283a 	ret
 508abcc:	84000284 	addi	r16,r16,10
 508abd0:	04c00244 	movi	r19,9
 508abd4:	003fe806 	br	508ab78 <__s2b+0xb4>
 508abd8:	000b883a 	mov	r5,zero
 508abdc:	003fcf06 	br	508ab1c <__s2b+0x58>
 508abe0:	01c14274 	movhi	r7,1289
 508abe4:	01014274 	movhi	r4,1289
 508abe8:	39d83004 	addi	r7,r7,24768
 508abec:	000d883a 	mov	r6,zero
 508abf0:	01403384 	movi	r5,206
 508abf4:	21184404 	addi	r4,r4,24848
 508abf8:	508e9a00 	call	508e9a0 <__assert_func>

0508abfc <__hi0bits>:
 508abfc:	20bfffec 	andhi	r2,r4,65535
 508ac00:	1000131e 	bne	r2,zero,508ac50 <__hi0bits+0x54>
 508ac04:	2008943a 	slli	r4,r4,16
 508ac08:	00800404 	movi	r2,16
 508ac0c:	20ffc02c 	andhi	r3,r4,65280
 508ac10:	1800021e 	bne	r3,zero,508ac1c <__hi0bits+0x20>
 508ac14:	2008923a 	slli	r4,r4,8
 508ac18:	10800204 	addi	r2,r2,8
 508ac1c:	20fc002c 	andhi	r3,r4,61440
 508ac20:	1800021e 	bne	r3,zero,508ac2c <__hi0bits+0x30>
 508ac24:	2008913a 	slli	r4,r4,4
 508ac28:	10800104 	addi	r2,r2,4
 508ac2c:	20f0002c 	andhi	r3,r4,49152
 508ac30:	1800021e 	bne	r3,zero,508ac3c <__hi0bits+0x40>
 508ac34:	200890ba 	slli	r4,r4,2
 508ac38:	10800084 	addi	r2,r2,2
 508ac3c:	20000316 	blt	r4,zero,508ac4c <__hi0bits+0x50>
 508ac40:	2110002c 	andhi	r4,r4,16384
 508ac44:	10800044 	addi	r2,r2,1
 508ac48:	20000326 	beq	r4,zero,508ac58 <__hi0bits+0x5c>
 508ac4c:	f800283a 	ret
 508ac50:	0005883a 	mov	r2,zero
 508ac54:	003fed06 	br	508ac0c <__hi0bits+0x10>
 508ac58:	00800804 	movi	r2,32
 508ac5c:	f800283a 	ret

0508ac60 <__lo0bits>:
 508ac60:	20c00017 	ldw	r3,0(r4)
 508ac64:	188001cc 	andi	r2,r3,7
 508ac68:	10000826 	beq	r2,zero,508ac8c <__lo0bits+0x2c>
 508ac6c:	1880004c 	andi	r2,r3,1
 508ac70:	10001f1e 	bne	r2,zero,508acf0 <__lo0bits+0x90>
 508ac74:	1880008c 	andi	r2,r3,2
 508ac78:	10002126 	beq	r2,zero,508ad00 <__lo0bits+0xa0>
 508ac7c:	1806d07a 	srli	r3,r3,1
 508ac80:	00800044 	movi	r2,1
 508ac84:	20c00015 	stw	r3,0(r4)
 508ac88:	f800283a 	ret
 508ac8c:	18bfffcc 	andi	r2,r3,65535
 508ac90:	10001426 	beq	r2,zero,508ace4 <__lo0bits+0x84>
 508ac94:	0005883a 	mov	r2,zero
 508ac98:	19403fcc 	andi	r5,r3,255
 508ac9c:	2800021e 	bne	r5,zero,508aca8 <__lo0bits+0x48>
 508aca0:	1806d23a 	srli	r3,r3,8
 508aca4:	10800204 	addi	r2,r2,8
 508aca8:	194003cc 	andi	r5,r3,15
 508acac:	2800021e 	bne	r5,zero,508acb8 <__lo0bits+0x58>
 508acb0:	1806d13a 	srli	r3,r3,4
 508acb4:	10800104 	addi	r2,r2,4
 508acb8:	194000cc 	andi	r5,r3,3
 508acbc:	2800021e 	bne	r5,zero,508acc8 <__lo0bits+0x68>
 508acc0:	1806d0ba 	srli	r3,r3,2
 508acc4:	10800084 	addi	r2,r2,2
 508acc8:	1940004c 	andi	r5,r3,1
 508accc:	2800031e 	bne	r5,zero,508acdc <__lo0bits+0x7c>
 508acd0:	1806d07a 	srli	r3,r3,1
 508acd4:	10800044 	addi	r2,r2,1
 508acd8:	18000726 	beq	r3,zero,508acf8 <__lo0bits+0x98>
 508acdc:	20c00015 	stw	r3,0(r4)
 508ace0:	f800283a 	ret
 508ace4:	1806d43a 	srli	r3,r3,16
 508ace8:	00800404 	movi	r2,16
 508acec:	003fea06 	br	508ac98 <__lo0bits+0x38>
 508acf0:	0005883a 	mov	r2,zero
 508acf4:	f800283a 	ret
 508acf8:	00800804 	movi	r2,32
 508acfc:	f800283a 	ret
 508ad00:	1806d0ba 	srli	r3,r3,2
 508ad04:	00800084 	movi	r2,2
 508ad08:	20c00015 	stw	r3,0(r4)
 508ad0c:	f800283a 	ret

0508ad10 <__i2b>:
 508ad10:	20c01317 	ldw	r3,76(r4)
 508ad14:	defffd04 	addi	sp,sp,-12
 508ad18:	dc400115 	stw	r17,4(sp)
 508ad1c:	dc000015 	stw	r16,0(sp)
 508ad20:	dfc00215 	stw	ra,8(sp)
 508ad24:	2021883a 	mov	r16,r4
 508ad28:	2823883a 	mov	r17,r5
 508ad2c:	18000d26 	beq	r3,zero,508ad64 <__i2b+0x54>
 508ad30:	18800117 	ldw	r2,4(r3)
 508ad34:	10001826 	beq	r2,zero,508ad98 <__i2b+0x88>
 508ad38:	11000017 	ldw	r4,0(r2)
 508ad3c:	19000115 	stw	r4,4(r3)
 508ad40:	00c00044 	movi	r3,1
 508ad44:	10000315 	stw	zero,12(r2)
 508ad48:	14400515 	stw	r17,20(r2)
 508ad4c:	10c00415 	stw	r3,16(r2)
 508ad50:	dfc00217 	ldw	ra,8(sp)
 508ad54:	dc400117 	ldw	r17,4(sp)
 508ad58:	dc000017 	ldw	r16,0(sp)
 508ad5c:	dec00304 	addi	sp,sp,12
 508ad60:	f800283a 	ret
 508ad64:	01800844 	movi	r6,33
 508ad68:	01400104 	movi	r5,4
 508ad6c:	508ea180 	call	508ea18 <_calloc_r>
 508ad70:	80801315 	stw	r2,76(r16)
 508ad74:	1007883a 	mov	r3,r2
 508ad78:	103fed1e 	bne	r2,zero,508ad30 <__i2b+0x20>
 508ad7c:	01c14274 	movhi	r7,1289
 508ad80:	01014274 	movhi	r4,1289
 508ad84:	39d83004 	addi	r7,r7,24768
 508ad88:	000d883a 	mov	r6,zero
 508ad8c:	01405004 	movi	r5,320
 508ad90:	21184404 	addi	r4,r4,24848
 508ad94:	508e9a00 	call	508e9a0 <__assert_func>
 508ad98:	01800704 	movi	r6,28
 508ad9c:	01400044 	movi	r5,1
 508ada0:	8009883a 	mov	r4,r16
 508ada4:	508ea180 	call	508ea18 <_calloc_r>
 508ada8:	103ff426 	beq	r2,zero,508ad7c <__i2b+0x6c>
 508adac:	00c00044 	movi	r3,1
 508adb0:	10c00115 	stw	r3,4(r2)
 508adb4:	00c00084 	movi	r3,2
 508adb8:	10c00215 	stw	r3,8(r2)
 508adbc:	003fe006 	br	508ad40 <__i2b+0x30>

0508adc0 <__multiply>:
 508adc0:	defff804 	addi	sp,sp,-32
 508adc4:	dd400515 	stw	r21,20(sp)
 508adc8:	dd000415 	stw	r20,16(sp)
 508adcc:	35400417 	ldw	r21,16(r6)
 508add0:	2d000417 	ldw	r20,16(r5)
 508add4:	dd800615 	stw	r22,24(sp)
 508add8:	dcc00315 	stw	r19,12(sp)
 508addc:	dfc00715 	stw	ra,28(sp)
 508ade0:	dc800215 	stw	r18,8(sp)
 508ade4:	dc400115 	stw	r17,4(sp)
 508ade8:	dc000015 	stw	r16,0(sp)
 508adec:	282d883a 	mov	r22,r5
 508adf0:	3027883a 	mov	r19,r6
 508adf4:	a5400516 	blt	r20,r21,508ae0c <__multiply+0x4c>
 508adf8:	a807883a 	mov	r3,r21
 508adfc:	2827883a 	mov	r19,r5
 508ae00:	a02b883a 	mov	r21,r20
 508ae04:	302d883a 	mov	r22,r6
 508ae08:	1829883a 	mov	r20,r3
 508ae0c:	98800217 	ldw	r2,8(r19)
 508ae10:	ad23883a 	add	r17,r21,r20
 508ae14:	99400117 	ldw	r5,4(r19)
 508ae18:	1440010e 	bge	r2,r17,508ae20 <__multiply+0x60>
 508ae1c:	29400044 	addi	r5,r5,1
 508ae20:	508a8c40 	call	508a8c4 <_Balloc>
 508ae24:	1025883a 	mov	r18,r2
 508ae28:	10007326 	beq	r2,zero,508aff8 <__multiply+0x238>
 508ae2c:	882090ba 	slli	r16,r17,2
 508ae30:	11000504 	addi	r4,r2,20
 508ae34:	2421883a 	add	r16,r4,r16
 508ae38:	2400082e 	bgeu	r4,r16,508ae5c <__multiply+0x9c>
 508ae3c:	808dc83a 	sub	r6,r16,r2
 508ae40:	31bffac4 	addi	r6,r6,-21
 508ae44:	300cd0ba 	srli	r6,r6,2
 508ae48:	000b883a 	mov	r5,zero
 508ae4c:	31800044 	addi	r6,r6,1
 508ae50:	300c90ba 	slli	r6,r6,2
 508ae54:	508a7d40 	call	508a7d4 <memset>
 508ae58:	1009883a 	mov	r4,r2
 508ae5c:	a01290ba 	slli	r9,r20,2
 508ae60:	a80e90ba 	slli	r7,r21,2
 508ae64:	b0800504 	addi	r2,r22,20
 508ae68:	9a800504 	addi	r10,r19,20
 508ae6c:	1253883a 	add	r9,r2,r9
 508ae70:	51cf883a 	add	r7,r10,r7
 508ae74:	12404b2e 	bgeu	r2,r9,508afa4 <__multiply+0x1e4>
 508ae78:	98c00544 	addi	r3,r19,21
 508ae7c:	38c05c36 	bltu	r7,r3,508aff0 <__multiply+0x230>
 508ae80:	3cd1c83a 	sub	r8,r7,r19
 508ae84:	423ffac4 	addi	r8,r8,-21
 508ae88:	4010d0ba 	srli	r8,r8,2
 508ae8c:	42000044 	addi	r8,r8,1
 508ae90:	401090ba 	slli	r8,r8,2
 508ae94:	00000506 	br	508aeac <__multiply+0xec>
 508ae98:	6018d43a 	srli	r12,r12,16
 508ae9c:	6000231e 	bne	r12,zero,508af2c <__multiply+0x16c>
 508aea0:	10800104 	addi	r2,r2,4
 508aea4:	21000104 	addi	r4,r4,4
 508aea8:	12403e2e 	bgeu	r2,r9,508afa4 <__multiply+0x1e4>
 508aeac:	13000017 	ldw	r12,0(r2)
 508aeb0:	63bfffcc 	andi	r14,r12,65535
 508aeb4:	703ff826 	beq	r14,zero,508ae98 <__multiply+0xd8>
 508aeb8:	201b883a 	mov	r13,r4
 508aebc:	5019883a 	mov	r12,r10
 508aec0:	001f883a 	mov	r15,zero
 508aec4:	61400017 	ldw	r5,0(r12)
 508aec8:	6ac00017 	ldw	r11,0(r13)
 508aecc:	6b400104 	addi	r13,r13,4
 508aed0:	29bfffcc 	andi	r6,r5,65535
 508aed4:	338d383a 	mul	r6,r6,r14
 508aed8:	2806d43a 	srli	r3,r5,16
 508aedc:	597fffcc 	andi	r5,r11,65535
 508aee0:	314d883a 	add	r6,r6,r5
 508aee4:	33cd883a 	add	r6,r6,r15
 508aee8:	1b87383a 	mul	r3,r3,r14
 508aeec:	5816d43a 	srli	r11,r11,16
 508aef0:	300ad43a 	srli	r5,r6,16
 508aef4:	31bfffcc 	andi	r6,r6,65535
 508aef8:	1ac7883a 	add	r3,r3,r11
 508aefc:	1947883a 	add	r3,r3,r5
 508af00:	180a943a 	slli	r5,r3,16
 508af04:	63000104 	addi	r12,r12,4
 508af08:	181ed43a 	srli	r15,r3,16
 508af0c:	298cb03a 	or	r6,r5,r6
 508af10:	69bfff15 	stw	r6,-4(r13)
 508af14:	61ffeb36 	bltu	r12,r7,508aec4 <__multiply+0x104>
 508af18:	2207883a 	add	r3,r4,r8
 508af1c:	1bc00015 	stw	r15,0(r3)
 508af20:	13000017 	ldw	r12,0(r2)
 508af24:	6018d43a 	srli	r12,r12,16
 508af28:	603fdd26 	beq	r12,zero,508aea0 <__multiply+0xe0>
 508af2c:	20c00017 	ldw	r3,0(r4)
 508af30:	201b883a 	mov	r13,r4
 508af34:	5017883a 	mov	r11,r10
 508af38:	181d883a 	mov	r14,r3
 508af3c:	001f883a 	mov	r15,zero
 508af40:	5980000b 	ldhu	r6,0(r11)
 508af44:	703ed43a 	srli	ra,r14,16
 508af48:	197fffcc 	andi	r5,r3,65535
 508af4c:	3307383a 	mul	r3,r6,r12
 508af50:	5ac00104 	addi	r11,r11,4
 508af54:	6b800117 	ldw	r14,4(r13)
 508af58:	1fc7883a 	add	r3,r3,ra
 508af5c:	1bc7883a 	add	r3,r3,r15
 508af60:	181e943a 	slli	r15,r3,16
 508af64:	180cd43a 	srli	r6,r3,16
 508af68:	77ffffcc 	andi	ra,r14,65535
 508af6c:	794ab03a 	or	r5,r15,r5
 508af70:	69400015 	stw	r5,0(r13)
 508af74:	58ffff8b 	ldhu	r3,-2(r11)
 508af78:	6b400104 	addi	r13,r13,4
 508af7c:	1b07383a 	mul	r3,r3,r12
 508af80:	1fc7883a 	add	r3,r3,ra
 508af84:	1987883a 	add	r3,r3,r6
 508af88:	181ed43a 	srli	r15,r3,16
 508af8c:	59ffec36 	bltu	r11,r7,508af40 <__multiply+0x180>
 508af90:	220b883a 	add	r5,r4,r8
 508af94:	28c00015 	stw	r3,0(r5)
 508af98:	10800104 	addi	r2,r2,4
 508af9c:	21000104 	addi	r4,r4,4
 508afa0:	127fc236 	bltu	r2,r9,508aeac <__multiply+0xec>
 508afa4:	04400316 	blt	zero,r17,508afb4 <__multiply+0x1f4>
 508afa8:	00000506 	br	508afc0 <__multiply+0x200>
 508afac:	8c7fffc4 	addi	r17,r17,-1
 508afb0:	88000326 	beq	r17,zero,508afc0 <__multiply+0x200>
 508afb4:	80bfff17 	ldw	r2,-4(r16)
 508afb8:	843fff04 	addi	r16,r16,-4
 508afbc:	103ffb26 	beq	r2,zero,508afac <__multiply+0x1ec>
 508afc0:	9005883a 	mov	r2,r18
 508afc4:	94400415 	stw	r17,16(r18)
 508afc8:	dfc00717 	ldw	ra,28(sp)
 508afcc:	dd800617 	ldw	r22,24(sp)
 508afd0:	dd400517 	ldw	r21,20(sp)
 508afd4:	dd000417 	ldw	r20,16(sp)
 508afd8:	dcc00317 	ldw	r19,12(sp)
 508afdc:	dc800217 	ldw	r18,8(sp)
 508afe0:	dc400117 	ldw	r17,4(sp)
 508afe4:	dc000017 	ldw	r16,0(sp)
 508afe8:	dec00804 	addi	sp,sp,32
 508afec:	f800283a 	ret
 508aff0:	02000104 	movi	r8,4
 508aff4:	003fad06 	br	508aeac <__multiply+0xec>
 508aff8:	01c14274 	movhi	r7,1289
 508affc:	01014274 	movhi	r4,1289
 508b000:	39d83004 	addi	r7,r7,24768
 508b004:	000d883a 	mov	r6,zero
 508b008:	01405744 	movi	r5,349
 508b00c:	21184404 	addi	r4,r4,24848
 508b010:	508e9a00 	call	508e9a0 <__assert_func>

0508b014 <__pow5mult>:
 508b014:	defffb04 	addi	sp,sp,-20
 508b018:	dcc00315 	stw	r19,12(sp)
 508b01c:	dc000015 	stw	r16,0(sp)
 508b020:	dfc00415 	stw	ra,16(sp)
 508b024:	dc800215 	stw	r18,8(sp)
 508b028:	dc400115 	stw	r17,4(sp)
 508b02c:	308000cc 	andi	r2,r6,3
 508b030:	3021883a 	mov	r16,r6
 508b034:	2027883a 	mov	r19,r4
 508b038:	10002d1e 	bne	r2,zero,508b0f0 <__pow5mult+0xdc>
 508b03c:	2825883a 	mov	r18,r5
 508b040:	8021d0ba 	srai	r16,r16,2
 508b044:	80001926 	beq	r16,zero,508b0ac <__pow5mult+0x98>
 508b048:	9c401217 	ldw	r17,72(r19)
 508b04c:	8800061e 	bne	r17,zero,508b068 <__pow5mult+0x54>
 508b050:	00002f06 	br	508b110 <__pow5mult+0xfc>
 508b054:	8021d07a 	srai	r16,r16,1
 508b058:	80001426 	beq	r16,zero,508b0ac <__pow5mult+0x98>
 508b05c:	88800017 	ldw	r2,0(r17)
 508b060:	10001a26 	beq	r2,zero,508b0cc <__pow5mult+0xb8>
 508b064:	1023883a 	mov	r17,r2
 508b068:	8080004c 	andi	r2,r16,1
 508b06c:	103ff926 	beq	r2,zero,508b054 <__pow5mult+0x40>
 508b070:	880d883a 	mov	r6,r17
 508b074:	900b883a 	mov	r5,r18
 508b078:	9809883a 	mov	r4,r19
 508b07c:	508adc00 	call	508adc0 <__multiply>
 508b080:	90001926 	beq	r18,zero,508b0e8 <__pow5mult+0xd4>
 508b084:	91000117 	ldw	r4,4(r18)
 508b088:	98c01317 	ldw	r3,76(r19)
 508b08c:	8021d07a 	srai	r16,r16,1
 508b090:	200890ba 	slli	r4,r4,2
 508b094:	1907883a 	add	r3,r3,r4
 508b098:	19000017 	ldw	r4,0(r3)
 508b09c:	91000015 	stw	r4,0(r18)
 508b0a0:	1c800015 	stw	r18,0(r3)
 508b0a4:	1025883a 	mov	r18,r2
 508b0a8:	803fec1e 	bne	r16,zero,508b05c <__pow5mult+0x48>
 508b0ac:	9005883a 	mov	r2,r18
 508b0b0:	dfc00417 	ldw	ra,16(sp)
 508b0b4:	dcc00317 	ldw	r19,12(sp)
 508b0b8:	dc800217 	ldw	r18,8(sp)
 508b0bc:	dc400117 	ldw	r17,4(sp)
 508b0c0:	dc000017 	ldw	r16,0(sp)
 508b0c4:	dec00504 	addi	sp,sp,20
 508b0c8:	f800283a 	ret
 508b0cc:	880d883a 	mov	r6,r17
 508b0d0:	880b883a 	mov	r5,r17
 508b0d4:	9809883a 	mov	r4,r19
 508b0d8:	508adc00 	call	508adc0 <__multiply>
 508b0dc:	88800015 	stw	r2,0(r17)
 508b0e0:	10000015 	stw	zero,0(r2)
 508b0e4:	003fdf06 	br	508b064 <__pow5mult+0x50>
 508b0e8:	1025883a 	mov	r18,r2
 508b0ec:	003fd906 	br	508b054 <__pow5mult+0x40>
 508b0f0:	100490ba 	slli	r2,r2,2
 508b0f4:	00c14274 	movhi	r3,1289
 508b0f8:	000f883a 	mov	r7,zero
 508b0fc:	10c7883a 	add	r3,r2,r3
 508b100:	19985217 	ldw	r6,24904(r3)
 508b104:	508a98c0 	call	508a98c <__multadd>
 508b108:	1025883a 	mov	r18,r2
 508b10c:	003fcc06 	br	508b040 <__pow5mult+0x2c>
 508b110:	01400044 	movi	r5,1
 508b114:	9809883a 	mov	r4,r19
 508b118:	508a8c40 	call	508a8c4 <_Balloc>
 508b11c:	1023883a 	mov	r17,r2
 508b120:	10000726 	beq	r2,zero,508b140 <__pow5mult+0x12c>
 508b124:	00809c44 	movi	r2,625
 508b128:	88800515 	stw	r2,20(r17)
 508b12c:	00800044 	movi	r2,1
 508b130:	88800415 	stw	r2,16(r17)
 508b134:	9c401215 	stw	r17,72(r19)
 508b138:	88000015 	stw	zero,0(r17)
 508b13c:	003fca06 	br	508b068 <__pow5mult+0x54>
 508b140:	01c14274 	movhi	r7,1289
 508b144:	01014274 	movhi	r4,1289
 508b148:	39d83004 	addi	r7,r7,24768
 508b14c:	000d883a 	mov	r6,zero
 508b150:	01405004 	movi	r5,320
 508b154:	21184404 	addi	r4,r4,24848
 508b158:	508e9a00 	call	508e9a0 <__assert_func>

0508b15c <__lshift>:
 508b15c:	defff804 	addi	sp,sp,-32
 508b160:	dd800615 	stw	r22,24(sp)
 508b164:	dc000015 	stw	r16,0(sp)
 508b168:	302dd17a 	srai	r22,r6,5
 508b16c:	2c000417 	ldw	r16,16(r5)
 508b170:	28800217 	ldw	r2,8(r5)
 508b174:	dd000415 	stw	r20,16(sp)
 508b178:	b421883a 	add	r16,r22,r16
 508b17c:	dcc00315 	stw	r19,12(sp)
 508b180:	dc800215 	stw	r18,8(sp)
 508b184:	dc400115 	stw	r17,4(sp)
 508b188:	dfc00715 	stw	ra,28(sp)
 508b18c:	dd400515 	stw	r21,20(sp)
 508b190:	85000044 	addi	r20,r16,1
 508b194:	2827883a 	mov	r19,r5
 508b198:	3025883a 	mov	r18,r6
 508b19c:	29400117 	ldw	r5,4(r5)
 508b1a0:	2023883a 	mov	r17,r4
 508b1a4:	1500030e 	bge	r2,r20,508b1b4 <__lshift+0x58>
 508b1a8:	1085883a 	add	r2,r2,r2
 508b1ac:	29400044 	addi	r5,r5,1
 508b1b0:	153ffd16 	blt	r2,r20,508b1a8 <__lshift+0x4c>
 508b1b4:	8809883a 	mov	r4,r17
 508b1b8:	508a8c40 	call	508a8c4 <_Balloc>
 508b1bc:	102b883a 	mov	r21,r2
 508b1c0:	10004126 	beq	r2,zero,508b2c8 <__lshift+0x16c>
 508b1c4:	11000504 	addi	r4,r2,20
 508b1c8:	0580050e 	bge	zero,r22,508b1e0 <__lshift+0x84>
 508b1cc:	b02c90ba 	slli	r22,r22,2
 508b1d0:	000b883a 	mov	r5,zero
 508b1d4:	b00d883a 	mov	r6,r22
 508b1d8:	508a7d40 	call	508a7d4 <memset>
 508b1dc:	1589883a 	add	r4,r2,r22
 508b1e0:	9a000417 	ldw	r8,16(r19)
 508b1e4:	98c00504 	addi	r3,r19,20
 508b1e8:	948007cc 	andi	r18,r18,31
 508b1ec:	401090ba 	slli	r8,r8,2
 508b1f0:	1a11883a 	add	r8,r3,r8
 508b1f4:	90002c26 	beq	r18,zero,508b2a8 <__lshift+0x14c>
 508b1f8:	01400804 	movi	r5,32
 508b1fc:	2c8bc83a 	sub	r5,r5,r18
 508b200:	2005883a 	mov	r2,r4
 508b204:	000f883a 	mov	r7,zero
 508b208:	19800017 	ldw	r6,0(r3)
 508b20c:	10800104 	addi	r2,r2,4
 508b210:	18c00104 	addi	r3,r3,4
 508b214:	348c983a 	sll	r6,r6,r18
 508b218:	31ccb03a 	or	r6,r6,r7
 508b21c:	11bfff15 	stw	r6,-4(r2)
 508b220:	19bfff17 	ldw	r6,-4(r3)
 508b224:	314ed83a 	srl	r7,r6,r5
 508b228:	1a3ff736 	bltu	r3,r8,508b208 <__lshift+0xac>
 508b22c:	98800544 	addi	r2,r19,21
 508b230:	40802336 	bltu	r8,r2,508b2c0 <__lshift+0x164>
 508b234:	44c7c83a 	sub	r3,r8,r19
 508b238:	18fffac4 	addi	r3,r3,-21
 508b23c:	1806d0ba 	srli	r3,r3,2
 508b240:	18c00044 	addi	r3,r3,1
 508b244:	180690ba 	slli	r3,r3,2
 508b248:	20c9883a 	add	r4,r4,r3
 508b24c:	21c00015 	stw	r7,0(r4)
 508b250:	38000126 	beq	r7,zero,508b258 <__lshift+0xfc>
 508b254:	a021883a 	mov	r16,r20
 508b258:	ac000415 	stw	r16,16(r21)
 508b25c:	98000726 	beq	r19,zero,508b27c <__lshift+0x120>
 508b260:	98c00117 	ldw	r3,4(r19)
 508b264:	88801317 	ldw	r2,76(r17)
 508b268:	180690ba 	slli	r3,r3,2
 508b26c:	10c5883a 	add	r2,r2,r3
 508b270:	10c00017 	ldw	r3,0(r2)
 508b274:	98c00015 	stw	r3,0(r19)
 508b278:	14c00015 	stw	r19,0(r2)
 508b27c:	a805883a 	mov	r2,r21
 508b280:	dfc00717 	ldw	ra,28(sp)
 508b284:	dd800617 	ldw	r22,24(sp)
 508b288:	dd400517 	ldw	r21,20(sp)
 508b28c:	dd000417 	ldw	r20,16(sp)
 508b290:	dcc00317 	ldw	r19,12(sp)
 508b294:	dc800217 	ldw	r18,8(sp)
 508b298:	dc400117 	ldw	r17,4(sp)
 508b29c:	dc000017 	ldw	r16,0(sp)
 508b2a0:	dec00804 	addi	sp,sp,32
 508b2a4:	f800283a 	ret
 508b2a8:	18800017 	ldw	r2,0(r3)
 508b2ac:	18c00104 	addi	r3,r3,4
 508b2b0:	21000104 	addi	r4,r4,4
 508b2b4:	20bfff15 	stw	r2,-4(r4)
 508b2b8:	1a3ffb36 	bltu	r3,r8,508b2a8 <__lshift+0x14c>
 508b2bc:	003fe606 	br	508b258 <__lshift+0xfc>
 508b2c0:	00c00104 	movi	r3,4
 508b2c4:	003fe006 	br	508b248 <__lshift+0xec>
 508b2c8:	01c14274 	movhi	r7,1289
 508b2cc:	01014274 	movhi	r4,1289
 508b2d0:	39d83004 	addi	r7,r7,24768
 508b2d4:	000d883a 	mov	r6,zero
 508b2d8:	01407644 	movi	r5,473
 508b2dc:	21184404 	addi	r4,r4,24848
 508b2e0:	508e9a00 	call	508e9a0 <__assert_func>

0508b2e4 <__mcmp>:
 508b2e4:	21800417 	ldw	r6,16(r4)
 508b2e8:	28c00417 	ldw	r3,16(r5)
 508b2ec:	30c5c83a 	sub	r2,r6,r3
 508b2f0:	30c00e1e 	bne	r6,r3,508b32c <__mcmp+0x48>
 508b2f4:	180690ba 	slli	r3,r3,2
 508b2f8:	21c00504 	addi	r7,r4,20
 508b2fc:	29400504 	addi	r5,r5,20
 508b300:	38c9883a 	add	r4,r7,r3
 508b304:	28c7883a 	add	r3,r5,r3
 508b308:	00000106 	br	508b310 <__mcmp+0x2c>
 508b30c:	3900082e 	bgeu	r7,r4,508b330 <__mcmp+0x4c>
 508b310:	21bfff17 	ldw	r6,-4(r4)
 508b314:	197fff17 	ldw	r5,-4(r3)
 508b318:	213fff04 	addi	r4,r4,-4
 508b31c:	18ffff04 	addi	r3,r3,-4
 508b320:	317ffa26 	beq	r6,r5,508b30c <__mcmp+0x28>
 508b324:	3140032e 	bgeu	r6,r5,508b334 <__mcmp+0x50>
 508b328:	00bfffc4 	movi	r2,-1
 508b32c:	f800283a 	ret
 508b330:	f800283a 	ret
 508b334:	00800044 	movi	r2,1
 508b338:	f800283a 	ret

0508b33c <__mdiff>:
 508b33c:	28800417 	ldw	r2,16(r5)
 508b340:	30c00417 	ldw	r3,16(r6)
 508b344:	defffc04 	addi	sp,sp,-16
 508b348:	dc800215 	stw	r18,8(sp)
 508b34c:	dc400115 	stw	r17,4(sp)
 508b350:	dc000015 	stw	r16,0(sp)
 508b354:	dfc00315 	stw	ra,12(sp)
 508b358:	2823883a 	mov	r17,r5
 508b35c:	3021883a 	mov	r16,r6
 508b360:	10e5c83a 	sub	r18,r2,r3
 508b364:	10c0641e 	bne	r2,r3,508b4f8 <__mdiff+0x1bc>
 508b368:	180c90ba 	slli	r6,r3,2
 508b36c:	29400504 	addi	r5,r5,20
 508b370:	80c00504 	addi	r3,r16,20
 508b374:	2985883a 	add	r2,r5,r6
 508b378:	1987883a 	add	r3,r3,r6
 508b37c:	00000106 	br	508b384 <__mdiff+0x48>
 508b380:	2880642e 	bgeu	r5,r2,508b514 <__mdiff+0x1d8>
 508b384:	11bfff17 	ldw	r6,-4(r2)
 508b388:	19ffff17 	ldw	r7,-4(r3)
 508b38c:	10bfff04 	addi	r2,r2,-4
 508b390:	18ffff04 	addi	r3,r3,-4
 508b394:	31fffa26 	beq	r6,r7,508b380 <__mdiff+0x44>
 508b398:	31c05236 	bltu	r6,r7,508b4e4 <__mdiff+0x1a8>
 508b39c:	89400117 	ldw	r5,4(r17)
 508b3a0:	508a8c40 	call	508a8c4 <_Balloc>
 508b3a4:	10006226 	beq	r2,zero,508b530 <__mdiff+0x1f4>
 508b3a8:	8a400417 	ldw	r9,16(r17)
 508b3ac:	83000417 	ldw	r12,16(r16)
 508b3b0:	8ac00504 	addi	r11,r17,20
 508b3b4:	481090ba 	slli	r8,r9,2
 508b3b8:	601890ba 	slli	r12,r12,2
 508b3bc:	81800504 	addi	r6,r16,20
 508b3c0:	13400504 	addi	r13,r2,20
 508b3c4:	14800315 	stw	r18,12(r2)
 508b3c8:	5a11883a 	add	r8,r11,r8
 508b3cc:	3319883a 	add	r12,r6,r12
 508b3d0:	681d883a 	mov	r14,r13
 508b3d4:	5815883a 	mov	r10,r11
 508b3d8:	0007883a 	mov	r3,zero
 508b3dc:	51000017 	ldw	r4,0(r10)
 508b3e0:	31c00017 	ldw	r7,0(r6)
 508b3e4:	73800104 	addi	r14,r14,4
 508b3e8:	217fffcc 	andi	r5,r4,65535
 508b3ec:	28cb883a 	add	r5,r5,r3
 508b3f0:	38ffffcc 	andi	r3,r7,65535
 508b3f4:	28cbc83a 	sub	r5,r5,r3
 508b3f8:	380ed43a 	srli	r7,r7,16
 508b3fc:	2006d43a 	srli	r3,r4,16
 508b400:	2809d43a 	srai	r4,r5,16
 508b404:	297fffcc 	andi	r5,r5,65535
 508b408:	19c7c83a 	sub	r3,r3,r7
 508b40c:	1907883a 	add	r3,r3,r4
 508b410:	1808943a 	slli	r4,r3,16
 508b414:	31800104 	addi	r6,r6,4
 508b418:	1807d43a 	srai	r3,r3,16
 508b41c:	214ab03a 	or	r5,r4,r5
 508b420:	717fff15 	stw	r5,-4(r14)
 508b424:	52800104 	addi	r10,r10,4
 508b428:	333fec36 	bltu	r6,r12,508b3dc <__mdiff+0xa0>
 508b42c:	640fc83a 	sub	r7,r12,r16
 508b430:	39fffac4 	addi	r7,r7,-21
 508b434:	84000544 	addi	r16,r16,21
 508b438:	380ed0ba 	srli	r7,r7,2
 508b43c:	64003336 	bltu	r12,r16,508b50c <__mdiff+0x1d0>
 508b440:	380890ba 	slli	r4,r7,2
 508b444:	6909883a 	add	r4,r13,r4
 508b448:	64002e36 	bltu	r12,r16,508b504 <__mdiff+0x1c8>
 508b44c:	39800044 	addi	r6,r7,1
 508b450:	300c90ba 	slli	r6,r6,2
 508b454:	5997883a 	add	r11,r11,r6
 508b458:	699b883a 	add	r13,r13,r6
 508b45c:	5a00152e 	bgeu	r11,r8,508b4b4 <__mdiff+0x178>
 508b460:	680f883a 	mov	r7,r13
 508b464:	580d883a 	mov	r6,r11
 508b468:	31000017 	ldw	r4,0(r6)
 508b46c:	39c00104 	addi	r7,r7,4
 508b470:	31800104 	addi	r6,r6,4
 508b474:	217fffcc 	andi	r5,r4,65535
 508b478:	28cb883a 	add	r5,r5,r3
 508b47c:	2815d43a 	srai	r10,r5,16
 508b480:	2006d43a 	srli	r3,r4,16
 508b484:	297fffcc 	andi	r5,r5,65535
 508b488:	1a87883a 	add	r3,r3,r10
 508b48c:	1814943a 	slli	r10,r3,16
 508b490:	1807d43a 	srai	r3,r3,16
 508b494:	514ab03a 	or	r5,r10,r5
 508b498:	397fff15 	stw	r5,-4(r7)
 508b49c:	323ff236 	bltu	r6,r8,508b468 <__mdiff+0x12c>
 508b4a0:	413fffc4 	addi	r4,r8,-1
 508b4a4:	22c9c83a 	sub	r4,r4,r11
 508b4a8:	2008d0ba 	srli	r4,r4,2
 508b4ac:	200890ba 	slli	r4,r4,2
 508b4b0:	6909883a 	add	r4,r13,r4
 508b4b4:	2800041e 	bne	r5,zero,508b4c8 <__mdiff+0x18c>
 508b4b8:	20ffff17 	ldw	r3,-4(r4)
 508b4bc:	4a7fffc4 	addi	r9,r9,-1
 508b4c0:	213fff04 	addi	r4,r4,-4
 508b4c4:	183ffc26 	beq	r3,zero,508b4b8 <__mdiff+0x17c>
 508b4c8:	12400415 	stw	r9,16(r2)
 508b4cc:	dfc00317 	ldw	ra,12(sp)
 508b4d0:	dc800217 	ldw	r18,8(sp)
 508b4d4:	dc400117 	ldw	r17,4(sp)
 508b4d8:	dc000017 	ldw	r16,0(sp)
 508b4dc:	dec00404 	addi	sp,sp,16
 508b4e0:	f800283a 	ret
 508b4e4:	8805883a 	mov	r2,r17
 508b4e8:	04800044 	movi	r18,1
 508b4ec:	8023883a 	mov	r17,r16
 508b4f0:	1021883a 	mov	r16,r2
 508b4f4:	003fa906 	br	508b39c <__mdiff+0x60>
 508b4f8:	903ffa16 	blt	r18,zero,508b4e4 <__mdiff+0x1a8>
 508b4fc:	0025883a 	mov	r18,zero
 508b500:	003fa606 	br	508b39c <__mdiff+0x60>
 508b504:	01800104 	movi	r6,4
 508b508:	003fd206 	br	508b454 <__mdiff+0x118>
 508b50c:	0009883a 	mov	r4,zero
 508b510:	003fcc06 	br	508b444 <__mdiff+0x108>
 508b514:	000b883a 	mov	r5,zero
 508b518:	508a8c40 	call	508a8c4 <_Balloc>
 508b51c:	10000b26 	beq	r2,zero,508b54c <__mdiff+0x210>
 508b520:	00c00044 	movi	r3,1
 508b524:	10c00415 	stw	r3,16(r2)
 508b528:	10000515 	stw	zero,20(r2)
 508b52c:	003fe706 	br	508b4cc <__mdiff+0x190>
 508b530:	01c14274 	movhi	r7,1289
 508b534:	01014274 	movhi	r4,1289
 508b538:	39d83004 	addi	r7,r7,24768
 508b53c:	000d883a 	mov	r6,zero
 508b540:	01409004 	movi	r5,576
 508b544:	21184404 	addi	r4,r4,24848
 508b548:	508e9a00 	call	508e9a0 <__assert_func>
 508b54c:	01c14274 	movhi	r7,1289
 508b550:	01014274 	movhi	r4,1289
 508b554:	39d83004 	addi	r7,r7,24768
 508b558:	000d883a 	mov	r6,zero
 508b55c:	01408c84 	movi	r5,562
 508b560:	21184404 	addi	r4,r4,24848
 508b564:	508e9a00 	call	508e9a0 <__assert_func>

0508b568 <__ulp>:
 508b568:	28dffc2c 	andhi	r3,r5,32752
 508b56c:	017f3034 	movhi	r5,64704
 508b570:	1947883a 	add	r3,r3,r5
 508b574:	00c0020e 	bge	zero,r3,508b580 <__ulp+0x18>
 508b578:	0005883a 	mov	r2,zero
 508b57c:	f800283a 	ret
 508b580:	00c7c83a 	sub	r3,zero,r3
 508b584:	1807d53a 	srai	r3,r3,20
 508b588:	18800508 	cmpgei	r2,r3,20
 508b58c:	1000041e 	bne	r2,zero,508b5a0 <__ulp+0x38>
 508b590:	00800234 	movhi	r2,8
 508b594:	10c7d83a 	sra	r3,r2,r3
 508b598:	0005883a 	mov	r2,zero
 508b59c:	f800283a 	ret
 508b5a0:	193ffb04 	addi	r4,r3,-20
 508b5a4:	208007c8 	cmpgei	r2,r4,31
 508b5a8:	0007883a 	mov	r3,zero
 508b5ac:	1000031e 	bne	r2,zero,508b5bc <__ulp+0x54>
 508b5b0:	00a00034 	movhi	r2,32768
 508b5b4:	1104d83a 	srl	r2,r2,r4
 508b5b8:	f800283a 	ret
 508b5bc:	00800044 	movi	r2,1
 508b5c0:	f800283a 	ret

0508b5c4 <__b2d>:
 508b5c4:	defffa04 	addi	sp,sp,-24
 508b5c8:	dc400115 	stw	r17,4(sp)
 508b5cc:	24400417 	ldw	r17,16(r4)
 508b5d0:	dc000015 	stw	r16,0(sp)
 508b5d4:	24000504 	addi	r16,r4,20
 508b5d8:	882290ba 	slli	r17,r17,2
 508b5dc:	dc800215 	stw	r18,8(sp)
 508b5e0:	dd000415 	stw	r20,16(sp)
 508b5e4:	8463883a 	add	r17,r16,r17
 508b5e8:	8cbfff17 	ldw	r18,-4(r17)
 508b5ec:	dcc00315 	stw	r19,12(sp)
 508b5f0:	dfc00515 	stw	ra,20(sp)
 508b5f4:	9009883a 	mov	r4,r18
 508b5f8:	2827883a 	mov	r19,r5
 508b5fc:	508abfc0 	call	508abfc <__hi0bits>
 508b600:	00c00804 	movi	r3,32
 508b604:	1889c83a 	sub	r4,r3,r2
 508b608:	99000015 	stw	r4,0(r19)
 508b60c:	110002c8 	cmpgei	r4,r2,11
 508b610:	8d3fff04 	addi	r20,r17,-4
 508b614:	20002026 	beq	r4,zero,508b698 <__b2d+0xd4>
 508b618:	10bffd44 	addi	r2,r2,-11
 508b61c:	85000e2e 	bgeu	r16,r20,508b658 <__b2d+0x94>
 508b620:	897ffe17 	ldw	r5,-8(r17)
 508b624:	10001226 	beq	r2,zero,508b670 <__b2d+0xac>
 508b628:	1889c83a 	sub	r4,r3,r2
 508b62c:	90a4983a 	sll	r18,r18,r2
 508b630:	2906d83a 	srl	r3,r5,r4
 508b634:	89bffe04 	addi	r6,r17,-8
 508b638:	2884983a 	sll	r2,r5,r2
 508b63c:	90e4b03a 	or	r18,r18,r3
 508b640:	90cffc34 	orhi	r3,r18,16368
 508b644:	81800c2e 	bgeu	r16,r6,508b678 <__b2d+0xb4>
 508b648:	897ffd17 	ldw	r5,-12(r17)
 508b64c:	2908d83a 	srl	r4,r5,r4
 508b650:	1104b03a 	or	r2,r2,r4
 508b654:	00000806 	br	508b678 <__b2d+0xb4>
 508b658:	10000426 	beq	r2,zero,508b66c <__b2d+0xa8>
 508b65c:	90a4983a 	sll	r18,r18,r2
 508b660:	0005883a 	mov	r2,zero
 508b664:	90cffc34 	orhi	r3,r18,16368
 508b668:	00000306 	br	508b678 <__b2d+0xb4>
 508b66c:	000b883a 	mov	r5,zero
 508b670:	90cffc34 	orhi	r3,r18,16368
 508b674:	2805883a 	mov	r2,r5
 508b678:	dfc00517 	ldw	ra,20(sp)
 508b67c:	dd000417 	ldw	r20,16(sp)
 508b680:	dcc00317 	ldw	r19,12(sp)
 508b684:	dc800217 	ldw	r18,8(sp)
 508b688:	dc400117 	ldw	r17,4(sp)
 508b68c:	dc000017 	ldw	r16,0(sp)
 508b690:	dec00604 	addi	sp,sp,24
 508b694:	f800283a 	ret
 508b698:	014002c4 	movi	r5,11
 508b69c:	2889c83a 	sub	r4,r5,r2
 508b6a0:	9106d83a 	srl	r3,r18,r4
 508b6a4:	18cffc34 	orhi	r3,r3,16368
 508b6a8:	85000536 	bltu	r16,r20,508b6c0 <__b2d+0xfc>
 508b6ac:	000b883a 	mov	r5,zero
 508b6b0:	10800544 	addi	r2,r2,21
 508b6b4:	9084983a 	sll	r2,r18,r2
 508b6b8:	1144b03a 	or	r2,r2,r5
 508b6bc:	003fee06 	br	508b678 <__b2d+0xb4>
 508b6c0:	897ffe17 	ldw	r5,-8(r17)
 508b6c4:	290ad83a 	srl	r5,r5,r4
 508b6c8:	003ff906 	br	508b6b0 <__b2d+0xec>

0508b6cc <__d2b>:
 508b6cc:	defff804 	addi	sp,sp,-32
 508b6d0:	dd000615 	stw	r20,24(sp)
 508b6d4:	2829883a 	mov	r20,r5
 508b6d8:	01400044 	movi	r5,1
 508b6dc:	dcc00515 	stw	r19,20(sp)
 508b6e0:	dc000215 	stw	r16,8(sp)
 508b6e4:	dfc00715 	stw	ra,28(sp)
 508b6e8:	dc800415 	stw	r18,16(sp)
 508b6ec:	dc400315 	stw	r17,12(sp)
 508b6f0:	3021883a 	mov	r16,r6
 508b6f4:	3827883a 	mov	r19,r7
 508b6f8:	508a8c40 	call	508a8c4 <_Balloc>
 508b6fc:	10004526 	beq	r2,zero,508b814 <__d2b+0x148>
 508b700:	8024d53a 	srli	r18,r16,20
 508b704:	01800434 	movhi	r6,16
 508b708:	31bfffc4 	addi	r6,r6,-1
 508b70c:	9481ffcc 	andi	r18,r18,2047
 508b710:	1023883a 	mov	r17,r2
 508b714:	81a0703a 	and	r16,r16,r6
 508b718:	90000126 	beq	r18,zero,508b720 <__d2b+0x54>
 508b71c:	84000434 	orhi	r16,r16,16
 508b720:	dc000115 	stw	r16,4(sp)
 508b724:	a0002226 	beq	r20,zero,508b7b0 <__d2b+0xe4>
 508b728:	d809883a 	mov	r4,sp
 508b72c:	dd000015 	stw	r20,0(sp)
 508b730:	508ac600 	call	508ac60 <__lo0bits>
 508b734:	d8c00117 	ldw	r3,4(sp)
 508b738:	10003326 	beq	r2,zero,508b808 <__d2b+0x13c>
 508b73c:	01000804 	movi	r4,32
 508b740:	2089c83a 	sub	r4,r4,r2
 508b744:	1908983a 	sll	r4,r3,r4
 508b748:	d9400017 	ldw	r5,0(sp)
 508b74c:	1886d83a 	srl	r3,r3,r2
 508b750:	2148b03a 	or	r4,r4,r5
 508b754:	89000515 	stw	r4,20(r17)
 508b758:	d8c00115 	stw	r3,4(sp)
 508b75c:	88c00615 	stw	r3,24(r17)
 508b760:	1800271e 	bne	r3,zero,508b800 <__d2b+0x134>
 508b764:	04000044 	movi	r16,1
 508b768:	8c000415 	stw	r16,16(r17)
 508b76c:	90001926 	beq	r18,zero,508b7d4 <__d2b+0x108>
 508b770:	00c00d44 	movi	r3,53
 508b774:	94bef344 	addi	r18,r18,-1075
 508b778:	90a5883a 	add	r18,r18,r2
 508b77c:	1885c83a 	sub	r2,r3,r2
 508b780:	d8c00817 	ldw	r3,32(sp)
 508b784:	9c800015 	stw	r18,0(r19)
 508b788:	18800015 	stw	r2,0(r3)
 508b78c:	8805883a 	mov	r2,r17
 508b790:	dfc00717 	ldw	ra,28(sp)
 508b794:	dd000617 	ldw	r20,24(sp)
 508b798:	dcc00517 	ldw	r19,20(sp)
 508b79c:	dc800417 	ldw	r18,16(sp)
 508b7a0:	dc400317 	ldw	r17,12(sp)
 508b7a4:	dc000217 	ldw	r16,8(sp)
 508b7a8:	dec00804 	addi	sp,sp,32
 508b7ac:	f800283a 	ret
 508b7b0:	d9000104 	addi	r4,sp,4
 508b7b4:	508ac600 	call	508ac60 <__lo0bits>
 508b7b8:	00c00044 	movi	r3,1
 508b7bc:	88c00415 	stw	r3,16(r17)
 508b7c0:	d8c00117 	ldw	r3,4(sp)
 508b7c4:	10800804 	addi	r2,r2,32
 508b7c8:	04000044 	movi	r16,1
 508b7cc:	88c00515 	stw	r3,20(r17)
 508b7d0:	903fe71e 	bne	r18,zero,508b770 <__d2b+0xa4>
 508b7d4:	800690ba 	slli	r3,r16,2
 508b7d8:	10bef384 	addi	r2,r2,-1074
 508b7dc:	98800015 	stw	r2,0(r19)
 508b7e0:	88c5883a 	add	r2,r17,r3
 508b7e4:	11000417 	ldw	r4,16(r2)
 508b7e8:	8020917a 	slli	r16,r16,5
 508b7ec:	508abfc0 	call	508abfc <__hi0bits>
 508b7f0:	80a1c83a 	sub	r16,r16,r2
 508b7f4:	d8800817 	ldw	r2,32(sp)
 508b7f8:	14000015 	stw	r16,0(r2)
 508b7fc:	003fe306 	br	508b78c <__d2b+0xc0>
 508b800:	04000084 	movi	r16,2
 508b804:	003fd806 	br	508b768 <__d2b+0x9c>
 508b808:	d9000017 	ldw	r4,0(sp)
 508b80c:	89000515 	stw	r4,20(r17)
 508b810:	003fd206 	br	508b75c <__d2b+0x90>
 508b814:	01c14274 	movhi	r7,1289
 508b818:	01014274 	movhi	r4,1289
 508b81c:	39d83004 	addi	r7,r7,24768
 508b820:	000d883a 	mov	r6,zero
 508b824:	0140c284 	movi	r5,778
 508b828:	21184404 	addi	r4,r4,24848
 508b82c:	508e9a00 	call	508e9a0 <__assert_func>

0508b830 <__ratio>:
 508b830:	defff904 	addi	sp,sp,-28
 508b834:	dc400315 	stw	r17,12(sp)
 508b838:	2823883a 	mov	r17,r5
 508b83c:	d80b883a 	mov	r5,sp
 508b840:	dfc00615 	stw	ra,24(sp)
 508b844:	dcc00515 	stw	r19,20(sp)
 508b848:	dc800415 	stw	r18,16(sp)
 508b84c:	2027883a 	mov	r19,r4
 508b850:	dc000215 	stw	r16,8(sp)
 508b854:	508b5c40 	call	508b5c4 <__b2d>
 508b858:	d9400104 	addi	r5,sp,4
 508b85c:	8809883a 	mov	r4,r17
 508b860:	1025883a 	mov	r18,r2
 508b864:	1821883a 	mov	r16,r3
 508b868:	508b5c40 	call	508b5c4 <__b2d>
 508b86c:	89000417 	ldw	r4,16(r17)
 508b870:	9a000417 	ldw	r8,16(r19)
 508b874:	d9400117 	ldw	r5,4(sp)
 508b878:	100d883a 	mov	r6,r2
 508b87c:	4111c83a 	sub	r8,r8,r4
 508b880:	d9000017 	ldw	r4,0(sp)
 508b884:	4010917a 	slli	r8,r8,5
 508b888:	180f883a 	mov	r7,r3
 508b88c:	2149c83a 	sub	r4,r4,r5
 508b890:	4111883a 	add	r8,r8,r4
 508b894:	02000c0e 	bge	zero,r8,508b8c8 <__ratio+0x98>
 508b898:	4010953a 	slli	r8,r8,20
 508b89c:	4421883a 	add	r16,r8,r16
 508b8a0:	9009883a 	mov	r4,r18
 508b8a4:	800b883a 	mov	r5,r16
 508b8a8:	5090df00 	call	5090df0 <__divdf3>
 508b8ac:	dfc00617 	ldw	ra,24(sp)
 508b8b0:	dcc00517 	ldw	r19,20(sp)
 508b8b4:	dc800417 	ldw	r18,16(sp)
 508b8b8:	dc400317 	ldw	r17,12(sp)
 508b8bc:	dc000217 	ldw	r16,8(sp)
 508b8c0:	dec00704 	addi	sp,sp,28
 508b8c4:	f800283a 	ret
 508b8c8:	00bffc34 	movhi	r2,65520
 508b8cc:	4091383a 	mul	r8,r8,r2
 508b8d0:	40cf883a 	add	r7,r8,r3
 508b8d4:	003ff206 	br	508b8a0 <__ratio+0x70>

0508b8d8 <_mprec_log10>:
 508b8d8:	defffe04 	addi	sp,sp,-8
 508b8dc:	dc000015 	stw	r16,0(sp)
 508b8e0:	dfc00115 	stw	ra,4(sp)
 508b8e4:	20800608 	cmpgei	r2,r4,24
 508b8e8:	2021883a 	mov	r16,r4
 508b8ec:	10000f26 	beq	r2,zero,508b92c <_mprec_log10+0x54>
 508b8f0:	0009883a 	mov	r4,zero
 508b8f4:	014ffc34 	movhi	r5,16368
 508b8f8:	000d883a 	mov	r6,zero
 508b8fc:	01d00934 	movhi	r7,16420
 508b900:	509189c0 	call	509189c <__muldf3>
 508b904:	843fffc4 	addi	r16,r16,-1
 508b908:	1009883a 	mov	r4,r2
 508b90c:	180b883a 	mov	r5,r3
 508b910:	803ff91e 	bne	r16,zero,508b8f8 <_mprec_log10+0x20>
 508b914:	2005883a 	mov	r2,r4
 508b918:	2807883a 	mov	r3,r5
 508b91c:	dfc00117 	ldw	ra,4(sp)
 508b920:	dc000017 	ldw	r16,0(sp)
 508b924:	dec00204 	addi	sp,sp,8
 508b928:	f800283a 	ret
 508b92c:	202090fa 	slli	r16,r4,3
 508b930:	00814274 	movhi	r2,1289
 508b934:	10986a04 	addi	r2,r2,25000
 508b938:	1421883a 	add	r16,r2,r16
 508b93c:	81000017 	ldw	r4,0(r16)
 508b940:	81400117 	ldw	r5,4(r16)
 508b944:	003ff306 	br	508b914 <_mprec_log10+0x3c>

0508b948 <__copybits>:
 508b948:	297fffc4 	addi	r5,r5,-1
 508b94c:	280fd17a 	srai	r7,r5,5
 508b950:	31400417 	ldw	r5,16(r6)
 508b954:	30800504 	addi	r2,r6,20
 508b958:	39c00044 	addi	r7,r7,1
 508b95c:	280a90ba 	slli	r5,r5,2
 508b960:	380e90ba 	slli	r7,r7,2
 508b964:	114b883a 	add	r5,r2,r5
 508b968:	21cf883a 	add	r7,r4,r7
 508b96c:	11400c2e 	bgeu	r2,r5,508b9a0 <__copybits+0x58>
 508b970:	2007883a 	mov	r3,r4
 508b974:	12000017 	ldw	r8,0(r2)
 508b978:	10800104 	addi	r2,r2,4
 508b97c:	18c00104 	addi	r3,r3,4
 508b980:	1a3fff15 	stw	r8,-4(r3)
 508b984:	117ffb36 	bltu	r2,r5,508b974 <__copybits+0x2c>
 508b988:	2985c83a 	sub	r2,r5,r6
 508b98c:	10bffac4 	addi	r2,r2,-21
 508b990:	1004d0ba 	srli	r2,r2,2
 508b994:	10800044 	addi	r2,r2,1
 508b998:	100490ba 	slli	r2,r2,2
 508b99c:	2089883a 	add	r4,r4,r2
 508b9a0:	21c0072e 	bgeu	r4,r7,508b9c0 <__copybits+0x78>
 508b9a4:	39bfffc4 	addi	r6,r7,-1
 508b9a8:	310dc83a 	sub	r6,r6,r4
 508b9ac:	300cd0ba 	srli	r6,r6,2
 508b9b0:	000b883a 	mov	r5,zero
 508b9b4:	31800044 	addi	r6,r6,1
 508b9b8:	300c90ba 	slli	r6,r6,2
 508b9bc:	508a7d41 	jmpi	508a7d4 <memset>
 508b9c0:	f800283a 	ret

0508b9c4 <__any_on>:
 508b9c4:	20c00417 	ldw	r3,16(r4)
 508b9c8:	280dd17a 	srai	r6,r5,5
 508b9cc:	21000504 	addi	r4,r4,20
 508b9d0:	1980080e 	bge	r3,r6,508b9f4 <__any_on+0x30>
 508b9d4:	180490ba 	slli	r2,r3,2
 508b9d8:	2085883a 	add	r2,r4,r2
 508b9dc:	20800f2e 	bgeu	r4,r2,508ba1c <__any_on+0x58>
 508b9e0:	10ffff17 	ldw	r3,-4(r2)
 508b9e4:	10bfff04 	addi	r2,r2,-4
 508b9e8:	183ffc26 	beq	r3,zero,508b9dc <__any_on+0x18>
 508b9ec:	00800044 	movi	r2,1
 508b9f0:	f800283a 	ret
 508b9f4:	300490ba 	slli	r2,r6,2
 508b9f8:	2085883a 	add	r2,r4,r2
 508b9fc:	30fff70e 	bge	r6,r3,508b9dc <__any_on+0x18>
 508ba00:	294007cc 	andi	r5,r5,31
 508ba04:	283ff526 	beq	r5,zero,508b9dc <__any_on+0x18>
 508ba08:	11800017 	ldw	r6,0(r2)
 508ba0c:	3146d83a 	srl	r3,r6,r5
 508ba10:	194a983a 	sll	r5,r3,r5
 508ba14:	317ff51e 	bne	r6,r5,508b9ec <__any_on+0x28>
 508ba18:	003ff006 	br	508b9dc <__any_on+0x18>
 508ba1c:	0005883a 	mov	r2,zero
 508ba20:	f800283a 	ret

0508ba24 <_realloc_r>:
 508ba24:	defff504 	addi	sp,sp,-44
 508ba28:	dc800315 	stw	r18,12(sp)
 508ba2c:	dfc00a15 	stw	ra,40(sp)
 508ba30:	df000915 	stw	fp,36(sp)
 508ba34:	ddc00815 	stw	r23,32(sp)
 508ba38:	dd800715 	stw	r22,28(sp)
 508ba3c:	dd400615 	stw	r21,24(sp)
 508ba40:	dd000515 	stw	r20,20(sp)
 508ba44:	dcc00415 	stw	r19,16(sp)
 508ba48:	dc400215 	stw	r17,8(sp)
 508ba4c:	dc000115 	stw	r16,4(sp)
 508ba50:	3025883a 	mov	r18,r6
 508ba54:	28008b26 	beq	r5,zero,508bc84 <_realloc_r+0x260>
 508ba58:	2821883a 	mov	r16,r5
 508ba5c:	2027883a 	mov	r19,r4
 508ba60:	944002c4 	addi	r17,r18,11
 508ba64:	50932f00 	call	50932f0 <__malloc_lock>
 508ba68:	888005f0 	cmpltui	r2,r17,23
 508ba6c:	1000521e 	bne	r2,zero,508bbb8 <_realloc_r+0x194>
 508ba70:	017ffe04 	movi	r5,-8
 508ba74:	8962703a 	and	r17,r17,r5
 508ba78:	8807883a 	mov	r3,r17
 508ba7c:	88005116 	blt	r17,zero,508bbc4 <_realloc_r+0x1a0>
 508ba80:	8c805036 	bltu	r17,r18,508bbc4 <_realloc_r+0x1a0>
 508ba84:	80bfff17 	ldw	r2,-4(r16)
 508ba88:	017fff04 	movi	r5,-4
 508ba8c:	857ffe04 	addi	r21,r16,-8
 508ba90:	1168703a 	and	r20,r2,r5
 508ba94:	ad2d883a 	add	r22,r21,r20
 508ba98:	a0c0390e 	bge	r20,r3,508bb80 <_realloc_r+0x15c>
 508ba9c:	07014274 	movhi	fp,1289
 508baa0:	e71ab904 	addi	fp,fp,27364
 508baa4:	e2000217 	ldw	r8,8(fp)
 508baa8:	b1000117 	ldw	r4,4(r22)
 508baac:	45808e26 	beq	r8,r22,508bce8 <_realloc_r+0x2c4>
 508bab0:	01bfff84 	movi	r6,-2
 508bab4:	218c703a 	and	r6,r4,r6
 508bab8:	b18d883a 	add	r6,r22,r6
 508babc:	31800117 	ldw	r6,4(r6)
 508bac0:	3180004c 	andi	r6,r6,1
 508bac4:	30004f1e 	bne	r6,zero,508bc04 <_realloc_r+0x1e0>
 508bac8:	2148703a 	and	r4,r4,r5
 508bacc:	a10b883a 	add	r5,r20,r4
 508bad0:	28c0bf0e 	bge	r5,r3,508bdd0 <_realloc_r+0x3ac>
 508bad4:	1080004c 	andi	r2,r2,1
 508bad8:	10004c1e 	bne	r2,zero,508bc0c <_realloc_r+0x1e8>
 508badc:	81fffe17 	ldw	r7,-8(r16)
 508bae0:	00bfff04 	movi	r2,-4
 508bae4:	a9cfc83a 	sub	r7,r21,r7
 508bae8:	39400117 	ldw	r5,4(r7)
 508baec:	288a703a 	and	r5,r5,r2
 508baf0:	b0000426 	beq	r22,zero,508bb04 <_realloc_r+0xe0>
 508baf4:	a16f883a 	add	r23,r20,r5
 508baf8:	b92f883a 	add	r23,r23,r4
 508bafc:	4580bf26 	beq	r8,r22,508bdfc <_realloc_r+0x3d8>
 508bb00:	b8c0930e 	bge	r23,r3,508bd50 <_realloc_r+0x32c>
 508bb04:	38004126 	beq	r7,zero,508bc0c <_realloc_r+0x1e8>
 508bb08:	a16f883a 	add	r23,r20,r5
 508bb0c:	b8c03f16 	blt	r23,r3,508bc0c <_realloc_r+0x1e8>
 508bb10:	38800317 	ldw	r2,12(r7)
 508bb14:	38c00217 	ldw	r3,8(r7)
 508bb18:	a1bfff04 	addi	r6,r20,-4
 508bb1c:	31400968 	cmpgeui	r5,r6,37
 508bb20:	18800315 	stw	r2,12(r3)
 508bb24:	10c00215 	stw	r3,8(r2)
 508bb28:	39000204 	addi	r4,r7,8
 508bb2c:	3ded883a 	add	r22,r7,r23
 508bb30:	2800941e 	bne	r5,zero,508bd84 <_realloc_r+0x360>
 508bb34:	30800530 	cmpltui	r2,r6,20
 508bb38:	80c00017 	ldw	r3,0(r16)
 508bb3c:	1000df1e 	bne	r2,zero,508bebc <_realloc_r+0x498>
 508bb40:	38c00215 	stw	r3,8(r7)
 508bb44:	80c00117 	ldw	r3,4(r16)
 508bb48:	30800728 	cmpgeui	r2,r6,28
 508bb4c:	38c00315 	stw	r3,12(r7)
 508bb50:	1000dc1e 	bne	r2,zero,508bec4 <_realloc_r+0x4a0>
 508bb54:	80c00217 	ldw	r3,8(r16)
 508bb58:	38800404 	addi	r2,r7,16
 508bb5c:	84000204 	addi	r16,r16,8
 508bb60:	10c00015 	stw	r3,0(r2)
 508bb64:	80c00117 	ldw	r3,4(r16)
 508bb68:	b829883a 	mov	r20,r23
 508bb6c:	382b883a 	mov	r21,r7
 508bb70:	10c00115 	stw	r3,4(r2)
 508bb74:	80c00217 	ldw	r3,8(r16)
 508bb78:	2021883a 	mov	r16,r4
 508bb7c:	10c00215 	stw	r3,8(r2)
 508bb80:	a9800117 	ldw	r6,4(r21)
 508bb84:	a445c83a 	sub	r2,r20,r17
 508bb88:	10c00430 	cmpltui	r3,r2,16
 508bb8c:	3180004c 	andi	r6,r6,1
 508bb90:	18004926 	beq	r3,zero,508bcb8 <_realloc_r+0x294>
 508bb94:	a18cb03a 	or	r6,r20,r6
 508bb98:	a9800115 	stw	r6,4(r21)
 508bb9c:	b0800117 	ldw	r2,4(r22)
 508bba0:	10800054 	ori	r2,r2,1
 508bba4:	b0800115 	stw	r2,4(r22)
 508bba8:	9809883a 	mov	r4,r19
 508bbac:	50933140 	call	5093314 <__malloc_unlock>
 508bbb0:	8025883a 	mov	r18,r16
 508bbb4:	00000606 	br	508bbd0 <_realloc_r+0x1ac>
 508bbb8:	04400404 	movi	r17,16
 508bbbc:	00c00404 	movi	r3,16
 508bbc0:	8cbfb02e 	bgeu	r17,r18,508ba84 <_realloc_r+0x60>
 508bbc4:	00800304 	movi	r2,12
 508bbc8:	98800015 	stw	r2,0(r19)
 508bbcc:	0025883a 	mov	r18,zero
 508bbd0:	9005883a 	mov	r2,r18
 508bbd4:	dfc00a17 	ldw	ra,40(sp)
 508bbd8:	df000917 	ldw	fp,36(sp)
 508bbdc:	ddc00817 	ldw	r23,32(sp)
 508bbe0:	dd800717 	ldw	r22,28(sp)
 508bbe4:	dd400617 	ldw	r21,24(sp)
 508bbe8:	dd000517 	ldw	r20,20(sp)
 508bbec:	dcc00417 	ldw	r19,16(sp)
 508bbf0:	dc800317 	ldw	r18,12(sp)
 508bbf4:	dc400217 	ldw	r17,8(sp)
 508bbf8:	dc000117 	ldw	r16,4(sp)
 508bbfc:	dec00b04 	addi	sp,sp,44
 508bc00:	f800283a 	ret
 508bc04:	1080004c 	andi	r2,r2,1
 508bc08:	10006c26 	beq	r2,zero,508bdbc <_realloc_r+0x398>
 508bc0c:	900b883a 	mov	r5,r18
 508bc10:	9809883a 	mov	r4,r19
 508bc14:	5089cf80 	call	5089cf8 <_malloc_r>
 508bc18:	1025883a 	mov	r18,r2
 508bc1c:	10001626 	beq	r2,zero,508bc78 <_realloc_r+0x254>
 508bc20:	80bfff17 	ldw	r2,-4(r16)
 508bc24:	013fff84 	movi	r4,-2
 508bc28:	90fffe04 	addi	r3,r18,-8
 508bc2c:	1104703a 	and	r2,r2,r4
 508bc30:	a885883a 	add	r2,r21,r2
 508bc34:	10c05b26 	beq	r2,r3,508bda4 <_realloc_r+0x380>
 508bc38:	a1bfff04 	addi	r6,r20,-4
 508bc3c:	30800968 	cmpgeui	r2,r6,37
 508bc40:	10006a1e 	bne	r2,zero,508bdec <_realloc_r+0x3c8>
 508bc44:	30800530 	cmpltui	r2,r6,20
 508bc48:	81000017 	ldw	r4,0(r16)
 508bc4c:	10003726 	beq	r2,zero,508bd2c <_realloc_r+0x308>
 508bc50:	9005883a 	mov	r2,r18
 508bc54:	8007883a 	mov	r3,r16
 508bc58:	11000015 	stw	r4,0(r2)
 508bc5c:	19000117 	ldw	r4,4(r3)
 508bc60:	11000115 	stw	r4,4(r2)
 508bc64:	18c00217 	ldw	r3,8(r3)
 508bc68:	10c00215 	stw	r3,8(r2)
 508bc6c:	800b883a 	mov	r5,r16
 508bc70:	9809883a 	mov	r4,r19
 508bc74:	508919c0 	call	508919c <_free_r>
 508bc78:	9809883a 	mov	r4,r19
 508bc7c:	50933140 	call	5093314 <__malloc_unlock>
 508bc80:	003fd306 	br	508bbd0 <_realloc_r+0x1ac>
 508bc84:	300b883a 	mov	r5,r6
 508bc88:	dfc00a17 	ldw	ra,40(sp)
 508bc8c:	df000917 	ldw	fp,36(sp)
 508bc90:	ddc00817 	ldw	r23,32(sp)
 508bc94:	dd800717 	ldw	r22,28(sp)
 508bc98:	dd400617 	ldw	r21,24(sp)
 508bc9c:	dd000517 	ldw	r20,20(sp)
 508bca0:	dcc00417 	ldw	r19,16(sp)
 508bca4:	dc800317 	ldw	r18,12(sp)
 508bca8:	dc400217 	ldw	r17,8(sp)
 508bcac:	dc000117 	ldw	r16,4(sp)
 508bcb0:	dec00b04 	addi	sp,sp,44
 508bcb4:	5089cf81 	jmpi	5089cf8 <_malloc_r>
 508bcb8:	344cb03a 	or	r6,r6,r17
 508bcbc:	a9800115 	stw	r6,4(r21)
 508bcc0:	ac4b883a 	add	r5,r21,r17
 508bcc4:	10800054 	ori	r2,r2,1
 508bcc8:	28800115 	stw	r2,4(r5)
 508bccc:	b0800117 	ldw	r2,4(r22)
 508bcd0:	29400204 	addi	r5,r5,8
 508bcd4:	9809883a 	mov	r4,r19
 508bcd8:	10800054 	ori	r2,r2,1
 508bcdc:	b0800115 	stw	r2,4(r22)
 508bce0:	508919c0 	call	508919c <_free_r>
 508bce4:	003fb006 	br	508bba8 <_realloc_r+0x184>
 508bce8:	2148703a 	and	r4,r4,r5
 508bcec:	a10b883a 	add	r5,r20,r4
 508bcf0:	89800404 	addi	r6,r17,16
 508bcf4:	29bf7716 	blt	r5,r6,508bad4 <_realloc_r+0xb0>
 508bcf8:	ac6b883a 	add	r21,r21,r17
 508bcfc:	2c45c83a 	sub	r2,r5,r17
 508bd00:	e5400215 	stw	r21,8(fp)
 508bd04:	10800054 	ori	r2,r2,1
 508bd08:	a8800115 	stw	r2,4(r21)
 508bd0c:	80bfff17 	ldw	r2,-4(r16)
 508bd10:	9809883a 	mov	r4,r19
 508bd14:	8025883a 	mov	r18,r16
 508bd18:	1080004c 	andi	r2,r2,1
 508bd1c:	1462b03a 	or	r17,r2,r17
 508bd20:	847fff15 	stw	r17,-4(r16)
 508bd24:	50933140 	call	5093314 <__malloc_unlock>
 508bd28:	003fa906 	br	508bbd0 <_realloc_r+0x1ac>
 508bd2c:	91000015 	stw	r4,0(r18)
 508bd30:	80c00117 	ldw	r3,4(r16)
 508bd34:	30800728 	cmpgeui	r2,r6,28
 508bd38:	90c00115 	stw	r3,4(r18)
 508bd3c:	1000551e 	bne	r2,zero,508be94 <_realloc_r+0x470>
 508bd40:	81000217 	ldw	r4,8(r16)
 508bd44:	80c00204 	addi	r3,r16,8
 508bd48:	90800204 	addi	r2,r18,8
 508bd4c:	003fc206 	br	508bc58 <_realloc_r+0x234>
 508bd50:	b0800317 	ldw	r2,12(r22)
 508bd54:	b0c00217 	ldw	r3,8(r22)
 508bd58:	a1bfff04 	addi	r6,r20,-4
 508bd5c:	31400968 	cmpgeui	r5,r6,37
 508bd60:	18800315 	stw	r2,12(r3)
 508bd64:	10c00215 	stw	r3,8(r2)
 508bd68:	38c00217 	ldw	r3,8(r7)
 508bd6c:	38800317 	ldw	r2,12(r7)
 508bd70:	39000204 	addi	r4,r7,8
 508bd74:	3ded883a 	add	r22,r7,r23
 508bd78:	18800315 	stw	r2,12(r3)
 508bd7c:	10c00215 	stw	r3,8(r2)
 508bd80:	283f6c26 	beq	r5,zero,508bb34 <_realloc_r+0x110>
 508bd84:	800b883a 	mov	r5,r16
 508bd88:	d9c00015 	stw	r7,0(sp)
 508bd8c:	508a6a80 	call	508a6a8 <memmove>
 508bd90:	d9c00017 	ldw	r7,0(sp)
 508bd94:	1021883a 	mov	r16,r2
 508bd98:	b829883a 	mov	r20,r23
 508bd9c:	382b883a 	mov	r21,r7
 508bda0:	003f7706 	br	508bb80 <_realloc_r+0x15c>
 508bda4:	90bfff17 	ldw	r2,-4(r18)
 508bda8:	00ffff04 	movi	r3,-4
 508bdac:	10c4703a 	and	r2,r2,r3
 508bdb0:	a0a9883a 	add	r20,r20,r2
 508bdb4:	ad2d883a 	add	r22,r21,r20
 508bdb8:	003f7106 	br	508bb80 <_realloc_r+0x15c>
 508bdbc:	81fffe17 	ldw	r7,-8(r16)
 508bdc0:	a9cfc83a 	sub	r7,r21,r7
 508bdc4:	38800117 	ldw	r2,4(r7)
 508bdc8:	114a703a 	and	r5,r2,r5
 508bdcc:	003f4d06 	br	508bb04 <_realloc_r+0xe0>
 508bdd0:	b0800317 	ldw	r2,12(r22)
 508bdd4:	b0c00217 	ldw	r3,8(r22)
 508bdd8:	2829883a 	mov	r20,r5
 508bddc:	a96d883a 	add	r22,r21,r5
 508bde0:	18800315 	stw	r2,12(r3)
 508bde4:	10c00215 	stw	r3,8(r2)
 508bde8:	003f6506 	br	508bb80 <_realloc_r+0x15c>
 508bdec:	800b883a 	mov	r5,r16
 508bdf0:	9009883a 	mov	r4,r18
 508bdf4:	508a6a80 	call	508a6a8 <memmove>
 508bdf8:	003f9c06 	br	508bc6c <_realloc_r+0x248>
 508bdfc:	88800404 	addi	r2,r17,16
 508be00:	b8bf4016 	blt	r23,r2,508bb04 <_realloc_r+0xe0>
 508be04:	38800317 	ldw	r2,12(r7)
 508be08:	38c00217 	ldw	r3,8(r7)
 508be0c:	a1bfff04 	addi	r6,r20,-4
 508be10:	31000968 	cmpgeui	r4,r6,37
 508be14:	18800315 	stw	r2,12(r3)
 508be18:	10c00215 	stw	r3,8(r2)
 508be1c:	3c800204 	addi	r18,r7,8
 508be20:	20003b1e 	bne	r4,zero,508bf10 <_realloc_r+0x4ec>
 508be24:	30800530 	cmpltui	r2,r6,20
 508be28:	80c00017 	ldw	r3,0(r16)
 508be2c:	1000361e 	bne	r2,zero,508bf08 <_realloc_r+0x4e4>
 508be30:	38c00215 	stw	r3,8(r7)
 508be34:	80c00117 	ldw	r3,4(r16)
 508be38:	30800728 	cmpgeui	r2,r6,28
 508be3c:	38c00315 	stw	r3,12(r7)
 508be40:	1000401e 	bne	r2,zero,508bf44 <_realloc_r+0x520>
 508be44:	80c00217 	ldw	r3,8(r16)
 508be48:	38800404 	addi	r2,r7,16
 508be4c:	84000204 	addi	r16,r16,8
 508be50:	10c00015 	stw	r3,0(r2)
 508be54:	80c00117 	ldw	r3,4(r16)
 508be58:	10c00115 	stw	r3,4(r2)
 508be5c:	80c00217 	ldw	r3,8(r16)
 508be60:	10c00215 	stw	r3,8(r2)
 508be64:	3c47883a 	add	r3,r7,r17
 508be68:	bc45c83a 	sub	r2,r23,r17
 508be6c:	e0c00215 	stw	r3,8(fp)
 508be70:	10800054 	ori	r2,r2,1
 508be74:	18800115 	stw	r2,4(r3)
 508be78:	38800117 	ldw	r2,4(r7)
 508be7c:	9809883a 	mov	r4,r19
 508be80:	1080004c 	andi	r2,r2,1
 508be84:	1462b03a 	or	r17,r2,r17
 508be88:	3c400115 	stw	r17,4(r7)
 508be8c:	50933140 	call	5093314 <__malloc_unlock>
 508be90:	003f4f06 	br	508bbd0 <_realloc_r+0x1ac>
 508be94:	80800217 	ldw	r2,8(r16)
 508be98:	31800920 	cmpeqi	r6,r6,36
 508be9c:	90800215 	stw	r2,8(r18)
 508bea0:	80800317 	ldw	r2,12(r16)
 508bea4:	90800315 	stw	r2,12(r18)
 508bea8:	81000417 	ldw	r4,16(r16)
 508beac:	30000f1e 	bne	r6,zero,508beec <_realloc_r+0x4c8>
 508beb0:	80c00404 	addi	r3,r16,16
 508beb4:	90800404 	addi	r2,r18,16
 508beb8:	003f6706 	br	508bc58 <_realloc_r+0x234>
 508bebc:	2005883a 	mov	r2,r4
 508bec0:	003f2706 	br	508bb60 <_realloc_r+0x13c>
 508bec4:	80800217 	ldw	r2,8(r16)
 508bec8:	31800920 	cmpeqi	r6,r6,36
 508becc:	38800415 	stw	r2,16(r7)
 508bed0:	80800317 	ldw	r2,12(r16)
 508bed4:	38800515 	stw	r2,20(r7)
 508bed8:	80c00417 	ldw	r3,16(r16)
 508bedc:	3000121e 	bne	r6,zero,508bf28 <_realloc_r+0x504>
 508bee0:	38800604 	addi	r2,r7,24
 508bee4:	84000404 	addi	r16,r16,16
 508bee8:	003f1d06 	br	508bb60 <_realloc_r+0x13c>
 508beec:	91000415 	stw	r4,16(r18)
 508bef0:	81000517 	ldw	r4,20(r16)
 508bef4:	80c00604 	addi	r3,r16,24
 508bef8:	90800604 	addi	r2,r18,24
 508befc:	91000515 	stw	r4,20(r18)
 508bf00:	81000617 	ldw	r4,24(r16)
 508bf04:	003f5406 	br	508bc58 <_realloc_r+0x234>
 508bf08:	9005883a 	mov	r2,r18
 508bf0c:	003fd006 	br	508be50 <_realloc_r+0x42c>
 508bf10:	800b883a 	mov	r5,r16
 508bf14:	9009883a 	mov	r4,r18
 508bf18:	d9c00015 	stw	r7,0(sp)
 508bf1c:	508a6a80 	call	508a6a8 <memmove>
 508bf20:	d9c00017 	ldw	r7,0(sp)
 508bf24:	003fcf06 	br	508be64 <_realloc_r+0x440>
 508bf28:	84000604 	addi	r16,r16,24
 508bf2c:	38c00615 	stw	r3,24(r7)
 508bf30:	80ffff17 	ldw	r3,-4(r16)
 508bf34:	38800804 	addi	r2,r7,32
 508bf38:	38c00715 	stw	r3,28(r7)
 508bf3c:	80c00017 	ldw	r3,0(r16)
 508bf40:	003f0706 	br	508bb60 <_realloc_r+0x13c>
 508bf44:	80800217 	ldw	r2,8(r16)
 508bf48:	31800920 	cmpeqi	r6,r6,36
 508bf4c:	38800415 	stw	r2,16(r7)
 508bf50:	80800317 	ldw	r2,12(r16)
 508bf54:	38800515 	stw	r2,20(r7)
 508bf58:	80c00417 	ldw	r3,16(r16)
 508bf5c:	3000031e 	bne	r6,zero,508bf6c <_realloc_r+0x548>
 508bf60:	38800604 	addi	r2,r7,24
 508bf64:	84000404 	addi	r16,r16,16
 508bf68:	003fb906 	br	508be50 <_realloc_r+0x42c>
 508bf6c:	84000604 	addi	r16,r16,24
 508bf70:	38c00615 	stw	r3,24(r7)
 508bf74:	80ffff17 	ldw	r3,-4(r16)
 508bf78:	38800804 	addi	r2,r7,32
 508bf7c:	38c00715 	stw	r3,28(r7)
 508bf80:	80c00017 	ldw	r3,0(r16)
 508bf84:	003fb206 	br	508be50 <_realloc_r+0x42c>

0508bf88 <_sbrk_r>:
 508bf88:	defffe04 	addi	sp,sp,-8
 508bf8c:	dc000015 	stw	r16,0(sp)
 508bf90:	008142b4 	movhi	r2,1290
 508bf94:	2021883a 	mov	r16,r4
 508bf98:	2809883a 	mov	r4,r5
 508bf9c:	dfc00115 	stw	ra,4(sp)
 508bfa0:	1027a615 	stw	zero,-24936(r2)
 508bfa4:	50934c80 	call	50934c8 <sbrk>
 508bfa8:	10ffffd8 	cmpnei	r3,r2,-1
 508bfac:	18000426 	beq	r3,zero,508bfc0 <_sbrk_r+0x38>
 508bfb0:	dfc00117 	ldw	ra,4(sp)
 508bfb4:	dc000017 	ldw	r16,0(sp)
 508bfb8:	dec00204 	addi	sp,sp,8
 508bfbc:	f800283a 	ret
 508bfc0:	00c142b4 	movhi	r3,1290
 508bfc4:	18e7a617 	ldw	r3,-24936(r3)
 508bfc8:	183ff926 	beq	r3,zero,508bfb0 <_sbrk_r+0x28>
 508bfcc:	80c00015 	stw	r3,0(r16)
 508bfd0:	dfc00117 	ldw	ra,4(sp)
 508bfd4:	dc000017 	ldw	r16,0(sp)
 508bfd8:	dec00204 	addi	sp,sp,8
 508bfdc:	f800283a 	ret

0508bfe0 <__sread>:
 508bfe0:	defffe04 	addi	sp,sp,-8
 508bfe4:	dc000015 	stw	r16,0(sp)
 508bfe8:	2821883a 	mov	r16,r5
 508bfec:	2940038f 	ldh	r5,14(r5)
 508bff0:	dfc00115 	stw	ra,4(sp)
 508bff4:	508f1240 	call	508f124 <_read_r>
 508bff8:	10000716 	blt	r2,zero,508c018 <__sread+0x38>
 508bffc:	80c01417 	ldw	r3,80(r16)
 508c000:	1887883a 	add	r3,r3,r2
 508c004:	80c01415 	stw	r3,80(r16)
 508c008:	dfc00117 	ldw	ra,4(sp)
 508c00c:	dc000017 	ldw	r16,0(sp)
 508c010:	dec00204 	addi	sp,sp,8
 508c014:	f800283a 	ret
 508c018:	80c0030b 	ldhu	r3,12(r16)
 508c01c:	18fbffcc 	andi	r3,r3,61439
 508c020:	80c0030d 	sth	r3,12(r16)
 508c024:	dfc00117 	ldw	ra,4(sp)
 508c028:	dc000017 	ldw	r16,0(sp)
 508c02c:	dec00204 	addi	sp,sp,8
 508c030:	f800283a 	ret

0508c034 <__seofread>:
 508c034:	0005883a 	mov	r2,zero
 508c038:	f800283a 	ret

0508c03c <__swrite>:
 508c03c:	2880030b 	ldhu	r2,12(r5)
 508c040:	defffb04 	addi	sp,sp,-20
 508c044:	dcc00315 	stw	r19,12(sp)
 508c048:	dc800215 	stw	r18,8(sp)
 508c04c:	dc400115 	stw	r17,4(sp)
 508c050:	dc000015 	stw	r16,0(sp)
 508c054:	dfc00415 	stw	ra,16(sp)
 508c058:	10c0400c 	andi	r3,r2,256
 508c05c:	2821883a 	mov	r16,r5
 508c060:	2023883a 	mov	r17,r4
 508c064:	2940038f 	ldh	r5,14(r5)
 508c068:	3025883a 	mov	r18,r6
 508c06c:	3827883a 	mov	r19,r7
 508c070:	18000c1e 	bne	r3,zero,508c0a4 <__swrite+0x68>
 508c074:	10bbffcc 	andi	r2,r2,61439
 508c078:	980f883a 	mov	r7,r19
 508c07c:	900d883a 	mov	r6,r18
 508c080:	8809883a 	mov	r4,r17
 508c084:	8080030d 	sth	r2,12(r16)
 508c088:	dfc00417 	ldw	ra,16(sp)
 508c08c:	dcc00317 	ldw	r19,12(sp)
 508c090:	dc800217 	ldw	r18,8(sp)
 508c094:	dc400117 	ldw	r17,4(sp)
 508c098:	dc000017 	ldw	r16,0(sp)
 508c09c:	dec00504 	addi	sp,sp,20
 508c0a0:	508e8e41 	jmpi	508e8e4 <_write_r>
 508c0a4:	01c00084 	movi	r7,2
 508c0a8:	000d883a 	mov	r6,zero
 508c0ac:	508f0700 	call	508f070 <_lseek_r>
 508c0b0:	8080030b 	ldhu	r2,12(r16)
 508c0b4:	8140038f 	ldh	r5,14(r16)
 508c0b8:	003fee06 	br	508c074 <__swrite+0x38>

0508c0bc <__sseek>:
 508c0bc:	defffe04 	addi	sp,sp,-8
 508c0c0:	dc000015 	stw	r16,0(sp)
 508c0c4:	2821883a 	mov	r16,r5
 508c0c8:	2940038f 	ldh	r5,14(r5)
 508c0cc:	dfc00115 	stw	ra,4(sp)
 508c0d0:	508f0700 	call	508f070 <_lseek_r>
 508c0d4:	10ffffd8 	cmpnei	r3,r2,-1
 508c0d8:	18000826 	beq	r3,zero,508c0fc <__sseek+0x40>
 508c0dc:	80c0030b 	ldhu	r3,12(r16)
 508c0e0:	80801415 	stw	r2,80(r16)
 508c0e4:	18c40014 	ori	r3,r3,4096
 508c0e8:	80c0030d 	sth	r3,12(r16)
 508c0ec:	dfc00117 	ldw	ra,4(sp)
 508c0f0:	dc000017 	ldw	r16,0(sp)
 508c0f4:	dec00204 	addi	sp,sp,8
 508c0f8:	f800283a 	ret
 508c0fc:	80c0030b 	ldhu	r3,12(r16)
 508c100:	18fbffcc 	andi	r3,r3,61439
 508c104:	80c0030d 	sth	r3,12(r16)
 508c108:	dfc00117 	ldw	ra,4(sp)
 508c10c:	dc000017 	ldw	r16,0(sp)
 508c110:	dec00204 	addi	sp,sp,8
 508c114:	f800283a 	ret

0508c118 <__sclose>:
 508c118:	2940038f 	ldh	r5,14(r5)
 508c11c:	508e9481 	jmpi	508e948 <_close_r>

0508c120 <__ssprint_r>:
 508c120:	30800217 	ldw	r2,8(r6)
 508c124:	defff604 	addi	sp,sp,-40
 508c128:	dcc00315 	stw	r19,12(sp)
 508c12c:	dfc00915 	stw	ra,36(sp)
 508c130:	df000815 	stw	fp,32(sp)
 508c134:	ddc00715 	stw	r23,28(sp)
 508c138:	dd800615 	stw	r22,24(sp)
 508c13c:	dd400515 	stw	r21,20(sp)
 508c140:	dd000415 	stw	r20,16(sp)
 508c144:	dc800215 	stw	r18,8(sp)
 508c148:	dc400115 	stw	r17,4(sp)
 508c14c:	dc000015 	stw	r16,0(sp)
 508c150:	3027883a 	mov	r19,r6
 508c154:	10005426 	beq	r2,zero,508c2a8 <__ssprint_r+0x188>
 508c158:	2029883a 	mov	r20,r4
 508c15c:	35800017 	ldw	r22,0(r6)
 508c160:	29000017 	ldw	r4,0(r5)
 508c164:	2c400217 	ldw	r17,8(r5)
 508c168:	2821883a 	mov	r16,r5
 508c16c:	057edfc4 	movi	r21,-1153
 508c170:	00003406 	br	508c244 <__ssprint_r+0x124>
 508c174:	8080030b 	ldhu	r2,12(r16)
 508c178:	10c1200c 	andi	r3,r2,1152
 508c17c:	18002426 	beq	r3,zero,508c210 <__ssprint_r+0xf0>
 508c180:	81800517 	ldw	r6,20(r16)
 508c184:	81400417 	ldw	r5,16(r16)
 508c188:	90c00044 	addi	r3,r18,1
 508c18c:	318000e4 	muli	r6,r6,3
 508c190:	216fc83a 	sub	r23,r4,r5
 508c194:	1dc7883a 	add	r3,r3,r23
 508c198:	3022d7fa 	srli	r17,r6,31
 508c19c:	89a3883a 	add	r17,r17,r6
 508c1a0:	8823d07a 	srai	r17,r17,1
 508c1a4:	880d883a 	mov	r6,r17
 508c1a8:	88c0022e 	bgeu	r17,r3,508c1b4 <__ssprint_r+0x94>
 508c1ac:	1823883a 	mov	r17,r3
 508c1b0:	180d883a 	mov	r6,r3
 508c1b4:	1081000c 	andi	r2,r2,1024
 508c1b8:	10002b26 	beq	r2,zero,508c268 <__ssprint_r+0x148>
 508c1bc:	300b883a 	mov	r5,r6
 508c1c0:	a009883a 	mov	r4,r20
 508c1c4:	5089cf80 	call	5089cf8 <_malloc_r>
 508c1c8:	10002e26 	beq	r2,zero,508c284 <__ssprint_r+0x164>
 508c1cc:	81400417 	ldw	r5,16(r16)
 508c1d0:	b80d883a 	mov	r6,r23
 508c1d4:	1009883a 	mov	r4,r2
 508c1d8:	508a5a80 	call	508a5a8 <memcpy>
 508c1dc:	1007883a 	mov	r3,r2
 508c1e0:	8080030b 	ldhu	r2,12(r16)
 508c1e4:	1544703a 	and	r2,r2,r21
 508c1e8:	10802014 	ori	r2,r2,128
 508c1ec:	8080030d 	sth	r2,12(r16)
 508c1f0:	1dc9883a 	add	r4,r3,r23
 508c1f4:	8defc83a 	sub	r23,r17,r23
 508c1f8:	84400515 	stw	r17,20(r16)
 508c1fc:	85c00215 	stw	r23,8(r16)
 508c200:	80c00415 	stw	r3,16(r16)
 508c204:	81000015 	stw	r4,0(r16)
 508c208:	9023883a 	mov	r17,r18
 508c20c:	902f883a 	mov	r23,r18
 508c210:	b80d883a 	mov	r6,r23
 508c214:	e00b883a 	mov	r5,fp
 508c218:	508a6a80 	call	508a6a8 <memmove>
 508c21c:	80c00217 	ldw	r3,8(r16)
 508c220:	81000017 	ldw	r4,0(r16)
 508c224:	98800217 	ldw	r2,8(r19)
 508c228:	1c63c83a 	sub	r17,r3,r17
 508c22c:	25c9883a 	add	r4,r4,r23
 508c230:	84400215 	stw	r17,8(r16)
 508c234:	81000015 	stw	r4,0(r16)
 508c238:	14a5c83a 	sub	r18,r2,r18
 508c23c:	9c800215 	stw	r18,8(r19)
 508c240:	90001926 	beq	r18,zero,508c2a8 <__ssprint_r+0x188>
 508c244:	b4800117 	ldw	r18,4(r22)
 508c248:	b7000017 	ldw	fp,0(r22)
 508c24c:	882f883a 	mov	r23,r17
 508c250:	b5800204 	addi	r22,r22,8
 508c254:	903ffb26 	beq	r18,zero,508c244 <__ssprint_r+0x124>
 508c258:	947fc62e 	bgeu	r18,r17,508c174 <__ssprint_r+0x54>
 508c25c:	9023883a 	mov	r17,r18
 508c260:	902f883a 	mov	r23,r18
 508c264:	003fea06 	br	508c210 <__ssprint_r+0xf0>
 508c268:	a009883a 	mov	r4,r20
 508c26c:	508ba240 	call	508ba24 <_realloc_r>
 508c270:	1007883a 	mov	r3,r2
 508c274:	103fde1e 	bne	r2,zero,508c1f0 <__ssprint_r+0xd0>
 508c278:	81400417 	ldw	r5,16(r16)
 508c27c:	a009883a 	mov	r4,r20
 508c280:	508919c0 	call	508919c <_free_r>
 508c284:	80c0030b 	ldhu	r3,12(r16)
 508c288:	00800304 	movi	r2,12
 508c28c:	a0800015 	stw	r2,0(r20)
 508c290:	18c01014 	ori	r3,r3,64
 508c294:	80c0030d 	sth	r3,12(r16)
 508c298:	00bfffc4 	movi	r2,-1
 508c29c:	98000215 	stw	zero,8(r19)
 508c2a0:	98000115 	stw	zero,4(r19)
 508c2a4:	00000206 	br	508c2b0 <__ssprint_r+0x190>
 508c2a8:	98000115 	stw	zero,4(r19)
 508c2ac:	0005883a 	mov	r2,zero
 508c2b0:	dfc00917 	ldw	ra,36(sp)
 508c2b4:	df000817 	ldw	fp,32(sp)
 508c2b8:	ddc00717 	ldw	r23,28(sp)
 508c2bc:	dd800617 	ldw	r22,24(sp)
 508c2c0:	dd400517 	ldw	r21,20(sp)
 508c2c4:	dd000417 	ldw	r20,16(sp)
 508c2c8:	dcc00317 	ldw	r19,12(sp)
 508c2cc:	dc800217 	ldw	r18,8(sp)
 508c2d0:	dc400117 	ldw	r17,4(sp)
 508c2d4:	dc000017 	ldw	r16,0(sp)
 508c2d8:	dec00a04 	addi	sp,sp,40
 508c2dc:	f800283a 	ret

0508c2e0 <___svfiprintf_internal_r>:
 508c2e0:	2880030b 	ldhu	r2,12(r5)
 508c2e4:	deffd004 	addi	sp,sp,-192
 508c2e8:	df002e15 	stw	fp,184(sp)
 508c2ec:	dd402b15 	stw	r21,172(sp)
 508c2f0:	dd002a15 	stw	r20,168(sp)
 508c2f4:	dfc02f15 	stw	ra,188(sp)
 508c2f8:	ddc02d15 	stw	r23,180(sp)
 508c2fc:	dd802c15 	stw	r22,176(sp)
 508c300:	dcc02915 	stw	r19,164(sp)
 508c304:	dc802815 	stw	r18,160(sp)
 508c308:	dc402715 	stw	r17,156(sp)
 508c30c:	dc002615 	stw	r16,152(sp)
 508c310:	1080200c 	andi	r2,r2,128
 508c314:	d9c00315 	stw	r7,12(sp)
 508c318:	2829883a 	mov	r20,r5
 508c31c:	202b883a 	mov	r21,r4
 508c320:	3039883a 	mov	fp,r6
 508c324:	10000226 	beq	r2,zero,508c330 <___svfiprintf_internal_r+0x50>
 508c328:	28800417 	ldw	r2,16(r5)
 508c32c:	1003a226 	beq	r2,zero,508d1b8 <___svfiprintf_internal_r+0xed8>
 508c330:	dc801604 	addi	r18,sp,88
 508c334:	dc800915 	stw	r18,36(sp)
 508c338:	d8000b15 	stw	zero,44(sp)
 508c33c:	d8000a15 	stw	zero,40(sp)
 508c340:	9011883a 	mov	r8,r18
 508c344:	d8000415 	stw	zero,16(sp)
 508c348:	d8000015 	stw	zero,0(sp)
 508c34c:	e0800007 	ldb	r2,0(fp)
 508c350:	1000f226 	beq	r2,zero,508c71c <___svfiprintf_internal_r+0x43c>
 508c354:	e021883a 	mov	r16,fp
 508c358:	00000306 	br	508c368 <___svfiprintf_internal_r+0x88>
 508c35c:	80800047 	ldb	r2,1(r16)
 508c360:	84000044 	addi	r16,r16,1
 508c364:	10010926 	beq	r2,zero,508c78c <___svfiprintf_internal_r+0x4ac>
 508c368:	10800958 	cmpnei	r2,r2,37
 508c36c:	103ffb1e 	bne	r2,zero,508c35c <___svfiprintf_internal_r+0x7c>
 508c370:	8723c83a 	sub	r17,r16,fp
 508c374:	8701071e 	bne	r16,fp,508c794 <___svfiprintf_internal_r+0x4b4>
 508c378:	80800003 	ldbu	r2,0(r16)
 508c37c:	10803fcc 	andi	r2,r2,255
 508c380:	1080201c 	xori	r2,r2,128
 508c384:	10bfe004 	addi	r2,r2,-128
 508c388:	1000e426 	beq	r2,zero,508c71c <___svfiprintf_internal_r+0x43c>
 508c38c:	80800047 	ldb	r2,1(r16)
 508c390:	87000044 	addi	fp,r16,1
 508c394:	d8000845 	stb	zero,33(sp)
 508c398:	000b883a 	mov	r5,zero
 508c39c:	000d883a 	mov	r6,zero
 508c3a0:	027fffc4 	movi	r9,-1
 508c3a4:	0021883a 	mov	r16,zero
 508c3a8:	0019883a 	mov	r12,zero
 508c3ac:	e7000044 	addi	fp,fp,1
 508c3b0:	10fff804 	addi	r3,r2,-32
 508c3b4:	19001668 	cmpgeui	r4,r3,89
 508c3b8:	20006a1e 	bne	r4,zero,508c564 <___svfiprintf_internal_r+0x284>
 508c3bc:	180690ba 	slli	r3,r3,2
 508c3c0:	01014274 	movhi	r4,1289
 508c3c4:	1909883a 	add	r4,r3,r4
 508c3c8:	20f0f417 	ldw	r3,-15408(r4)
 508c3cc:	1800683a 	jmp	r3
 508c3d0:	0508cc00 	call	508cc0 <__alt_mem_sdram+0x508cc0>
 508c3d4:	0508c564 	muli	r20,zero,8981
 508c3d8:	0508c564 	muli	r20,zero,8981
 508c3dc:	0508cbf4 	movhi	r20,9007
 508c3e0:	0508c564 	muli	r20,zero,8981
 508c3e4:	0508c564 	muli	r20,zero,8981
 508c3e8:	0508c564 	muli	r20,zero,8981
 508c3ec:	0508c564 	muli	r20,zero,8981
 508c3f0:	0508c564 	muli	r20,zero,8981
 508c3f4:	0508c564 	muli	r20,zero,8981
 508c3f8:	0508cbcc 	andi	r20,zero,9007
 508c3fc:	0508cbbc 	xorhi	r20,zero,9006
 508c400:	0508c564 	muli	r20,zero,8981
 508c404:	0508cba4 	muli	r20,zero,9006
 508c408:	0508cb60 	cmpeqi	r20,zero,9005
 508c40c:	0508c564 	muli	r20,zero,8981
 508c410:	0508cb54 	movui	r20,9005
 508c414:	0508c534 	movhi	r20,8980
 508c418:	0508c534 	movhi	r20,8980
 508c41c:	0508c534 	movhi	r20,8980
 508c420:	0508c534 	movhi	r20,8980
 508c424:	0508c534 	movhi	r20,8980
 508c428:	0508c534 	movhi	r20,8980
 508c42c:	0508c534 	movhi	r20,8980
 508c430:	0508c534 	movhi	r20,8980
 508c434:	0508c534 	movhi	r20,8980
 508c438:	0508c564 	muli	r20,zero,8981
 508c43c:	0508c564 	muli	r20,zero,8981
 508c440:	0508c564 	muli	r20,zero,8981
 508c444:	0508c564 	muli	r20,zero,8981
 508c448:	0508c564 	muli	r20,zero,8981
 508c44c:	0508c564 	muli	r20,zero,8981
 508c450:	0508c564 	muli	r20,zero,8981
 508c454:	0508c564 	muli	r20,zero,8981
 508c458:	0508c564 	muli	r20,zero,8981
 508c45c:	0508c564 	muli	r20,zero,8981
 508c460:	0508ca70 	cmpltui	r20,zero,9001
 508c464:	0508c564 	muli	r20,zero,8981
 508c468:	0508c564 	muli	r20,zero,8981
 508c46c:	0508c564 	muli	r20,zero,8981
 508c470:	0508c564 	muli	r20,zero,8981
 508c474:	0508c564 	muli	r20,zero,8981
 508c478:	0508c564 	muli	r20,zero,8981
 508c47c:	0508c564 	muli	r20,zero,8981
 508c480:	0508c564 	muli	r20,zero,8981
 508c484:	0508c564 	muli	r20,zero,8981
 508c488:	0508c564 	muli	r20,zero,8981
 508c48c:	0508c764 	muli	r20,zero,8989
 508c490:	0508c564 	muli	r20,zero,8981
 508c494:	0508c564 	muli	r20,zero,8981
 508c498:	0508c564 	muli	r20,zero,8981
 508c49c:	0508c564 	muli	r20,zero,8981
 508c4a0:	0508c564 	muli	r20,zero,8981
 508c4a4:	0508c590 	cmplti	r20,zero,8982
 508c4a8:	0508c564 	muli	r20,zero,8981
 508c4ac:	0508c564 	muli	r20,zero,8981
 508c4b0:	0508cc54 	movui	r20,9009
 508c4b4:	0508c564 	muli	r20,zero,8981
 508c4b8:	0508c564 	muli	r20,zero,8981
 508c4bc:	0508c564 	muli	r20,zero,8981
 508c4c0:	0508c564 	muli	r20,zero,8981
 508c4c4:	0508c564 	muli	r20,zero,8981
 508c4c8:	0508c564 	muli	r20,zero,8981
 508c4cc:	0508c564 	muli	r20,zero,8981
 508c4d0:	0508c564 	muli	r20,zero,8981
 508c4d4:	0508c564 	muli	r20,zero,8981
 508c4d8:	0508c564 	muli	r20,zero,8981
 508c4dc:	0508cc2c 	andhi	r20,zero,9008
 508c4e0:	0508c90c 	andi	r20,zero,8996
 508c4e4:	0508c564 	muli	r20,zero,8981
 508c4e8:	0508c564 	muli	r20,zero,8981
 508c4ec:	0508c564 	muli	r20,zero,8981
 508c4f0:	0508c97c 	xorhi	r20,zero,8997
 508c4f4:	0508c90c 	andi	r20,zero,8996
 508c4f8:	0508c564 	muli	r20,zero,8981
 508c4fc:	0508c564 	muli	r20,zero,8981
 508c500:	0508ccd8 	cmpnei	r20,zero,9011
 508c504:	0508c564 	muli	r20,zero,8981
 508c508:	0508cc9c 	xori	r20,zero,9010
 508c50c:	0508c768 	cmpgeui	r20,zero,8989
 508c510:	0508ca34 	movhi	r20,9000
 508c514:	0508ca28 	cmpgeui	r20,zero,9000
 508c518:	0508c564 	muli	r20,zero,8981
 508c51c:	0508c9d0 	cmplti	r20,zero,8999
 508c520:	0508c564 	muli	r20,zero,8981
 508c524:	0508c594 	movui	r20,8982
 508c528:	0508c564 	muli	r20,zero,8981
 508c52c:	0508c564 	muli	r20,zero,8981
 508c530:	0508c988 	cmpgei	r20,zero,8998
 508c534:	0021883a 	mov	r16,zero
 508c538:	10fff404 	addi	r3,r2,-48
 508c53c:	e0800007 	ldb	r2,0(fp)
 508c540:	840002a4 	muli	r16,r16,10
 508c544:	e7000044 	addi	fp,fp,1
 508c548:	1c21883a 	add	r16,r3,r16
 508c54c:	10fff404 	addi	r3,r2,-48
 508c550:	190002b0 	cmpltui	r4,r3,10
 508c554:	203ff91e 	bne	r4,zero,508c53c <___svfiprintf_internal_r+0x25c>
 508c558:	10fff804 	addi	r3,r2,-32
 508c55c:	19001668 	cmpgeui	r4,r3,89
 508c560:	203f9626 	beq	r4,zero,508c3bc <___svfiprintf_internal_r+0xdc>
 508c564:	29403fcc 	andi	r5,r5,255
 508c568:	2803681e 	bne	r5,zero,508d30c <___svfiprintf_internal_r+0x102c>
 508c56c:	10006b26 	beq	r2,zero,508c71c <___svfiprintf_internal_r+0x43c>
 508c570:	d8800c05 	stb	r2,48(sp)
 508c574:	d8000845 	stb	zero,33(sp)
 508c578:	04c00044 	movi	r19,1
 508c57c:	05800044 	movi	r22,1
 508c580:	ddc00c04 	addi	r23,sp,48
 508c584:	6023883a 	mov	r17,r12
 508c588:	0013883a 	mov	r9,zero
 508c58c:	00002006 	br	508c610 <___svfiprintf_internal_r+0x330>
 508c590:	63000414 	ori	r12,r12,16
 508c594:	6080080c 	andi	r2,r12,32
 508c598:	1000a126 	beq	r2,zero,508c820 <___svfiprintf_internal_r+0x540>
 508c59c:	d8c00317 	ldw	r3,12(sp)
 508c5a0:	00800044 	movi	r2,1
 508c5a4:	1cc00017 	ldw	r19,0(r3)
 508c5a8:	1d800117 	ldw	r22,4(r3)
 508c5ac:	18c00204 	addi	r3,r3,8
 508c5b0:	d8c00315 	stw	r3,12(sp)
 508c5b4:	d8000845 	stb	zero,33(sp)
 508c5b8:	48ffffe0 	cmpeqi	r3,r9,-1
 508c5bc:	001b883a 	mov	r13,zero
 508c5c0:	1801461e 	bne	r3,zero,508cadc <___svfiprintf_internal_r+0x7fc>
 508c5c4:	047fdfc4 	movi	r17,-129
 508c5c8:	9d86b03a 	or	r3,r19,r22
 508c5cc:	6462703a 	and	r17,r12,r17
 508c5d0:	18024c1e 	bne	r3,zero,508cf04 <___svfiprintf_internal_r+0xc24>
 508c5d4:	4801c51e 	bne	r9,zero,508ccec <___svfiprintf_internal_r+0xa0c>
 508c5d8:	1002bd1e 	bne	r2,zero,508d0d0 <___svfiprintf_internal_r+0xdf0>
 508c5dc:	6580004c 	andi	r22,r12,1
 508c5e0:	b002ca26 	beq	r22,zero,508d10c <___svfiprintf_internal_r+0xe2c>
 508c5e4:	00800c04 	movi	r2,48
 508c5e8:	d88015c5 	stb	r2,87(sp)
 508c5ec:	ddc015c4 	addi	r23,sp,87
 508c5f0:	4827883a 	mov	r19,r9
 508c5f4:	4d80010e 	bge	r9,r22,508c5fc <___svfiprintf_internal_r+0x31c>
 508c5f8:	b027883a 	mov	r19,r22
 508c5fc:	6b403fcc 	andi	r13,r13,255
 508c600:	6b40201c 	xori	r13,r13,128
 508c604:	6b7fe004 	addi	r13,r13,-128
 508c608:	68000126 	beq	r13,zero,508c610 <___svfiprintf_internal_r+0x330>
 508c60c:	9cc00044 	addi	r19,r19,1
 508c610:	8b40008c 	andi	r13,r17,2
 508c614:	68000126 	beq	r13,zero,508c61c <___svfiprintf_internal_r+0x33c>
 508c618:	9cc00084 	addi	r19,r19,2
 508c61c:	8b00210c 	andi	r12,r17,132
 508c620:	d8800b17 	ldw	r2,44(sp)
 508c624:	d9000a17 	ldw	r4,40(sp)
 508c628:	6000021e 	bne	r12,zero,508c634 <___svfiprintf_internal_r+0x354>
 508c62c:	84c7c83a 	sub	r3,r16,r19
 508c630:	00c25416 	blt	zero,r3,508cf84 <___svfiprintf_internal_r+0xca4>
 508c634:	d9800847 	ldb	r6,33(sp)
 508c638:	21400044 	addi	r5,r4,1
 508c63c:	40c00204 	addi	r3,r8,8
 508c640:	30000f26 	beq	r6,zero,508c680 <___svfiprintf_internal_r+0x3a0>
 508c644:	d9800844 	addi	r6,sp,33
 508c648:	10800044 	addi	r2,r2,1
 508c64c:	41800015 	stw	r6,0(r8)
 508c650:	01800044 	movi	r6,1
 508c654:	41800115 	stw	r6,4(r8)
 508c658:	d8800b15 	stw	r2,44(sp)
 508c65c:	d9400a15 	stw	r5,40(sp)
 508c660:	29800208 	cmpgei	r6,r5,8
 508c664:	3002791e 	bne	r6,zero,508d04c <___svfiprintf_internal_r+0xd6c>
 508c668:	21c00084 	addi	r7,r4,2
 508c66c:	41800404 	addi	r6,r8,16
 508c670:	2809883a 	mov	r4,r5
 508c674:	1811883a 	mov	r8,r3
 508c678:	380b883a 	mov	r5,r7
 508c67c:	3007883a 	mov	r3,r6
 508c680:	68000d26 	beq	r13,zero,508c6b8 <___svfiprintf_internal_r+0x3d8>
 508c684:	d9000884 	addi	r4,sp,34
 508c688:	10800084 	addi	r2,r2,2
 508c68c:	41000015 	stw	r4,0(r8)
 508c690:	01000084 	movi	r4,2
 508c694:	41000115 	stw	r4,4(r8)
 508c698:	d8800b15 	stw	r2,44(sp)
 508c69c:	d9400a15 	stw	r5,40(sp)
 508c6a0:	29000208 	cmpgei	r4,r5,8
 508c6a4:	20027a1e 	bne	r4,zero,508d090 <___svfiprintf_internal_r+0xdb0>
 508c6a8:	2809883a 	mov	r4,r5
 508c6ac:	1811883a 	mov	r8,r3
 508c6b0:	29400044 	addi	r5,r5,1
 508c6b4:	18c00204 	addi	r3,r3,8
 508c6b8:	63002018 	cmpnei	r12,r12,128
 508c6bc:	6001a026 	beq	r12,zero,508cd40 <___svfiprintf_internal_r+0xa60>
 508c6c0:	4d93c83a 	sub	r9,r9,r22
 508c6c4:	0241d216 	blt	zero,r9,508ce10 <___svfiprintf_internal_r+0xb30>
 508c6c8:	b085883a 	add	r2,r22,r2
 508c6cc:	45c00015 	stw	r23,0(r8)
 508c6d0:	45800115 	stw	r22,4(r8)
 508c6d4:	d8800b15 	stw	r2,44(sp)
 508c6d8:	d9400a15 	stw	r5,40(sp)
 508c6dc:	29000210 	cmplti	r4,r5,8
 508c6e0:	2001fa26 	beq	r4,zero,508cecc <___svfiprintf_internal_r+0xbec>
 508c6e4:	8c40010c 	andi	r17,r17,4
 508c6e8:	88000226 	beq	r17,zero,508c6f4 <___svfiprintf_internal_r+0x414>
 508c6ec:	84e3c83a 	sub	r17,r16,r19
 508c6f0:	04405716 	blt	zero,r17,508c850 <___svfiprintf_internal_r+0x570>
 508c6f4:	84c0010e 	bge	r16,r19,508c6fc <___svfiprintf_internal_r+0x41c>
 508c6f8:	9821883a 	mov	r16,r19
 508c6fc:	d8c00017 	ldw	r3,0(sp)
 508c700:	1c07883a 	add	r3,r3,r16
 508c704:	d8c00015 	stw	r3,0(sp)
 508c708:	1001f81e 	bne	r2,zero,508ceec <___svfiprintf_internal_r+0xc0c>
 508c70c:	e0800007 	ldb	r2,0(fp)
 508c710:	d8000a15 	stw	zero,40(sp)
 508c714:	9011883a 	mov	r8,r18
 508c718:	103f0e1e 	bne	r2,zero,508c354 <___svfiprintf_internal_r+0x74>
 508c71c:	d8800b17 	ldw	r2,44(sp)
 508c720:	1002fc1e 	bne	r2,zero,508d314 <___svfiprintf_internal_r+0x1034>
 508c724:	a080030b 	ldhu	r2,12(r20)
 508c728:	1080100c 	andi	r2,r2,64
 508c72c:	1003121e 	bne	r2,zero,508d378 <___svfiprintf_internal_r+0x1098>
 508c730:	d8800017 	ldw	r2,0(sp)
 508c734:	dfc02f17 	ldw	ra,188(sp)
 508c738:	df002e17 	ldw	fp,184(sp)
 508c73c:	ddc02d17 	ldw	r23,180(sp)
 508c740:	dd802c17 	ldw	r22,176(sp)
 508c744:	dd402b17 	ldw	r21,172(sp)
 508c748:	dd002a17 	ldw	r20,168(sp)
 508c74c:	dcc02917 	ldw	r19,164(sp)
 508c750:	dc802817 	ldw	r18,160(sp)
 508c754:	dc402717 	ldw	r17,156(sp)
 508c758:	dc002617 	ldw	r16,152(sp)
 508c75c:	dec03004 	addi	sp,sp,192
 508c760:	f800283a 	ret
 508c764:	63000414 	ori	r12,r12,16
 508c768:	6080080c 	andi	r2,r12,32
 508c76c:	10002026 	beq	r2,zero,508c7f0 <___svfiprintf_internal_r+0x510>
 508c770:	d8c00317 	ldw	r3,12(sp)
 508c774:	0005883a 	mov	r2,zero
 508c778:	1cc00017 	ldw	r19,0(r3)
 508c77c:	1d800117 	ldw	r22,4(r3)
 508c780:	18c00204 	addi	r3,r3,8
 508c784:	d8c00315 	stw	r3,12(sp)
 508c788:	003f8a06 	br	508c5b4 <___svfiprintf_internal_r+0x2d4>
 508c78c:	8723c83a 	sub	r17,r16,fp
 508c790:	873fe226 	beq	r16,fp,508c71c <___svfiprintf_internal_r+0x43c>
 508c794:	d8c00b17 	ldw	r3,44(sp)
 508c798:	d8800a17 	ldw	r2,40(sp)
 508c79c:	47000015 	stw	fp,0(r8)
 508c7a0:	1c47883a 	add	r3,r3,r17
 508c7a4:	10800044 	addi	r2,r2,1
 508c7a8:	d8800a15 	stw	r2,40(sp)
 508c7ac:	44400115 	stw	r17,4(r8)
 508c7b0:	d8c00b15 	stw	r3,44(sp)
 508c7b4:	10800208 	cmpgei	r2,r2,8
 508c7b8:	1000061e 	bne	r2,zero,508c7d4 <___svfiprintf_internal_r+0x4f4>
 508c7bc:	42000204 	addi	r8,r8,8
 508c7c0:	d8c00017 	ldw	r3,0(sp)
 508c7c4:	80800003 	ldbu	r2,0(r16)
 508c7c8:	1c47883a 	add	r3,r3,r17
 508c7cc:	d8c00015 	stw	r3,0(sp)
 508c7d0:	003eea06 	br	508c37c <___svfiprintf_internal_r+0x9c>
 508c7d4:	d9800904 	addi	r6,sp,36
 508c7d8:	a00b883a 	mov	r5,r20
 508c7dc:	a809883a 	mov	r4,r21
 508c7e0:	508c1200 	call	508c120 <__ssprint_r>
 508c7e4:	103fcf1e 	bne	r2,zero,508c724 <___svfiprintf_internal_r+0x444>
 508c7e8:	9011883a 	mov	r8,r18
 508c7ec:	003ff406 	br	508c7c0 <___svfiprintf_internal_r+0x4e0>
 508c7f0:	d9000317 	ldw	r4,12(sp)
 508c7f4:	6080040c 	andi	r2,r12,16
 508c7f8:	20c00104 	addi	r3,r4,4
 508c7fc:	10025b1e 	bne	r2,zero,508d16c <___svfiprintf_internal_r+0xe8c>
 508c800:	6080100c 	andi	r2,r12,64
 508c804:	1002b326 	beq	r2,zero,508d2d4 <___svfiprintf_internal_r+0xff4>
 508c808:	d8800317 	ldw	r2,12(sp)
 508c80c:	002d883a 	mov	r22,zero
 508c810:	d8c00315 	stw	r3,12(sp)
 508c814:	14c0000b 	ldhu	r19,0(r2)
 508c818:	0005883a 	mov	r2,zero
 508c81c:	003f6506 	br	508c5b4 <___svfiprintf_internal_r+0x2d4>
 508c820:	d9000317 	ldw	r4,12(sp)
 508c824:	6080040c 	andi	r2,r12,16
 508c828:	20c00104 	addi	r3,r4,4
 508c82c:	10023f1e 	bne	r2,zero,508d12c <___svfiprintf_internal_r+0xe4c>
 508c830:	6080100c 	andi	r2,r12,64
 508c834:	1002a126 	beq	r2,zero,508d2bc <___svfiprintf_internal_r+0xfdc>
 508c838:	d8800317 	ldw	r2,12(sp)
 508c83c:	002d883a 	mov	r22,zero
 508c840:	d8c00315 	stw	r3,12(sp)
 508c844:	14c0000b 	ldhu	r19,0(r2)
 508c848:	00800044 	movi	r2,1
 508c84c:	003f5906 	br	508c5b4 <___svfiprintf_internal_r+0x2d4>
 508c850:	01c14274 	movhi	r7,1289
 508c854:	89400450 	cmplti	r5,r17,17
 508c858:	d9000a17 	ldw	r4,40(sp)
 508c85c:	39d8a004 	addi	r7,r7,25216
 508c860:	05800404 	movi	r22,16
 508c864:	28000526 	beq	r5,zero,508c87c <___svfiprintf_internal_r+0x59c>
 508c868:	00001906 	br	508c8d0 <___svfiprintf_internal_r+0x5f0>
 508c86c:	8c7ffc04 	addi	r17,r17,-16
 508c870:	89400448 	cmpgei	r5,r17,17
 508c874:	18c00204 	addi	r3,r3,8
 508c878:	28001526 	beq	r5,zero,508c8d0 <___svfiprintf_internal_r+0x5f0>
 508c87c:	21000044 	addi	r4,r4,1
 508c880:	10800404 	addi	r2,r2,16
 508c884:	19c00015 	stw	r7,0(r3)
 508c888:	1d800115 	stw	r22,4(r3)
 508c88c:	d8800b15 	stw	r2,44(sp)
 508c890:	d9000a15 	stw	r4,40(sp)
 508c894:	21400208 	cmpgei	r5,r4,8
 508c898:	283ff426 	beq	r5,zero,508c86c <___svfiprintf_internal_r+0x58c>
 508c89c:	d9800904 	addi	r6,sp,36
 508c8a0:	a00b883a 	mov	r5,r20
 508c8a4:	a809883a 	mov	r4,r21
 508c8a8:	d9c00115 	stw	r7,4(sp)
 508c8ac:	508c1200 	call	508c120 <__ssprint_r>
 508c8b0:	103f9c1e 	bne	r2,zero,508c724 <___svfiprintf_internal_r+0x444>
 508c8b4:	8c7ffc04 	addi	r17,r17,-16
 508c8b8:	89400448 	cmpgei	r5,r17,17
 508c8bc:	d8800b17 	ldw	r2,44(sp)
 508c8c0:	d9000a17 	ldw	r4,40(sp)
 508c8c4:	d9c00117 	ldw	r7,4(sp)
 508c8c8:	9007883a 	mov	r3,r18
 508c8cc:	283feb1e 	bne	r5,zero,508c87c <___svfiprintf_internal_r+0x59c>
 508c8d0:	21000044 	addi	r4,r4,1
 508c8d4:	1445883a 	add	r2,r2,r17
 508c8d8:	d9000a15 	stw	r4,40(sp)
 508c8dc:	19c00015 	stw	r7,0(r3)
 508c8e0:	1c400115 	stw	r17,4(r3)
 508c8e4:	d8800b15 	stw	r2,44(sp)
 508c8e8:	21000210 	cmplti	r4,r4,8
 508c8ec:	203f811e 	bne	r4,zero,508c6f4 <___svfiprintf_internal_r+0x414>
 508c8f0:	d9800904 	addi	r6,sp,36
 508c8f4:	a00b883a 	mov	r5,r20
 508c8f8:	a809883a 	mov	r4,r21
 508c8fc:	508c1200 	call	508c120 <__ssprint_r>
 508c900:	103f881e 	bne	r2,zero,508c724 <___svfiprintf_internal_r+0x444>
 508c904:	d8800b17 	ldw	r2,44(sp)
 508c908:	003f7a06 	br	508c6f4 <___svfiprintf_internal_r+0x414>
 508c90c:	29403fcc 	andi	r5,r5,255
 508c910:	28028b1e 	bne	r5,zero,508d340 <___svfiprintf_internal_r+0x1060>
 508c914:	6080080c 	andi	r2,r12,32
 508c918:	10005a26 	beq	r2,zero,508ca84 <___svfiprintf_internal_r+0x7a4>
 508c91c:	d8c00317 	ldw	r3,12(sp)
 508c920:	18800117 	ldw	r2,4(r3)
 508c924:	1cc00017 	ldw	r19,0(r3)
 508c928:	18c00204 	addi	r3,r3,8
 508c92c:	d8c00315 	stw	r3,12(sp)
 508c930:	102d883a 	mov	r22,r2
 508c934:	10005f16 	blt	r2,zero,508cab4 <___svfiprintf_internal_r+0x7d4>
 508c938:	48bfffd8 	cmpnei	r2,r9,-1
 508c93c:	db400843 	ldbu	r13,33(sp)
 508c940:	10000526 	beq	r2,zero,508c958 <___svfiprintf_internal_r+0x678>
 508c944:	047fdfc4 	movi	r17,-129
 508c948:	9d84b03a 	or	r2,r19,r22
 508c94c:	6462703a 	and	r17,r12,r17
 508c950:	1001de26 	beq	r2,zero,508d0cc <___svfiprintf_internal_r+0xdec>
 508c954:	8819883a 	mov	r12,r17
 508c958:	b0016c1e 	bne	r22,zero,508cf0c <___svfiprintf_internal_r+0xc2c>
 508c95c:	988002a8 	cmpgeui	r2,r19,10
 508c960:	10016a1e 	bne	r2,zero,508cf0c <___svfiprintf_internal_r+0xc2c>
 508c964:	9cc00c04 	addi	r19,r19,48
 508c968:	dcc015c5 	stb	r19,87(sp)
 508c96c:	6023883a 	mov	r17,r12
 508c970:	05800044 	movi	r22,1
 508c974:	ddc015c4 	addi	r23,sp,87
 508c978:	003f1d06 	br	508c5f0 <___svfiprintf_internal_r+0x310>
 508c97c:	e0800007 	ldb	r2,0(fp)
 508c980:	63001014 	ori	r12,r12,64
 508c984:	003e8906 	br	508c3ac <___svfiprintf_internal_r+0xcc>
 508c988:	29403fcc 	andi	r5,r5,255
 508c98c:	28026e1e 	bne	r5,zero,508d348 <___svfiprintf_internal_r+0x1068>
 508c990:	00c14274 	movhi	r3,1289
 508c994:	18d80f04 	addi	r3,r3,24636
 508c998:	d8c00415 	stw	r3,16(sp)
 508c99c:	60c0080c 	andi	r3,r12,32
 508c9a0:	1800b326 	beq	r3,zero,508cc70 <___svfiprintf_internal_r+0x990>
 508c9a4:	d8c00317 	ldw	r3,12(sp)
 508c9a8:	1cc00017 	ldw	r19,0(r3)
 508c9ac:	1d800117 	ldw	r22,4(r3)
 508c9b0:	18c00204 	addi	r3,r3,8
 508c9b4:	d8c00315 	stw	r3,12(sp)
 508c9b8:	60c0004c 	andi	r3,r12,1
 508c9bc:	18000226 	beq	r3,zero,508c9c8 <___svfiprintf_internal_r+0x6e8>
 508c9c0:	9d86b03a 	or	r3,r19,r22
 508c9c4:	1801de1e 	bne	r3,zero,508d140 <___svfiprintf_internal_r+0xe60>
 508c9c8:	00800084 	movi	r2,2
 508c9cc:	003ef906 	br	508c5b4 <___svfiprintf_internal_r+0x2d4>
 508c9d0:	d8800317 	ldw	r2,12(sp)
 508c9d4:	d8000845 	stb	zero,33(sp)
 508c9d8:	15c00017 	ldw	r23,0(r2)
 508c9dc:	14400104 	addi	r17,r2,4
 508c9e0:	b8022726 	beq	r23,zero,508d280 <___svfiprintf_internal_r+0xfa0>
 508c9e4:	48bfffe0 	cmpeqi	r2,r9,-1
 508c9e8:	1001e91e 	bne	r2,zero,508d190 <___svfiprintf_internal_r+0xeb0>
 508c9ec:	480d883a 	mov	r6,r9
 508c9f0:	000b883a 	mov	r5,zero
 508c9f4:	b809883a 	mov	r4,r23
 508c9f8:	da000315 	stw	r8,12(sp)
 508c9fc:	db000215 	stw	r12,8(sp)
 508ca00:	da400115 	stw	r9,4(sp)
 508ca04:	508a4d80 	call	508a4d8 <memchr>
 508ca08:	da400117 	ldw	r9,4(sp)
 508ca0c:	db000217 	ldw	r12,8(sp)
 508ca10:	da000317 	ldw	r8,12(sp)
 508ca14:	10024626 	beq	r2,zero,508d330 <___svfiprintf_internal_r+0x1050>
 508ca18:	15edc83a 	sub	r22,r2,r23
 508ca1c:	b027883a 	mov	r19,r22
 508ca20:	dc400315 	stw	r17,12(sp)
 508ca24:	003ed706 	br	508c584 <___svfiprintf_internal_r+0x2a4>
 508ca28:	e0800007 	ldb	r2,0(fp)
 508ca2c:	63000814 	ori	r12,r12,32
 508ca30:	003e5e06 	br	508c3ac <___svfiprintf_internal_r+0xcc>
 508ca34:	d8c00317 	ldw	r3,12(sp)
 508ca38:	00800c04 	movi	r2,48
 508ca3c:	d8800885 	stb	r2,34(sp)
 508ca40:	00801e04 	movi	r2,120
 508ca44:	01014274 	movhi	r4,1289
 508ca48:	d88008c5 	stb	r2,35(sp)
 508ca4c:	18800104 	addi	r2,r3,4
 508ca50:	d8800315 	stw	r2,12(sp)
 508ca54:	20980f04 	addi	r2,r4,24636
 508ca58:	d8800415 	stw	r2,16(sp)
 508ca5c:	1cc00017 	ldw	r19,0(r3)
 508ca60:	002d883a 	mov	r22,zero
 508ca64:	63000094 	ori	r12,r12,2
 508ca68:	00800084 	movi	r2,2
 508ca6c:	003ed106 	br	508c5b4 <___svfiprintf_internal_r+0x2d4>
 508ca70:	29403fcc 	andi	r5,r5,255
 508ca74:	2802381e 	bne	r5,zero,508d358 <___svfiprintf_internal_r+0x1078>
 508ca78:	63000414 	ori	r12,r12,16
 508ca7c:	6080080c 	andi	r2,r12,32
 508ca80:	103fa61e 	bne	r2,zero,508c91c <___svfiprintf_internal_r+0x63c>
 508ca84:	d9000317 	ldw	r4,12(sp)
 508ca88:	6080040c 	andi	r2,r12,16
 508ca8c:	20c00104 	addi	r3,r4,4
 508ca90:	1001b11e 	bne	r2,zero,508d158 <___svfiprintf_internal_r+0xe78>
 508ca94:	6080100c 	andi	r2,r12,64
 508ca98:	10020226 	beq	r2,zero,508d2a4 <___svfiprintf_internal_r+0xfc4>
 508ca9c:	d8800317 	ldw	r2,12(sp)
 508caa0:	d8c00315 	stw	r3,12(sp)
 508caa4:	14c0000f 	ldh	r19,0(r2)
 508caa8:	982dd7fa 	srai	r22,r19,31
 508caac:	b005883a 	mov	r2,r22
 508cab0:	103fa10e 	bge	r2,zero,508c938 <___svfiprintf_internal_r+0x658>
 508cab4:	9804c03a 	cmpne	r2,r19,zero
 508cab8:	05adc83a 	sub	r22,zero,r22
 508cabc:	b0adc83a 	sub	r22,r22,r2
 508cac0:	00800b44 	movi	r2,45
 508cac4:	d8800845 	stb	r2,33(sp)
 508cac8:	48ffffe0 	cmpeqi	r3,r9,-1
 508cacc:	04e7c83a 	sub	r19,zero,r19
 508cad0:	03400b44 	movi	r13,45
 508cad4:	00800044 	movi	r2,1
 508cad8:	183eba26 	beq	r3,zero,508c5c4 <___svfiprintf_internal_r+0x2e4>
 508cadc:	10c00060 	cmpeqi	r3,r2,1
 508cae0:	183f9d1e 	bne	r3,zero,508c958 <___svfiprintf_internal_r+0x678>
 508cae4:	108000a0 	cmpeqi	r2,r2,2
 508cae8:	1000851e 	bne	r2,zero,508cd00 <___svfiprintf_internal_r+0xa20>
 508caec:	902f883a 	mov	r23,r18
 508caf0:	b008977a 	slli	r4,r22,29
 508caf4:	9806d0fa 	srli	r3,r19,3
 508caf8:	b02cd0fa 	srli	r22,r22,3
 508cafc:	988001cc 	andi	r2,r19,7
 508cb00:	10800c04 	addi	r2,r2,48
 508cb04:	20e6b03a 	or	r19,r4,r3
 508cb08:	b8bfffc5 	stb	r2,-1(r23)
 508cb0c:	9d86b03a 	or	r3,r19,r22
 508cb10:	b80b883a 	mov	r5,r23
 508cb14:	bdffffc4 	addi	r23,r23,-1
 508cb18:	183ff51e 	bne	r3,zero,508caf0 <___svfiprintf_internal_r+0x810>
 508cb1c:	60c0004c 	andi	r3,r12,1
 508cb20:	18008426 	beq	r3,zero,508cd34 <___svfiprintf_internal_r+0xa54>
 508cb24:	10803fcc 	andi	r2,r2,255
 508cb28:	1080201c 	xori	r2,r2,128
 508cb2c:	10bfe004 	addi	r2,r2,-128
 508cb30:	10800c18 	cmpnei	r2,r2,48
 508cb34:	10007f26 	beq	r2,zero,508cd34 <___svfiprintf_internal_r+0xa54>
 508cb38:	297fff84 	addi	r5,r5,-2
 508cb3c:	00800c04 	movi	r2,48
 508cb40:	b8bfffc5 	stb	r2,-1(r23)
 508cb44:	916dc83a 	sub	r22,r18,r5
 508cb48:	6023883a 	mov	r17,r12
 508cb4c:	282f883a 	mov	r23,r5
 508cb50:	003ea706 	br	508c5f0 <___svfiprintf_internal_r+0x310>
 508cb54:	e0800007 	ldb	r2,0(fp)
 508cb58:	63002014 	ori	r12,r12,128
 508cb5c:	003e1306 	br	508c3ac <___svfiprintf_internal_r+0xcc>
 508cb60:	e0800007 	ldb	r2,0(fp)
 508cb64:	e1000044 	addi	r4,fp,1
 508cb68:	10c00aa0 	cmpeqi	r3,r2,42
 508cb6c:	1802051e 	bne	r3,zero,508d384 <___svfiprintf_internal_r+0x10a4>
 508cb70:	10fff404 	addi	r3,r2,-48
 508cb74:	19c002b0 	cmpltui	r7,r3,10
 508cb78:	2039883a 	mov	fp,r4
 508cb7c:	0013883a 	mov	r9,zero
 508cb80:	383e0b26 	beq	r7,zero,508c3b0 <___svfiprintf_internal_r+0xd0>
 508cb84:	e0800007 	ldb	r2,0(fp)
 508cb88:	4a4002a4 	muli	r9,r9,10
 508cb8c:	e7000044 	addi	fp,fp,1
 508cb90:	48d3883a 	add	r9,r9,r3
 508cb94:	10fff404 	addi	r3,r2,-48
 508cb98:	190002b0 	cmpltui	r4,r3,10
 508cb9c:	203ff91e 	bne	r4,zero,508cb84 <___svfiprintf_internal_r+0x8a4>
 508cba0:	003e0306 	br	508c3b0 <___svfiprintf_internal_r+0xd0>
 508cba4:	e0800003 	ldbu	r2,0(fp)
 508cba8:	10803fcc 	andi	r2,r2,255
 508cbac:	1080201c 	xori	r2,r2,128
 508cbb0:	63000114 	ori	r12,r12,4
 508cbb4:	10bfe004 	addi	r2,r2,-128
 508cbb8:	003dfc06 	br	508c3ac <___svfiprintf_internal_r+0xcc>
 508cbbc:	e0800007 	ldb	r2,0(fp)
 508cbc0:	01400044 	movi	r5,1
 508cbc4:	01800ac4 	movi	r6,43
 508cbc8:	003df806 	br	508c3ac <___svfiprintf_internal_r+0xcc>
 508cbcc:	d8c00317 	ldw	r3,12(sp)
 508cbd0:	e0800003 	ldbu	r2,0(fp)
 508cbd4:	1c000017 	ldw	r16,0(r3)
 508cbd8:	1dc00104 	addi	r23,r3,4
 508cbdc:	80019116 	blt	r16,zero,508d224 <___svfiprintf_internal_r+0xf44>
 508cbe0:	ddc00315 	stw	r23,12(sp)
 508cbe4:	10803fcc 	andi	r2,r2,255
 508cbe8:	1080201c 	xori	r2,r2,128
 508cbec:	10bfe004 	addi	r2,r2,-128
 508cbf0:	003dee06 	br	508c3ac <___svfiprintf_internal_r+0xcc>
 508cbf4:	e0800007 	ldb	r2,0(fp)
 508cbf8:	63000054 	ori	r12,r12,1
 508cbfc:	003deb06 	br	508c3ac <___svfiprintf_internal_r+0xcc>
 508cc00:	30c03fcc 	andi	r3,r6,255
 508cc04:	18c0201c 	xori	r3,r3,128
 508cc08:	18ffe004 	addi	r3,r3,-128
 508cc0c:	e0800003 	ldbu	r2,0(fp)
 508cc10:	183ff41e 	bne	r3,zero,508cbe4 <___svfiprintf_internal_r+0x904>
 508cc14:	10803fcc 	andi	r2,r2,255
 508cc18:	1080201c 	xori	r2,r2,128
 508cc1c:	01400044 	movi	r5,1
 508cc20:	01800804 	movi	r6,32
 508cc24:	10bfe004 	addi	r2,r2,-128
 508cc28:	003de006 	br	508c3ac <___svfiprintf_internal_r+0xcc>
 508cc2c:	d8c00317 	ldw	r3,12(sp)
 508cc30:	d8000845 	stb	zero,33(sp)
 508cc34:	04c00044 	movi	r19,1
 508cc38:	18800017 	ldw	r2,0(r3)
 508cc3c:	18c00104 	addi	r3,r3,4
 508cc40:	d8c00315 	stw	r3,12(sp)
 508cc44:	d8800c05 	stb	r2,48(sp)
 508cc48:	05800044 	movi	r22,1
 508cc4c:	ddc00c04 	addi	r23,sp,48
 508cc50:	003e4c06 	br	508c584 <___svfiprintf_internal_r+0x2a4>
 508cc54:	29403fcc 	andi	r5,r5,255
 508cc58:	2801c11e 	bne	r5,zero,508d360 <___svfiprintf_internal_r+0x1080>
 508cc5c:	00c14274 	movhi	r3,1289
 508cc60:	18d81404 	addi	r3,r3,24656
 508cc64:	d8c00415 	stw	r3,16(sp)
 508cc68:	60c0080c 	andi	r3,r12,32
 508cc6c:	183f4d1e 	bne	r3,zero,508c9a4 <___svfiprintf_internal_r+0x6c4>
 508cc70:	d9400317 	ldw	r5,12(sp)
 508cc74:	60c0040c 	andi	r3,r12,16
 508cc78:	29000104 	addi	r4,r5,4
 508cc7c:	1801401e 	bne	r3,zero,508d180 <___svfiprintf_internal_r+0xea0>
 508cc80:	60c0100c 	andi	r3,r12,64
 508cc84:	18019926 	beq	r3,zero,508d2ec <___svfiprintf_internal_r+0x100c>
 508cc88:	d8c00317 	ldw	r3,12(sp)
 508cc8c:	002d883a 	mov	r22,zero
 508cc90:	d9000315 	stw	r4,12(sp)
 508cc94:	1cc0000b 	ldhu	r19,0(r3)
 508cc98:	003f4706 	br	508c9b8 <___svfiprintf_internal_r+0x6d8>
 508cc9c:	29403fcc 	andi	r5,r5,255
 508cca0:	2801ab1e 	bne	r5,zero,508d350 <___svfiprintf_internal_r+0x1070>
 508cca4:	d9000317 	ldw	r4,12(sp)
 508cca8:	6080080c 	andi	r2,r12,32
 508ccac:	20c00017 	ldw	r3,0(r4)
 508ccb0:	25c00104 	addi	r23,r4,4
 508ccb4:	1001171e 	bne	r2,zero,508d114 <___svfiprintf_internal_r+0xe34>
 508ccb8:	6080040c 	andi	r2,r12,16
 508ccbc:	1001461e 	bne	r2,zero,508d1d8 <___svfiprintf_internal_r+0xef8>
 508ccc0:	6300100c 	andi	r12,r12,64
 508ccc4:	60014426 	beq	r12,zero,508d1d8 <___svfiprintf_internal_r+0xef8>
 508ccc8:	d8800017 	ldw	r2,0(sp)
 508cccc:	ddc00315 	stw	r23,12(sp)
 508ccd0:	1880000d 	sth	r2,0(r3)
 508ccd4:	003d9d06 	br	508c34c <___svfiprintf_internal_r+0x6c>
 508ccd8:	e0800007 	ldb	r2,0(fp)
 508ccdc:	10c01b18 	cmpnei	r3,r2,108
 508cce0:	18016026 	beq	r3,zero,508d264 <___svfiprintf_internal_r+0xf84>
 508cce4:	63000414 	ori	r12,r12,16
 508cce8:	003db006 	br	508c3ac <___svfiprintf_internal_r+0xcc>
 508ccec:	10c00060 	cmpeqi	r3,r2,1
 508ccf0:	18018d1e 	bne	r3,zero,508d328 <___svfiprintf_internal_r+0x1048>
 508ccf4:	108000a0 	cmpeqi	r2,r2,2
 508ccf8:	8819883a 	mov	r12,r17
 508ccfc:	103f7b26 	beq	r2,zero,508caec <___svfiprintf_internal_r+0x80c>
 508cd00:	902f883a 	mov	r23,r18
 508cd04:	d9000417 	ldw	r4,16(sp)
 508cd08:	988003cc 	andi	r2,r19,15
 508cd0c:	b006973a 	slli	r3,r22,28
 508cd10:	9826d13a 	srli	r19,r19,4
 508cd14:	2085883a 	add	r2,r4,r2
 508cd18:	10800003 	ldbu	r2,0(r2)
 508cd1c:	b02cd13a 	srli	r22,r22,4
 508cd20:	1ce6b03a 	or	r19,r3,r19
 508cd24:	b8bfffc5 	stb	r2,-1(r23)
 508cd28:	9d84b03a 	or	r2,r19,r22
 508cd2c:	bdffffc4 	addi	r23,r23,-1
 508cd30:	103ff41e 	bne	r2,zero,508cd04 <___svfiprintf_internal_r+0xa24>
 508cd34:	95edc83a 	sub	r22,r18,r23
 508cd38:	6023883a 	mov	r17,r12
 508cd3c:	003e2c06 	br	508c5f0 <___svfiprintf_internal_r+0x310>
 508cd40:	84d9c83a 	sub	r12,r16,r19
 508cd44:	033e5e0e 	bge	zero,r12,508c6c0 <___svfiprintf_internal_r+0x3e0>
 508cd48:	61800450 	cmplti	r6,r12,17
 508cd4c:	01c14274 	movhi	r7,1289
 508cd50:	3001851e 	bne	r6,zero,508d368 <___svfiprintf_internal_r+0x1088>
 508cd54:	39d89c04 	addi	r7,r7,25200
 508cd58:	03400404 	movi	r13,16
 508cd5c:	00000406 	br	508cd70 <___svfiprintf_internal_r+0xa90>
 508cd60:	633ffc04 	addi	r12,r12,-16
 508cd64:	60c00448 	cmpgei	r3,r12,17
 508cd68:	42000204 	addi	r8,r8,8
 508cd6c:	18001a26 	beq	r3,zero,508cdd8 <___svfiprintf_internal_r+0xaf8>
 508cd70:	21000044 	addi	r4,r4,1
 508cd74:	10800404 	addi	r2,r2,16
 508cd78:	41c00015 	stw	r7,0(r8)
 508cd7c:	43400115 	stw	r13,4(r8)
 508cd80:	d8800b15 	stw	r2,44(sp)
 508cd84:	d9000a15 	stw	r4,40(sp)
 508cd88:	20c00208 	cmpgei	r3,r4,8
 508cd8c:	183ff426 	beq	r3,zero,508cd60 <___svfiprintf_internal_r+0xa80>
 508cd90:	d9800904 	addi	r6,sp,36
 508cd94:	a00b883a 	mov	r5,r20
 508cd98:	a809883a 	mov	r4,r21
 508cd9c:	d9c00515 	stw	r7,20(sp)
 508cda0:	da400215 	stw	r9,8(sp)
 508cda4:	db000115 	stw	r12,4(sp)
 508cda8:	508c1200 	call	508c120 <__ssprint_r>
 508cdac:	103e5d1e 	bne	r2,zero,508c724 <___svfiprintf_internal_r+0x444>
 508cdb0:	db000117 	ldw	r12,4(sp)
 508cdb4:	d8800b17 	ldw	r2,44(sp)
 508cdb8:	d9000a17 	ldw	r4,40(sp)
 508cdbc:	633ffc04 	addi	r12,r12,-16
 508cdc0:	60c00448 	cmpgei	r3,r12,17
 508cdc4:	d9c00517 	ldw	r7,20(sp)
 508cdc8:	da400217 	ldw	r9,8(sp)
 508cdcc:	9011883a 	mov	r8,r18
 508cdd0:	03400404 	movi	r13,16
 508cdd4:	183fe61e 	bne	r3,zero,508cd70 <___svfiprintf_internal_r+0xa90>
 508cdd8:	21000044 	addi	r4,r4,1
 508cddc:	41800204 	addi	r6,r8,8
 508cde0:	1305883a 	add	r2,r2,r12
 508cde4:	41c00015 	stw	r7,0(r8)
 508cde8:	43000115 	stw	r12,4(r8)
 508cdec:	d8800b15 	stw	r2,44(sp)
 508cdf0:	d9000a15 	stw	r4,40(sp)
 508cdf4:	20c00208 	cmpgei	r3,r4,8
 508cdf8:	18010d1e 	bne	r3,zero,508d230 <___svfiprintf_internal_r+0xf50>
 508cdfc:	4d93c83a 	sub	r9,r9,r22
 508ce00:	21400044 	addi	r5,r4,1
 508ce04:	30c00204 	addi	r3,r6,8
 508ce08:	3011883a 	mov	r8,r6
 508ce0c:	027e2e0e 	bge	zero,r9,508c6c8 <___svfiprintf_internal_r+0x3e8>
 508ce10:	49800450 	cmplti	r6,r9,17
 508ce14:	01c14274 	movhi	r7,1289
 508ce18:	3001391e 	bne	r6,zero,508d300 <___svfiprintf_internal_r+0x1020>
 508ce1c:	39d89c04 	addi	r7,r7,25200
 508ce20:	03000404 	movi	r12,16
 508ce24:	00000406 	br	508ce38 <___svfiprintf_internal_r+0xb58>
 508ce28:	4a7ffc04 	addi	r9,r9,-16
 508ce2c:	48c00448 	cmpgei	r3,r9,17
 508ce30:	42000204 	addi	r8,r8,8
 508ce34:	18001826 	beq	r3,zero,508ce98 <___svfiprintf_internal_r+0xbb8>
 508ce38:	21000044 	addi	r4,r4,1
 508ce3c:	10800404 	addi	r2,r2,16
 508ce40:	41c00015 	stw	r7,0(r8)
 508ce44:	43000115 	stw	r12,4(r8)
 508ce48:	d8800b15 	stw	r2,44(sp)
 508ce4c:	d9000a15 	stw	r4,40(sp)
 508ce50:	20c00208 	cmpgei	r3,r4,8
 508ce54:	183ff426 	beq	r3,zero,508ce28 <___svfiprintf_internal_r+0xb48>
 508ce58:	d9800904 	addi	r6,sp,36
 508ce5c:	a00b883a 	mov	r5,r20
 508ce60:	a809883a 	mov	r4,r21
 508ce64:	d9c00215 	stw	r7,8(sp)
 508ce68:	da400115 	stw	r9,4(sp)
 508ce6c:	508c1200 	call	508c120 <__ssprint_r>
 508ce70:	103e2c1e 	bne	r2,zero,508c724 <___svfiprintf_internal_r+0x444>
 508ce74:	da400117 	ldw	r9,4(sp)
 508ce78:	d8800b17 	ldw	r2,44(sp)
 508ce7c:	d9000a17 	ldw	r4,40(sp)
 508ce80:	4a7ffc04 	addi	r9,r9,-16
 508ce84:	48c00448 	cmpgei	r3,r9,17
 508ce88:	d9c00217 	ldw	r7,8(sp)
 508ce8c:	9011883a 	mov	r8,r18
 508ce90:	03000404 	movi	r12,16
 508ce94:	183fe81e 	bne	r3,zero,508ce38 <___svfiprintf_internal_r+0xb58>
 508ce98:	21400044 	addi	r5,r4,1
 508ce9c:	41000204 	addi	r4,r8,8
 508cea0:	1245883a 	add	r2,r2,r9
 508cea4:	41c00015 	stw	r7,0(r8)
 508cea8:	42400115 	stw	r9,4(r8)
 508ceac:	d8800b15 	stw	r2,44(sp)
 508ceb0:	d9400a15 	stw	r5,40(sp)
 508ceb4:	28c00208 	cmpgei	r3,r5,8
 508ceb8:	1800891e 	bne	r3,zero,508d0e0 <___svfiprintf_internal_r+0xe00>
 508cebc:	29400044 	addi	r5,r5,1
 508cec0:	20c00204 	addi	r3,r4,8
 508cec4:	2011883a 	mov	r8,r4
 508cec8:	003dff06 	br	508c6c8 <___svfiprintf_internal_r+0x3e8>
 508cecc:	d9800904 	addi	r6,sp,36
 508ced0:	a00b883a 	mov	r5,r20
 508ced4:	a809883a 	mov	r4,r21
 508ced8:	508c1200 	call	508c120 <__ssprint_r>
 508cedc:	103e111e 	bne	r2,zero,508c724 <___svfiprintf_internal_r+0x444>
 508cee0:	d8800b17 	ldw	r2,44(sp)
 508cee4:	9007883a 	mov	r3,r18
 508cee8:	003dfe06 	br	508c6e4 <___svfiprintf_internal_r+0x404>
 508ceec:	d9800904 	addi	r6,sp,36
 508cef0:	a00b883a 	mov	r5,r20
 508cef4:	a809883a 	mov	r4,r21
 508cef8:	508c1200 	call	508c120 <__ssprint_r>
 508cefc:	103e0326 	beq	r2,zero,508c70c <___svfiprintf_internal_r+0x42c>
 508cf00:	003e0806 	br	508c724 <___svfiprintf_internal_r+0x444>
 508cf04:	8819883a 	mov	r12,r17
 508cf08:	003ef406 	br	508cadc <___svfiprintf_internal_r+0x7fc>
 508cf0c:	902f883a 	mov	r23,r18
 508cf10:	9809883a 	mov	r4,r19
 508cf14:	b00b883a 	mov	r5,r22
 508cf18:	01800284 	movi	r6,10
 508cf1c:	000f883a 	mov	r7,zero
 508cf20:	db400615 	stw	r13,24(sp)
 508cf24:	da000515 	stw	r8,20(sp)
 508cf28:	da400215 	stw	r9,8(sp)
 508cf2c:	db000115 	stw	r12,4(sp)
 508cf30:	508ffcc0 	call	508ffcc <__umoddi3>
 508cf34:	10800c04 	addi	r2,r2,48
 508cf38:	9809883a 	mov	r4,r19
 508cf3c:	b00b883a 	mov	r5,r22
 508cf40:	b8bfffc5 	stb	r2,-1(r23)
 508cf44:	01800284 	movi	r6,10
 508cf48:	000f883a 	mov	r7,zero
 508cf4c:	508fa3c0 	call	508fa3c <__udivdi3>
 508cf50:	b009883a 	mov	r4,r22
 508cf54:	980b883a 	mov	r5,r19
 508cf58:	db000117 	ldw	r12,4(sp)
 508cf5c:	da400217 	ldw	r9,8(sp)
 508cf60:	da000517 	ldw	r8,20(sp)
 508cf64:	db400617 	ldw	r13,24(sp)
 508cf68:	bdffffc4 	addi	r23,r23,-1
 508cf6c:	1027883a 	mov	r19,r2
 508cf70:	182d883a 	mov	r22,r3
 508cf74:	203fe61e 	bne	r4,zero,508cf10 <___svfiprintf_internal_r+0xc30>
 508cf78:	294002a8 	cmpgeui	r5,r5,10
 508cf7c:	283fe41e 	bne	r5,zero,508cf10 <___svfiprintf_internal_r+0xc30>
 508cf80:	003f6c06 	br	508cd34 <___svfiprintf_internal_r+0xa54>
 508cf84:	01c14274 	movhi	r7,1289
 508cf88:	19400450 	cmplti	r5,r3,17
 508cf8c:	39d8a004 	addi	r7,r7,25216
 508cf90:	03800404 	movi	r14,16
 508cf94:	28000526 	beq	r5,zero,508cfac <___svfiprintf_internal_r+0xccc>
 508cf98:	00002206 	br	508d024 <___svfiprintf_internal_r+0xd44>
 508cf9c:	18fffc04 	addi	r3,r3,-16
 508cfa0:	19400448 	cmpgei	r5,r3,17
 508cfa4:	42000204 	addi	r8,r8,8
 508cfa8:	28001e26 	beq	r5,zero,508d024 <___svfiprintf_internal_r+0xd44>
 508cfac:	21000044 	addi	r4,r4,1
 508cfb0:	10800404 	addi	r2,r2,16
 508cfb4:	41c00015 	stw	r7,0(r8)
 508cfb8:	43800115 	stw	r14,4(r8)
 508cfbc:	d8800b15 	stw	r2,44(sp)
 508cfc0:	d9000a15 	stw	r4,40(sp)
 508cfc4:	21400208 	cmpgei	r5,r4,8
 508cfc8:	283ff426 	beq	r5,zero,508cf9c <___svfiprintf_internal_r+0xcbc>
 508cfcc:	d9800904 	addi	r6,sp,36
 508cfd0:	a00b883a 	mov	r5,r20
 508cfd4:	a809883a 	mov	r4,r21
 508cfd8:	d9c00715 	stw	r7,28(sp)
 508cfdc:	d8c00615 	stw	r3,24(sp)
 508cfe0:	da400515 	stw	r9,20(sp)
 508cfe4:	db000215 	stw	r12,8(sp)
 508cfe8:	db400115 	stw	r13,4(sp)
 508cfec:	508c1200 	call	508c120 <__ssprint_r>
 508cff0:	103dcc1e 	bne	r2,zero,508c724 <___svfiprintf_internal_r+0x444>
 508cff4:	d8c00617 	ldw	r3,24(sp)
 508cff8:	d8800b17 	ldw	r2,44(sp)
 508cffc:	d9000a17 	ldw	r4,40(sp)
 508d000:	18fffc04 	addi	r3,r3,-16
 508d004:	19400448 	cmpgei	r5,r3,17
 508d008:	d9c00717 	ldw	r7,28(sp)
 508d00c:	da400517 	ldw	r9,20(sp)
 508d010:	db000217 	ldw	r12,8(sp)
 508d014:	db400117 	ldw	r13,4(sp)
 508d018:	9011883a 	mov	r8,r18
 508d01c:	03800404 	movi	r14,16
 508d020:	283fe21e 	bne	r5,zero,508cfac <___svfiprintf_internal_r+0xccc>
 508d024:	21000044 	addi	r4,r4,1
 508d028:	10c5883a 	add	r2,r2,r3
 508d02c:	40c00115 	stw	r3,4(r8)
 508d030:	41c00015 	stw	r7,0(r8)
 508d034:	d8800b15 	stw	r2,44(sp)
 508d038:	d9000a15 	stw	r4,40(sp)
 508d03c:	20c00208 	cmpgei	r3,r4,8
 508d040:	1800691e 	bne	r3,zero,508d1e8 <___svfiprintf_internal_r+0xf08>
 508d044:	42000204 	addi	r8,r8,8
 508d048:	003d7a06 	br	508c634 <___svfiprintf_internal_r+0x354>
 508d04c:	d9800904 	addi	r6,sp,36
 508d050:	a00b883a 	mov	r5,r20
 508d054:	a809883a 	mov	r4,r21
 508d058:	da400515 	stw	r9,20(sp)
 508d05c:	db000215 	stw	r12,8(sp)
 508d060:	db400115 	stw	r13,4(sp)
 508d064:	508c1200 	call	508c120 <__ssprint_r>
 508d068:	103dae1e 	bne	r2,zero,508c724 <___svfiprintf_internal_r+0x444>
 508d06c:	d9000a17 	ldw	r4,40(sp)
 508d070:	d8800b17 	ldw	r2,44(sp)
 508d074:	da400517 	ldw	r9,20(sp)
 508d078:	db000217 	ldw	r12,8(sp)
 508d07c:	db400117 	ldw	r13,4(sp)
 508d080:	d8c01804 	addi	r3,sp,96
 508d084:	21400044 	addi	r5,r4,1
 508d088:	9011883a 	mov	r8,r18
 508d08c:	003d7c06 	br	508c680 <___svfiprintf_internal_r+0x3a0>
 508d090:	d9800904 	addi	r6,sp,36
 508d094:	a00b883a 	mov	r5,r20
 508d098:	a809883a 	mov	r4,r21
 508d09c:	da400215 	stw	r9,8(sp)
 508d0a0:	db000115 	stw	r12,4(sp)
 508d0a4:	508c1200 	call	508c120 <__ssprint_r>
 508d0a8:	103d9e1e 	bne	r2,zero,508c724 <___svfiprintf_internal_r+0x444>
 508d0ac:	d9000a17 	ldw	r4,40(sp)
 508d0b0:	d8800b17 	ldw	r2,44(sp)
 508d0b4:	da400217 	ldw	r9,8(sp)
 508d0b8:	db000117 	ldw	r12,4(sp)
 508d0bc:	d8c01804 	addi	r3,sp,96
 508d0c0:	21400044 	addi	r5,r4,1
 508d0c4:	9011883a 	mov	r8,r18
 508d0c8:	003d7b06 	br	508c6b8 <___svfiprintf_internal_r+0x3d8>
 508d0cc:	4800961e 	bne	r9,zero,508d328 <___svfiprintf_internal_r+0x1048>
 508d0d0:	0013883a 	mov	r9,zero
 508d0d4:	002d883a 	mov	r22,zero
 508d0d8:	902f883a 	mov	r23,r18
 508d0dc:	003d4406 	br	508c5f0 <___svfiprintf_internal_r+0x310>
 508d0e0:	d9800904 	addi	r6,sp,36
 508d0e4:	a00b883a 	mov	r5,r20
 508d0e8:	a809883a 	mov	r4,r21
 508d0ec:	508c1200 	call	508c120 <__ssprint_r>
 508d0f0:	103d8c1e 	bne	r2,zero,508c724 <___svfiprintf_internal_r+0x444>
 508d0f4:	d9000a17 	ldw	r4,40(sp)
 508d0f8:	d8800b17 	ldw	r2,44(sp)
 508d0fc:	d8c01804 	addi	r3,sp,96
 508d100:	21400044 	addi	r5,r4,1
 508d104:	9011883a 	mov	r8,r18
 508d108:	003d6f06 	br	508c6c8 <___svfiprintf_internal_r+0x3e8>
 508d10c:	902f883a 	mov	r23,r18
 508d110:	003d3706 	br	508c5f0 <___svfiprintf_internal_r+0x310>
 508d114:	d9000017 	ldw	r4,0(sp)
 508d118:	ddc00315 	stw	r23,12(sp)
 508d11c:	2005d7fa 	srai	r2,r4,31
 508d120:	19000015 	stw	r4,0(r3)
 508d124:	18800115 	stw	r2,4(r3)
 508d128:	003c8806 	br	508c34c <___svfiprintf_internal_r+0x6c>
 508d12c:	24c00017 	ldw	r19,0(r4)
 508d130:	002d883a 	mov	r22,zero
 508d134:	d8c00315 	stw	r3,12(sp)
 508d138:	00800044 	movi	r2,1
 508d13c:	003d1d06 	br	508c5b4 <___svfiprintf_internal_r+0x2d4>
 508d140:	00c00c04 	movi	r3,48
 508d144:	d88008c5 	stb	r2,35(sp)
 508d148:	d8c00885 	stb	r3,34(sp)
 508d14c:	63000094 	ori	r12,r12,2
 508d150:	00800084 	movi	r2,2
 508d154:	003d1706 	br	508c5b4 <___svfiprintf_internal_r+0x2d4>
 508d158:	24c00017 	ldw	r19,0(r4)
 508d15c:	d8c00315 	stw	r3,12(sp)
 508d160:	982dd7fa 	srai	r22,r19,31
 508d164:	b005883a 	mov	r2,r22
 508d168:	003df206 	br	508c934 <___svfiprintf_internal_r+0x654>
 508d16c:	24c00017 	ldw	r19,0(r4)
 508d170:	002d883a 	mov	r22,zero
 508d174:	d8c00315 	stw	r3,12(sp)
 508d178:	0005883a 	mov	r2,zero
 508d17c:	003d0d06 	br	508c5b4 <___svfiprintf_internal_r+0x2d4>
 508d180:	2cc00017 	ldw	r19,0(r5)
 508d184:	002d883a 	mov	r22,zero
 508d188:	d9000315 	stw	r4,12(sp)
 508d18c:	003e0a06 	br	508c9b8 <___svfiprintf_internal_r+0x6d8>
 508d190:	b809883a 	mov	r4,r23
 508d194:	da000215 	stw	r8,8(sp)
 508d198:	db000115 	stw	r12,4(sp)
 508d19c:	5082abc0 	call	5082abc <strlen>
 508d1a0:	db000117 	ldw	r12,4(sp)
 508d1a4:	da000217 	ldw	r8,8(sp)
 508d1a8:	102d883a 	mov	r22,r2
 508d1ac:	1027883a 	mov	r19,r2
 508d1b0:	dc400315 	stw	r17,12(sp)
 508d1b4:	003cf306 	br	508c584 <___svfiprintf_internal_r+0x2a4>
 508d1b8:	01401004 	movi	r5,64
 508d1bc:	5089cf80 	call	5089cf8 <_malloc_r>
 508d1c0:	a0800015 	stw	r2,0(r20)
 508d1c4:	a0800415 	stw	r2,16(r20)
 508d1c8:	10007a26 	beq	r2,zero,508d3b4 <___svfiprintf_internal_r+0x10d4>
 508d1cc:	00801004 	movi	r2,64
 508d1d0:	a0800515 	stw	r2,20(r20)
 508d1d4:	003c5606 	br	508c330 <___svfiprintf_internal_r+0x50>
 508d1d8:	d8800017 	ldw	r2,0(sp)
 508d1dc:	18800015 	stw	r2,0(r3)
 508d1e0:	ddc00315 	stw	r23,12(sp)
 508d1e4:	003c5906 	br	508c34c <___svfiprintf_internal_r+0x6c>
 508d1e8:	d9800904 	addi	r6,sp,36
 508d1ec:	a00b883a 	mov	r5,r20
 508d1f0:	a809883a 	mov	r4,r21
 508d1f4:	da400515 	stw	r9,20(sp)
 508d1f8:	db000215 	stw	r12,8(sp)
 508d1fc:	db400115 	stw	r13,4(sp)
 508d200:	508c1200 	call	508c120 <__ssprint_r>
 508d204:	103d471e 	bne	r2,zero,508c724 <___svfiprintf_internal_r+0x444>
 508d208:	d8800b17 	ldw	r2,44(sp)
 508d20c:	d9000a17 	ldw	r4,40(sp)
 508d210:	da400517 	ldw	r9,20(sp)
 508d214:	db000217 	ldw	r12,8(sp)
 508d218:	db400117 	ldw	r13,4(sp)
 508d21c:	9011883a 	mov	r8,r18
 508d220:	003d0406 	br	508c634 <___svfiprintf_internal_r+0x354>
 508d224:	0421c83a 	sub	r16,zero,r16
 508d228:	ddc00315 	stw	r23,12(sp)
 508d22c:	003e5e06 	br	508cba8 <___svfiprintf_internal_r+0x8c8>
 508d230:	d9800904 	addi	r6,sp,36
 508d234:	a00b883a 	mov	r5,r20
 508d238:	a809883a 	mov	r4,r21
 508d23c:	da400115 	stw	r9,4(sp)
 508d240:	508c1200 	call	508c120 <__ssprint_r>
 508d244:	103d371e 	bne	r2,zero,508c724 <___svfiprintf_internal_r+0x444>
 508d248:	d9000a17 	ldw	r4,40(sp)
 508d24c:	d8800b17 	ldw	r2,44(sp)
 508d250:	da400117 	ldw	r9,4(sp)
 508d254:	d8c01804 	addi	r3,sp,96
 508d258:	21400044 	addi	r5,r4,1
 508d25c:	9011883a 	mov	r8,r18
 508d260:	003d1706 	br	508c6c0 <___svfiprintf_internal_r+0x3e0>
 508d264:	e0800043 	ldbu	r2,1(fp)
 508d268:	63000814 	ori	r12,r12,32
 508d26c:	e7000044 	addi	fp,fp,1
 508d270:	10803fcc 	andi	r2,r2,255
 508d274:	1080201c 	xori	r2,r2,128
 508d278:	10bfe004 	addi	r2,r2,-128
 508d27c:	003c4b06 	br	508c3ac <___svfiprintf_internal_r+0xcc>
 508d280:	488001f0 	cmpltui	r2,r9,7
 508d284:	482d883a 	mov	r22,r9
 508d288:	1000011e 	bne	r2,zero,508d290 <___svfiprintf_internal_r+0xfb0>
 508d28c:	05800184 	movi	r22,6
 508d290:	05c14274 	movhi	r23,1289
 508d294:	b027883a 	mov	r19,r22
 508d298:	dc400315 	stw	r17,12(sp)
 508d29c:	bdd81904 	addi	r23,r23,24676
 508d2a0:	003cb806 	br	508c584 <___svfiprintf_internal_r+0x2a4>
 508d2a4:	d8800317 	ldw	r2,12(sp)
 508d2a8:	d8c00315 	stw	r3,12(sp)
 508d2ac:	14c00017 	ldw	r19,0(r2)
 508d2b0:	982dd7fa 	srai	r22,r19,31
 508d2b4:	b005883a 	mov	r2,r22
 508d2b8:	003d9e06 	br	508c934 <___svfiprintf_internal_r+0x654>
 508d2bc:	d8800317 	ldw	r2,12(sp)
 508d2c0:	002d883a 	mov	r22,zero
 508d2c4:	d8c00315 	stw	r3,12(sp)
 508d2c8:	14c00017 	ldw	r19,0(r2)
 508d2cc:	00800044 	movi	r2,1
 508d2d0:	003cb806 	br	508c5b4 <___svfiprintf_internal_r+0x2d4>
 508d2d4:	d8800317 	ldw	r2,12(sp)
 508d2d8:	002d883a 	mov	r22,zero
 508d2dc:	d8c00315 	stw	r3,12(sp)
 508d2e0:	14c00017 	ldw	r19,0(r2)
 508d2e4:	0005883a 	mov	r2,zero
 508d2e8:	003cb206 	br	508c5b4 <___svfiprintf_internal_r+0x2d4>
 508d2ec:	d8c00317 	ldw	r3,12(sp)
 508d2f0:	002d883a 	mov	r22,zero
 508d2f4:	d9000315 	stw	r4,12(sp)
 508d2f8:	1cc00017 	ldw	r19,0(r3)
 508d2fc:	003dae06 	br	508c9b8 <___svfiprintf_internal_r+0x6d8>
 508d300:	1809883a 	mov	r4,r3
 508d304:	39d89c04 	addi	r7,r7,25200
 508d308:	003ee506 	br	508cea0 <___svfiprintf_internal_r+0xbc0>
 508d30c:	d9800845 	stb	r6,33(sp)
 508d310:	003c9606 	br	508c56c <___svfiprintf_internal_r+0x28c>
 508d314:	d9800904 	addi	r6,sp,36
 508d318:	a00b883a 	mov	r5,r20
 508d31c:	a809883a 	mov	r4,r21
 508d320:	508c1200 	call	508c120 <__ssprint_r>
 508d324:	003cff06 	br	508c724 <___svfiprintf_internal_r+0x444>
 508d328:	8819883a 	mov	r12,r17
 508d32c:	003d8d06 	br	508c964 <___svfiprintf_internal_r+0x684>
 508d330:	4827883a 	mov	r19,r9
 508d334:	dc400315 	stw	r17,12(sp)
 508d338:	482d883a 	mov	r22,r9
 508d33c:	003c9106 	br	508c584 <___svfiprintf_internal_r+0x2a4>
 508d340:	d9800845 	stb	r6,33(sp)
 508d344:	003d7306 	br	508c914 <___svfiprintf_internal_r+0x634>
 508d348:	d9800845 	stb	r6,33(sp)
 508d34c:	003d9006 	br	508c990 <___svfiprintf_internal_r+0x6b0>
 508d350:	d9800845 	stb	r6,33(sp)
 508d354:	003e5306 	br	508cca4 <___svfiprintf_internal_r+0x9c4>
 508d358:	d9800845 	stb	r6,33(sp)
 508d35c:	003dc606 	br	508ca78 <___svfiprintf_internal_r+0x798>
 508d360:	d9800845 	stb	r6,33(sp)
 508d364:	003e3d06 	br	508cc5c <___svfiprintf_internal_r+0x97c>
 508d368:	180d883a 	mov	r6,r3
 508d36c:	2809883a 	mov	r4,r5
 508d370:	39d89c04 	addi	r7,r7,25200
 508d374:	003e9a06 	br	508cde0 <___svfiprintf_internal_r+0xb00>
 508d378:	00bfffc4 	movi	r2,-1
 508d37c:	d8800015 	stw	r2,0(sp)
 508d380:	003ceb06 	br	508c730 <___svfiprintf_internal_r+0x450>
 508d384:	d8800317 	ldw	r2,12(sp)
 508d388:	12400017 	ldw	r9,0(r2)
 508d38c:	15c00104 	addi	r23,r2,4
 508d390:	4800010e 	bge	r9,zero,508d398 <___svfiprintf_internal_r+0x10b8>
 508d394:	027fffc4 	movi	r9,-1
 508d398:	e0800043 	ldbu	r2,1(fp)
 508d39c:	ddc00315 	stw	r23,12(sp)
 508d3a0:	2039883a 	mov	fp,r4
 508d3a4:	10803fcc 	andi	r2,r2,255
 508d3a8:	1080201c 	xori	r2,r2,128
 508d3ac:	10bfe004 	addi	r2,r2,-128
 508d3b0:	003bfe06 	br	508c3ac <___svfiprintf_internal_r+0xcc>
 508d3b4:	00800304 	movi	r2,12
 508d3b8:	a8800015 	stw	r2,0(r21)
 508d3bc:	00bfffc4 	movi	r2,-1
 508d3c0:	d8800015 	stw	r2,0(sp)
 508d3c4:	003cda06 	br	508c730 <___svfiprintf_internal_r+0x450>

0508d3c8 <__sprint_r.part.0>:
 508d3c8:	28801917 	ldw	r2,100(r5)
 508d3cc:	defff604 	addi	sp,sp,-40
 508d3d0:	dcc00315 	stw	r19,12(sp)
 508d3d4:	dfc00915 	stw	ra,36(sp)
 508d3d8:	df000815 	stw	fp,32(sp)
 508d3dc:	ddc00715 	stw	r23,28(sp)
 508d3e0:	dd800615 	stw	r22,24(sp)
 508d3e4:	dd400515 	stw	r21,20(sp)
 508d3e8:	dd000415 	stw	r20,16(sp)
 508d3ec:	dc800215 	stw	r18,8(sp)
 508d3f0:	dc400115 	stw	r17,4(sp)
 508d3f4:	dc000015 	stw	r16,0(sp)
 508d3f8:	1088000c 	andi	r2,r2,8192
 508d3fc:	3027883a 	mov	r19,r6
 508d400:	10002c26 	beq	r2,zero,508d4b4 <__sprint_r.part.0+0xec>
 508d404:	30800217 	ldw	r2,8(r6)
 508d408:	35000017 	ldw	r20,0(r6)
 508d40c:	2821883a 	mov	r16,r5
 508d410:	2023883a 	mov	r17,r4
 508d414:	05bfff04 	movi	r22,-4
 508d418:	10002426 	beq	r2,zero,508d4ac <__sprint_r.part.0+0xe4>
 508d41c:	a5400117 	ldw	r21,4(r20)
 508d420:	a5c00017 	ldw	r23,0(r20)
 508d424:	a824d0ba 	srli	r18,r21,2
 508d428:	90001b26 	beq	r18,zero,508d498 <__sprint_r.part.0+0xd0>
 508d42c:	0039883a 	mov	fp,zero
 508d430:	00000206 	br	508d43c <__sprint_r.part.0+0x74>
 508d434:	bdc00104 	addi	r23,r23,4
 508d438:	97001626 	beq	r18,fp,508d494 <__sprint_r.part.0+0xcc>
 508d43c:	b9400017 	ldw	r5,0(r23)
 508d440:	800d883a 	mov	r6,r16
 508d444:	8809883a 	mov	r4,r17
 508d448:	508ee280 	call	508ee28 <_fputwc_r>
 508d44c:	10bfffe0 	cmpeqi	r2,r2,-1
 508d450:	e7000044 	addi	fp,fp,1
 508d454:	103ff726 	beq	r2,zero,508d434 <__sprint_r.part.0+0x6c>
 508d458:	00bfffc4 	movi	r2,-1
 508d45c:	98000215 	stw	zero,8(r19)
 508d460:	98000115 	stw	zero,4(r19)
 508d464:	dfc00917 	ldw	ra,36(sp)
 508d468:	df000817 	ldw	fp,32(sp)
 508d46c:	ddc00717 	ldw	r23,28(sp)
 508d470:	dd800617 	ldw	r22,24(sp)
 508d474:	dd400517 	ldw	r21,20(sp)
 508d478:	dd000417 	ldw	r20,16(sp)
 508d47c:	dcc00317 	ldw	r19,12(sp)
 508d480:	dc800217 	ldw	r18,8(sp)
 508d484:	dc400117 	ldw	r17,4(sp)
 508d488:	dc000017 	ldw	r16,0(sp)
 508d48c:	dec00a04 	addi	sp,sp,40
 508d490:	f800283a 	ret
 508d494:	98800217 	ldw	r2,8(r19)
 508d498:	adaa703a 	and	r21,r21,r22
 508d49c:	1545c83a 	sub	r2,r2,r21
 508d4a0:	98800215 	stw	r2,8(r19)
 508d4a4:	a5000204 	addi	r20,r20,8
 508d4a8:	103fdc1e 	bne	r2,zero,508d41c <__sprint_r.part.0+0x54>
 508d4ac:	0005883a 	mov	r2,zero
 508d4b0:	003fea06 	br	508d45c <__sprint_r.part.0+0x94>
 508d4b4:	50894980 	call	5089498 <__sfvwrite_r>
 508d4b8:	003fe806 	br	508d45c <__sprint_r.part.0+0x94>

0508d4bc <__sprint_r>:
 508d4bc:	30c00217 	ldw	r3,8(r6)
 508d4c0:	18000126 	beq	r3,zero,508d4c8 <__sprint_r+0xc>
 508d4c4:	508d3c81 	jmpi	508d3c8 <__sprint_r.part.0>
 508d4c8:	30000115 	stw	zero,4(r6)
 508d4cc:	0005883a 	mov	r2,zero
 508d4d0:	f800283a 	ret

0508d4d4 <___vfiprintf_internal_r>:
 508d4d4:	deffcf04 	addi	sp,sp,-196
 508d4d8:	dd802d15 	stw	r22,180(sp)
 508d4dc:	dd402c15 	stw	r21,176(sp)
 508d4e0:	dd002b15 	stw	r20,172(sp)
 508d4e4:	dfc03015 	stw	ra,192(sp)
 508d4e8:	df002f15 	stw	fp,188(sp)
 508d4ec:	ddc02e15 	stw	r23,184(sp)
 508d4f0:	dcc02a15 	stw	r19,168(sp)
 508d4f4:	dc802915 	stw	r18,164(sp)
 508d4f8:	dc402815 	stw	r17,160(sp)
 508d4fc:	dc002715 	stw	r16,156(sp)
 508d500:	d9c00415 	stw	r7,16(sp)
 508d504:	202d883a 	mov	r22,r4
 508d508:	282b883a 	mov	r21,r5
 508d50c:	3029883a 	mov	r20,r6
 508d510:	20000226 	beq	r4,zero,508d51c <___vfiprintf_internal_r+0x48>
 508d514:	20800e17 	ldw	r2,56(r4)
 508d518:	1001bb26 	beq	r2,zero,508dc08 <___vfiprintf_internal_r+0x734>
 508d51c:	a880030b 	ldhu	r2,12(r21)
 508d520:	10c8000c 	andi	r3,r2,8192
 508d524:	1800061e 	bne	r3,zero,508d540 <___vfiprintf_internal_r+0x6c>
 508d528:	a8c01917 	ldw	r3,100(r21)
 508d52c:	0137ffc4 	movi	r4,-8193
 508d530:	10880014 	ori	r2,r2,8192
 508d534:	1906703a 	and	r3,r3,r4
 508d538:	a880030d 	sth	r2,12(r21)
 508d53c:	a8c01915 	stw	r3,100(r21)
 508d540:	10c0020c 	andi	r3,r2,8
 508d544:	18010626 	beq	r3,zero,508d960 <___vfiprintf_internal_r+0x48c>
 508d548:	a8c00417 	ldw	r3,16(r21)
 508d54c:	18010426 	beq	r3,zero,508d960 <___vfiprintf_internal_r+0x48c>
 508d550:	1080068c 	andi	r2,r2,26
 508d554:	10800298 	cmpnei	r2,r2,10
 508d558:	10010926 	beq	r2,zero,508d980 <___vfiprintf_internal_r+0x4ac>
 508d55c:	dc801704 	addi	r18,sp,92
 508d560:	dc800a15 	stw	r18,40(sp)
 508d564:	d8000c15 	stw	zero,48(sp)
 508d568:	d8000b15 	stw	zero,44(sp)
 508d56c:	9021883a 	mov	r16,r18
 508d570:	d8000515 	stw	zero,20(sp)
 508d574:	d8000115 	stw	zero,4(sp)
 508d578:	a0800007 	ldb	r2,0(r20)
 508d57c:	1000e626 	beq	r2,zero,508d918 <___vfiprintf_internal_r+0x444>
 508d580:	a023883a 	mov	r17,r20
 508d584:	00000306 	br	508d594 <___vfiprintf_internal_r+0xc0>
 508d588:	88800047 	ldb	r2,1(r17)
 508d58c:	8c400044 	addi	r17,r17,1
 508d590:	10013126 	beq	r2,zero,508da58 <___vfiprintf_internal_r+0x584>
 508d594:	10800958 	cmpnei	r2,r2,37
 508d598:	103ffb1e 	bne	r2,zero,508d588 <___vfiprintf_internal_r+0xb4>
 508d59c:	8d27c83a 	sub	r19,r17,r20
 508d5a0:	8d012f1e 	bne	r17,r20,508da60 <___vfiprintf_internal_r+0x58c>
 508d5a4:	88800003 	ldbu	r2,0(r17)
 508d5a8:	10803fcc 	andi	r2,r2,255
 508d5ac:	1080201c 	xori	r2,r2,128
 508d5b0:	10bfe004 	addi	r2,r2,-128
 508d5b4:	1000d826 	beq	r2,zero,508d918 <___vfiprintf_internal_r+0x444>
 508d5b8:	88800047 	ldb	r2,1(r17)
 508d5bc:	8d000044 	addi	r20,r17,1
 508d5c0:	d8000945 	stb	zero,37(sp)
 508d5c4:	000b883a 	mov	r5,zero
 508d5c8:	000d883a 	mov	r6,zero
 508d5cc:	023fffc4 	movi	r8,-1
 508d5d0:	0023883a 	mov	r17,zero
 508d5d4:	001b883a 	mov	r13,zero
 508d5d8:	a5000044 	addi	r20,r20,1
 508d5dc:	10fff804 	addi	r3,r2,-32
 508d5e0:	19001668 	cmpgeui	r4,r3,89
 508d5e4:	20006a1e 	bne	r4,zero,508d790 <___vfiprintf_internal_r+0x2bc>
 508d5e8:	180690ba 	slli	r3,r3,2
 508d5ec:	01014274 	movhi	r4,1289
 508d5f0:	1909883a 	add	r4,r3,r4
 508d5f4:	20f57f17 	ldw	r3,-10756(r4)
 508d5f8:	1800683a 	jmp	r3
 508d5fc:	0508df28 	cmpgeui	r20,zero,9084
 508d600:	0508d790 	cmplti	r20,zero,9054
 508d604:	0508d790 	cmplti	r20,zero,9054
 508d608:	0508df1c 	xori	r20,zero,9084
 508d60c:	0508d790 	cmplti	r20,zero,9054
 508d610:	0508d790 	cmplti	r20,zero,9054
 508d614:	0508d790 	cmplti	r20,zero,9054
 508d618:	0508d790 	cmplti	r20,zero,9054
 508d61c:	0508d790 	cmplti	r20,zero,9054
 508d620:	0508d790 	cmplti	r20,zero,9054
 508d624:	0508def4 	movhi	r20,9083
 508d628:	0508dee4 	muli	r20,zero,9083
 508d62c:	0508d790 	cmplti	r20,zero,9054
 508d630:	0508decc 	andi	r20,zero,9083
 508d634:	0508de88 	cmpgei	r20,zero,9082
 508d638:	0508d790 	cmplti	r20,zero,9054
 508d63c:	0508de7c 	xorhi	r20,zero,9081
 508d640:	0508d760 	cmpeqi	r20,zero,9053
 508d644:	0508d760 	cmpeqi	r20,zero,9053
 508d648:	0508d760 	cmpeqi	r20,zero,9053
 508d64c:	0508d760 	cmpeqi	r20,zero,9053
 508d650:	0508d760 	cmpeqi	r20,zero,9053
 508d654:	0508d760 	cmpeqi	r20,zero,9053
 508d658:	0508d760 	cmpeqi	r20,zero,9053
 508d65c:	0508d760 	cmpeqi	r20,zero,9053
 508d660:	0508d760 	cmpeqi	r20,zero,9053
 508d664:	0508d790 	cmplti	r20,zero,9054
 508d668:	0508d790 	cmplti	r20,zero,9054
 508d66c:	0508d790 	cmplti	r20,zero,9054
 508d670:	0508d790 	cmplti	r20,zero,9054
 508d674:	0508d790 	cmplti	r20,zero,9054
 508d678:	0508d790 	cmplti	r20,zero,9054
 508d67c:	0508d790 	cmplti	r20,zero,9054
 508d680:	0508d790 	cmplti	r20,zero,9054
 508d684:	0508d790 	cmplti	r20,zero,9054
 508d688:	0508d790 	cmplti	r20,zero,9054
 508d68c:	0508dd78 	rdprs	r20,zero,9077
 508d690:	0508d790 	cmplti	r20,zero,9054
 508d694:	0508d790 	cmplti	r20,zero,9054
 508d698:	0508d790 	cmplti	r20,zero,9054
 508d69c:	0508d790 	cmplti	r20,zero,9054
 508d6a0:	0508d790 	cmplti	r20,zero,9054
 508d6a4:	0508d790 	cmplti	r20,zero,9054
 508d6a8:	0508d790 	cmplti	r20,zero,9054
 508d6ac:	0508d790 	cmplti	r20,zero,9054
 508d6b0:	0508d790 	cmplti	r20,zero,9054
 508d6b4:	0508d790 	cmplti	r20,zero,9054
 508d6b8:	0508d9f0 	cmpltui	r20,zero,9063
 508d6bc:	0508d790 	cmplti	r20,zero,9054
 508d6c0:	0508d790 	cmplti	r20,zero,9054
 508d6c4:	0508d790 	cmplti	r20,zero,9054
 508d6c8:	0508d790 	cmplti	r20,zero,9054
 508d6cc:	0508d790 	cmplti	r20,zero,9054
 508d6d0:	0508d9c8 	cmpgei	r20,zero,9063
 508d6d4:	0508d790 	cmplti	r20,zero,9054
 508d6d8:	0508d790 	cmplti	r20,zero,9054
 508d6dc:	0508df7c 	xorhi	r20,zero,9085
 508d6e0:	0508d790 	cmplti	r20,zero,9054
 508d6e4:	0508d790 	cmplti	r20,zero,9054
 508d6e8:	0508d790 	cmplti	r20,zero,9054
 508d6ec:	0508d790 	cmplti	r20,zero,9054
 508d6f0:	0508d790 	cmplti	r20,zero,9054
 508d6f4:	0508d790 	cmplti	r20,zero,9054
 508d6f8:	0508d790 	cmplti	r20,zero,9054
 508d6fc:	0508d790 	cmplti	r20,zero,9054
 508d700:	0508d790 	cmplti	r20,zero,9054
 508d704:	0508d790 	cmplti	r20,zero,9054
 508d708:	0508df54 	movui	r20,9085
 508d70c:	0508dc10 	cmplti	r20,zero,9072
 508d710:	0508d790 	cmplti	r20,zero,9054
 508d714:	0508d790 	cmplti	r20,zero,9054
 508d718:	0508d790 	cmplti	r20,zero,9054
 508d71c:	0508dc84 	movi	r20,9074
 508d720:	0508dc10 	cmplti	r20,zero,9072
 508d724:	0508d790 	cmplti	r20,zero,9054
 508d728:	0508d790 	cmplti	r20,zero,9054
 508d72c:	0508e000 	call	508e00 <__alt_mem_sdram+0x508e00>
 508d730:	0508d790 	cmplti	r20,zero,9054
 508d734:	0508dfc4 	movi	r20,9087
 508d738:	0508d9f4 	movhi	r20,9063
 508d73c:	0508dd3c 	xorhi	r20,zero,9076
 508d740:	0508dd30 	cmpltui	r20,zero,9076
 508d744:	0508d790 	cmplti	r20,zero,9054
 508d748:	0508dcd8 	cmpnei	r20,zero,9075
 508d74c:	0508d790 	cmplti	r20,zero,9054
 508d750:	0508d9cc 	andi	r20,zero,9063
 508d754:	0508d790 	cmplti	r20,zero,9054
 508d758:	0508d790 	cmplti	r20,zero,9054
 508d75c:	0508dc90 	cmplti	r20,zero,9074
 508d760:	0023883a 	mov	r17,zero
 508d764:	10fff404 	addi	r3,r2,-48
 508d768:	a0800007 	ldb	r2,0(r20)
 508d76c:	8c4002a4 	muli	r17,r17,10
 508d770:	a5000044 	addi	r20,r20,1
 508d774:	1c63883a 	add	r17,r3,r17
 508d778:	10fff404 	addi	r3,r2,-48
 508d77c:	190002b0 	cmpltui	r4,r3,10
 508d780:	203ff91e 	bne	r4,zero,508d768 <___vfiprintf_internal_r+0x294>
 508d784:	10fff804 	addi	r3,r2,-32
 508d788:	19001668 	cmpgeui	r4,r3,89
 508d78c:	203f9626 	beq	r4,zero,508d5e8 <___vfiprintf_internal_r+0x114>
 508d790:	29403fcc 	andi	r5,r5,255
 508d794:	2803eb1e 	bne	r5,zero,508e744 <___vfiprintf_internal_r+0x1270>
 508d798:	10005f26 	beq	r2,zero,508d918 <___vfiprintf_internal_r+0x444>
 508d79c:	d8800d05 	stb	r2,52(sp)
 508d7a0:	d8000945 	stb	zero,37(sp)
 508d7a4:	05c00044 	movi	r23,1
 508d7a8:	07000044 	movi	fp,1
 508d7ac:	dcc00d04 	addi	r19,sp,52
 508d7b0:	db400015 	stw	r13,0(sp)
 508d7b4:	0011883a 	mov	r8,zero
 508d7b8:	d8800017 	ldw	r2,0(sp)
 508d7bc:	1380008c 	andi	r14,r2,2
 508d7c0:	70000126 	beq	r14,zero,508d7c8 <___vfiprintf_internal_r+0x2f4>
 508d7c4:	bdc00084 	addi	r23,r23,2
 508d7c8:	d8800017 	ldw	r2,0(sp)
 508d7cc:	d9000b17 	ldw	r4,44(sp)
 508d7d0:	1340210c 	andi	r13,r2,132
 508d7d4:	21800044 	addi	r6,r4,1
 508d7d8:	d8800c17 	ldw	r2,48(sp)
 508d7dc:	300b883a 	mov	r5,r6
 508d7e0:	6800021e 	bne	r13,zero,508d7ec <___vfiprintf_internal_r+0x318>
 508d7e4:	8dc7c83a 	sub	r3,r17,r23
 508d7e8:	00c2e016 	blt	zero,r3,508e36c <___vfiprintf_internal_r+0xe98>
 508d7ec:	d8c00947 	ldb	r3,37(sp)
 508d7f0:	81800204 	addi	r6,r16,8
 508d7f4:	18000d26 	beq	r3,zero,508d82c <___vfiprintf_internal_r+0x358>
 508d7f8:	d8c00944 	addi	r3,sp,37
 508d7fc:	10800044 	addi	r2,r2,1
 508d800:	80c00015 	stw	r3,0(r16)
 508d804:	00c00044 	movi	r3,1
 508d808:	80c00115 	stw	r3,4(r16)
 508d80c:	d8800c15 	stw	r2,48(sp)
 508d810:	d9400b15 	stw	r5,44(sp)
 508d814:	28c00208 	cmpgei	r3,r5,8
 508d818:	1802981e 	bne	r3,zero,508e27c <___vfiprintf_internal_r+0xda8>
 508d81c:	2809883a 	mov	r4,r5
 508d820:	3021883a 	mov	r16,r6
 508d824:	29400044 	addi	r5,r5,1
 508d828:	31800204 	addi	r6,r6,8
 508d82c:	70001826 	beq	r14,zero,508d890 <___vfiprintf_internal_r+0x3bc>
 508d830:	d8c00984 	addi	r3,sp,38
 508d834:	10800084 	addi	r2,r2,2
 508d838:	80c00015 	stw	r3,0(r16)
 508d83c:	00c00084 	movi	r3,2
 508d840:	80c00115 	stw	r3,4(r16)
 508d844:	d8800c15 	stw	r2,48(sp)
 508d848:	d9400b15 	stw	r5,44(sp)
 508d84c:	28c00208 	cmpgei	r3,r5,8
 508d850:	1802a226 	beq	r3,zero,508e2dc <___vfiprintf_internal_r+0xe08>
 508d854:	10032026 	beq	r2,zero,508e4d8 <___vfiprintf_internal_r+0x1004>
 508d858:	d9800a04 	addi	r6,sp,40
 508d85c:	a80b883a 	mov	r5,r21
 508d860:	b009883a 	mov	r4,r22
 508d864:	da000315 	stw	r8,12(sp)
 508d868:	db400215 	stw	r13,8(sp)
 508d86c:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508d870:	10002b1e 	bne	r2,zero,508d920 <___vfiprintf_internal_r+0x44c>
 508d874:	d9000b17 	ldw	r4,44(sp)
 508d878:	d8800c17 	ldw	r2,48(sp)
 508d87c:	da000317 	ldw	r8,12(sp)
 508d880:	db400217 	ldw	r13,8(sp)
 508d884:	d9801904 	addi	r6,sp,100
 508d888:	21400044 	addi	r5,r4,1
 508d88c:	9021883a 	mov	r16,r18
 508d890:	6b402018 	cmpnei	r13,r13,128
 508d894:	6801e326 	beq	r13,zero,508e024 <___vfiprintf_internal_r+0xb50>
 508d898:	4711c83a 	sub	r8,r8,fp
 508d89c:	02022216 	blt	zero,r8,508e128 <___vfiprintf_internal_r+0xc54>
 508d8a0:	e085883a 	add	r2,fp,r2
 508d8a4:	d9400b15 	stw	r5,44(sp)
 508d8a8:	84c00015 	stw	r19,0(r16)
 508d8ac:	87000115 	stw	fp,4(r16)
 508d8b0:	d8800c15 	stw	r2,48(sp)
 508d8b4:	29400210 	cmplti	r5,r5,8
 508d8b8:	2800081e 	bne	r5,zero,508d8dc <___vfiprintf_internal_r+0x408>
 508d8bc:	10009826 	beq	r2,zero,508db20 <___vfiprintf_internal_r+0x64c>
 508d8c0:	d9800a04 	addi	r6,sp,40
 508d8c4:	a80b883a 	mov	r5,r21
 508d8c8:	b009883a 	mov	r4,r22
 508d8cc:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508d8d0:	1000131e 	bne	r2,zero,508d920 <___vfiprintf_internal_r+0x44c>
 508d8d4:	d8800c17 	ldw	r2,48(sp)
 508d8d8:	900d883a 	mov	r6,r18
 508d8dc:	d8c00017 	ldw	r3,0(sp)
 508d8e0:	1cc0010c 	andi	r19,r3,4
 508d8e4:	98000226 	beq	r19,zero,508d8f0 <___vfiprintf_internal_r+0x41c>
 508d8e8:	8de1c83a 	sub	r16,r17,r23
 508d8ec:	04009316 	blt	zero,r16,508db3c <___vfiprintf_internal_r+0x668>
 508d8f0:	8dc0010e 	bge	r17,r23,508d8f8 <___vfiprintf_internal_r+0x424>
 508d8f4:	b823883a 	mov	r17,r23
 508d8f8:	d8c00117 	ldw	r3,4(sp)
 508d8fc:	1c47883a 	add	r3,r3,r17
 508d900:	d8c00115 	stw	r3,4(sp)
 508d904:	1002531e 	bne	r2,zero,508e254 <___vfiprintf_internal_r+0xd80>
 508d908:	a0800007 	ldb	r2,0(r20)
 508d90c:	d8000b15 	stw	zero,44(sp)
 508d910:	9021883a 	mov	r16,r18
 508d914:	103f1a1e 	bne	r2,zero,508d580 <___vfiprintf_internal_r+0xac>
 508d918:	d8800c17 	ldw	r2,48(sp)
 508d91c:	10038b1e 	bne	r2,zero,508e74c <___vfiprintf_internal_r+0x1278>
 508d920:	a880030b 	ldhu	r2,12(r21)
 508d924:	1080100c 	andi	r2,r2,64
 508d928:	1003a31e 	bne	r2,zero,508e7b8 <___vfiprintf_internal_r+0x12e4>
 508d92c:	d8800117 	ldw	r2,4(sp)
 508d930:	dfc03017 	ldw	ra,192(sp)
 508d934:	df002f17 	ldw	fp,188(sp)
 508d938:	ddc02e17 	ldw	r23,184(sp)
 508d93c:	dd802d17 	ldw	r22,180(sp)
 508d940:	dd402c17 	ldw	r21,176(sp)
 508d944:	dd002b17 	ldw	r20,172(sp)
 508d948:	dcc02a17 	ldw	r19,168(sp)
 508d94c:	dc802917 	ldw	r18,164(sp)
 508d950:	dc402817 	ldw	r17,160(sp)
 508d954:	dc002717 	ldw	r16,156(sp)
 508d958:	dec03104 	addi	sp,sp,196
 508d95c:	f800283a 	ret
 508d960:	a80b883a 	mov	r5,r21
 508d964:	b009883a 	mov	r4,r22
 508d968:	5086f300 	call	5086f30 <__swsetup_r>
 508d96c:	1003921e 	bne	r2,zero,508e7b8 <___vfiprintf_internal_r+0x12e4>
 508d970:	a880030b 	ldhu	r2,12(r21)
 508d974:	1080068c 	andi	r2,r2,26
 508d978:	10800298 	cmpnei	r2,r2,10
 508d97c:	103ef71e 	bne	r2,zero,508d55c <___vfiprintf_internal_r+0x88>
 508d980:	a880038f 	ldh	r2,14(r21)
 508d984:	103ef516 	blt	r2,zero,508d55c <___vfiprintf_internal_r+0x88>
 508d988:	d9c00417 	ldw	r7,16(sp)
 508d98c:	a00d883a 	mov	r6,r20
 508d990:	a80b883a 	mov	r5,r21
 508d994:	b009883a 	mov	r4,r22
 508d998:	dfc03017 	ldw	ra,192(sp)
 508d99c:	df002f17 	ldw	fp,188(sp)
 508d9a0:	ddc02e17 	ldw	r23,184(sp)
 508d9a4:	dd802d17 	ldw	r22,180(sp)
 508d9a8:	dd402c17 	ldw	r21,176(sp)
 508d9ac:	dd002b17 	ldw	r20,172(sp)
 508d9b0:	dcc02a17 	ldw	r19,168(sp)
 508d9b4:	dc802917 	ldw	r18,164(sp)
 508d9b8:	dc402817 	ldw	r17,160(sp)
 508d9bc:	dc002717 	ldw	r16,156(sp)
 508d9c0:	dec03104 	addi	sp,sp,196
 508d9c4:	508e8241 	jmpi	508e824 <__sbprintf>
 508d9c8:	6b400414 	ori	r13,r13,16
 508d9cc:	6880080c 	andi	r2,r13,32
 508d9d0:	10004726 	beq	r2,zero,508daf0 <___vfiprintf_internal_r+0x61c>
 508d9d4:	d8c00417 	ldw	r3,16(sp)
 508d9d8:	00800044 	movi	r2,1
 508d9dc:	1dc00017 	ldw	r23,0(r3)
 508d9e0:	1f000117 	ldw	fp,4(r3)
 508d9e4:	18c00204 	addi	r3,r3,8
 508d9e8:	d8c00415 	stw	r3,16(sp)
 508d9ec:	00000906 	br	508da14 <___vfiprintf_internal_r+0x540>
 508d9f0:	6b400414 	ori	r13,r13,16
 508d9f4:	6880080c 	andi	r2,r13,32
 508d9f8:	10003126 	beq	r2,zero,508dac0 <___vfiprintf_internal_r+0x5ec>
 508d9fc:	d8c00417 	ldw	r3,16(sp)
 508da00:	0005883a 	mov	r2,zero
 508da04:	1dc00017 	ldw	r23,0(r3)
 508da08:	1f000117 	ldw	fp,4(r3)
 508da0c:	18c00204 	addi	r3,r3,8
 508da10:	d8c00415 	stw	r3,16(sp)
 508da14:	d8000945 	stb	zero,37(sp)
 508da18:	40ffffe0 	cmpeqi	r3,r8,-1
 508da1c:	001d883a 	mov	r14,zero
 508da20:	1800f01e 	bne	r3,zero,508dde4 <___vfiprintf_internal_r+0x910>
 508da24:	04ffdfc4 	movi	r19,-129
 508da28:	6cc8703a 	and	r4,r13,r19
 508da2c:	bf06b03a 	or	r3,r23,fp
 508da30:	d9000015 	stw	r4,0(sp)
 508da34:	18022e1e 	bne	r3,zero,508e2f0 <___vfiprintf_internal_r+0xe1c>
 508da38:	4001f11e 	bne	r8,zero,508e200 <___vfiprintf_internal_r+0xd2c>
 508da3c:	10029c1e 	bne	r2,zero,508e4b0 <___vfiprintf_internal_r+0xfdc>
 508da40:	6f00004c 	andi	fp,r13,1
 508da44:	e002ba26 	beq	fp,zero,508e530 <___vfiprintf_internal_r+0x105c>
 508da48:	00800c04 	movi	r2,48
 508da4c:	d88016c5 	stb	r2,91(sp)
 508da50:	dcc016c4 	addi	r19,sp,91
 508da54:	00010006 	br	508de58 <___vfiprintf_internal_r+0x984>
 508da58:	8d27c83a 	sub	r19,r17,r20
 508da5c:	8d3fae26 	beq	r17,r20,508d918 <___vfiprintf_internal_r+0x444>
 508da60:	d8c00c17 	ldw	r3,48(sp)
 508da64:	d8800b17 	ldw	r2,44(sp)
 508da68:	85000015 	stw	r20,0(r16)
 508da6c:	98c7883a 	add	r3,r19,r3
 508da70:	10800044 	addi	r2,r2,1
 508da74:	d8800b15 	stw	r2,44(sp)
 508da78:	84c00115 	stw	r19,4(r16)
 508da7c:	d8c00c15 	stw	r3,48(sp)
 508da80:	10800208 	cmpgei	r2,r2,8
 508da84:	1000061e 	bne	r2,zero,508daa0 <___vfiprintf_internal_r+0x5cc>
 508da88:	84000204 	addi	r16,r16,8
 508da8c:	d8c00117 	ldw	r3,4(sp)
 508da90:	88800003 	ldbu	r2,0(r17)
 508da94:	1cc7883a 	add	r3,r3,r19
 508da98:	d8c00115 	stw	r3,4(sp)
 508da9c:	003ec206 	br	508d5a8 <___vfiprintf_internal_r+0xd4>
 508daa0:	18027f26 	beq	r3,zero,508e4a0 <___vfiprintf_internal_r+0xfcc>
 508daa4:	d9800a04 	addi	r6,sp,40
 508daa8:	a80b883a 	mov	r5,r21
 508daac:	b009883a 	mov	r4,r22
 508dab0:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508dab4:	103f9a1e 	bne	r2,zero,508d920 <___vfiprintf_internal_r+0x44c>
 508dab8:	9021883a 	mov	r16,r18
 508dabc:	003ff306 	br	508da8c <___vfiprintf_internal_r+0x5b8>
 508dac0:	d9000417 	ldw	r4,16(sp)
 508dac4:	6880040c 	andi	r2,r13,16
 508dac8:	20c00104 	addi	r3,r4,4
 508dacc:	1002aa1e 	bne	r2,zero,508e578 <___vfiprintf_internal_r+0x10a4>
 508dad0:	6880100c 	andi	r2,r13,64
 508dad4:	1002f926 	beq	r2,zero,508e6bc <___vfiprintf_internal_r+0x11e8>
 508dad8:	d8800417 	ldw	r2,16(sp)
 508dadc:	0039883a 	mov	fp,zero
 508dae0:	d8c00415 	stw	r3,16(sp)
 508dae4:	15c0000b 	ldhu	r23,0(r2)
 508dae8:	0005883a 	mov	r2,zero
 508daec:	003fc906 	br	508da14 <___vfiprintf_internal_r+0x540>
 508daf0:	d9000417 	ldw	r4,16(sp)
 508daf4:	6880040c 	andi	r2,r13,16
 508daf8:	20c00104 	addi	r3,r4,4
 508dafc:	1002ad1e 	bne	r2,zero,508e5b4 <___vfiprintf_internal_r+0x10e0>
 508db00:	6880100c 	andi	r2,r13,64
 508db04:	1002f926 	beq	r2,zero,508e6ec <___vfiprintf_internal_r+0x1218>
 508db08:	d8800417 	ldw	r2,16(sp)
 508db0c:	0039883a 	mov	fp,zero
 508db10:	d8c00415 	stw	r3,16(sp)
 508db14:	15c0000b 	ldhu	r23,0(r2)
 508db18:	00800044 	movi	r2,1
 508db1c:	003fbd06 	br	508da14 <___vfiprintf_internal_r+0x540>
 508db20:	d8c00017 	ldw	r3,0(sp)
 508db24:	d8000b15 	stw	zero,44(sp)
 508db28:	1cc0010c 	andi	r19,r3,4
 508db2c:	98024a26 	beq	r19,zero,508e458 <___vfiprintf_internal_r+0xf84>
 508db30:	8de1c83a 	sub	r16,r17,r23
 508db34:	0402480e 	bge	zero,r16,508e458 <___vfiprintf_internal_r+0xf84>
 508db38:	900d883a 	mov	r6,r18
 508db3c:	80c00450 	cmplti	r3,r16,17
 508db40:	d9000b17 	ldw	r4,44(sp)
 508db44:	01c14274 	movhi	r7,1289
 508db48:	1803181e 	bne	r3,zero,508e7ac <___vfiprintf_internal_r+0x12d8>
 508db4c:	39d8a804 	addi	r7,r7,25248
 508db50:	04c00404 	movi	r19,16
 508db54:	00000606 	br	508db70 <___vfiprintf_internal_r+0x69c>
 508db58:	21400084 	addi	r5,r4,2
 508db5c:	31800204 	addi	r6,r6,8
 508db60:	1809883a 	mov	r4,r3
 508db64:	843ffc04 	addi	r16,r16,-16
 508db68:	80c00448 	cmpgei	r3,r16,17
 508db6c:	18001726 	beq	r3,zero,508dbcc <___vfiprintf_internal_r+0x6f8>
 508db70:	20c00044 	addi	r3,r4,1
 508db74:	10800404 	addi	r2,r2,16
 508db78:	31c00015 	stw	r7,0(r6)
 508db7c:	34c00115 	stw	r19,4(r6)
 508db80:	d8800c15 	stw	r2,48(sp)
 508db84:	d8c00b15 	stw	r3,44(sp)
 508db88:	19400208 	cmpgei	r5,r3,8
 508db8c:	283ff226 	beq	r5,zero,508db58 <___vfiprintf_internal_r+0x684>
 508db90:	d9800a04 	addi	r6,sp,40
 508db94:	a80b883a 	mov	r5,r21
 508db98:	b009883a 	mov	r4,r22
 508db9c:	10011d26 	beq	r2,zero,508e014 <___vfiprintf_internal_r+0xb40>
 508dba0:	d9c00015 	stw	r7,0(sp)
 508dba4:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508dba8:	103f5d1e 	bne	r2,zero,508d920 <___vfiprintf_internal_r+0x44c>
 508dbac:	d9000b17 	ldw	r4,44(sp)
 508dbb0:	843ffc04 	addi	r16,r16,-16
 508dbb4:	80c00448 	cmpgei	r3,r16,17
 508dbb8:	d8800c17 	ldw	r2,48(sp)
 508dbbc:	d9c00017 	ldw	r7,0(sp)
 508dbc0:	900d883a 	mov	r6,r18
 508dbc4:	21400044 	addi	r5,r4,1
 508dbc8:	183fe91e 	bne	r3,zero,508db70 <___vfiprintf_internal_r+0x69c>
 508dbcc:	1405883a 	add	r2,r2,r16
 508dbd0:	d9400b15 	stw	r5,44(sp)
 508dbd4:	31c00015 	stw	r7,0(r6)
 508dbd8:	34000115 	stw	r16,4(r6)
 508dbdc:	d8800c15 	stw	r2,48(sp)
 508dbe0:	29400210 	cmplti	r5,r5,8
 508dbe4:	283f421e 	bne	r5,zero,508d8f0 <___vfiprintf_internal_r+0x41c>
 508dbe8:	10021b26 	beq	r2,zero,508e458 <___vfiprintf_internal_r+0xf84>
 508dbec:	d9800a04 	addi	r6,sp,40
 508dbf0:	a80b883a 	mov	r5,r21
 508dbf4:	b009883a 	mov	r4,r22
 508dbf8:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508dbfc:	103f481e 	bne	r2,zero,508d920 <___vfiprintf_internal_r+0x44c>
 508dc00:	d8800c17 	ldw	r2,48(sp)
 508dc04:	003f3a06 	br	508d8f0 <___vfiprintf_internal_r+0x41c>
 508dc08:	50890380 	call	5089038 <__sinit>
 508dc0c:	003e4306 	br	508d51c <___vfiprintf_internal_r+0x48>
 508dc10:	29403fcc 	andi	r5,r5,255
 508dc14:	2802d81e 	bne	r5,zero,508e778 <___vfiprintf_internal_r+0x12a4>
 508dc18:	6880080c 	andi	r2,r13,32
 508dc1c:	10005b26 	beq	r2,zero,508dd8c <___vfiprintf_internal_r+0x8b8>
 508dc20:	d8c00417 	ldw	r3,16(sp)
 508dc24:	18800117 	ldw	r2,4(r3)
 508dc28:	1dc00017 	ldw	r23,0(r3)
 508dc2c:	18c00204 	addi	r3,r3,8
 508dc30:	d8c00415 	stw	r3,16(sp)
 508dc34:	1039883a 	mov	fp,r2
 508dc38:	10006016 	blt	r2,zero,508ddbc <___vfiprintf_internal_r+0x8e8>
 508dc3c:	40bfffd8 	cmpnei	r2,r8,-1
 508dc40:	db800943 	ldbu	r14,37(sp)
 508dc44:	10000626 	beq	r2,zero,508dc60 <___vfiprintf_internal_r+0x78c>
 508dc48:	04ffdfc4 	movi	r19,-129
 508dc4c:	6cc6703a 	and	r3,r13,r19
 508dc50:	bf04b03a 	or	r2,r23,fp
 508dc54:	d8c00015 	stw	r3,0(sp)
 508dc58:	10021426 	beq	r2,zero,508e4ac <___vfiprintf_internal_r+0xfd8>
 508dc5c:	db400017 	ldw	r13,0(sp)
 508dc60:	e001a51e 	bne	fp,zero,508e2f8 <___vfiprintf_internal_r+0xe24>
 508dc64:	b88002a8 	cmpgeui	r2,r23,10
 508dc68:	1001a31e 	bne	r2,zero,508e2f8 <___vfiprintf_internal_r+0xe24>
 508dc6c:	bdc00c04 	addi	r23,r23,48
 508dc70:	ddc016c5 	stb	r23,91(sp)
 508dc74:	db400015 	stw	r13,0(sp)
 508dc78:	07000044 	movi	fp,1
 508dc7c:	dcc016c4 	addi	r19,sp,91
 508dc80:	00007506 	br	508de58 <___vfiprintf_internal_r+0x984>
 508dc84:	a0800007 	ldb	r2,0(r20)
 508dc88:	6b401014 	ori	r13,r13,64
 508dc8c:	003e5206 	br	508d5d8 <___vfiprintf_internal_r+0x104>
 508dc90:	29403fcc 	andi	r5,r5,255
 508dc94:	2802ba1e 	bne	r5,zero,508e780 <___vfiprintf_internal_r+0x12ac>
 508dc98:	00c14274 	movhi	r3,1289
 508dc9c:	18d80f04 	addi	r3,r3,24636
 508dca0:	d8c00515 	stw	r3,20(sp)
 508dca4:	68c0080c 	andi	r3,r13,32
 508dca8:	1800bb26 	beq	r3,zero,508df98 <___vfiprintf_internal_r+0xac4>
 508dcac:	d8c00417 	ldw	r3,16(sp)
 508dcb0:	1dc00017 	ldw	r23,0(r3)
 508dcb4:	1f000117 	ldw	fp,4(r3)
 508dcb8:	18c00204 	addi	r3,r3,8
 508dcbc:	d8c00415 	stw	r3,16(sp)
 508dcc0:	68c0004c 	andi	r3,r13,1
 508dcc4:	18000226 	beq	r3,zero,508dcd0 <___vfiprintf_internal_r+0x7fc>
 508dcc8:	bf06b03a 	or	r3,r23,fp
 508dccc:	1802241e 	bne	r3,zero,508e560 <___vfiprintf_internal_r+0x108c>
 508dcd0:	00800084 	movi	r2,2
 508dcd4:	003f4f06 	br	508da14 <___vfiprintf_internal_r+0x540>
 508dcd8:	d8800417 	ldw	r2,16(sp)
 508dcdc:	d8000945 	stb	zero,37(sp)
 508dce0:	14c00017 	ldw	r19,0(r2)
 508dce4:	10c00104 	addi	r3,r2,4
 508dce8:	98026726 	beq	r19,zero,508e688 <___vfiprintf_internal_r+0x11b4>
 508dcec:	40bfffe0 	cmpeqi	r2,r8,-1
 508dcf0:	10023f1e 	bne	r2,zero,508e5f0 <___vfiprintf_internal_r+0x111c>
 508dcf4:	400d883a 	mov	r6,r8
 508dcf8:	000b883a 	mov	r5,zero
 508dcfc:	9809883a 	mov	r4,r19
 508dd00:	d8c00315 	stw	r3,12(sp)
 508dd04:	db400215 	stw	r13,8(sp)
 508dd08:	da000015 	stw	r8,0(sp)
 508dd0c:	508a4d80 	call	508a4d8 <memchr>
 508dd10:	da000017 	ldw	r8,0(sp)
 508dd14:	db400217 	ldw	r13,8(sp)
 508dd18:	d8c00317 	ldw	r3,12(sp)
 508dd1c:	10029226 	beq	r2,zero,508e768 <___vfiprintf_internal_r+0x1294>
 508dd20:	14f9c83a 	sub	fp,r2,r19
 508dd24:	e02f883a 	mov	r23,fp
 508dd28:	d8c00415 	stw	r3,16(sp)
 508dd2c:	003ea006 	br	508d7b0 <___vfiprintf_internal_r+0x2dc>
 508dd30:	a0800007 	ldb	r2,0(r20)
 508dd34:	6b400814 	ori	r13,r13,32
 508dd38:	003e2706 	br	508d5d8 <___vfiprintf_internal_r+0x104>
 508dd3c:	d8c00417 	ldw	r3,16(sp)
 508dd40:	00800c04 	movi	r2,48
 508dd44:	d8800985 	stb	r2,38(sp)
 508dd48:	00801e04 	movi	r2,120
 508dd4c:	01014274 	movhi	r4,1289
 508dd50:	d88009c5 	stb	r2,39(sp)
 508dd54:	18800104 	addi	r2,r3,4
 508dd58:	d8800415 	stw	r2,16(sp)
 508dd5c:	20980f04 	addi	r2,r4,24636
 508dd60:	d8800515 	stw	r2,20(sp)
 508dd64:	1dc00017 	ldw	r23,0(r3)
 508dd68:	0039883a 	mov	fp,zero
 508dd6c:	6b400094 	ori	r13,r13,2
 508dd70:	00800084 	movi	r2,2
 508dd74:	003f2706 	br	508da14 <___vfiprintf_internal_r+0x540>
 508dd78:	29403fcc 	andi	r5,r5,255
 508dd7c:	2802821e 	bne	r5,zero,508e788 <___vfiprintf_internal_r+0x12b4>
 508dd80:	6b400414 	ori	r13,r13,16
 508dd84:	6880080c 	andi	r2,r13,32
 508dd88:	103fa51e 	bne	r2,zero,508dc20 <___vfiprintf_internal_r+0x74c>
 508dd8c:	d9000417 	ldw	r4,16(sp)
 508dd90:	6880040c 	andi	r2,r13,16
 508dd94:	20c00104 	addi	r3,r4,4
 508dd98:	1001ec1e 	bne	r2,zero,508e54c <___vfiprintf_internal_r+0x1078>
 508dd9c:	6880100c 	andi	r2,r13,64
 508dda0:	10024c26 	beq	r2,zero,508e6d4 <___vfiprintf_internal_r+0x1200>
 508dda4:	d8800417 	ldw	r2,16(sp)
 508dda8:	d8c00415 	stw	r3,16(sp)
 508ddac:	15c0000f 	ldh	r23,0(r2)
 508ddb0:	b839d7fa 	srai	fp,r23,31
 508ddb4:	e005883a 	mov	r2,fp
 508ddb8:	103fa00e 	bge	r2,zero,508dc3c <___vfiprintf_internal_r+0x768>
 508ddbc:	b804c03a 	cmpne	r2,r23,zero
 508ddc0:	0739c83a 	sub	fp,zero,fp
 508ddc4:	e0b9c83a 	sub	fp,fp,r2
 508ddc8:	00800b44 	movi	r2,45
 508ddcc:	d8800945 	stb	r2,37(sp)
 508ddd0:	40ffffe0 	cmpeqi	r3,r8,-1
 508ddd4:	05efc83a 	sub	r23,zero,r23
 508ddd8:	03800b44 	movi	r14,45
 508dddc:	00800044 	movi	r2,1
 508dde0:	183f1026 	beq	r3,zero,508da24 <___vfiprintf_internal_r+0x550>
 508dde4:	10c00060 	cmpeqi	r3,r2,1
 508dde8:	183f9d1e 	bne	r3,zero,508dc60 <___vfiprintf_internal_r+0x78c>
 508ddec:	108000a0 	cmpeqi	r2,r2,2
 508ddf0:	1001081e 	bne	r2,zero,508e214 <___vfiprintf_internal_r+0xd40>
 508ddf4:	9027883a 	mov	r19,r18
 508ddf8:	e008977a 	slli	r4,fp,29
 508ddfc:	b806d0fa 	srli	r3,r23,3
 508de00:	e038d0fa 	srli	fp,fp,3
 508de04:	b88001cc 	andi	r2,r23,7
 508de08:	10800c04 	addi	r2,r2,48
 508de0c:	20eeb03a 	or	r23,r4,r3
 508de10:	98bfffc5 	stb	r2,-1(r19)
 508de14:	bf06b03a 	or	r3,r23,fp
 508de18:	980b883a 	mov	r5,r19
 508de1c:	9cffffc4 	addi	r19,r19,-1
 508de20:	183ff51e 	bne	r3,zero,508ddf8 <___vfiprintf_internal_r+0x924>
 508de24:	68c0004c 	andi	r3,r13,1
 508de28:	18010726 	beq	r3,zero,508e248 <___vfiprintf_internal_r+0xd74>
 508de2c:	10803fcc 	andi	r2,r2,255
 508de30:	1080201c 	xori	r2,r2,128
 508de34:	10bfe004 	addi	r2,r2,-128
 508de38:	10800c18 	cmpnei	r2,r2,48
 508de3c:	10010226 	beq	r2,zero,508e248 <___vfiprintf_internal_r+0xd74>
 508de40:	297fff84 	addi	r5,r5,-2
 508de44:	00800c04 	movi	r2,48
 508de48:	98bfffc5 	stb	r2,-1(r19)
 508de4c:	9179c83a 	sub	fp,r18,r5
 508de50:	db400015 	stw	r13,0(sp)
 508de54:	2827883a 	mov	r19,r5
 508de58:	402f883a 	mov	r23,r8
 508de5c:	4700010e 	bge	r8,fp,508de64 <___vfiprintf_internal_r+0x990>
 508de60:	e02f883a 	mov	r23,fp
 508de64:	73803fcc 	andi	r14,r14,255
 508de68:	7380201c 	xori	r14,r14,128
 508de6c:	73bfe004 	addi	r14,r14,-128
 508de70:	703e5126 	beq	r14,zero,508d7b8 <___vfiprintf_internal_r+0x2e4>
 508de74:	bdc00044 	addi	r23,r23,1
 508de78:	003e4f06 	br	508d7b8 <___vfiprintf_internal_r+0x2e4>
 508de7c:	a0800007 	ldb	r2,0(r20)
 508de80:	6b402014 	ori	r13,r13,128
 508de84:	003dd406 	br	508d5d8 <___vfiprintf_internal_r+0x104>
 508de88:	a0800007 	ldb	r2,0(r20)
 508de8c:	a1000044 	addi	r4,r20,1
 508de90:	10c00aa0 	cmpeqi	r3,r2,42
 508de94:	1802501e 	bne	r3,zero,508e7d8 <___vfiprintf_internal_r+0x1304>
 508de98:	10fff404 	addi	r3,r2,-48
 508de9c:	19c002b0 	cmpltui	r7,r3,10
 508dea0:	2029883a 	mov	r20,r4
 508dea4:	0011883a 	mov	r8,zero
 508dea8:	383dcc26 	beq	r7,zero,508d5dc <___vfiprintf_internal_r+0x108>
 508deac:	a0800007 	ldb	r2,0(r20)
 508deb0:	420002a4 	muli	r8,r8,10
 508deb4:	a5000044 	addi	r20,r20,1
 508deb8:	40d1883a 	add	r8,r8,r3
 508debc:	10fff404 	addi	r3,r2,-48
 508dec0:	190002b0 	cmpltui	r4,r3,10
 508dec4:	203ff91e 	bne	r4,zero,508deac <___vfiprintf_internal_r+0x9d8>
 508dec8:	003dc406 	br	508d5dc <___vfiprintf_internal_r+0x108>
 508decc:	a0800003 	ldbu	r2,0(r20)
 508ded0:	10803fcc 	andi	r2,r2,255
 508ded4:	1080201c 	xori	r2,r2,128
 508ded8:	6b400114 	ori	r13,r13,4
 508dedc:	10bfe004 	addi	r2,r2,-128
 508dee0:	003dbd06 	br	508d5d8 <___vfiprintf_internal_r+0x104>
 508dee4:	a0800007 	ldb	r2,0(r20)
 508dee8:	01400044 	movi	r5,1
 508deec:	01800ac4 	movi	r6,43
 508def0:	003db906 	br	508d5d8 <___vfiprintf_internal_r+0x104>
 508def4:	d8c00417 	ldw	r3,16(sp)
 508def8:	a0800003 	ldbu	r2,0(r20)
 508defc:	1c400017 	ldw	r17,0(r3)
 508df00:	18c00104 	addi	r3,r3,4
 508df04:	8801b716 	blt	r17,zero,508e5e4 <___vfiprintf_internal_r+0x1110>
 508df08:	d8c00415 	stw	r3,16(sp)
 508df0c:	10803fcc 	andi	r2,r2,255
 508df10:	1080201c 	xori	r2,r2,128
 508df14:	10bfe004 	addi	r2,r2,-128
 508df18:	003daf06 	br	508d5d8 <___vfiprintf_internal_r+0x104>
 508df1c:	a0800007 	ldb	r2,0(r20)
 508df20:	6b400054 	ori	r13,r13,1
 508df24:	003dac06 	br	508d5d8 <___vfiprintf_internal_r+0x104>
 508df28:	30c03fcc 	andi	r3,r6,255
 508df2c:	18c0201c 	xori	r3,r3,128
 508df30:	18ffe004 	addi	r3,r3,-128
 508df34:	a0800003 	ldbu	r2,0(r20)
 508df38:	183ff41e 	bne	r3,zero,508df0c <___vfiprintf_internal_r+0xa38>
 508df3c:	10803fcc 	andi	r2,r2,255
 508df40:	1080201c 	xori	r2,r2,128
 508df44:	01400044 	movi	r5,1
 508df48:	01800804 	movi	r6,32
 508df4c:	10bfe004 	addi	r2,r2,-128
 508df50:	003da106 	br	508d5d8 <___vfiprintf_internal_r+0x104>
 508df54:	d8c00417 	ldw	r3,16(sp)
 508df58:	d8000945 	stb	zero,37(sp)
 508df5c:	05c00044 	movi	r23,1
 508df60:	18800017 	ldw	r2,0(r3)
 508df64:	18c00104 	addi	r3,r3,4
 508df68:	d8c00415 	stw	r3,16(sp)
 508df6c:	d8800d05 	stb	r2,52(sp)
 508df70:	07000044 	movi	fp,1
 508df74:	dcc00d04 	addi	r19,sp,52
 508df78:	003e0d06 	br	508d7b0 <___vfiprintf_internal_r+0x2dc>
 508df7c:	29403fcc 	andi	r5,r5,255
 508df80:	2802061e 	bne	r5,zero,508e79c <___vfiprintf_internal_r+0x12c8>
 508df84:	00c14274 	movhi	r3,1289
 508df88:	18d81404 	addi	r3,r3,24656
 508df8c:	d8c00515 	stw	r3,20(sp)
 508df90:	68c0080c 	andi	r3,r13,32
 508df94:	183f451e 	bne	r3,zero,508dcac <___vfiprintf_internal_r+0x7d8>
 508df98:	d9400417 	ldw	r5,16(sp)
 508df9c:	68c0040c 	andi	r3,r13,16
 508dfa0:	29000104 	addi	r4,r5,4
 508dfa4:	18017f1e 	bne	r3,zero,508e5a4 <___vfiprintf_internal_r+0x10d0>
 508dfa8:	68c0100c 	andi	r3,r13,64
 508dfac:	1801be26 	beq	r3,zero,508e6a8 <___vfiprintf_internal_r+0x11d4>
 508dfb0:	d8c00417 	ldw	r3,16(sp)
 508dfb4:	0039883a 	mov	fp,zero
 508dfb8:	d9000415 	stw	r4,16(sp)
 508dfbc:	1dc0000b 	ldhu	r23,0(r3)
 508dfc0:	003f3f06 	br	508dcc0 <___vfiprintf_internal_r+0x7ec>
 508dfc4:	29403fcc 	andi	r5,r5,255
 508dfc8:	2801f61e 	bne	r5,zero,508e7a4 <___vfiprintf_internal_r+0x12d0>
 508dfcc:	d9000417 	ldw	r4,16(sp)
 508dfd0:	6880080c 	andi	r2,r13,32
 508dfd4:	20c00017 	ldw	r3,0(r4)
 508dfd8:	21000104 	addi	r4,r4,4
 508dfdc:	10016b1e 	bne	r2,zero,508e58c <___vfiprintf_internal_r+0x10b8>
 508dfe0:	6880040c 	andi	r2,r13,16
 508dfe4:	1001951e 	bne	r2,zero,508e63c <___vfiprintf_internal_r+0x1168>
 508dfe8:	6b40100c 	andi	r13,r13,64
 508dfec:	68019326 	beq	r13,zero,508e63c <___vfiprintf_internal_r+0x1168>
 508dff0:	d8800117 	ldw	r2,4(sp)
 508dff4:	d9000415 	stw	r4,16(sp)
 508dff8:	1880000d 	sth	r2,0(r3)
 508dffc:	003d5e06 	br	508d578 <___vfiprintf_internal_r+0xa4>
 508e000:	a0800007 	ldb	r2,0(r20)
 508e004:	10c01b18 	cmpnei	r3,r2,108
 508e008:	18019826 	beq	r3,zero,508e66c <___vfiprintf_internal_r+0x1198>
 508e00c:	6b400414 	ori	r13,r13,16
 508e010:	003d7106 	br	508d5d8 <___vfiprintf_internal_r+0x104>
 508e014:	01400044 	movi	r5,1
 508e018:	0009883a 	mov	r4,zero
 508e01c:	900d883a 	mov	r6,r18
 508e020:	003ed006 	br	508db64 <___vfiprintf_internal_r+0x690>
 508e024:	8dc7c83a 	sub	r3,r17,r23
 508e028:	00fe1b0e 	bge	zero,r3,508d898 <___vfiprintf_internal_r+0x3c4>
 508e02c:	19c00450 	cmplti	r7,r3,17
 508e030:	3801e41e 	bne	r7,zero,508e7c4 <___vfiprintf_internal_r+0x12f0>
 508e034:	01c14274 	movhi	r7,1289
 508e038:	39d8a404 	addi	r7,r7,25232
 508e03c:	03400404 	movi	r13,16
 508e040:	00000606 	br	508e05c <___vfiprintf_internal_r+0xb88>
 508e044:	23800084 	addi	r14,r4,2
 508e048:	84000204 	addi	r16,r16,8
 508e04c:	2809883a 	mov	r4,r5
 508e050:	18fffc04 	addi	r3,r3,-16
 508e054:	19400448 	cmpgei	r5,r3,17
 508e058:	28001c26 	beq	r5,zero,508e0cc <___vfiprintf_internal_r+0xbf8>
 508e05c:	21400044 	addi	r5,r4,1
 508e060:	10800404 	addi	r2,r2,16
 508e064:	81c00015 	stw	r7,0(r16)
 508e068:	83400115 	stw	r13,4(r16)
 508e06c:	d8800c15 	stw	r2,48(sp)
 508e070:	d9400b15 	stw	r5,44(sp)
 508e074:	29800208 	cmpgei	r6,r5,8
 508e078:	303ff226 	beq	r6,zero,508e044 <___vfiprintf_internal_r+0xb70>
 508e07c:	d9800a04 	addi	r6,sp,40
 508e080:	a80b883a 	mov	r5,r21
 508e084:	b009883a 	mov	r4,r22
 508e088:	10007826 	beq	r2,zero,508e26c <___vfiprintf_internal_r+0xd98>
 508e08c:	d9c00615 	stw	r7,24(sp)
 508e090:	d8c00315 	stw	r3,12(sp)
 508e094:	da000215 	stw	r8,8(sp)
 508e098:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508e09c:	103e201e 	bne	r2,zero,508d920 <___vfiprintf_internal_r+0x44c>
 508e0a0:	d8c00317 	ldw	r3,12(sp)
 508e0a4:	d9000b17 	ldw	r4,44(sp)
 508e0a8:	d8800c17 	ldw	r2,48(sp)
 508e0ac:	18fffc04 	addi	r3,r3,-16
 508e0b0:	19400448 	cmpgei	r5,r3,17
 508e0b4:	d9c00617 	ldw	r7,24(sp)
 508e0b8:	da000217 	ldw	r8,8(sp)
 508e0bc:	9021883a 	mov	r16,r18
 508e0c0:	23800044 	addi	r14,r4,1
 508e0c4:	03400404 	movi	r13,16
 508e0c8:	283fe41e 	bne	r5,zero,508e05c <___vfiprintf_internal_r+0xb88>
 508e0cc:	83400204 	addi	r13,r16,8
 508e0d0:	10c5883a 	add	r2,r2,r3
 508e0d4:	80c00115 	stw	r3,4(r16)
 508e0d8:	81c00015 	stw	r7,0(r16)
 508e0dc:	d8800c15 	stw	r2,48(sp)
 508e0e0:	db800b15 	stw	r14,44(sp)
 508e0e4:	70c00208 	cmpgei	r3,r14,8
 508e0e8:	18011326 	beq	r3,zero,508e538 <___vfiprintf_internal_r+0x1064>
 508e0ec:	10018826 	beq	r2,zero,508e710 <___vfiprintf_internal_r+0x123c>
 508e0f0:	d9800a04 	addi	r6,sp,40
 508e0f4:	a80b883a 	mov	r5,r21
 508e0f8:	b009883a 	mov	r4,r22
 508e0fc:	da000215 	stw	r8,8(sp)
 508e100:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508e104:	103e061e 	bne	r2,zero,508d920 <___vfiprintf_internal_r+0x44c>
 508e108:	da000217 	ldw	r8,8(sp)
 508e10c:	d9000b17 	ldw	r4,44(sp)
 508e110:	d8800c17 	ldw	r2,48(sp)
 508e114:	4711c83a 	sub	r8,r8,fp
 508e118:	d9801904 	addi	r6,sp,100
 508e11c:	21400044 	addi	r5,r4,1
 508e120:	9021883a 	mov	r16,r18
 508e124:	023dde0e 	bge	zero,r8,508d8a0 <___vfiprintf_internal_r+0x3cc>
 508e128:	40c00450 	cmplti	r3,r8,17
 508e12c:	01c14274 	movhi	r7,1289
 508e130:	1801741e 	bne	r3,zero,508e704 <___vfiprintf_internal_r+0x1230>
 508e134:	39d8a404 	addi	r7,r7,25232
 508e138:	03400404 	movi	r13,16
 508e13c:	00000606 	br	508e158 <___vfiprintf_internal_r+0xc84>
 508e140:	21400084 	addi	r5,r4,2
 508e144:	84000204 	addi	r16,r16,8
 508e148:	1809883a 	mov	r4,r3
 508e14c:	423ffc04 	addi	r8,r8,-16
 508e150:	40c00448 	cmpgei	r3,r8,17
 508e154:	18001a26 	beq	r3,zero,508e1c0 <___vfiprintf_internal_r+0xcec>
 508e158:	20c00044 	addi	r3,r4,1
 508e15c:	10800404 	addi	r2,r2,16
 508e160:	81c00015 	stw	r7,0(r16)
 508e164:	83400115 	stw	r13,4(r16)
 508e168:	d8800c15 	stw	r2,48(sp)
 508e16c:	d8c00b15 	stw	r3,44(sp)
 508e170:	19400208 	cmpgei	r5,r3,8
 508e174:	283ff226 	beq	r5,zero,508e140 <___vfiprintf_internal_r+0xc6c>
 508e178:	d9800a04 	addi	r6,sp,40
 508e17c:	a80b883a 	mov	r5,r21
 508e180:	b009883a 	mov	r4,r22
 508e184:	10001a26 	beq	r2,zero,508e1f0 <___vfiprintf_internal_r+0xd1c>
 508e188:	d9c00315 	stw	r7,12(sp)
 508e18c:	da000215 	stw	r8,8(sp)
 508e190:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508e194:	103de21e 	bne	r2,zero,508d920 <___vfiprintf_internal_r+0x44c>
 508e198:	da000217 	ldw	r8,8(sp)
 508e19c:	d9000b17 	ldw	r4,44(sp)
 508e1a0:	d8800c17 	ldw	r2,48(sp)
 508e1a4:	423ffc04 	addi	r8,r8,-16
 508e1a8:	40c00448 	cmpgei	r3,r8,17
 508e1ac:	d9c00317 	ldw	r7,12(sp)
 508e1b0:	9021883a 	mov	r16,r18
 508e1b4:	21400044 	addi	r5,r4,1
 508e1b8:	03400404 	movi	r13,16
 508e1bc:	183fe61e 	bne	r3,zero,508e158 <___vfiprintf_internal_r+0xc84>
 508e1c0:	81000204 	addi	r4,r16,8
 508e1c4:	1205883a 	add	r2,r2,r8
 508e1c8:	81c00015 	stw	r7,0(r16)
 508e1cc:	82000115 	stw	r8,4(r16)
 508e1d0:	d8800c15 	stw	r2,48(sp)
 508e1d4:	d9400b15 	stw	r5,44(sp)
 508e1d8:	28c00208 	cmpgei	r3,r5,8
 508e1dc:	1800a41e 	bne	r3,zero,508e470 <___vfiprintf_internal_r+0xf9c>
 508e1e0:	29400044 	addi	r5,r5,1
 508e1e4:	21800204 	addi	r6,r4,8
 508e1e8:	2021883a 	mov	r16,r4
 508e1ec:	003dac06 	br	508d8a0 <___vfiprintf_internal_r+0x3cc>
 508e1f0:	01400044 	movi	r5,1
 508e1f4:	0009883a 	mov	r4,zero
 508e1f8:	9021883a 	mov	r16,r18
 508e1fc:	003fd306 	br	508e14c <___vfiprintf_internal_r+0xc78>
 508e200:	10c00060 	cmpeqi	r3,r2,1
 508e204:	1801561e 	bne	r3,zero,508e760 <___vfiprintf_internal_r+0x128c>
 508e208:	108000a0 	cmpeqi	r2,r2,2
 508e20c:	db400017 	ldw	r13,0(sp)
 508e210:	103ef826 	beq	r2,zero,508ddf4 <___vfiprintf_internal_r+0x920>
 508e214:	9027883a 	mov	r19,r18
 508e218:	d9000517 	ldw	r4,20(sp)
 508e21c:	b88003cc 	andi	r2,r23,15
 508e220:	e006973a 	slli	r3,fp,28
 508e224:	b82ed13a 	srli	r23,r23,4
 508e228:	2085883a 	add	r2,r4,r2
 508e22c:	10800003 	ldbu	r2,0(r2)
 508e230:	e038d13a 	srli	fp,fp,4
 508e234:	1deeb03a 	or	r23,r3,r23
 508e238:	98bfffc5 	stb	r2,-1(r19)
 508e23c:	bf04b03a 	or	r2,r23,fp
 508e240:	9cffffc4 	addi	r19,r19,-1
 508e244:	103ff41e 	bne	r2,zero,508e218 <___vfiprintf_internal_r+0xd44>
 508e248:	94f9c83a 	sub	fp,r18,r19
 508e24c:	db400015 	stw	r13,0(sp)
 508e250:	003f0106 	br	508de58 <___vfiprintf_internal_r+0x984>
 508e254:	d9800a04 	addi	r6,sp,40
 508e258:	a80b883a 	mov	r5,r21
 508e25c:	b009883a 	mov	r4,r22
 508e260:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508e264:	103da826 	beq	r2,zero,508d908 <___vfiprintf_internal_r+0x434>
 508e268:	003dad06 	br	508d920 <___vfiprintf_internal_r+0x44c>
 508e26c:	03800044 	movi	r14,1
 508e270:	0009883a 	mov	r4,zero
 508e274:	9021883a 	mov	r16,r18
 508e278:	003f7506 	br	508e050 <___vfiprintf_internal_r+0xb7c>
 508e27c:	10009026 	beq	r2,zero,508e4c0 <___vfiprintf_internal_r+0xfec>
 508e280:	d9800a04 	addi	r6,sp,40
 508e284:	a80b883a 	mov	r5,r21
 508e288:	b009883a 	mov	r4,r22
 508e28c:	da000615 	stw	r8,24(sp)
 508e290:	db400315 	stw	r13,12(sp)
 508e294:	db800215 	stw	r14,8(sp)
 508e298:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508e29c:	103da01e 	bne	r2,zero,508d920 <___vfiprintf_internal_r+0x44c>
 508e2a0:	d9000b17 	ldw	r4,44(sp)
 508e2a4:	d8800c17 	ldw	r2,48(sp)
 508e2a8:	da000617 	ldw	r8,24(sp)
 508e2ac:	db400317 	ldw	r13,12(sp)
 508e2b0:	db800217 	ldw	r14,8(sp)
 508e2b4:	d9801904 	addi	r6,sp,100
 508e2b8:	21400044 	addi	r5,r4,1
 508e2bc:	9021883a 	mov	r16,r18
 508e2c0:	003d5a06 	br	508d82c <___vfiprintf_internal_r+0x358>
 508e2c4:	d8800984 	addi	r2,sp,38
 508e2c8:	d8801715 	stw	r2,92(sp)
 508e2cc:	00800084 	movi	r2,2
 508e2d0:	d8801815 	stw	r2,96(sp)
 508e2d4:	d9801904 	addi	r6,sp,100
 508e2d8:	01400044 	movi	r5,1
 508e2dc:	3021883a 	mov	r16,r6
 508e2e0:	2809883a 	mov	r4,r5
 508e2e4:	21400044 	addi	r5,r4,1
 508e2e8:	81800204 	addi	r6,r16,8
 508e2ec:	003d6806 	br	508d890 <___vfiprintf_internal_r+0x3bc>
 508e2f0:	db400017 	ldw	r13,0(sp)
 508e2f4:	003ebb06 	br	508dde4 <___vfiprintf_internal_r+0x910>
 508e2f8:	9027883a 	mov	r19,r18
 508e2fc:	b809883a 	mov	r4,r23
 508e300:	e00b883a 	mov	r5,fp
 508e304:	01800284 	movi	r6,10
 508e308:	000f883a 	mov	r7,zero
 508e30c:	db800315 	stw	r14,12(sp)
 508e310:	da000215 	stw	r8,8(sp)
 508e314:	db400015 	stw	r13,0(sp)
 508e318:	508ffcc0 	call	508ffcc <__umoddi3>
 508e31c:	10800c04 	addi	r2,r2,48
 508e320:	b809883a 	mov	r4,r23
 508e324:	e00b883a 	mov	r5,fp
 508e328:	98bfffc5 	stb	r2,-1(r19)
 508e32c:	01800284 	movi	r6,10
 508e330:	000f883a 	mov	r7,zero
 508e334:	508fa3c0 	call	508fa3c <__udivdi3>
 508e338:	e009883a 	mov	r4,fp
 508e33c:	b80b883a 	mov	r5,r23
 508e340:	db400017 	ldw	r13,0(sp)
 508e344:	da000217 	ldw	r8,8(sp)
 508e348:	db800317 	ldw	r14,12(sp)
 508e34c:	9cffffc4 	addi	r19,r19,-1
 508e350:	102f883a 	mov	r23,r2
 508e354:	1839883a 	mov	fp,r3
 508e358:	203fe81e 	bne	r4,zero,508e2fc <___vfiprintf_internal_r+0xe28>
 508e35c:	294002a8 	cmpgeui	r5,r5,10
 508e360:	283fe61e 	bne	r5,zero,508e2fc <___vfiprintf_internal_r+0xe28>
 508e364:	94f9c83a 	sub	fp,r18,r19
 508e368:	003ebb06 	br	508de58 <___vfiprintf_internal_r+0x984>
 508e36c:	19400450 	cmplti	r5,r3,17
 508e370:	01c14274 	movhi	r7,1289
 508e374:	2801061e 	bne	r5,zero,508e790 <___vfiprintf_internal_r+0x12bc>
 508e378:	39d8a804 	addi	r7,r7,25248
 508e37c:	03c00404 	movi	r15,16
 508e380:	00000706 	br	508e3a0 <___vfiprintf_internal_r+0xecc>
 508e384:	27c00084 	addi	ra,r4,2
 508e388:	84000204 	addi	r16,r16,8
 508e38c:	3009883a 	mov	r4,r6
 508e390:	18fffc04 	addi	r3,r3,-16
 508e394:	19400448 	cmpgei	r5,r3,17
 508e398:	28002026 	beq	r5,zero,508e41c <___vfiprintf_internal_r+0xf48>
 508e39c:	21800044 	addi	r6,r4,1
 508e3a0:	10800404 	addi	r2,r2,16
 508e3a4:	81c00015 	stw	r7,0(r16)
 508e3a8:	83c00115 	stw	r15,4(r16)
 508e3ac:	d8800c15 	stw	r2,48(sp)
 508e3b0:	d9800b15 	stw	r6,44(sp)
 508e3b4:	31400208 	cmpgei	r5,r6,8
 508e3b8:	283ff226 	beq	r5,zero,508e384 <___vfiprintf_internal_r+0xeb0>
 508e3bc:	d9800a04 	addi	r6,sp,40
 508e3c0:	a80b883a 	mov	r5,r21
 508e3c4:	b009883a 	mov	r4,r22
 508e3c8:	10001f26 	beq	r2,zero,508e448 <___vfiprintf_internal_r+0xf74>
 508e3cc:	d9c00815 	stw	r7,32(sp)
 508e3d0:	d8c00715 	stw	r3,28(sp)
 508e3d4:	da000615 	stw	r8,24(sp)
 508e3d8:	db400315 	stw	r13,12(sp)
 508e3dc:	db800215 	stw	r14,8(sp)
 508e3e0:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508e3e4:	103d4e1e 	bne	r2,zero,508d920 <___vfiprintf_internal_r+0x44c>
 508e3e8:	d8c00717 	ldw	r3,28(sp)
 508e3ec:	d9000b17 	ldw	r4,44(sp)
 508e3f0:	d8800c17 	ldw	r2,48(sp)
 508e3f4:	18fffc04 	addi	r3,r3,-16
 508e3f8:	19400448 	cmpgei	r5,r3,17
 508e3fc:	d9c00817 	ldw	r7,32(sp)
 508e400:	da000617 	ldw	r8,24(sp)
 508e404:	db400317 	ldw	r13,12(sp)
 508e408:	db800217 	ldw	r14,8(sp)
 508e40c:	9021883a 	mov	r16,r18
 508e410:	27c00044 	addi	ra,r4,1
 508e414:	03c00404 	movi	r15,16
 508e418:	283fe01e 	bne	r5,zero,508e39c <___vfiprintf_internal_r+0xec8>
 508e41c:	10c5883a 	add	r2,r2,r3
 508e420:	80c00115 	stw	r3,4(r16)
 508e424:	81c00015 	stw	r7,0(r16)
 508e428:	d8800c15 	stw	r2,48(sp)
 508e42c:	dfc00b15 	stw	ra,44(sp)
 508e430:	f8c00208 	cmpgei	r3,ra,8
 508e434:	18002d1e 	bne	r3,zero,508e4ec <___vfiprintf_internal_r+0x1018>
 508e438:	84000204 	addi	r16,r16,8
 508e43c:	f9400044 	addi	r5,ra,1
 508e440:	f809883a 	mov	r4,ra
 508e444:	003ce906 	br	508d7ec <___vfiprintf_internal_r+0x318>
 508e448:	0009883a 	mov	r4,zero
 508e44c:	07c00044 	movi	ra,1
 508e450:	9021883a 	mov	r16,r18
 508e454:	003fce06 	br	508e390 <___vfiprintf_internal_r+0xebc>
 508e458:	8dc0010e 	bge	r17,r23,508e460 <___vfiprintf_internal_r+0xf8c>
 508e45c:	b823883a 	mov	r17,r23
 508e460:	d8800117 	ldw	r2,4(sp)
 508e464:	1445883a 	add	r2,r2,r17
 508e468:	d8800115 	stw	r2,4(sp)
 508e46c:	003d2606 	br	508d908 <___vfiprintf_internal_r+0x434>
 508e470:	10007626 	beq	r2,zero,508e64c <___vfiprintf_internal_r+0x1178>
 508e474:	d9800a04 	addi	r6,sp,40
 508e478:	a80b883a 	mov	r5,r21
 508e47c:	b009883a 	mov	r4,r22
 508e480:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508e484:	103d261e 	bne	r2,zero,508d920 <___vfiprintf_internal_r+0x44c>
 508e488:	d9400b17 	ldw	r5,44(sp)
 508e48c:	d8800c17 	ldw	r2,48(sp)
 508e490:	d9801904 	addi	r6,sp,100
 508e494:	29400044 	addi	r5,r5,1
 508e498:	9021883a 	mov	r16,r18
 508e49c:	003d0006 	br	508d8a0 <___vfiprintf_internal_r+0x3cc>
 508e4a0:	d8000b15 	stw	zero,44(sp)
 508e4a4:	9021883a 	mov	r16,r18
 508e4a8:	003d7806 	br	508da8c <___vfiprintf_internal_r+0x5b8>
 508e4ac:	4000ac1e 	bne	r8,zero,508e760 <___vfiprintf_internal_r+0x128c>
 508e4b0:	0011883a 	mov	r8,zero
 508e4b4:	0039883a 	mov	fp,zero
 508e4b8:	9027883a 	mov	r19,r18
 508e4bc:	003e6606 	br	508de58 <___vfiprintf_internal_r+0x984>
 508e4c0:	7000411e 	bne	r14,zero,508e5c8 <___vfiprintf_internal_r+0x10f4>
 508e4c4:	0009883a 	mov	r4,zero
 508e4c8:	d9801904 	addi	r6,sp,100
 508e4cc:	01400044 	movi	r5,1
 508e4d0:	9021883a 	mov	r16,r18
 508e4d4:	003cee06 	br	508d890 <___vfiprintf_internal_r+0x3bc>
 508e4d8:	d9801904 	addi	r6,sp,100
 508e4dc:	01400044 	movi	r5,1
 508e4e0:	0009883a 	mov	r4,zero
 508e4e4:	9021883a 	mov	r16,r18
 508e4e8:	003ce906 	br	508d890 <___vfiprintf_internal_r+0x3bc>
 508e4ec:	10004a26 	beq	r2,zero,508e618 <___vfiprintf_internal_r+0x1144>
 508e4f0:	d9800a04 	addi	r6,sp,40
 508e4f4:	a80b883a 	mov	r5,r21
 508e4f8:	b009883a 	mov	r4,r22
 508e4fc:	da000615 	stw	r8,24(sp)
 508e500:	db400315 	stw	r13,12(sp)
 508e504:	db800215 	stw	r14,8(sp)
 508e508:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508e50c:	103d041e 	bne	r2,zero,508d920 <___vfiprintf_internal_r+0x44c>
 508e510:	d9000b17 	ldw	r4,44(sp)
 508e514:	d8800c17 	ldw	r2,48(sp)
 508e518:	da000617 	ldw	r8,24(sp)
 508e51c:	db400317 	ldw	r13,12(sp)
 508e520:	db800217 	ldw	r14,8(sp)
 508e524:	9021883a 	mov	r16,r18
 508e528:	21400044 	addi	r5,r4,1
 508e52c:	003caf06 	br	508d7ec <___vfiprintf_internal_r+0x318>
 508e530:	9027883a 	mov	r19,r18
 508e534:	003e4806 	br	508de58 <___vfiprintf_internal_r+0x984>
 508e538:	71400044 	addi	r5,r14,1
 508e53c:	69800204 	addi	r6,r13,8
 508e540:	7009883a 	mov	r4,r14
 508e544:	6821883a 	mov	r16,r13
 508e548:	003cd306 	br	508d898 <___vfiprintf_internal_r+0x3c4>
 508e54c:	25c00017 	ldw	r23,0(r4)
 508e550:	d8c00415 	stw	r3,16(sp)
 508e554:	b839d7fa 	srai	fp,r23,31
 508e558:	e005883a 	mov	r2,fp
 508e55c:	003db606 	br	508dc38 <___vfiprintf_internal_r+0x764>
 508e560:	00c00c04 	movi	r3,48
 508e564:	d88009c5 	stb	r2,39(sp)
 508e568:	d8c00985 	stb	r3,38(sp)
 508e56c:	6b400094 	ori	r13,r13,2
 508e570:	00800084 	movi	r2,2
 508e574:	003d2706 	br	508da14 <___vfiprintf_internal_r+0x540>
 508e578:	25c00017 	ldw	r23,0(r4)
 508e57c:	0039883a 	mov	fp,zero
 508e580:	d8c00415 	stw	r3,16(sp)
 508e584:	0005883a 	mov	r2,zero
 508e588:	003d2206 	br	508da14 <___vfiprintf_internal_r+0x540>
 508e58c:	d9400117 	ldw	r5,4(sp)
 508e590:	d9000415 	stw	r4,16(sp)
 508e594:	2805d7fa 	srai	r2,r5,31
 508e598:	19400015 	stw	r5,0(r3)
 508e59c:	18800115 	stw	r2,4(r3)
 508e5a0:	003bf506 	br	508d578 <___vfiprintf_internal_r+0xa4>
 508e5a4:	2dc00017 	ldw	r23,0(r5)
 508e5a8:	0039883a 	mov	fp,zero
 508e5ac:	d9000415 	stw	r4,16(sp)
 508e5b0:	003dc306 	br	508dcc0 <___vfiprintf_internal_r+0x7ec>
 508e5b4:	25c00017 	ldw	r23,0(r4)
 508e5b8:	0039883a 	mov	fp,zero
 508e5bc:	d8c00415 	stw	r3,16(sp)
 508e5c0:	00800044 	movi	r2,1
 508e5c4:	003d1306 	br	508da14 <___vfiprintf_internal_r+0x540>
 508e5c8:	d8800984 	addi	r2,sp,38
 508e5cc:	d8801715 	stw	r2,92(sp)
 508e5d0:	00800084 	movi	r2,2
 508e5d4:	d8801815 	stw	r2,96(sp)
 508e5d8:	dc001904 	addi	r16,sp,100
 508e5dc:	01000044 	movi	r4,1
 508e5e0:	003f4006 	br	508e2e4 <___vfiprintf_internal_r+0xe10>
 508e5e4:	0463c83a 	sub	r17,zero,r17
 508e5e8:	d8c00415 	stw	r3,16(sp)
 508e5ec:	003e3806 	br	508ded0 <___vfiprintf_internal_r+0x9fc>
 508e5f0:	9809883a 	mov	r4,r19
 508e5f4:	d8c00215 	stw	r3,8(sp)
 508e5f8:	db400015 	stw	r13,0(sp)
 508e5fc:	5082abc0 	call	5082abc <strlen>
 508e600:	d8c00217 	ldw	r3,8(sp)
 508e604:	db400017 	ldw	r13,0(sp)
 508e608:	1039883a 	mov	fp,r2
 508e60c:	102f883a 	mov	r23,r2
 508e610:	d8c00415 	stw	r3,16(sp)
 508e614:	003c6606 	br	508d7b0 <___vfiprintf_internal_r+0x2dc>
 508e618:	d8c00947 	ldb	r3,37(sp)
 508e61c:	18004326 	beq	r3,zero,508e72c <___vfiprintf_internal_r+0x1258>
 508e620:	d8800944 	addi	r2,sp,37
 508e624:	d8801715 	stw	r2,92(sp)
 508e628:	00800044 	movi	r2,1
 508e62c:	d8801815 	stw	r2,96(sp)
 508e630:	d9801904 	addi	r6,sp,100
 508e634:	01400044 	movi	r5,1
 508e638:	003c7806 	br	508d81c <___vfiprintf_internal_r+0x348>
 508e63c:	d8800117 	ldw	r2,4(sp)
 508e640:	18800015 	stw	r2,0(r3)
 508e644:	d9000415 	stw	r4,16(sp)
 508e648:	003bcb06 	br	508d578 <___vfiprintf_internal_r+0xa4>
 508e64c:	00c00044 	movi	r3,1
 508e650:	e005883a 	mov	r2,fp
 508e654:	dcc01715 	stw	r19,92(sp)
 508e658:	df001815 	stw	fp,96(sp)
 508e65c:	df000c15 	stw	fp,48(sp)
 508e660:	d8c00b15 	stw	r3,44(sp)
 508e664:	d9801904 	addi	r6,sp,100
 508e668:	003c9c06 	br	508d8dc <___vfiprintf_internal_r+0x408>
 508e66c:	a0800043 	ldbu	r2,1(r20)
 508e670:	6b400814 	ori	r13,r13,32
 508e674:	a5000044 	addi	r20,r20,1
 508e678:	10803fcc 	andi	r2,r2,255
 508e67c:	1080201c 	xori	r2,r2,128
 508e680:	10bfe004 	addi	r2,r2,-128
 508e684:	003bd406 	br	508d5d8 <___vfiprintf_internal_r+0x104>
 508e688:	408001f0 	cmpltui	r2,r8,7
 508e68c:	4039883a 	mov	fp,r8
 508e690:	10002426 	beq	r2,zero,508e724 <___vfiprintf_internal_r+0x1250>
 508e694:	04c14274 	movhi	r19,1289
 508e698:	e02f883a 	mov	r23,fp
 508e69c:	d8c00415 	stw	r3,16(sp)
 508e6a0:	9cd81904 	addi	r19,r19,24676
 508e6a4:	003c4206 	br	508d7b0 <___vfiprintf_internal_r+0x2dc>
 508e6a8:	d8c00417 	ldw	r3,16(sp)
 508e6ac:	0039883a 	mov	fp,zero
 508e6b0:	d9000415 	stw	r4,16(sp)
 508e6b4:	1dc00017 	ldw	r23,0(r3)
 508e6b8:	003d8106 	br	508dcc0 <___vfiprintf_internal_r+0x7ec>
 508e6bc:	d8800417 	ldw	r2,16(sp)
 508e6c0:	0039883a 	mov	fp,zero
 508e6c4:	d8c00415 	stw	r3,16(sp)
 508e6c8:	15c00017 	ldw	r23,0(r2)
 508e6cc:	0005883a 	mov	r2,zero
 508e6d0:	003cd006 	br	508da14 <___vfiprintf_internal_r+0x540>
 508e6d4:	d8800417 	ldw	r2,16(sp)
 508e6d8:	d8c00415 	stw	r3,16(sp)
 508e6dc:	15c00017 	ldw	r23,0(r2)
 508e6e0:	b839d7fa 	srai	fp,r23,31
 508e6e4:	e005883a 	mov	r2,fp
 508e6e8:	003d5306 	br	508dc38 <___vfiprintf_internal_r+0x764>
 508e6ec:	d8800417 	ldw	r2,16(sp)
 508e6f0:	0039883a 	mov	fp,zero
 508e6f4:	d8c00415 	stw	r3,16(sp)
 508e6f8:	15c00017 	ldw	r23,0(r2)
 508e6fc:	00800044 	movi	r2,1
 508e700:	003cc406 	br	508da14 <___vfiprintf_internal_r+0x540>
 508e704:	3009883a 	mov	r4,r6
 508e708:	39d8a404 	addi	r7,r7,25232
 508e70c:	003ead06 	br	508e1c4 <___vfiprintf_internal_r+0xcf0>
 508e710:	d9801904 	addi	r6,sp,100
 508e714:	01400044 	movi	r5,1
 508e718:	0009883a 	mov	r4,zero
 508e71c:	9021883a 	mov	r16,r18
 508e720:	003c5d06 	br	508d898 <___vfiprintf_internal_r+0x3c4>
 508e724:	07000184 	movi	fp,6
 508e728:	003fda06 	br	508e694 <___vfiprintf_internal_r+0x11c0>
 508e72c:	703ee51e 	bne	r14,zero,508e2c4 <___vfiprintf_internal_r+0xdf0>
 508e730:	0009883a 	mov	r4,zero
 508e734:	d9801904 	addi	r6,sp,100
 508e738:	01400044 	movi	r5,1
 508e73c:	9021883a 	mov	r16,r18
 508e740:	003c5506 	br	508d898 <___vfiprintf_internal_r+0x3c4>
 508e744:	d9800945 	stb	r6,37(sp)
 508e748:	003c1306 	br	508d798 <___vfiprintf_internal_r+0x2c4>
 508e74c:	d9800a04 	addi	r6,sp,40
 508e750:	a80b883a 	mov	r5,r21
 508e754:	b009883a 	mov	r4,r22
 508e758:	508d3c80 	call	508d3c8 <__sprint_r.part.0>
 508e75c:	003c7006 	br	508d920 <___vfiprintf_internal_r+0x44c>
 508e760:	db400017 	ldw	r13,0(sp)
 508e764:	003d4106 	br	508dc6c <___vfiprintf_internal_r+0x798>
 508e768:	402f883a 	mov	r23,r8
 508e76c:	d8c00415 	stw	r3,16(sp)
 508e770:	4039883a 	mov	fp,r8
 508e774:	003c0e06 	br	508d7b0 <___vfiprintf_internal_r+0x2dc>
 508e778:	d9800945 	stb	r6,37(sp)
 508e77c:	003d2606 	br	508dc18 <___vfiprintf_internal_r+0x744>
 508e780:	d9800945 	stb	r6,37(sp)
 508e784:	003d4406 	br	508dc98 <___vfiprintf_internal_r+0x7c4>
 508e788:	d9800945 	stb	r6,37(sp)
 508e78c:	003d7c06 	br	508dd80 <___vfiprintf_internal_r+0x8ac>
 508e790:	303f883a 	mov	ra,r6
 508e794:	39d8a804 	addi	r7,r7,25248
 508e798:	003f2006 	br	508e41c <___vfiprintf_internal_r+0xf48>
 508e79c:	d9800945 	stb	r6,37(sp)
 508e7a0:	003df806 	br	508df84 <___vfiprintf_internal_r+0xab0>
 508e7a4:	d9800945 	stb	r6,37(sp)
 508e7a8:	003e0806 	br	508dfcc <___vfiprintf_internal_r+0xaf8>
 508e7ac:	21400044 	addi	r5,r4,1
 508e7b0:	39d8a804 	addi	r7,r7,25248
 508e7b4:	003d0506 	br	508dbcc <___vfiprintf_internal_r+0x6f8>
 508e7b8:	00bfffc4 	movi	r2,-1
 508e7bc:	d8800115 	stw	r2,4(sp)
 508e7c0:	003c5a06 	br	508d92c <___vfiprintf_internal_r+0x458>
 508e7c4:	01c14274 	movhi	r7,1289
 508e7c8:	301b883a 	mov	r13,r6
 508e7cc:	281d883a 	mov	r14,r5
 508e7d0:	39d8a404 	addi	r7,r7,25232
 508e7d4:	003e3e06 	br	508e0d0 <___vfiprintf_internal_r+0xbfc>
 508e7d8:	d8800417 	ldw	r2,16(sp)
 508e7dc:	12000017 	ldw	r8,0(r2)
 508e7e0:	10c00104 	addi	r3,r2,4
 508e7e4:	4000010e 	bge	r8,zero,508e7ec <___vfiprintf_internal_r+0x1318>
 508e7e8:	023fffc4 	movi	r8,-1
 508e7ec:	a0800043 	ldbu	r2,1(r20)
 508e7f0:	d8c00415 	stw	r3,16(sp)
 508e7f4:	2029883a 	mov	r20,r4
 508e7f8:	10803fcc 	andi	r2,r2,255
 508e7fc:	1080201c 	xori	r2,r2,128
 508e800:	10bfe004 	addi	r2,r2,-128
 508e804:	003b7406 	br	508d5d8 <___vfiprintf_internal_r+0x104>

0508e808 <__vfiprintf_internal>:
 508e808:	00c142b4 	movhi	r3,1290
 508e80c:	2005883a 	mov	r2,r4
 508e810:	19209917 	ldw	r4,-32156(r3)
 508e814:	300f883a 	mov	r7,r6
 508e818:	280d883a 	mov	r6,r5
 508e81c:	100b883a 	mov	r5,r2
 508e820:	508d4d41 	jmpi	508d4d4 <___vfiprintf_internal_r>

0508e824 <__sbprintf>:
 508e824:	2880030b 	ldhu	r2,12(r5)
 508e828:	2b001917 	ldw	r12,100(r5)
 508e82c:	2ac0038b 	ldhu	r11,14(r5)
 508e830:	2a800717 	ldw	r10,28(r5)
 508e834:	2a400917 	ldw	r9,36(r5)
 508e838:	defee204 	addi	sp,sp,-1144
 508e83c:	da001a04 	addi	r8,sp,104
 508e840:	00c10004 	movi	r3,1024
 508e844:	dc011a15 	stw	r16,1128(sp)
 508e848:	10bfff4c 	andi	r2,r2,65533
 508e84c:	2821883a 	mov	r16,r5
 508e850:	d80b883a 	mov	r5,sp
 508e854:	dc811c15 	stw	r18,1136(sp)
 508e858:	dc411b15 	stw	r17,1132(sp)
 508e85c:	dfc11d15 	stw	ra,1140(sp)
 508e860:	2025883a 	mov	r18,r4
 508e864:	d880030d 	sth	r2,12(sp)
 508e868:	db001915 	stw	r12,100(sp)
 508e86c:	dac0038d 	sth	r11,14(sp)
 508e870:	da800715 	stw	r10,28(sp)
 508e874:	da400915 	stw	r9,36(sp)
 508e878:	da000015 	stw	r8,0(sp)
 508e87c:	da000415 	stw	r8,16(sp)
 508e880:	d8c00215 	stw	r3,8(sp)
 508e884:	d8c00515 	stw	r3,20(sp)
 508e888:	d8000615 	stw	zero,24(sp)
 508e88c:	508d4d40 	call	508d4d4 <___vfiprintf_internal_r>
 508e890:	1023883a 	mov	r17,r2
 508e894:	10000d0e 	bge	r2,zero,508e8cc <__sbprintf+0xa8>
 508e898:	d880030b 	ldhu	r2,12(sp)
 508e89c:	1080100c 	andi	r2,r2,64
 508e8a0:	10000326 	beq	r2,zero,508e8b0 <__sbprintf+0x8c>
 508e8a4:	8080030b 	ldhu	r2,12(r16)
 508e8a8:	10801014 	ori	r2,r2,64
 508e8ac:	8080030d 	sth	r2,12(r16)
 508e8b0:	8805883a 	mov	r2,r17
 508e8b4:	dfc11d17 	ldw	ra,1140(sp)
 508e8b8:	dc811c17 	ldw	r18,1136(sp)
 508e8bc:	dc411b17 	ldw	r17,1132(sp)
 508e8c0:	dc011a17 	ldw	r16,1128(sp)
 508e8c4:	dec11e04 	addi	sp,sp,1144
 508e8c8:	f800283a 	ret
 508e8cc:	d80b883a 	mov	r5,sp
 508e8d0:	9009883a 	mov	r4,r18
 508e8d4:	5088c000 	call	5088c00 <_fflush_r>
 508e8d8:	103fef26 	beq	r2,zero,508e898 <__sbprintf+0x74>
 508e8dc:	047fffc4 	movi	r17,-1
 508e8e0:	003fed06 	br	508e898 <__sbprintf+0x74>

0508e8e4 <_write_r>:
 508e8e4:	2807883a 	mov	r3,r5
 508e8e8:	defffe04 	addi	sp,sp,-8
 508e8ec:	dc000015 	stw	r16,0(sp)
 508e8f0:	300b883a 	mov	r5,r6
 508e8f4:	008142b4 	movhi	r2,1290
 508e8f8:	380d883a 	mov	r6,r7
 508e8fc:	2021883a 	mov	r16,r4
 508e900:	1809883a 	mov	r4,r3
 508e904:	dfc00115 	stw	ra,4(sp)
 508e908:	1027a615 	stw	zero,-24936(r2)
 508e90c:	50935ec0 	call	50935ec <write>
 508e910:	10ffffd8 	cmpnei	r3,r2,-1
 508e914:	18000426 	beq	r3,zero,508e928 <_write_r+0x44>
 508e918:	dfc00117 	ldw	ra,4(sp)
 508e91c:	dc000017 	ldw	r16,0(sp)
 508e920:	dec00204 	addi	sp,sp,8
 508e924:	f800283a 	ret
 508e928:	00c142b4 	movhi	r3,1290
 508e92c:	18e7a617 	ldw	r3,-24936(r3)
 508e930:	183ff926 	beq	r3,zero,508e918 <_write_r+0x34>
 508e934:	80c00015 	stw	r3,0(r16)
 508e938:	dfc00117 	ldw	ra,4(sp)
 508e93c:	dc000017 	ldw	r16,0(sp)
 508e940:	dec00204 	addi	sp,sp,8
 508e944:	f800283a 	ret

0508e948 <_close_r>:
 508e948:	defffe04 	addi	sp,sp,-8
 508e94c:	dc000015 	stw	r16,0(sp)
 508e950:	008142b4 	movhi	r2,1290
 508e954:	2021883a 	mov	r16,r4
 508e958:	2809883a 	mov	r4,r5
 508e95c:	dfc00115 	stw	ra,4(sp)
 508e960:	1027a615 	stw	zero,-24936(r2)
 508e964:	5092a700 	call	5092a70 <close>
 508e968:	10ffffd8 	cmpnei	r3,r2,-1
 508e96c:	18000426 	beq	r3,zero,508e980 <_close_r+0x38>
 508e970:	dfc00117 	ldw	ra,4(sp)
 508e974:	dc000017 	ldw	r16,0(sp)
 508e978:	dec00204 	addi	sp,sp,8
 508e97c:	f800283a 	ret
 508e980:	00c142b4 	movhi	r3,1290
 508e984:	18e7a617 	ldw	r3,-24936(r3)
 508e988:	183ff926 	beq	r3,zero,508e970 <_close_r+0x28>
 508e98c:	80c00015 	stw	r3,0(r16)
 508e990:	dfc00117 	ldw	ra,4(sp)
 508e994:	dc000017 	ldw	r16,0(sp)
 508e998:	dec00204 	addi	sp,sp,8
 508e99c:	f800283a 	ret

0508e9a0 <__assert_func>:
 508e9a0:	008142b4 	movhi	r2,1290
 508e9a4:	12209917 	ldw	r8,-32156(r2)
 508e9a8:	defffc04 	addi	sp,sp,-16
 508e9ac:	3807883a 	mov	r3,r7
 508e9b0:	3005883a 	mov	r2,r6
 508e9b4:	dfc00315 	stw	ra,12(sp)
 508e9b8:	42400317 	ldw	r9,12(r8)
 508e9bc:	200f883a 	mov	r7,r4
 508e9c0:	2811883a 	mov	r8,r5
 508e9c4:	180d883a 	mov	r6,r3
 508e9c8:	10000a26 	beq	r2,zero,508e9f4 <__assert_func+0x54>
 508e9cc:	00c14274 	movhi	r3,1289
 508e9d0:	18d8ac04 	addi	r3,r3,25264
 508e9d4:	01414274 	movhi	r5,1289
 508e9d8:	2958b004 	addi	r5,r5,25280
 508e9dc:	4809883a 	mov	r4,r9
 508e9e0:	d8c00115 	stw	r3,4(sp)
 508e9e4:	da000015 	stw	r8,0(sp)
 508e9e8:	d8800215 	stw	r2,8(sp)
 508e9ec:	508ec8c0 	call	508ec8c <fiprintf>
 508e9f0:	508f4d40 	call	508f4d4 <abort>
 508e9f4:	00c14274 	movhi	r3,1289
 508e9f8:	18d8af04 	addi	r3,r3,25276
 508e9fc:	1805883a 	mov	r2,r3
 508ea00:	003ff406 	br	508e9d4 <__assert_func+0x34>

0508ea04 <__assert>:
 508ea04:	deffff04 	addi	sp,sp,-4
 508ea08:	300f883a 	mov	r7,r6
 508ea0c:	000d883a 	mov	r6,zero
 508ea10:	dfc00015 	stw	ra,0(sp)
 508ea14:	508e9a00 	call	508e9a0 <__assert_func>

0508ea18 <_calloc_r>:
 508ea18:	298b383a 	mul	r5,r5,r6
 508ea1c:	deffff04 	addi	sp,sp,-4
 508ea20:	dfc00015 	stw	ra,0(sp)
 508ea24:	5089cf80 	call	5089cf8 <_malloc_r>
 508ea28:	1009883a 	mov	r4,r2
 508ea2c:	10000c26 	beq	r2,zero,508ea60 <_calloc_r+0x48>
 508ea30:	11bfff17 	ldw	r6,-4(r2)
 508ea34:	00bfff04 	movi	r2,-4
 508ea38:	308c703a 	and	r6,r6,r2
 508ea3c:	31bfff04 	addi	r6,r6,-4
 508ea40:	30800968 	cmpgeui	r2,r6,37
 508ea44:	1000141e 	bne	r2,zero,508ea98 <_calloc_r+0x80>
 508ea48:	30800530 	cmpltui	r2,r6,20
 508ea4c:	10000826 	beq	r2,zero,508ea70 <_calloc_r+0x58>
 508ea50:	2005883a 	mov	r2,r4
 508ea54:	10000015 	stw	zero,0(r2)
 508ea58:	10000115 	stw	zero,4(r2)
 508ea5c:	10000215 	stw	zero,8(r2)
 508ea60:	2005883a 	mov	r2,r4
 508ea64:	dfc00017 	ldw	ra,0(sp)
 508ea68:	dec00104 	addi	sp,sp,4
 508ea6c:	f800283a 	ret
 508ea70:	20000015 	stw	zero,0(r4)
 508ea74:	20000115 	stw	zero,4(r4)
 508ea78:	30800728 	cmpgeui	r2,r6,28
 508ea7c:	10000d26 	beq	r2,zero,508eab4 <_calloc_r+0x9c>
 508ea80:	20000215 	stw	zero,8(r4)
 508ea84:	20000315 	stw	zero,12(r4)
 508ea88:	31800920 	cmpeqi	r6,r6,36
 508ea8c:	30000b1e 	bne	r6,zero,508eabc <_calloc_r+0xa4>
 508ea90:	20800404 	addi	r2,r4,16
 508ea94:	003fef06 	br	508ea54 <_calloc_r+0x3c>
 508ea98:	000b883a 	mov	r5,zero
 508ea9c:	508a7d40 	call	508a7d4 <memset>
 508eaa0:	1009883a 	mov	r4,r2
 508eaa4:	2005883a 	mov	r2,r4
 508eaa8:	dfc00017 	ldw	ra,0(sp)
 508eaac:	dec00104 	addi	sp,sp,4
 508eab0:	f800283a 	ret
 508eab4:	20800204 	addi	r2,r4,8
 508eab8:	003fe606 	br	508ea54 <_calloc_r+0x3c>
 508eabc:	20000415 	stw	zero,16(r4)
 508eac0:	20800604 	addi	r2,r4,24
 508eac4:	20000515 	stw	zero,20(r4)
 508eac8:	003fe206 	br	508ea54 <_calloc_r+0x3c>

0508eacc <_fclose_r.part.0>:
 508eacc:	defffc04 	addi	sp,sp,-16
 508ead0:	dc800215 	stw	r18,8(sp)
 508ead4:	dc400115 	stw	r17,4(sp)
 508ead8:	dc000015 	stw	r16,0(sp)
 508eadc:	dfc00315 	stw	ra,12(sp)
 508eae0:	2821883a 	mov	r16,r5
 508eae4:	2023883a 	mov	r17,r4
 508eae8:	50889d80 	call	50889d8 <__sflush_r>
 508eaec:	80c00b17 	ldw	r3,44(r16)
 508eaf0:	1025883a 	mov	r18,r2
 508eaf4:	18000426 	beq	r3,zero,508eb08 <_fclose_r.part.0+0x3c>
 508eaf8:	81400717 	ldw	r5,28(r16)
 508eafc:	8809883a 	mov	r4,r17
 508eb00:	183ee83a 	callr	r3
 508eb04:	10001916 	blt	r2,zero,508eb6c <_fclose_r.part.0+0xa0>
 508eb08:	8080030b 	ldhu	r2,12(r16)
 508eb0c:	1080200c 	andi	r2,r2,128
 508eb10:	10001a1e 	bne	r2,zero,508eb7c <_fclose_r.part.0+0xb0>
 508eb14:	81400c17 	ldw	r5,48(r16)
 508eb18:	28000526 	beq	r5,zero,508eb30 <_fclose_r.part.0+0x64>
 508eb1c:	80801004 	addi	r2,r16,64
 508eb20:	28800226 	beq	r5,r2,508eb2c <_fclose_r.part.0+0x60>
 508eb24:	8809883a 	mov	r4,r17
 508eb28:	508919c0 	call	508919c <_free_r>
 508eb2c:	80000c15 	stw	zero,48(r16)
 508eb30:	81401117 	ldw	r5,68(r16)
 508eb34:	28000326 	beq	r5,zero,508eb44 <_fclose_r.part.0+0x78>
 508eb38:	8809883a 	mov	r4,r17
 508eb3c:	508919c0 	call	508919c <_free_r>
 508eb40:	80001115 	stw	zero,68(r16)
 508eb44:	50890480 	call	5089048 <__sfp_lock_acquire>
 508eb48:	8000030d 	sth	zero,12(r16)
 508eb4c:	508904c0 	call	508904c <__sfp_lock_release>
 508eb50:	9005883a 	mov	r2,r18
 508eb54:	dfc00317 	ldw	ra,12(sp)
 508eb58:	dc800217 	ldw	r18,8(sp)
 508eb5c:	dc400117 	ldw	r17,4(sp)
 508eb60:	dc000017 	ldw	r16,0(sp)
 508eb64:	dec00404 	addi	sp,sp,16
 508eb68:	f800283a 	ret
 508eb6c:	8080030b 	ldhu	r2,12(r16)
 508eb70:	04bfffc4 	movi	r18,-1
 508eb74:	1080200c 	andi	r2,r2,128
 508eb78:	103fe626 	beq	r2,zero,508eb14 <_fclose_r.part.0+0x48>
 508eb7c:	81400417 	ldw	r5,16(r16)
 508eb80:	8809883a 	mov	r4,r17
 508eb84:	508919c0 	call	508919c <_free_r>
 508eb88:	003fe206 	br	508eb14 <_fclose_r.part.0+0x48>

0508eb8c <_fclose_r>:
 508eb8c:	28001926 	beq	r5,zero,508ebf4 <_fclose_r+0x68>
 508eb90:	defffd04 	addi	sp,sp,-12
 508eb94:	dc000115 	stw	r16,4(sp)
 508eb98:	dfc00215 	stw	ra,8(sp)
 508eb9c:	2021883a 	mov	r16,r4
 508eba0:	20000226 	beq	r4,zero,508ebac <_fclose_r+0x20>
 508eba4:	20800e17 	ldw	r2,56(r4)
 508eba8:	10000c26 	beq	r2,zero,508ebdc <_fclose_r+0x50>
 508ebac:	2880030f 	ldh	r2,12(r5)
 508ebb0:	1000051e 	bne	r2,zero,508ebc8 <_fclose_r+0x3c>
 508ebb4:	0005883a 	mov	r2,zero
 508ebb8:	dfc00217 	ldw	ra,8(sp)
 508ebbc:	dc000117 	ldw	r16,4(sp)
 508ebc0:	dec00304 	addi	sp,sp,12
 508ebc4:	f800283a 	ret
 508ebc8:	8009883a 	mov	r4,r16
 508ebcc:	dfc00217 	ldw	ra,8(sp)
 508ebd0:	dc000117 	ldw	r16,4(sp)
 508ebd4:	dec00304 	addi	sp,sp,12
 508ebd8:	508eacc1 	jmpi	508eacc <_fclose_r.part.0>
 508ebdc:	d9400015 	stw	r5,0(sp)
 508ebe0:	50890380 	call	5089038 <__sinit>
 508ebe4:	d9400017 	ldw	r5,0(sp)
 508ebe8:	2880030f 	ldh	r2,12(r5)
 508ebec:	103ff126 	beq	r2,zero,508ebb4 <_fclose_r+0x28>
 508ebf0:	003ff506 	br	508ebc8 <_fclose_r+0x3c>
 508ebf4:	0005883a 	mov	r2,zero
 508ebf8:	f800283a 	ret

0508ebfc <fclose>:
 508ebfc:	20000826 	beq	r4,zero,508ec20 <fclose+0x24>
 508ec00:	008142b4 	movhi	r2,1290
 508ec04:	200b883a 	mov	r5,r4
 508ec08:	11209917 	ldw	r4,-32156(r2)
 508ec0c:	20000226 	beq	r4,zero,508ec18 <fclose+0x1c>
 508ec10:	20800e17 	ldw	r2,56(r4)
 508ec14:	10000526 	beq	r2,zero,508ec2c <fclose+0x30>
 508ec18:	2880030f 	ldh	r2,12(r5)
 508ec1c:	1000021e 	bne	r2,zero,508ec28 <fclose+0x2c>
 508ec20:	0005883a 	mov	r2,zero
 508ec24:	f800283a 	ret
 508ec28:	508eacc1 	jmpi	508eacc <_fclose_r.part.0>
 508ec2c:	defffd04 	addi	sp,sp,-12
 508ec30:	d9400115 	stw	r5,4(sp)
 508ec34:	d9000015 	stw	r4,0(sp)
 508ec38:	dfc00215 	stw	ra,8(sp)
 508ec3c:	50890380 	call	5089038 <__sinit>
 508ec40:	d9400117 	ldw	r5,4(sp)
 508ec44:	d9000017 	ldw	r4,0(sp)
 508ec48:	2880030f 	ldh	r2,12(r5)
 508ec4c:	10000326 	beq	r2,zero,508ec5c <fclose+0x60>
 508ec50:	dfc00217 	ldw	ra,8(sp)
 508ec54:	dec00304 	addi	sp,sp,12
 508ec58:	508eacc1 	jmpi	508eacc <_fclose_r.part.0>
 508ec5c:	0005883a 	mov	r2,zero
 508ec60:	dfc00217 	ldw	ra,8(sp)
 508ec64:	dec00304 	addi	sp,sp,12
 508ec68:	f800283a 	ret

0508ec6c <_fiprintf_r>:
 508ec6c:	defffe04 	addi	sp,sp,-8
 508ec70:	dfc00015 	stw	ra,0(sp)
 508ec74:	d9c00115 	stw	r7,4(sp)
 508ec78:	d9c00104 	addi	r7,sp,4
 508ec7c:	508f2400 	call	508f240 <_vfiprintf_r>
 508ec80:	dfc00017 	ldw	ra,0(sp)
 508ec84:	dec00204 	addi	sp,sp,8
 508ec88:	f800283a 	ret

0508ec8c <fiprintf>:
 508ec8c:	defffd04 	addi	sp,sp,-12
 508ec90:	2005883a 	mov	r2,r4
 508ec94:	dfc00015 	stw	ra,0(sp)
 508ec98:	d9800115 	stw	r6,4(sp)
 508ec9c:	d9c00215 	stw	r7,8(sp)
 508eca0:	00c142b4 	movhi	r3,1290
 508eca4:	19209917 	ldw	r4,-32156(r3)
 508eca8:	280d883a 	mov	r6,r5
 508ecac:	d9c00104 	addi	r7,sp,4
 508ecb0:	100b883a 	mov	r5,r2
 508ecb4:	508f2400 	call	508f240 <_vfiprintf_r>
 508ecb8:	dfc00017 	ldw	ra,0(sp)
 508ecbc:	dec00304 	addi	sp,sp,12
 508ecc0:	f800283a 	ret

0508ecc4 <__fputwc>:
 508ecc4:	defff904 	addi	sp,sp,-28
 508ecc8:	dcc00415 	stw	r19,16(sp)
 508eccc:	dc800315 	stw	r18,12(sp)
 508ecd0:	dc000115 	stw	r16,4(sp)
 508ecd4:	dfc00615 	stw	ra,24(sp)
 508ecd8:	dd000515 	stw	r20,20(sp)
 508ecdc:	dc400215 	stw	r17,8(sp)
 508ece0:	2025883a 	mov	r18,r4
 508ece4:	2827883a 	mov	r19,r5
 508ece8:	3021883a 	mov	r16,r6
 508ecec:	508eff00 	call	508eff0 <__locale_mb_cur_max>
 508ecf0:	10800058 	cmpnei	r2,r2,1
 508ecf4:	1000071e 	bne	r2,zero,508ed14 <__fputwc+0x50>
 508ecf8:	98bfffc4 	addi	r2,r19,-1
 508ecfc:	10803fe8 	cmpgeui	r2,r2,255
 508ed00:	1000041e 	bne	r2,zero,508ed14 <__fputwc+0x50>
 508ed04:	980b883a 	mov	r5,r19
 508ed08:	dcc000c5 	stb	r19,3(sp)
 508ed0c:	05000044 	movi	r20,1
 508ed10:	00000a06 	br	508ed3c <__fputwc+0x78>
 508ed14:	81c01704 	addi	r7,r16,92
 508ed18:	980d883a 	mov	r6,r19
 508ed1c:	d94000c4 	addi	r5,sp,3
 508ed20:	9009883a 	mov	r4,r18
 508ed24:	508f3a40 	call	508f3a4 <_wcrtomb_r>
 508ed28:	1029883a 	mov	r20,r2
 508ed2c:	10bfffd8 	cmpnei	r2,r2,-1
 508ed30:	10003926 	beq	r2,zero,508ee18 <__fputwc+0x154>
 508ed34:	a0001f26 	beq	r20,zero,508edb4 <__fputwc+0xf0>
 508ed38:	d94000c3 	ldbu	r5,3(sp)
 508ed3c:	0023883a 	mov	r17,zero
 508ed40:	00000a06 	br	508ed6c <__fputwc+0xa8>
 508ed44:	80800017 	ldw	r2,0(r16)
 508ed48:	11400005 	stb	r5,0(r2)
 508ed4c:	80c00017 	ldw	r3,0(r16)
 508ed50:	18c00044 	addi	r3,r3,1
 508ed54:	80c00015 	stw	r3,0(r16)
 508ed58:	8c400044 	addi	r17,r17,1
 508ed5c:	d88000c4 	addi	r2,sp,3
 508ed60:	1447883a 	add	r3,r2,r17
 508ed64:	8d00132e 	bgeu	r17,r20,508edb4 <__fputwc+0xf0>
 508ed68:	19400003 	ldbu	r5,0(r3)
 508ed6c:	80c00217 	ldw	r3,8(r16)
 508ed70:	18ffffc4 	addi	r3,r3,-1
 508ed74:	80c00215 	stw	r3,8(r16)
 508ed78:	183ff20e 	bge	r3,zero,508ed44 <__fputwc+0x80>
 508ed7c:	80800617 	ldw	r2,24(r16)
 508ed80:	18801616 	blt	r3,r2,508eddc <__fputwc+0x118>
 508ed84:	80800017 	ldw	r2,0(r16)
 508ed88:	11400005 	stb	r5,0(r2)
 508ed8c:	80800017 	ldw	r2,0(r16)
 508ed90:	10c00003 	ldbu	r3,0(r2)
 508ed94:	10800044 	addi	r2,r2,1
 508ed98:	18c002a0 	cmpeqi	r3,r3,10
 508ed9c:	1800171e 	bne	r3,zero,508edfc <__fputwc+0x138>
 508eda0:	80800015 	stw	r2,0(r16)
 508eda4:	8c400044 	addi	r17,r17,1
 508eda8:	d88000c4 	addi	r2,sp,3
 508edac:	1447883a 	add	r3,r2,r17
 508edb0:	8d3fed36 	bltu	r17,r20,508ed68 <__fputwc+0xa4>
 508edb4:	9829883a 	mov	r20,r19
 508edb8:	a005883a 	mov	r2,r20
 508edbc:	dfc00617 	ldw	ra,24(sp)
 508edc0:	dd000517 	ldw	r20,20(sp)
 508edc4:	dcc00417 	ldw	r19,16(sp)
 508edc8:	dc800317 	ldw	r18,12(sp)
 508edcc:	dc400217 	ldw	r17,8(sp)
 508edd0:	dc000117 	ldw	r16,4(sp)
 508edd4:	dec00704 	addi	sp,sp,28
 508edd8:	f800283a 	ret
 508eddc:	29403fcc 	andi	r5,r5,255
 508ede0:	800d883a 	mov	r6,r16
 508ede4:	9009883a 	mov	r4,r18
 508ede8:	508f2440 	call	508f244 <__swbuf_r>
 508edec:	10bfffe0 	cmpeqi	r2,r2,-1
 508edf0:	103fd926 	beq	r2,zero,508ed58 <__fputwc+0x94>
 508edf4:	053fffc4 	movi	r20,-1
 508edf8:	003fef06 	br	508edb8 <__fputwc+0xf4>
 508edfc:	800d883a 	mov	r6,r16
 508ee00:	01400284 	movi	r5,10
 508ee04:	9009883a 	mov	r4,r18
 508ee08:	508f2440 	call	508f244 <__swbuf_r>
 508ee0c:	10bfffe0 	cmpeqi	r2,r2,-1
 508ee10:	103fd126 	beq	r2,zero,508ed58 <__fputwc+0x94>
 508ee14:	003ff706 	br	508edf4 <__fputwc+0x130>
 508ee18:	8080030b 	ldhu	r2,12(r16)
 508ee1c:	10801014 	ori	r2,r2,64
 508ee20:	8080030d 	sth	r2,12(r16)
 508ee24:	003fe406 	br	508edb8 <__fputwc+0xf4>

0508ee28 <_fputwc_r>:
 508ee28:	3080030b 	ldhu	r2,12(r6)
 508ee2c:	10c8000c 	andi	r3,r2,8192
 508ee30:	1800051e 	bne	r3,zero,508ee48 <_fputwc_r+0x20>
 508ee34:	30c01917 	ldw	r3,100(r6)
 508ee38:	10880014 	ori	r2,r2,8192
 508ee3c:	3080030d 	sth	r2,12(r6)
 508ee40:	18880014 	ori	r2,r3,8192
 508ee44:	30801915 	stw	r2,100(r6)
 508ee48:	508ecc41 	jmpi	508ecc4 <__fputwc>

0508ee4c <fputwc>:
 508ee4c:	defffc04 	addi	sp,sp,-16
 508ee50:	008142b4 	movhi	r2,1290
 508ee54:	dc000215 	stw	r16,8(sp)
 508ee58:	14209917 	ldw	r16,-32156(r2)
 508ee5c:	dfc00315 	stw	ra,12(sp)
 508ee60:	280d883a 	mov	r6,r5
 508ee64:	200b883a 	mov	r5,r4
 508ee68:	80000226 	beq	r16,zero,508ee74 <fputwc+0x28>
 508ee6c:	80800e17 	ldw	r2,56(r16)
 508ee70:	10000d26 	beq	r2,zero,508eea8 <fputwc+0x5c>
 508ee74:	3080030b 	ldhu	r2,12(r6)
 508ee78:	10c8000c 	andi	r3,r2,8192
 508ee7c:	1800051e 	bne	r3,zero,508ee94 <fputwc+0x48>
 508ee80:	30c01917 	ldw	r3,100(r6)
 508ee84:	10880014 	ori	r2,r2,8192
 508ee88:	3080030d 	sth	r2,12(r6)
 508ee8c:	18880014 	ori	r2,r3,8192
 508ee90:	30801915 	stw	r2,100(r6)
 508ee94:	8009883a 	mov	r4,r16
 508ee98:	dfc00317 	ldw	ra,12(sp)
 508ee9c:	dc000217 	ldw	r16,8(sp)
 508eea0:	dec00404 	addi	sp,sp,16
 508eea4:	508ecc41 	jmpi	508ecc4 <__fputwc>
 508eea8:	d9000015 	stw	r4,0(sp)
 508eeac:	8009883a 	mov	r4,r16
 508eeb0:	d9800115 	stw	r6,4(sp)
 508eeb4:	50890380 	call	5089038 <__sinit>
 508eeb8:	d9800117 	ldw	r6,4(sp)
 508eebc:	d9400017 	ldw	r5,0(sp)
 508eec0:	003fec06 	br	508ee74 <fputwc+0x28>

0508eec4 <_fstat_r>:
 508eec4:	2807883a 	mov	r3,r5
 508eec8:	defffe04 	addi	sp,sp,-8
 508eecc:	dc000015 	stw	r16,0(sp)
 508eed0:	008142b4 	movhi	r2,1290
 508eed4:	300b883a 	mov	r5,r6
 508eed8:	2021883a 	mov	r16,r4
 508eedc:	1809883a 	mov	r4,r3
 508eee0:	dfc00115 	stw	ra,4(sp)
 508eee4:	1027a615 	stw	zero,-24936(r2)
 508eee8:	5092be00 	call	5092be0 <fstat>
 508eeec:	10ffffd8 	cmpnei	r3,r2,-1
 508eef0:	18000426 	beq	r3,zero,508ef04 <_fstat_r+0x40>
 508eef4:	dfc00117 	ldw	ra,4(sp)
 508eef8:	dc000017 	ldw	r16,0(sp)
 508eefc:	dec00204 	addi	sp,sp,8
 508ef00:	f800283a 	ret
 508ef04:	00c142b4 	movhi	r3,1290
 508ef08:	18e7a617 	ldw	r3,-24936(r3)
 508ef0c:	183ff926 	beq	r3,zero,508eef4 <_fstat_r+0x30>
 508ef10:	80c00015 	stw	r3,0(r16)
 508ef14:	dfc00117 	ldw	ra,4(sp)
 508ef18:	dc000017 	ldw	r16,0(sp)
 508ef1c:	dec00204 	addi	sp,sp,8
 508ef20:	f800283a 	ret

0508ef24 <_isatty_r>:
 508ef24:	defffe04 	addi	sp,sp,-8
 508ef28:	dc000015 	stw	r16,0(sp)
 508ef2c:	008142b4 	movhi	r2,1290
 508ef30:	2021883a 	mov	r16,r4
 508ef34:	2809883a 	mov	r4,r5
 508ef38:	dfc00115 	stw	ra,4(sp)
 508ef3c:	1027a615 	stw	zero,-24936(r2)
 508ef40:	5092e6c0 	call	5092e6c <isatty>
 508ef44:	10ffffd8 	cmpnei	r3,r2,-1
 508ef48:	18000426 	beq	r3,zero,508ef5c <_isatty_r+0x38>
 508ef4c:	dfc00117 	ldw	ra,4(sp)
 508ef50:	dc000017 	ldw	r16,0(sp)
 508ef54:	dec00204 	addi	sp,sp,8
 508ef58:	f800283a 	ret
 508ef5c:	00c142b4 	movhi	r3,1290
 508ef60:	18e7a617 	ldw	r3,-24936(r3)
 508ef64:	183ff926 	beq	r3,zero,508ef4c <_isatty_r+0x28>
 508ef68:	80c00015 	stw	r3,0(r16)
 508ef6c:	dfc00117 	ldw	ra,4(sp)
 508ef70:	dc000017 	ldw	r16,0(sp)
 508ef74:	dec00204 	addi	sp,sp,8
 508ef78:	f800283a 	ret

0508ef7c <_setlocale_r>:
 508ef7c:	30001626 	beq	r6,zero,508efd8 <_setlocale_r+0x5c>
 508ef80:	01414274 	movhi	r5,1289
 508ef84:	defffe04 	addi	sp,sp,-8
 508ef88:	2958bd04 	addi	r5,r5,25332
 508ef8c:	3009883a 	mov	r4,r6
 508ef90:	dc000015 	stw	r16,0(sp)
 508ef94:	dfc00115 	stw	ra,4(sp)
 508ef98:	3021883a 	mov	r16,r6
 508ef9c:	508f1880 	call	508f188 <strcmp>
 508efa0:	1000061e 	bne	r2,zero,508efbc <_setlocale_r+0x40>
 508efa4:	00814274 	movhi	r2,1289
 508efa8:	1098bc04 	addi	r2,r2,25328
 508efac:	dfc00117 	ldw	ra,4(sp)
 508efb0:	dc000017 	ldw	r16,0(sp)
 508efb4:	dec00204 	addi	sp,sp,8
 508efb8:	f800283a 	ret
 508efbc:	80800003 	ldbu	r2,0(r16)
 508efc0:	10bfef44 	addi	r2,r2,-67
 508efc4:	10000726 	beq	r2,zero,508efe4 <_setlocale_r+0x68>
 508efc8:	80800003 	ldbu	r2,0(r16)
 508efcc:	103ff526 	beq	r2,zero,508efa4 <_setlocale_r+0x28>
 508efd0:	0005883a 	mov	r2,zero
 508efd4:	003ff506 	br	508efac <_setlocale_r+0x30>
 508efd8:	00814274 	movhi	r2,1289
 508efdc:	1098bc04 	addi	r2,r2,25328
 508efe0:	f800283a 	ret
 508efe4:	80800043 	ldbu	r2,1(r16)
 508efe8:	103fee26 	beq	r2,zero,508efa4 <_setlocale_r+0x28>
 508efec:	003ff606 	br	508efc8 <_setlocale_r+0x4c>

0508eff0 <__locale_mb_cur_max>:
 508eff0:	00814274 	movhi	r2,1289
 508eff4:	109c0507 	ldb	r2,28692(r2)
 508eff8:	f800283a 	ret

0508effc <setlocale>:
 508effc:	28001626 	beq	r5,zero,508f058 <setlocale+0x5c>
 508f000:	defffe04 	addi	sp,sp,-8
 508f004:	dc000015 	stw	r16,0(sp)
 508f008:	2821883a 	mov	r16,r5
 508f00c:	01414274 	movhi	r5,1289
 508f010:	2958bd04 	addi	r5,r5,25332
 508f014:	8009883a 	mov	r4,r16
 508f018:	dfc00115 	stw	ra,4(sp)
 508f01c:	508f1880 	call	508f188 <strcmp>
 508f020:	1000061e 	bne	r2,zero,508f03c <setlocale+0x40>
 508f024:	00814274 	movhi	r2,1289
 508f028:	1098bc04 	addi	r2,r2,25328
 508f02c:	dfc00117 	ldw	ra,4(sp)
 508f030:	dc000017 	ldw	r16,0(sp)
 508f034:	dec00204 	addi	sp,sp,8
 508f038:	f800283a 	ret
 508f03c:	80800003 	ldbu	r2,0(r16)
 508f040:	10bfef44 	addi	r2,r2,-67
 508f044:	10000726 	beq	r2,zero,508f064 <setlocale+0x68>
 508f048:	80800003 	ldbu	r2,0(r16)
 508f04c:	103ff526 	beq	r2,zero,508f024 <setlocale+0x28>
 508f050:	0005883a 	mov	r2,zero
 508f054:	003ff506 	br	508f02c <setlocale+0x30>
 508f058:	00814274 	movhi	r2,1289
 508f05c:	1098bc04 	addi	r2,r2,25328
 508f060:	f800283a 	ret
 508f064:	80800043 	ldbu	r2,1(r16)
 508f068:	103fee26 	beq	r2,zero,508f024 <setlocale+0x28>
 508f06c:	003ff606 	br	508f048 <setlocale+0x4c>

0508f070 <_lseek_r>:
 508f070:	2807883a 	mov	r3,r5
 508f074:	defffe04 	addi	sp,sp,-8
 508f078:	dc000015 	stw	r16,0(sp)
 508f07c:	300b883a 	mov	r5,r6
 508f080:	008142b4 	movhi	r2,1290
 508f084:	380d883a 	mov	r6,r7
 508f088:	2021883a 	mov	r16,r4
 508f08c:	1809883a 	mov	r4,r3
 508f090:	dfc00115 	stw	ra,4(sp)
 508f094:	1027a615 	stw	zero,-24936(r2)
 508f098:	50931a00 	call	50931a0 <lseek>
 508f09c:	10ffffd8 	cmpnei	r3,r2,-1
 508f0a0:	18000426 	beq	r3,zero,508f0b4 <_lseek_r+0x44>
 508f0a4:	dfc00117 	ldw	ra,4(sp)
 508f0a8:	dc000017 	ldw	r16,0(sp)
 508f0ac:	dec00204 	addi	sp,sp,8
 508f0b0:	f800283a 	ret
 508f0b4:	00c142b4 	movhi	r3,1290
 508f0b8:	18e7a617 	ldw	r3,-24936(r3)
 508f0bc:	183ff926 	beq	r3,zero,508f0a4 <_lseek_r+0x34>
 508f0c0:	80c00015 	stw	r3,0(r16)
 508f0c4:	dfc00117 	ldw	ra,4(sp)
 508f0c8:	dc000017 	ldw	r16,0(sp)
 508f0cc:	dec00204 	addi	sp,sp,8
 508f0d0:	f800283a 	ret

0508f0d4 <_mbtowc_r>:
 508f0d4:	00814274 	movhi	r2,1289
 508f0d8:	109bf417 	ldw	r2,28624(r2)
 508f0dc:	1000683a 	jmp	r2

0508f0e0 <__ascii_mbtowc>:
 508f0e0:	deffff04 	addi	sp,sp,-4
 508f0e4:	28000826 	beq	r5,zero,508f108 <__ascii_mbtowc+0x28>
 508f0e8:	30000926 	beq	r6,zero,508f110 <__ascii_mbtowc+0x30>
 508f0ec:	38000b26 	beq	r7,zero,508f11c <__ascii_mbtowc+0x3c>
 508f0f0:	30800003 	ldbu	r2,0(r6)
 508f0f4:	28800015 	stw	r2,0(r5)
 508f0f8:	30800003 	ldbu	r2,0(r6)
 508f0fc:	1004c03a 	cmpne	r2,r2,zero
 508f100:	dec00104 	addi	sp,sp,4
 508f104:	f800283a 	ret
 508f108:	d80b883a 	mov	r5,sp
 508f10c:	303ff71e 	bne	r6,zero,508f0ec <__ascii_mbtowc+0xc>
 508f110:	0005883a 	mov	r2,zero
 508f114:	dec00104 	addi	sp,sp,4
 508f118:	f800283a 	ret
 508f11c:	00bfff84 	movi	r2,-2
 508f120:	003ff706 	br	508f100 <__ascii_mbtowc+0x20>

0508f124 <_read_r>:
 508f124:	2807883a 	mov	r3,r5
 508f128:	defffe04 	addi	sp,sp,-8
 508f12c:	dc000015 	stw	r16,0(sp)
 508f130:	300b883a 	mov	r5,r6
 508f134:	008142b4 	movhi	r2,1290
 508f138:	380d883a 	mov	r6,r7
 508f13c:	2021883a 	mov	r16,r4
 508f140:	1809883a 	mov	r4,r3
 508f144:	dfc00115 	stw	ra,4(sp)
 508f148:	1027a615 	stw	zero,-24936(r2)
 508f14c:	50933740 	call	5093374 <read>
 508f150:	10ffffd8 	cmpnei	r3,r2,-1
 508f154:	18000426 	beq	r3,zero,508f168 <_read_r+0x44>
 508f158:	dfc00117 	ldw	ra,4(sp)
 508f15c:	dc000017 	ldw	r16,0(sp)
 508f160:	dec00204 	addi	sp,sp,8
 508f164:	f800283a 	ret
 508f168:	00c142b4 	movhi	r3,1290
 508f16c:	18e7a617 	ldw	r3,-24936(r3)
 508f170:	183ff926 	beq	r3,zero,508f158 <_read_r+0x34>
 508f174:	80c00015 	stw	r3,0(r16)
 508f178:	dfc00117 	ldw	ra,4(sp)
 508f17c:	dc000017 	ldw	r16,0(sp)
 508f180:	dec00204 	addi	sp,sp,8
 508f184:	f800283a 	ret

0508f188 <strcmp>:
 508f188:	2144b03a 	or	r2,r4,r5
 508f18c:	108000cc 	andi	r2,r2,3
 508f190:	1000141e 	bne	r2,zero,508f1e4 <strcmp+0x5c>
 508f194:	20800017 	ldw	r2,0(r4)
 508f198:	28c00017 	ldw	r3,0(r5)
 508f19c:	10c0111e 	bne	r2,r3,508f1e4 <strcmp+0x5c>
 508f1a0:	01ffbff4 	movhi	r7,65279
 508f1a4:	01a02074 	movhi	r6,32897
 508f1a8:	39ffbfc4 	addi	r7,r7,-257
 508f1ac:	31a02004 	addi	r6,r6,-32640
 508f1b0:	00000306 	br	508f1c0 <strcmp+0x38>
 508f1b4:	20800017 	ldw	r2,0(r4)
 508f1b8:	28c00017 	ldw	r3,0(r5)
 508f1bc:	10c0091e 	bne	r2,r3,508f1e4 <strcmp+0x5c>
 508f1c0:	11c7883a 	add	r3,r2,r7
 508f1c4:	0084303a 	nor	r2,zero,r2
 508f1c8:	1884703a 	and	r2,r3,r2
 508f1cc:	1184703a 	and	r2,r2,r6
 508f1d0:	21000104 	addi	r4,r4,4
 508f1d4:	29400104 	addi	r5,r5,4
 508f1d8:	103ff626 	beq	r2,zero,508f1b4 <strcmp+0x2c>
 508f1dc:	0005883a 	mov	r2,zero
 508f1e0:	f800283a 	ret
 508f1e4:	20c00003 	ldbu	r3,0(r4)
 508f1e8:	18803fcc 	andi	r2,r3,255
 508f1ec:	1080201c 	xori	r2,r2,128
 508f1f0:	10bfe004 	addi	r2,r2,-128
 508f1f4:	1000071e 	bne	r2,zero,508f214 <strcmp+0x8c>
 508f1f8:	00000a06 	br	508f224 <strcmp+0x9c>
 508f1fc:	20c00003 	ldbu	r3,0(r4)
 508f200:	29400044 	addi	r5,r5,1
 508f204:	18803fcc 	andi	r2,r3,255
 508f208:	1080201c 	xori	r2,r2,128
 508f20c:	10bfe004 	addi	r2,r2,-128
 508f210:	10000726 	beq	r2,zero,508f230 <strcmp+0xa8>
 508f214:	29800007 	ldb	r6,0(r5)
 508f218:	21000044 	addi	r4,r4,1
 508f21c:	30bff726 	beq	r6,r2,508f1fc <strcmp+0x74>
 508f220:	18803fcc 	andi	r2,r3,255
 508f224:	28c00003 	ldbu	r3,0(r5)
 508f228:	10c5c83a 	sub	r2,r2,r3
 508f22c:	f800283a 	ret
 508f230:	28c00003 	ldbu	r3,0(r5)
 508f234:	0005883a 	mov	r2,zero
 508f238:	10c5c83a 	sub	r2,r2,r3
 508f23c:	f800283a 	ret

0508f240 <_vfiprintf_r>:
 508f240:	508d4d41 	jmpi	508d4d4 <___vfiprintf_internal_r>

0508f244 <__swbuf_r>:
 508f244:	defffb04 	addi	sp,sp,-20
 508f248:	dcc00315 	stw	r19,12(sp)
 508f24c:	dc400115 	stw	r17,4(sp)
 508f250:	dc000015 	stw	r16,0(sp)
 508f254:	dfc00415 	stw	ra,16(sp)
 508f258:	dc800215 	stw	r18,8(sp)
 508f25c:	2027883a 	mov	r19,r4
 508f260:	2823883a 	mov	r17,r5
 508f264:	3021883a 	mov	r16,r6
 508f268:	20000226 	beq	r4,zero,508f274 <__swbuf_r+0x30>
 508f26c:	20800e17 	ldw	r2,56(r4)
 508f270:	10003e26 	beq	r2,zero,508f36c <__swbuf_r+0x128>
 508f274:	80800617 	ldw	r2,24(r16)
 508f278:	80c0030b 	ldhu	r3,12(r16)
 508f27c:	80800215 	stw	r2,8(r16)
 508f280:	1880020c 	andi	r2,r3,8
 508f284:	10001f26 	beq	r2,zero,508f304 <__swbuf_r+0xc0>
 508f288:	80800417 	ldw	r2,16(r16)
 508f28c:	10001d26 	beq	r2,zero,508f304 <__swbuf_r+0xc0>
 508f290:	1948000c 	andi	r5,r3,8192
 508f294:	8c803fcc 	andi	r18,r17,255
 508f298:	28002326 	beq	r5,zero,508f328 <__swbuf_r+0xe4>
 508f29c:	80c00017 	ldw	r3,0(r16)
 508f2a0:	81000517 	ldw	r4,20(r16)
 508f2a4:	1885c83a 	sub	r2,r3,r2
 508f2a8:	1100290e 	bge	r2,r4,508f350 <__swbuf_r+0x10c>
 508f2ac:	10800044 	addi	r2,r2,1
 508f2b0:	81400217 	ldw	r5,8(r16)
 508f2b4:	19000044 	addi	r4,r3,1
 508f2b8:	81000015 	stw	r4,0(r16)
 508f2bc:	297fffc4 	addi	r5,r5,-1
 508f2c0:	81400215 	stw	r5,8(r16)
 508f2c4:	1c400005 	stb	r17,0(r3)
 508f2c8:	80c00517 	ldw	r3,20(r16)
 508f2cc:	18802926 	beq	r3,r2,508f374 <__swbuf_r+0x130>
 508f2d0:	8080030b 	ldhu	r2,12(r16)
 508f2d4:	1080004c 	andi	r2,r2,1
 508f2d8:	10000226 	beq	r2,zero,508f2e4 <__swbuf_r+0xa0>
 508f2dc:	90800298 	cmpnei	r2,r18,10
 508f2e0:	10002426 	beq	r2,zero,508f374 <__swbuf_r+0x130>
 508f2e4:	9005883a 	mov	r2,r18
 508f2e8:	dfc00417 	ldw	ra,16(sp)
 508f2ec:	dcc00317 	ldw	r19,12(sp)
 508f2f0:	dc800217 	ldw	r18,8(sp)
 508f2f4:	dc400117 	ldw	r17,4(sp)
 508f2f8:	dc000017 	ldw	r16,0(sp)
 508f2fc:	dec00504 	addi	sp,sp,20
 508f300:	f800283a 	ret
 508f304:	800b883a 	mov	r5,r16
 508f308:	9809883a 	mov	r4,r19
 508f30c:	5086f300 	call	5086f30 <__swsetup_r>
 508f310:	10001c1e 	bne	r2,zero,508f384 <__swbuf_r+0x140>
 508f314:	80c0030b 	ldhu	r3,12(r16)
 508f318:	80800417 	ldw	r2,16(r16)
 508f31c:	8c803fcc 	andi	r18,r17,255
 508f320:	1948000c 	andi	r5,r3,8192
 508f324:	283fdd1e 	bne	r5,zero,508f29c <__swbuf_r+0x58>
 508f328:	81001917 	ldw	r4,100(r16)
 508f32c:	18c80014 	ori	r3,r3,8192
 508f330:	0177ffc4 	movi	r5,-8193
 508f334:	2148703a 	and	r4,r4,r5
 508f338:	80c0030d 	sth	r3,12(r16)
 508f33c:	80c00017 	ldw	r3,0(r16)
 508f340:	81001915 	stw	r4,100(r16)
 508f344:	81000517 	ldw	r4,20(r16)
 508f348:	1885c83a 	sub	r2,r3,r2
 508f34c:	113fd716 	blt	r2,r4,508f2ac <__swbuf_r+0x68>
 508f350:	800b883a 	mov	r5,r16
 508f354:	9809883a 	mov	r4,r19
 508f358:	5088c000 	call	5088c00 <_fflush_r>
 508f35c:	1000091e 	bne	r2,zero,508f384 <__swbuf_r+0x140>
 508f360:	80c00017 	ldw	r3,0(r16)
 508f364:	00800044 	movi	r2,1
 508f368:	003fd106 	br	508f2b0 <__swbuf_r+0x6c>
 508f36c:	50890380 	call	5089038 <__sinit>
 508f370:	003fc006 	br	508f274 <__swbuf_r+0x30>
 508f374:	800b883a 	mov	r5,r16
 508f378:	9809883a 	mov	r4,r19
 508f37c:	5088c000 	call	5088c00 <_fflush_r>
 508f380:	103fd826 	beq	r2,zero,508f2e4 <__swbuf_r+0xa0>
 508f384:	04bfffc4 	movi	r18,-1
 508f388:	003fd606 	br	508f2e4 <__swbuf_r+0xa0>

0508f38c <__swbuf>:
 508f38c:	00c142b4 	movhi	r3,1290
 508f390:	2005883a 	mov	r2,r4
 508f394:	19209917 	ldw	r4,-32156(r3)
 508f398:	280d883a 	mov	r6,r5
 508f39c:	100b883a 	mov	r5,r2
 508f3a0:	508f2441 	jmpi	508f244 <__swbuf_r>

0508f3a4 <_wcrtomb_r>:
 508f3a4:	defffa04 	addi	sp,sp,-24
 508f3a8:	dc400415 	stw	r17,16(sp)
 508f3ac:	dc000315 	stw	r16,12(sp)
 508f3b0:	00814274 	movhi	r2,1289
 508f3b4:	dfc00515 	stw	ra,20(sp)
 508f3b8:	109bf317 	ldw	r2,28620(r2)
 508f3bc:	2023883a 	mov	r17,r4
 508f3c0:	3821883a 	mov	r16,r7
 508f3c4:	28000826 	beq	r5,zero,508f3e8 <_wcrtomb_r+0x44>
 508f3c8:	103ee83a 	callr	r2
 508f3cc:	10ffffd8 	cmpnei	r3,r2,-1
 508f3d0:	18000a26 	beq	r3,zero,508f3fc <_wcrtomb_r+0x58>
 508f3d4:	dfc00517 	ldw	ra,20(sp)
 508f3d8:	dc400417 	ldw	r17,16(sp)
 508f3dc:	dc000317 	ldw	r16,12(sp)
 508f3e0:	dec00604 	addi	sp,sp,24
 508f3e4:	f800283a 	ret
 508f3e8:	000d883a 	mov	r6,zero
 508f3ec:	d9400084 	addi	r5,sp,2
 508f3f0:	103ee83a 	callr	r2
 508f3f4:	10ffffd8 	cmpnei	r3,r2,-1
 508f3f8:	183ff61e 	bne	r3,zero,508f3d4 <_wcrtomb_r+0x30>
 508f3fc:	00802284 	movi	r2,138
 508f400:	80000015 	stw	zero,0(r16)
 508f404:	88800015 	stw	r2,0(r17)
 508f408:	00bfffc4 	movi	r2,-1
 508f40c:	003ff106 	br	508f3d4 <_wcrtomb_r+0x30>

0508f410 <wcrtomb>:
 508f410:	defffa04 	addi	sp,sp,-24
 508f414:	00c142b4 	movhi	r3,1290
 508f418:	dc400415 	stw	r17,16(sp)
 508f41c:	dc000315 	stw	r16,12(sp)
 508f420:	1c609917 	ldw	r17,-32156(r3)
 508f424:	dfc00515 	stw	ra,20(sp)
 508f428:	00c14274 	movhi	r3,1289
 508f42c:	18dbf317 	ldw	r3,28620(r3)
 508f430:	3021883a 	mov	r16,r6
 508f434:	20000c26 	beq	r4,zero,508f468 <wcrtomb+0x58>
 508f438:	280d883a 	mov	r6,r5
 508f43c:	800f883a 	mov	r7,r16
 508f440:	200b883a 	mov	r5,r4
 508f444:	8809883a 	mov	r4,r17
 508f448:	183ee83a 	callr	r3
 508f44c:	10ffffd8 	cmpnei	r3,r2,-1
 508f450:	18000c26 	beq	r3,zero,508f484 <wcrtomb+0x74>
 508f454:	dfc00517 	ldw	ra,20(sp)
 508f458:	dc400417 	ldw	r17,16(sp)
 508f45c:	dc000317 	ldw	r16,12(sp)
 508f460:	dec00604 	addi	sp,sp,24
 508f464:	f800283a 	ret
 508f468:	300f883a 	mov	r7,r6
 508f46c:	d9400084 	addi	r5,sp,2
 508f470:	000d883a 	mov	r6,zero
 508f474:	8809883a 	mov	r4,r17
 508f478:	183ee83a 	callr	r3
 508f47c:	10ffffd8 	cmpnei	r3,r2,-1
 508f480:	183ff41e 	bne	r3,zero,508f454 <wcrtomb+0x44>
 508f484:	00802284 	movi	r2,138
 508f488:	80000015 	stw	zero,0(r16)
 508f48c:	88800015 	stw	r2,0(r17)
 508f490:	00bfffc4 	movi	r2,-1
 508f494:	003fef06 	br	508f454 <wcrtomb+0x44>

0508f498 <_wctomb_r>:
 508f498:	00814274 	movhi	r2,1289
 508f49c:	109bf317 	ldw	r2,28620(r2)
 508f4a0:	1000683a 	jmp	r2

0508f4a4 <__ascii_wctomb>:
 508f4a4:	28000926 	beq	r5,zero,508f4cc <__ascii_wctomb+0x28>
 508f4a8:	30804030 	cmpltui	r2,r6,256
 508f4ac:	10000326 	beq	r2,zero,508f4bc <__ascii_wctomb+0x18>
 508f4b0:	29800005 	stb	r6,0(r5)
 508f4b4:	00800044 	movi	r2,1
 508f4b8:	f800283a 	ret
 508f4bc:	00802284 	movi	r2,138
 508f4c0:	20800015 	stw	r2,0(r4)
 508f4c4:	00bfffc4 	movi	r2,-1
 508f4c8:	f800283a 	ret
 508f4cc:	0005883a 	mov	r2,zero
 508f4d0:	f800283a 	ret

0508f4d4 <abort>:
 508f4d4:	deffff04 	addi	sp,sp,-4
 508f4d8:	01000184 	movi	r4,6
 508f4dc:	dfc00015 	stw	ra,0(sp)
 508f4e0:	508f7600 	call	508f760 <raise>
 508f4e4:	01000044 	movi	r4,1
 508f4e8:	5092b6c0 	call	5092b6c <_exit>

0508f4ec <_init_signal_r>:
 508f4ec:	2080b717 	ldw	r2,732(r4)
 508f4f0:	10000226 	beq	r2,zero,508f4fc <_init_signal_r+0x10>
 508f4f4:	0005883a 	mov	r2,zero
 508f4f8:	f800283a 	ret
 508f4fc:	defffe04 	addi	sp,sp,-8
 508f500:	01402004 	movi	r5,128
 508f504:	dc000015 	stw	r16,0(sp)
 508f508:	dfc00115 	stw	ra,4(sp)
 508f50c:	2021883a 	mov	r16,r4
 508f510:	5089cf80 	call	5089cf8 <_malloc_r>
 508f514:	8080b715 	stw	r2,732(r16)
 508f518:	1009883a 	mov	r4,r2
 508f51c:	10000826 	beq	r2,zero,508f540 <_init_signal_r+0x54>
 508f520:	01802004 	movi	r6,128
 508f524:	000b883a 	mov	r5,zero
 508f528:	508a7d40 	call	508a7d4 <memset>
 508f52c:	0005883a 	mov	r2,zero
 508f530:	dfc00117 	ldw	ra,4(sp)
 508f534:	dc000017 	ldw	r16,0(sp)
 508f538:	dec00204 	addi	sp,sp,8
 508f53c:	f800283a 	ret
 508f540:	00bfffc4 	movi	r2,-1
 508f544:	003ffa06 	br	508f530 <_init_signal_r+0x44>

0508f548 <_signal_r>:
 508f548:	defffc04 	addi	sp,sp,-16
 508f54c:	dc400115 	stw	r17,4(sp)
 508f550:	dfc00315 	stw	ra,12(sp)
 508f554:	dc800215 	stw	r18,8(sp)
 508f558:	dc000015 	stw	r16,0(sp)
 508f55c:	28800830 	cmpltui	r2,r5,32
 508f560:	2023883a 	mov	r17,r4
 508f564:	10000e26 	beq	r2,zero,508f5a0 <_signal_r+0x58>
 508f568:	20c0b717 	ldw	r3,732(r4)
 508f56c:	2821883a 	mov	r16,r5
 508f570:	3025883a 	mov	r18,r6
 508f574:	18000e26 	beq	r3,zero,508f5b0 <_signal_r+0x68>
 508f578:	802090ba 	slli	r16,r16,2
 508f57c:	1c21883a 	add	r16,r3,r16
 508f580:	80800017 	ldw	r2,0(r16)
 508f584:	84800015 	stw	r18,0(r16)
 508f588:	dfc00317 	ldw	ra,12(sp)
 508f58c:	dc800217 	ldw	r18,8(sp)
 508f590:	dc400117 	ldw	r17,4(sp)
 508f594:	dc000017 	ldw	r16,0(sp)
 508f598:	dec00404 	addi	sp,sp,16
 508f59c:	f800283a 	ret
 508f5a0:	00800584 	movi	r2,22
 508f5a4:	20800015 	stw	r2,0(r4)
 508f5a8:	00bfffc4 	movi	r2,-1
 508f5ac:	003ff606 	br	508f588 <_signal_r+0x40>
 508f5b0:	01402004 	movi	r5,128
 508f5b4:	5089cf80 	call	5089cf8 <_malloc_r>
 508f5b8:	8880b715 	stw	r2,732(r17)
 508f5bc:	10000626 	beq	r2,zero,508f5d8 <_signal_r+0x90>
 508f5c0:	01802004 	movi	r6,128
 508f5c4:	000b883a 	mov	r5,zero
 508f5c8:	1009883a 	mov	r4,r2
 508f5cc:	508a7d40 	call	508a7d4 <memset>
 508f5d0:	1007883a 	mov	r3,r2
 508f5d4:	003fe806 	br	508f578 <_signal_r+0x30>
 508f5d8:	00bfffc4 	movi	r2,-1
 508f5dc:	003fea06 	br	508f588 <_signal_r+0x40>

0508f5e0 <_raise_r>:
 508f5e0:	28800830 	cmpltui	r2,r5,32
 508f5e4:	10002b26 	beq	r2,zero,508f694 <_raise_r+0xb4>
 508f5e8:	2080b717 	ldw	r2,732(r4)
 508f5ec:	defffd04 	addi	sp,sp,-12
 508f5f0:	dc000115 	stw	r16,4(sp)
 508f5f4:	dfc00215 	stw	ra,8(sp)
 508f5f8:	2821883a 	mov	r16,r5
 508f5fc:	10001026 	beq	r2,zero,508f640 <_raise_r+0x60>
 508f600:	280690ba 	slli	r3,r5,2
 508f604:	10c5883a 	add	r2,r2,r3
 508f608:	10c00017 	ldw	r3,0(r2)
 508f60c:	18000c26 	beq	r3,zero,508f640 <_raise_r+0x60>
 508f610:	19400060 	cmpeqi	r5,r3,1
 508f614:	28001a1e 	bne	r5,zero,508f680 <_raise_r+0xa0>
 508f618:	197fffd8 	cmpnei	r5,r3,-1
 508f61c:	28001126 	beq	r5,zero,508f664 <_raise_r+0x84>
 508f620:	10000015 	stw	zero,0(r2)
 508f624:	8009883a 	mov	r4,r16
 508f628:	183ee83a 	callr	r3
 508f62c:	0005883a 	mov	r2,zero
 508f630:	dfc00217 	ldw	ra,8(sp)
 508f634:	dc000117 	ldw	r16,4(sp)
 508f638:	dec00304 	addi	sp,sp,12
 508f63c:	f800283a 	ret
 508f640:	d9000015 	stw	r4,0(sp)
 508f644:	508fa380 	call	508fa38 <_getpid_r>
 508f648:	d9000017 	ldw	r4,0(sp)
 508f64c:	800d883a 	mov	r6,r16
 508f650:	100b883a 	mov	r5,r2
 508f654:	dfc00217 	ldw	ra,8(sp)
 508f658:	dc000117 	ldw	r16,4(sp)
 508f65c:	dec00304 	addi	sp,sp,12
 508f660:	508f9d81 	jmpi	508f9d8 <_kill_r>
 508f664:	00800584 	movi	r2,22
 508f668:	20800015 	stw	r2,0(r4)
 508f66c:	00800044 	movi	r2,1
 508f670:	dfc00217 	ldw	ra,8(sp)
 508f674:	dc000117 	ldw	r16,4(sp)
 508f678:	dec00304 	addi	sp,sp,12
 508f67c:	f800283a 	ret
 508f680:	0005883a 	mov	r2,zero
 508f684:	dfc00217 	ldw	ra,8(sp)
 508f688:	dc000117 	ldw	r16,4(sp)
 508f68c:	dec00304 	addi	sp,sp,12
 508f690:	f800283a 	ret
 508f694:	00800584 	movi	r2,22
 508f698:	20800015 	stw	r2,0(r4)
 508f69c:	00bfffc4 	movi	r2,-1
 508f6a0:	f800283a 	ret

0508f6a4 <__sigtramp_r>:
 508f6a4:	28800830 	cmpltui	r2,r5,32
 508f6a8:	10002b26 	beq	r2,zero,508f758 <__sigtramp_r+0xb4>
 508f6ac:	20c0b717 	ldw	r3,732(r4)
 508f6b0:	defffd04 	addi	sp,sp,-12
 508f6b4:	dc400115 	stw	r17,4(sp)
 508f6b8:	dc000015 	stw	r16,0(sp)
 508f6bc:	dfc00215 	stw	ra,8(sp)
 508f6c0:	2821883a 	mov	r16,r5
 508f6c4:	2023883a 	mov	r17,r4
 508f6c8:	18001326 	beq	r3,zero,508f718 <__sigtramp_r+0x74>
 508f6cc:	800490ba 	slli	r2,r16,2
 508f6d0:	1887883a 	add	r3,r3,r2
 508f6d4:	18800017 	ldw	r2,0(r3)
 508f6d8:	10000d26 	beq	r2,zero,508f710 <__sigtramp_r+0x6c>
 508f6dc:	113fffe0 	cmpeqi	r4,r2,-1
 508f6e0:	2000191e 	bne	r4,zero,508f748 <__sigtramp_r+0xa4>
 508f6e4:	11000060 	cmpeqi	r4,r2,1
 508f6e8:	2000151e 	bne	r4,zero,508f740 <__sigtramp_r+0x9c>
 508f6ec:	18000015 	stw	zero,0(r3)
 508f6f0:	8009883a 	mov	r4,r16
 508f6f4:	103ee83a 	callr	r2
 508f6f8:	0005883a 	mov	r2,zero
 508f6fc:	dfc00217 	ldw	ra,8(sp)
 508f700:	dc400117 	ldw	r17,4(sp)
 508f704:	dc000017 	ldw	r16,0(sp)
 508f708:	dec00304 	addi	sp,sp,12
 508f70c:	f800283a 	ret
 508f710:	00800044 	movi	r2,1
 508f714:	003ff906 	br	508f6fc <__sigtramp_r+0x58>
 508f718:	01402004 	movi	r5,128
 508f71c:	5089cf80 	call	5089cf8 <_malloc_r>
 508f720:	8880b715 	stw	r2,732(r17)
 508f724:	10000a26 	beq	r2,zero,508f750 <__sigtramp_r+0xac>
 508f728:	01802004 	movi	r6,128
 508f72c:	000b883a 	mov	r5,zero
 508f730:	1009883a 	mov	r4,r2
 508f734:	508a7d40 	call	508a7d4 <memset>
 508f738:	1007883a 	mov	r3,r2
 508f73c:	003fe306 	br	508f6cc <__sigtramp_r+0x28>
 508f740:	008000c4 	movi	r2,3
 508f744:	003fed06 	br	508f6fc <__sigtramp_r+0x58>
 508f748:	00800084 	movi	r2,2
 508f74c:	003feb06 	br	508f6fc <__sigtramp_r+0x58>
 508f750:	00bfffc4 	movi	r2,-1
 508f754:	003fe906 	br	508f6fc <__sigtramp_r+0x58>
 508f758:	00bfffc4 	movi	r2,-1
 508f75c:	f800283a 	ret

0508f760 <raise>:
 508f760:	defffd04 	addi	sp,sp,-12
 508f764:	dc400115 	stw	r17,4(sp)
 508f768:	00c142b4 	movhi	r3,1290
 508f76c:	dfc00215 	stw	ra,8(sp)
 508f770:	dc000015 	stw	r16,0(sp)
 508f774:	20800830 	cmpltui	r2,r4,32
 508f778:	1c609917 	ldw	r17,-32156(r3)
 508f77c:	10002326 	beq	r2,zero,508f80c <raise+0xac>
 508f780:	8880b717 	ldw	r2,732(r17)
 508f784:	2021883a 	mov	r16,r4
 508f788:	10001026 	beq	r2,zero,508f7cc <raise+0x6c>
 508f78c:	200690ba 	slli	r3,r4,2
 508f790:	10c5883a 	add	r2,r2,r3
 508f794:	10c00017 	ldw	r3,0(r2)
 508f798:	18000c26 	beq	r3,zero,508f7cc <raise+0x6c>
 508f79c:	19400060 	cmpeqi	r5,r3,1
 508f7a0:	2800181e 	bne	r5,zero,508f804 <raise+0xa4>
 508f7a4:	197fffd8 	cmpnei	r5,r3,-1
 508f7a8:	28001226 	beq	r5,zero,508f7f4 <raise+0x94>
 508f7ac:	10000015 	stw	zero,0(r2)
 508f7b0:	183ee83a 	callr	r3
 508f7b4:	0005883a 	mov	r2,zero
 508f7b8:	dfc00217 	ldw	ra,8(sp)
 508f7bc:	dc400117 	ldw	r17,4(sp)
 508f7c0:	dc000017 	ldw	r16,0(sp)
 508f7c4:	dec00304 	addi	sp,sp,12
 508f7c8:	f800283a 	ret
 508f7cc:	8809883a 	mov	r4,r17
 508f7d0:	508fa380 	call	508fa38 <_getpid_r>
 508f7d4:	800d883a 	mov	r6,r16
 508f7d8:	100b883a 	mov	r5,r2
 508f7dc:	8809883a 	mov	r4,r17
 508f7e0:	dfc00217 	ldw	ra,8(sp)
 508f7e4:	dc400117 	ldw	r17,4(sp)
 508f7e8:	dc000017 	ldw	r16,0(sp)
 508f7ec:	dec00304 	addi	sp,sp,12
 508f7f0:	508f9d81 	jmpi	508f9d8 <_kill_r>
 508f7f4:	00800584 	movi	r2,22
 508f7f8:	88800015 	stw	r2,0(r17)
 508f7fc:	00800044 	movi	r2,1
 508f800:	003fed06 	br	508f7b8 <raise+0x58>
 508f804:	0005883a 	mov	r2,zero
 508f808:	003feb06 	br	508f7b8 <raise+0x58>
 508f80c:	00800584 	movi	r2,22
 508f810:	88800015 	stw	r2,0(r17)
 508f814:	00bfffc4 	movi	r2,-1
 508f818:	003fe706 	br	508f7b8 <raise+0x58>

0508f81c <signal>:
 508f81c:	defffc04 	addi	sp,sp,-16
 508f820:	dc800215 	stw	r18,8(sp)
 508f824:	00c142b4 	movhi	r3,1290
 508f828:	dfc00315 	stw	ra,12(sp)
 508f82c:	dc400115 	stw	r17,4(sp)
 508f830:	dc000015 	stw	r16,0(sp)
 508f834:	20800830 	cmpltui	r2,r4,32
 508f838:	1ca09917 	ldw	r18,-32156(r3)
 508f83c:	10000e26 	beq	r2,zero,508f878 <signal+0x5c>
 508f840:	2021883a 	mov	r16,r4
 508f844:	9100b717 	ldw	r4,732(r18)
 508f848:	2823883a 	mov	r17,r5
 508f84c:	20000e26 	beq	r4,zero,508f888 <signal+0x6c>
 508f850:	802090ba 	slli	r16,r16,2
 508f854:	2421883a 	add	r16,r4,r16
 508f858:	80800017 	ldw	r2,0(r16)
 508f85c:	84400015 	stw	r17,0(r16)
 508f860:	dfc00317 	ldw	ra,12(sp)
 508f864:	dc800217 	ldw	r18,8(sp)
 508f868:	dc400117 	ldw	r17,4(sp)
 508f86c:	dc000017 	ldw	r16,0(sp)
 508f870:	dec00404 	addi	sp,sp,16
 508f874:	f800283a 	ret
 508f878:	00800584 	movi	r2,22
 508f87c:	90800015 	stw	r2,0(r18)
 508f880:	00bfffc4 	movi	r2,-1
 508f884:	003ff606 	br	508f860 <signal+0x44>
 508f888:	9009883a 	mov	r4,r18
 508f88c:	01402004 	movi	r5,128
 508f890:	5089cf80 	call	5089cf8 <_malloc_r>
 508f894:	9080b715 	stw	r2,732(r18)
 508f898:	1009883a 	mov	r4,r2
 508f89c:	10000526 	beq	r2,zero,508f8b4 <signal+0x98>
 508f8a0:	01802004 	movi	r6,128
 508f8a4:	000b883a 	mov	r5,zero
 508f8a8:	508a7d40 	call	508a7d4 <memset>
 508f8ac:	1009883a 	mov	r4,r2
 508f8b0:	003fe706 	br	508f850 <signal+0x34>
 508f8b4:	00bfffc4 	movi	r2,-1
 508f8b8:	003fe906 	br	508f860 <signal+0x44>

0508f8bc <_init_signal>:
 508f8bc:	defffe04 	addi	sp,sp,-8
 508f8c0:	008142b4 	movhi	r2,1290
 508f8c4:	dc000015 	stw	r16,0(sp)
 508f8c8:	14209917 	ldw	r16,-32156(r2)
 508f8cc:	dfc00115 	stw	ra,4(sp)
 508f8d0:	8080b717 	ldw	r2,732(r16)
 508f8d4:	10000526 	beq	r2,zero,508f8ec <_init_signal+0x30>
 508f8d8:	0005883a 	mov	r2,zero
 508f8dc:	dfc00117 	ldw	ra,4(sp)
 508f8e0:	dc000017 	ldw	r16,0(sp)
 508f8e4:	dec00204 	addi	sp,sp,8
 508f8e8:	f800283a 	ret
 508f8ec:	8009883a 	mov	r4,r16
 508f8f0:	01402004 	movi	r5,128
 508f8f4:	5089cf80 	call	5089cf8 <_malloc_r>
 508f8f8:	8080b715 	stw	r2,732(r16)
 508f8fc:	1009883a 	mov	r4,r2
 508f900:	10000426 	beq	r2,zero,508f914 <_init_signal+0x58>
 508f904:	01802004 	movi	r6,128
 508f908:	000b883a 	mov	r5,zero
 508f90c:	508a7d40 	call	508a7d4 <memset>
 508f910:	003ff106 	br	508f8d8 <_init_signal+0x1c>
 508f914:	00bfffc4 	movi	r2,-1
 508f918:	003ff006 	br	508f8dc <_init_signal+0x20>

0508f91c <__sigtramp>:
 508f91c:	defffd04 	addi	sp,sp,-12
 508f920:	dc400115 	stw	r17,4(sp)
 508f924:	00c142b4 	movhi	r3,1290
 508f928:	dfc00215 	stw	ra,8(sp)
 508f92c:	dc000015 	stw	r16,0(sp)
 508f930:	20800830 	cmpltui	r2,r4,32
 508f934:	1c609917 	ldw	r17,-32156(r3)
 508f938:	10002526 	beq	r2,zero,508f9d0 <__sigtramp+0xb4>
 508f93c:	88c0b717 	ldw	r3,732(r17)
 508f940:	2021883a 	mov	r16,r4
 508f944:	18001326 	beq	r3,zero,508f994 <__sigtramp+0x78>
 508f948:	800890ba 	slli	r4,r16,2
 508f94c:	1907883a 	add	r3,r3,r4
 508f950:	18800017 	ldw	r2,0(r3)
 508f954:	10000d26 	beq	r2,zero,508f98c <__sigtramp+0x70>
 508f958:	113fffe0 	cmpeqi	r4,r2,-1
 508f95c:	20001a1e 	bne	r4,zero,508f9c8 <__sigtramp+0xac>
 508f960:	11000060 	cmpeqi	r4,r2,1
 508f964:	2000161e 	bne	r4,zero,508f9c0 <__sigtramp+0xa4>
 508f968:	18000015 	stw	zero,0(r3)
 508f96c:	8009883a 	mov	r4,r16
 508f970:	103ee83a 	callr	r2
 508f974:	0005883a 	mov	r2,zero
 508f978:	dfc00217 	ldw	ra,8(sp)
 508f97c:	dc400117 	ldw	r17,4(sp)
 508f980:	dc000017 	ldw	r16,0(sp)
 508f984:	dec00304 	addi	sp,sp,12
 508f988:	f800283a 	ret
 508f98c:	00800044 	movi	r2,1
 508f990:	003ff906 	br	508f978 <__sigtramp+0x5c>
 508f994:	01402004 	movi	r5,128
 508f998:	8809883a 	mov	r4,r17
 508f99c:	5089cf80 	call	5089cf8 <_malloc_r>
 508f9a0:	8880b715 	stw	r2,732(r17)
 508f9a4:	10000a26 	beq	r2,zero,508f9d0 <__sigtramp+0xb4>
 508f9a8:	01802004 	movi	r6,128
 508f9ac:	000b883a 	mov	r5,zero
 508f9b0:	1009883a 	mov	r4,r2
 508f9b4:	508a7d40 	call	508a7d4 <memset>
 508f9b8:	1007883a 	mov	r3,r2
 508f9bc:	003fe206 	br	508f948 <__sigtramp+0x2c>
 508f9c0:	008000c4 	movi	r2,3
 508f9c4:	003fec06 	br	508f978 <__sigtramp+0x5c>
 508f9c8:	00800084 	movi	r2,2
 508f9cc:	003fea06 	br	508f978 <__sigtramp+0x5c>
 508f9d0:	00bfffc4 	movi	r2,-1
 508f9d4:	003fe806 	br	508f978 <__sigtramp+0x5c>

0508f9d8 <_kill_r>:
 508f9d8:	2807883a 	mov	r3,r5
 508f9dc:	defffe04 	addi	sp,sp,-8
 508f9e0:	dc000015 	stw	r16,0(sp)
 508f9e4:	008142b4 	movhi	r2,1290
 508f9e8:	300b883a 	mov	r5,r6
 508f9ec:	2021883a 	mov	r16,r4
 508f9f0:	1809883a 	mov	r4,r3
 508f9f4:	dfc00115 	stw	ra,4(sp)
 508f9f8:	1027a615 	stw	zero,-24936(r2)
 508f9fc:	5092f4c0 	call	5092f4c <kill>
 508fa00:	10ffffd8 	cmpnei	r3,r2,-1
 508fa04:	18000426 	beq	r3,zero,508fa18 <_kill_r+0x40>
 508fa08:	dfc00117 	ldw	ra,4(sp)
 508fa0c:	dc000017 	ldw	r16,0(sp)
 508fa10:	dec00204 	addi	sp,sp,8
 508fa14:	f800283a 	ret
 508fa18:	00c142b4 	movhi	r3,1290
 508fa1c:	18e7a617 	ldw	r3,-24936(r3)
 508fa20:	183ff926 	beq	r3,zero,508fa08 <_kill_r+0x30>
 508fa24:	80c00015 	stw	r3,0(r16)
 508fa28:	dfc00117 	ldw	ra,4(sp)
 508fa2c:	dc000017 	ldw	r16,0(sp)
 508fa30:	dec00204 	addi	sp,sp,8
 508fa34:	f800283a 	ret

0508fa38 <_getpid_r>:
 508fa38:	5092c901 	jmpi	5092c90 <getpid>

0508fa3c <__udivdi3>:
 508fa3c:	defff504 	addi	sp,sp,-44
 508fa40:	dcc00415 	stw	r19,16(sp)
 508fa44:	dc000115 	stw	r16,4(sp)
 508fa48:	dfc00a15 	stw	ra,40(sp)
 508fa4c:	df000915 	stw	fp,36(sp)
 508fa50:	ddc00815 	stw	r23,32(sp)
 508fa54:	dd800715 	stw	r22,28(sp)
 508fa58:	dd400615 	stw	r21,24(sp)
 508fa5c:	dd000515 	stw	r20,20(sp)
 508fa60:	dc800315 	stw	r18,12(sp)
 508fa64:	dc400215 	stw	r17,8(sp)
 508fa68:	2027883a 	mov	r19,r4
 508fa6c:	2821883a 	mov	r16,r5
 508fa70:	3800411e 	bne	r7,zero,508fb78 <__udivdi3+0x13c>
 508fa74:	3829883a 	mov	r20,r7
 508fa78:	3023883a 	mov	r17,r6
 508fa7c:	2025883a 	mov	r18,r4
 508fa80:	29805d2e 	bgeu	r5,r6,508fbf8 <__udivdi3+0x1bc>
 508fa84:	00bfffd4 	movui	r2,65535
 508fa88:	282b883a 	mov	r21,r5
 508fa8c:	1180a02e 	bgeu	r2,r6,508fd10 <__udivdi3+0x2d4>
 508fa90:	00804034 	movhi	r2,256
 508fa94:	30813636 	bltu	r6,r2,508ff70 <__udivdi3+0x534>
 508fa98:	3006d63a 	srli	r3,r6,24
 508fa9c:	05000604 	movi	r20,24
 508faa0:	00814274 	movhi	r2,1289
 508faa4:	1885883a 	add	r2,r3,r2
 508faa8:	10996103 	ldbu	r2,25988(r2)
 508faac:	00c00804 	movi	r3,32
 508fab0:	1505883a 	add	r2,r2,r20
 508fab4:	1889c83a 	sub	r4,r3,r2
 508fab8:	18800526 	beq	r3,r2,508fad0 <__udivdi3+0x94>
 508fabc:	8120983a 	sll	r16,r16,r4
 508fac0:	9884d83a 	srl	r2,r19,r2
 508fac4:	3122983a 	sll	r17,r6,r4
 508fac8:	9924983a 	sll	r18,r19,r4
 508facc:	142ab03a 	or	r21,r2,r16
 508fad0:	882cd43a 	srli	r22,r17,16
 508fad4:	a809883a 	mov	r4,r21
 508fad8:	8d3fffcc 	andi	r20,r17,65535
 508fadc:	b00b883a 	mov	r5,r22
 508fae0:	50828640 	call	5082864 <__umodsi3>
 508fae4:	a809883a 	mov	r4,r21
 508fae8:	b00b883a 	mov	r5,r22
 508faec:	1027883a 	mov	r19,r2
 508faf0:	50828000 	call	5082800 <__udivsi3>
 508faf4:	9826943a 	slli	r19,r19,16
 508faf8:	9008d43a 	srli	r4,r18,16
 508fafc:	1021883a 	mov	r16,r2
 508fb00:	a085383a 	mul	r2,r20,r2
 508fb04:	9908b03a 	or	r4,r19,r4
 508fb08:	2080052e 	bgeu	r4,r2,508fb20 <__udivdi3+0xe4>
 508fb0c:	2449883a 	add	r4,r4,r17
 508fb10:	80ffffc4 	addi	r3,r16,-1
 508fb14:	24400136 	bltu	r4,r17,508fb1c <__udivdi3+0xe0>
 508fb18:	20812636 	bltu	r4,r2,508ffb4 <__udivdi3+0x578>
 508fb1c:	1821883a 	mov	r16,r3
 508fb20:	20a7c83a 	sub	r19,r4,r2
 508fb24:	9809883a 	mov	r4,r19
 508fb28:	b00b883a 	mov	r5,r22
 508fb2c:	50828640 	call	5082864 <__umodsi3>
 508fb30:	9809883a 	mov	r4,r19
 508fb34:	b00b883a 	mov	r5,r22
 508fb38:	1027883a 	mov	r19,r2
 508fb3c:	9826943a 	slli	r19,r19,16
 508fb40:	50828000 	call	5082800 <__udivsi3>
 508fb44:	a0a9383a 	mul	r20,r20,r2
 508fb48:	94bfffcc 	andi	r18,r18,65535
 508fb4c:	9ca4b03a 	or	r18,r19,r18
 508fb50:	9500052e 	bgeu	r18,r20,508fb68 <__udivdi3+0x12c>
 508fb54:	8ca5883a 	add	r18,r17,r18
 508fb58:	10ffffc4 	addi	r3,r2,-1
 508fb5c:	94400136 	bltu	r18,r17,508fb64 <__udivdi3+0x128>
 508fb60:	95011236 	bltu	r18,r20,508ffac <__udivdi3+0x570>
 508fb64:	1805883a 	mov	r2,r3
 508fb68:	8020943a 	slli	r16,r16,16
 508fb6c:	0007883a 	mov	r3,zero
 508fb70:	8084b03a 	or	r2,r16,r2
 508fb74:	00000306 	br	508fb84 <__udivdi3+0x148>
 508fb78:	29c00e2e 	bgeu	r5,r7,508fbb4 <__udivdi3+0x178>
 508fb7c:	0007883a 	mov	r3,zero
 508fb80:	0005883a 	mov	r2,zero
 508fb84:	dfc00a17 	ldw	ra,40(sp)
 508fb88:	df000917 	ldw	fp,36(sp)
 508fb8c:	ddc00817 	ldw	r23,32(sp)
 508fb90:	dd800717 	ldw	r22,28(sp)
 508fb94:	dd400617 	ldw	r21,24(sp)
 508fb98:	dd000517 	ldw	r20,20(sp)
 508fb9c:	dcc00417 	ldw	r19,16(sp)
 508fba0:	dc800317 	ldw	r18,12(sp)
 508fba4:	dc400217 	ldw	r17,8(sp)
 508fba8:	dc000117 	ldw	r16,4(sp)
 508fbac:	dec00b04 	addi	sp,sp,44
 508fbb0:	f800283a 	ret
 508fbb4:	00bfffd4 	movui	r2,65535
 508fbb8:	11c05a2e 	bgeu	r2,r7,508fd24 <__udivdi3+0x2e8>
 508fbbc:	00804034 	movhi	r2,256
 508fbc0:	3880dd36 	bltu	r7,r2,508ff38 <__udivdi3+0x4fc>
 508fbc4:	3804d63a 	srli	r2,r7,24
 508fbc8:	01000604 	movi	r4,24
 508fbcc:	00c14274 	movhi	r3,1289
 508fbd0:	10c7883a 	add	r3,r2,r3
 508fbd4:	18996103 	ldbu	r2,25988(r3)
 508fbd8:	00c00804 	movi	r3,32
 508fbdc:	1105883a 	add	r2,r2,r4
 508fbe0:	18abc83a 	sub	r21,r3,r2
 508fbe4:	1880861e 	bne	r3,r2,508fe00 <__udivdi3+0x3c4>
 508fbe8:	3c00d836 	bltu	r7,r16,508ff4c <__udivdi3+0x510>
 508fbec:	9985403a 	cmpgeu	r2,r19,r6
 508fbf0:	0007883a 	mov	r3,zero
 508fbf4:	003fe306 	br	508fb84 <__udivdi3+0x148>
 508fbf8:	3000041e 	bne	r6,zero,508fc0c <__udivdi3+0x1d0>
 508fbfc:	000b883a 	mov	r5,zero
 508fc00:	01000044 	movi	r4,1
 508fc04:	50828000 	call	5082800 <__udivsi3>
 508fc08:	1023883a 	mov	r17,r2
 508fc0c:	00bfffd4 	movui	r2,65535
 508fc10:	14403a2e 	bgeu	r2,r17,508fcfc <__udivdi3+0x2c0>
 508fc14:	00804034 	movhi	r2,256
 508fc18:	8880d236 	bltu	r17,r2,508ff64 <__udivdi3+0x528>
 508fc1c:	8806d63a 	srli	r3,r17,24
 508fc20:	05000604 	movi	r20,24
 508fc24:	00814274 	movhi	r2,1289
 508fc28:	1885883a 	add	r2,r3,r2
 508fc2c:	10996103 	ldbu	r2,25988(r2)
 508fc30:	00c00804 	movi	r3,32
 508fc34:	1505883a 	add	r2,r2,r20
 508fc38:	188dc83a 	sub	r6,r3,r2
 508fc3c:	18803e1e 	bne	r3,r2,508fd38 <__udivdi3+0x2fc>
 508fc40:	882ad43a 	srli	r21,r17,16
 508fc44:	8461c83a 	sub	r16,r16,r17
 508fc48:	8cffffcc 	andi	r19,r17,65535
 508fc4c:	00c00044 	movi	r3,1
 508fc50:	8009883a 	mov	r4,r16
 508fc54:	a80b883a 	mov	r5,r21
 508fc58:	d8c00015 	stw	r3,0(sp)
 508fc5c:	50828640 	call	5082864 <__umodsi3>
 508fc60:	8009883a 	mov	r4,r16
 508fc64:	a80b883a 	mov	r5,r21
 508fc68:	1021883a 	mov	r16,r2
 508fc6c:	50828000 	call	5082800 <__udivsi3>
 508fc70:	8020943a 	slli	r16,r16,16
 508fc74:	9008d43a 	srli	r4,r18,16
 508fc78:	1029883a 	mov	r20,r2
 508fc7c:	14c5383a 	mul	r2,r2,r19
 508fc80:	8108b03a 	or	r4,r16,r4
 508fc84:	d8c00017 	ldw	r3,0(sp)
 508fc88:	2080052e 	bgeu	r4,r2,508fca0 <__udivdi3+0x264>
 508fc8c:	2449883a 	add	r4,r4,r17
 508fc90:	a17fffc4 	addi	r5,r20,-1
 508fc94:	24400136 	bltu	r4,r17,508fc9c <__udivdi3+0x260>
 508fc98:	2080c936 	bltu	r4,r2,508ffc0 <__udivdi3+0x584>
 508fc9c:	2829883a 	mov	r20,r5
 508fca0:	20a1c83a 	sub	r16,r4,r2
 508fca4:	8009883a 	mov	r4,r16
 508fca8:	a80b883a 	mov	r5,r21
 508fcac:	d8c00015 	stw	r3,0(sp)
 508fcb0:	50828640 	call	5082864 <__umodsi3>
 508fcb4:	8009883a 	mov	r4,r16
 508fcb8:	a80b883a 	mov	r5,r21
 508fcbc:	1021883a 	mov	r16,r2
 508fcc0:	8020943a 	slli	r16,r16,16
 508fcc4:	50828000 	call	5082800 <__udivsi3>
 508fcc8:	14e7383a 	mul	r19,r2,r19
 508fccc:	94bfffcc 	andi	r18,r18,65535
 508fcd0:	84a4b03a 	or	r18,r16,r18
 508fcd4:	d8c00017 	ldw	r3,0(sp)
 508fcd8:	94c0052e 	bgeu	r18,r19,508fcf0 <__udivdi3+0x2b4>
 508fcdc:	8ca5883a 	add	r18,r17,r18
 508fce0:	113fffc4 	addi	r4,r2,-1
 508fce4:	94400136 	bltu	r18,r17,508fcec <__udivdi3+0x2b0>
 508fce8:	94c0ae36 	bltu	r18,r19,508ffa4 <__udivdi3+0x568>
 508fcec:	2005883a 	mov	r2,r4
 508fcf0:	a00c943a 	slli	r6,r20,16
 508fcf4:	3084b03a 	or	r2,r6,r2
 508fcf8:	003fa206 	br	508fb84 <__udivdi3+0x148>
 508fcfc:	88804030 	cmpltui	r2,r17,256
 508fd00:	10009e1e 	bne	r2,zero,508ff7c <__udivdi3+0x540>
 508fd04:	8806d23a 	srli	r3,r17,8
 508fd08:	05000204 	movi	r20,8
 508fd0c:	003fc506 	br	508fc24 <__udivdi3+0x1e8>
 508fd10:	30804030 	cmpltui	r2,r6,256
 508fd14:	10008b1e 	bne	r2,zero,508ff44 <__udivdi3+0x508>
 508fd18:	3006d23a 	srli	r3,r6,8
 508fd1c:	05000204 	movi	r20,8
 508fd20:	003f5f06 	br	508faa0 <__udivdi3+0x64>
 508fd24:	38804030 	cmpltui	r2,r7,256
 508fd28:	10008b1e 	bne	r2,zero,508ff58 <__udivdi3+0x51c>
 508fd2c:	3804d23a 	srli	r2,r7,8
 508fd30:	01000204 	movi	r4,8
 508fd34:	003fa506 	br	508fbcc <__udivdi3+0x190>
 508fd38:	89a2983a 	sll	r17,r17,r6
 508fd3c:	80acd83a 	srl	r22,r16,r2
 508fd40:	81a0983a 	sll	r16,r16,r6
 508fd44:	882ad43a 	srli	r21,r17,16
 508fd48:	9884d83a 	srl	r2,r19,r2
 508fd4c:	b009883a 	mov	r4,r22
 508fd50:	a80b883a 	mov	r5,r21
 508fd54:	99a4983a 	sll	r18,r19,r6
 508fd58:	1428b03a 	or	r20,r2,r16
 508fd5c:	50828640 	call	5082864 <__umodsi3>
 508fd60:	b009883a 	mov	r4,r22
 508fd64:	a80b883a 	mov	r5,r21
 508fd68:	1021883a 	mov	r16,r2
 508fd6c:	50828000 	call	5082800 <__udivsi3>
 508fd70:	8008943a 	slli	r4,r16,16
 508fd74:	a00ad43a 	srli	r5,r20,16
 508fd78:	8cffffcc 	andi	r19,r17,65535
 508fd7c:	98a1383a 	mul	r16,r19,r2
 508fd80:	2148b03a 	or	r4,r4,r5
 508fd84:	102d883a 	mov	r22,r2
 508fd88:	2400062e 	bgeu	r4,r16,508fda4 <__udivdi3+0x368>
 508fd8c:	2449883a 	add	r4,r4,r17
 508fd90:	10bfffc4 	addi	r2,r2,-1
 508fd94:	24408136 	bltu	r4,r17,508ff9c <__udivdi3+0x560>
 508fd98:	2400802e 	bgeu	r4,r16,508ff9c <__udivdi3+0x560>
 508fd9c:	b5bfff84 	addi	r22,r22,-2
 508fda0:	2449883a 	add	r4,r4,r17
 508fda4:	2421c83a 	sub	r16,r4,r16
 508fda8:	8009883a 	mov	r4,r16
 508fdac:	a80b883a 	mov	r5,r21
 508fdb0:	50828640 	call	5082864 <__umodsi3>
 508fdb4:	8009883a 	mov	r4,r16
 508fdb8:	a80b883a 	mov	r5,r21
 508fdbc:	1021883a 	mov	r16,r2
 508fdc0:	8020943a 	slli	r16,r16,16
 508fdc4:	50828000 	call	5082800 <__udivsi3>
 508fdc8:	9889383a 	mul	r4,r19,r2
 508fdcc:	a53fffcc 	andi	r20,r20,65535
 508fdd0:	8520b03a 	or	r16,r16,r20
 508fdd4:	8100062e 	bgeu	r16,r4,508fdf0 <__udivdi3+0x3b4>
 508fdd8:	8461883a 	add	r16,r16,r17
 508fddc:	10ffffc4 	addi	r3,r2,-1
 508fde0:	84406a36 	bltu	r16,r17,508ff8c <__udivdi3+0x550>
 508fde4:	8100692e 	bgeu	r16,r4,508ff8c <__udivdi3+0x550>
 508fde8:	10bfff84 	addi	r2,r2,-2
 508fdec:	8461883a 	add	r16,r16,r17
 508fdf0:	b006943a 	slli	r3,r22,16
 508fdf4:	8121c83a 	sub	r16,r16,r4
 508fdf8:	1886b03a 	or	r3,r3,r2
 508fdfc:	003f9406 	br	508fc50 <__udivdi3+0x214>
 508fe00:	30acd83a 	srl	r22,r6,r2
 508fe04:	3d4e983a 	sll	r7,r7,r21
 508fe08:	80a4d83a 	srl	r18,r16,r2
 508fe0c:	8546983a 	sll	r3,r16,r21
 508fe10:	b1ecb03a 	or	r22,r22,r7
 508fe14:	b038d43a 	srli	fp,r22,16
 508fe18:	9884d83a 	srl	r2,r19,r2
 508fe1c:	9009883a 	mov	r4,r18
 508fe20:	e00b883a 	mov	r5,fp
 508fe24:	10e2b03a 	or	r17,r2,r3
 508fe28:	3568983a 	sll	r20,r6,r21
 508fe2c:	50828640 	call	5082864 <__umodsi3>
 508fe30:	9009883a 	mov	r4,r18
 508fe34:	e00b883a 	mov	r5,fp
 508fe38:	1025883a 	mov	r18,r2
 508fe3c:	50828000 	call	5082800 <__udivsi3>
 508fe40:	9008943a 	slli	r4,r18,16
 508fe44:	8806d43a 	srli	r3,r17,16
 508fe48:	b5ffffcc 	andi	r23,r22,65535
 508fe4c:	b8a5383a 	mul	r18,r23,r2
 508fe50:	20c8b03a 	or	r4,r4,r3
 508fe54:	1021883a 	mov	r16,r2
 508fe58:	2480062e 	bgeu	r4,r18,508fe74 <__udivdi3+0x438>
 508fe5c:	2589883a 	add	r4,r4,r22
 508fe60:	10bfffc4 	addi	r2,r2,-1
 508fe64:	25804b36 	bltu	r4,r22,508ff94 <__udivdi3+0x558>
 508fe68:	24804a2e 	bgeu	r4,r18,508ff94 <__udivdi3+0x558>
 508fe6c:	843fff84 	addi	r16,r16,-2
 508fe70:	2589883a 	add	r4,r4,r22
 508fe74:	24a5c83a 	sub	r18,r4,r18
 508fe78:	9009883a 	mov	r4,r18
 508fe7c:	e00b883a 	mov	r5,fp
 508fe80:	50828640 	call	5082864 <__umodsi3>
 508fe84:	9009883a 	mov	r4,r18
 508fe88:	e00b883a 	mov	r5,fp
 508fe8c:	1025883a 	mov	r18,r2
 508fe90:	9024943a 	slli	r18,r18,16
 508fe94:	50828000 	call	5082800 <__udivsi3>
 508fe98:	b8af383a 	mul	r23,r23,r2
 508fe9c:	8c7fffcc 	andi	r17,r17,65535
 508fea0:	9462b03a 	or	r17,r18,r17
 508fea4:	8dc0062e 	bgeu	r17,r23,508fec0 <__udivdi3+0x484>
 508fea8:	8da3883a 	add	r17,r17,r22
 508feac:	10ffffc4 	addi	r3,r2,-1
 508feb0:	8d803436 	bltu	r17,r22,508ff84 <__udivdi3+0x548>
 508feb4:	8dc0332e 	bgeu	r17,r23,508ff84 <__udivdi3+0x548>
 508feb8:	10bfff84 	addi	r2,r2,-2
 508febc:	8da3883a 	add	r17,r17,r22
 508fec0:	8020943a 	slli	r16,r16,16
 508fec4:	10ffffcc 	andi	r3,r2,65535
 508fec8:	a00ed43a 	srli	r7,r20,16
 508fecc:	8084b03a 	or	r2,r16,r2
 508fed0:	1008d43a 	srli	r4,r2,16
 508fed4:	a1bfffcc 	andi	r6,r20,65535
 508fed8:	1991383a 	mul	r8,r3,r6
 508fedc:	218d383a 	mul	r6,r4,r6
 508fee0:	19c7383a 	mul	r3,r3,r7
 508fee4:	400ad43a 	srli	r5,r8,16
 508fee8:	21c9383a 	mul	r4,r4,r7
 508feec:	1987883a 	add	r3,r3,r6
 508fef0:	28c7883a 	add	r3,r5,r3
 508fef4:	8de3c83a 	sub	r17,r17,r23
 508fef8:	1980022e 	bgeu	r3,r6,508ff04 <__udivdi3+0x4c8>
 508fefc:	01400074 	movhi	r5,1
 508ff00:	2149883a 	add	r4,r4,r5
 508ff04:	180ad43a 	srli	r5,r3,16
 508ff08:	2909883a 	add	r4,r5,r4
 508ff0c:	89000836 	bltu	r17,r4,508ff30 <__udivdi3+0x4f4>
 508ff10:	89000226 	beq	r17,r4,508ff1c <__udivdi3+0x4e0>
 508ff14:	0007883a 	mov	r3,zero
 508ff18:	003f1a06 	br	508fb84 <__udivdi3+0x148>
 508ff1c:	1806943a 	slli	r3,r3,16
 508ff20:	9d4c983a 	sll	r6,r19,r21
 508ff24:	423fffcc 	andi	r8,r8,65535
 508ff28:	1a07883a 	add	r3,r3,r8
 508ff2c:	30fff92e 	bgeu	r6,r3,508ff14 <__udivdi3+0x4d8>
 508ff30:	10bfffc4 	addi	r2,r2,-1
 508ff34:	003ff706 	br	508ff14 <__udivdi3+0x4d8>
 508ff38:	3804d43a 	srli	r2,r7,16
 508ff3c:	01000404 	movi	r4,16
 508ff40:	003f2206 	br	508fbcc <__udivdi3+0x190>
 508ff44:	3007883a 	mov	r3,r6
 508ff48:	003ed506 	br	508faa0 <__udivdi3+0x64>
 508ff4c:	0007883a 	mov	r3,zero
 508ff50:	00800044 	movi	r2,1
 508ff54:	003f0b06 	br	508fb84 <__udivdi3+0x148>
 508ff58:	3805883a 	mov	r2,r7
 508ff5c:	0009883a 	mov	r4,zero
 508ff60:	003f1a06 	br	508fbcc <__udivdi3+0x190>
 508ff64:	8806d43a 	srli	r3,r17,16
 508ff68:	05000404 	movi	r20,16
 508ff6c:	003f2d06 	br	508fc24 <__udivdi3+0x1e8>
 508ff70:	3006d43a 	srli	r3,r6,16
 508ff74:	05000404 	movi	r20,16
 508ff78:	003ec906 	br	508faa0 <__udivdi3+0x64>
 508ff7c:	8807883a 	mov	r3,r17
 508ff80:	003f2806 	br	508fc24 <__udivdi3+0x1e8>
 508ff84:	1805883a 	mov	r2,r3
 508ff88:	003fcd06 	br	508fec0 <__udivdi3+0x484>
 508ff8c:	1805883a 	mov	r2,r3
 508ff90:	003f9706 	br	508fdf0 <__udivdi3+0x3b4>
 508ff94:	1021883a 	mov	r16,r2
 508ff98:	003fb606 	br	508fe74 <__udivdi3+0x438>
 508ff9c:	102d883a 	mov	r22,r2
 508ffa0:	003f8006 	br	508fda4 <__udivdi3+0x368>
 508ffa4:	10bfff84 	addi	r2,r2,-2
 508ffa8:	003f5106 	br	508fcf0 <__udivdi3+0x2b4>
 508ffac:	10bfff84 	addi	r2,r2,-2
 508ffb0:	003eed06 	br	508fb68 <__udivdi3+0x12c>
 508ffb4:	843fff84 	addi	r16,r16,-2
 508ffb8:	2449883a 	add	r4,r4,r17
 508ffbc:	003ed806 	br	508fb20 <__udivdi3+0xe4>
 508ffc0:	a53fff84 	addi	r20,r20,-2
 508ffc4:	2449883a 	add	r4,r4,r17
 508ffc8:	003f3506 	br	508fca0 <__udivdi3+0x264>

0508ffcc <__umoddi3>:
 508ffcc:	defff504 	addi	sp,sp,-44
 508ffd0:	dc400215 	stw	r17,8(sp)
 508ffd4:	dc000115 	stw	r16,4(sp)
 508ffd8:	dfc00a15 	stw	ra,40(sp)
 508ffdc:	df000915 	stw	fp,36(sp)
 508ffe0:	ddc00815 	stw	r23,32(sp)
 508ffe4:	dd800715 	stw	r22,28(sp)
 508ffe8:	dd400615 	stw	r21,24(sp)
 508ffec:	dd000515 	stw	r20,20(sp)
 508fff0:	dcc00415 	stw	r19,16(sp)
 508fff4:	dc800315 	stw	r18,12(sp)
 508fff8:	2823883a 	mov	r17,r5
 508fffc:	2021883a 	mov	r16,r4
 5090000:	3800371e 	bne	r7,zero,50900e0 <__umoddi3+0x114>
 5090004:	3825883a 	mov	r18,r7
 5090008:	3029883a 	mov	r20,r6
 509000c:	2027883a 	mov	r19,r4
 5090010:	2980572e 	bgeu	r5,r6,5090170 <__umoddi3+0x1a4>
 5090014:	00bfffd4 	movui	r2,65535
 5090018:	282b883a 	mov	r21,r5
 509001c:	1180922e 	bgeu	r2,r6,5090268 <__umoddi3+0x29c>
 5090020:	00804034 	movhi	r2,256
 5090024:	30812036 	bltu	r6,r2,50904a8 <__umoddi3+0x4dc>
 5090028:	3006d63a 	srli	r3,r6,24
 509002c:	04800604 	movi	r18,24
 5090030:	00814274 	movhi	r2,1289
 5090034:	1885883a 	add	r2,r3,r2
 5090038:	10996103 	ldbu	r2,25988(r2)
 509003c:	00c00804 	movi	r3,32
 5090040:	1485883a 	add	r2,r2,r18
 5090044:	18a5c83a 	sub	r18,r3,r2
 5090048:	18800526 	beq	r3,r2,5090060 <__umoddi3+0x94>
 509004c:	8ca2983a 	sll	r17,r17,r18
 5090050:	8084d83a 	srl	r2,r16,r2
 5090054:	34a8983a 	sll	r20,r6,r18
 5090058:	84a6983a 	sll	r19,r16,r18
 509005c:	146ab03a 	or	r21,r2,r17
 5090060:	a02cd43a 	srli	r22,r20,16
 5090064:	a809883a 	mov	r4,r21
 5090068:	a43fffcc 	andi	r16,r20,65535
 509006c:	b00b883a 	mov	r5,r22
 5090070:	50828640 	call	5082864 <__umodsi3>
 5090074:	a809883a 	mov	r4,r21
 5090078:	b00b883a 	mov	r5,r22
 509007c:	1023883a 	mov	r17,r2
 5090080:	50828000 	call	5082800 <__udivsi3>
 5090084:	8822943a 	slli	r17,r17,16
 5090088:	9808d43a 	srli	r4,r19,16
 509008c:	80ab383a 	mul	r21,r16,r2
 5090090:	8908b03a 	or	r4,r17,r4
 5090094:	2540042e 	bgeu	r4,r21,50900a8 <__umoddi3+0xdc>
 5090098:	2509883a 	add	r4,r4,r20
 509009c:	25000236 	bltu	r4,r20,50900a8 <__umoddi3+0xdc>
 50900a0:	2540012e 	bgeu	r4,r21,50900a8 <__umoddi3+0xdc>
 50900a4:	2509883a 	add	r4,r4,r20
 50900a8:	256bc83a 	sub	r21,r4,r21
 50900ac:	b00b883a 	mov	r5,r22
 50900b0:	a809883a 	mov	r4,r21
 50900b4:	50828640 	call	5082864 <__umodsi3>
 50900b8:	1023883a 	mov	r17,r2
 50900bc:	b00b883a 	mov	r5,r22
 50900c0:	a809883a 	mov	r4,r21
 50900c4:	50828000 	call	5082800 <__udivsi3>
 50900c8:	8822943a 	slli	r17,r17,16
 50900cc:	8085383a 	mul	r2,r16,r2
 50900d0:	98ffffcc 	andi	r3,r19,65535
 50900d4:	88c6b03a 	or	r3,r17,r3
 50900d8:	18805a2e 	bgeu	r3,r2,5090244 <__umoddi3+0x278>
 50900dc:	00005506 	br	5090234 <__umoddi3+0x268>
 50900e0:	2005883a 	mov	r2,r4
 50900e4:	29c00d2e 	bgeu	r5,r7,509011c <__umoddi3+0x150>
 50900e8:	2807883a 	mov	r3,r5
 50900ec:	dfc00a17 	ldw	ra,40(sp)
 50900f0:	df000917 	ldw	fp,36(sp)
 50900f4:	ddc00817 	ldw	r23,32(sp)
 50900f8:	dd800717 	ldw	r22,28(sp)
 50900fc:	dd400617 	ldw	r21,24(sp)
 5090100:	dd000517 	ldw	r20,20(sp)
 5090104:	dcc00417 	ldw	r19,16(sp)
 5090108:	dc800317 	ldw	r18,12(sp)
 509010c:	dc400217 	ldw	r17,8(sp)
 5090110:	dc000117 	ldw	r16,4(sp)
 5090114:	dec00b04 	addi	sp,sp,44
 5090118:	f800283a 	ret
 509011c:	013fffd4 	movui	r4,65535
 5090120:	2807883a 	mov	r3,r5
 5090124:	21c0552e 	bgeu	r4,r7,509027c <__umoddi3+0x2b0>
 5090128:	01004034 	movhi	r4,256
 509012c:	3900e336 	bltu	r7,r4,50904bc <__umoddi3+0x4f0>
 5090130:	3808d63a 	srli	r4,r7,24
 5090134:	02000604 	movi	r8,24
 5090138:	01414274 	movhi	r5,1289
 509013c:	214b883a 	add	r5,r4,r5
 5090140:	2d596103 	ldbu	r21,25988(r5)
 5090144:	01000804 	movi	r4,32
 5090148:	aa2b883a 	add	r21,r21,r8
 509014c:	2569c83a 	sub	r20,r4,r21
 5090150:	25404f1e 	bne	r4,r21,5090290 <__umoddi3+0x2c4>
 5090154:	3c400136 	bltu	r7,r17,509015c <__umoddi3+0x190>
 5090158:	81bfe436 	bltu	r16,r6,50900ec <__umoddi3+0x120>
 509015c:	8185c83a 	sub	r2,r16,r6
 5090160:	89cfc83a 	sub	r7,r17,r7
 5090164:	8087803a 	cmpltu	r3,r16,r2
 5090168:	38c7c83a 	sub	r3,r7,r3
 509016c:	003fdf06 	br	50900ec <__umoddi3+0x120>
 5090170:	3000041e 	bne	r6,zero,5090184 <__umoddi3+0x1b8>
 5090174:	000b883a 	mov	r5,zero
 5090178:	01000044 	movi	r4,1
 509017c:	50828000 	call	5082800 <__udivsi3>
 5090180:	1029883a 	mov	r20,r2
 5090184:	00bfffd4 	movui	r2,65535
 5090188:	1500322e 	bgeu	r2,r20,5090254 <__umoddi3+0x288>
 509018c:	00804034 	movhi	r2,256
 5090190:	a080cd36 	bltu	r20,r2,50904c8 <__umoddi3+0x4fc>
 5090194:	a006d63a 	srli	r3,r20,24
 5090198:	04800604 	movi	r18,24
 509019c:	00814274 	movhi	r2,1289
 50901a0:	1885883a 	add	r2,r3,r2
 50901a4:	15996103 	ldbu	r22,25988(r2)
 50901a8:	00800804 	movi	r2,32
 50901ac:	b4ad883a 	add	r22,r22,r18
 50901b0:	15a5c83a 	sub	r18,r2,r22
 50901b4:	15808a1e 	bne	r2,r22,50903e0 <__umoddi3+0x414>
 50901b8:	a02ed43a 	srli	r23,r20,16
 50901bc:	8d23c83a 	sub	r17,r17,r20
 50901c0:	a57fffcc 	andi	r21,r20,65535
 50901c4:	b80b883a 	mov	r5,r23
 50901c8:	8809883a 	mov	r4,r17
 50901cc:	50828640 	call	5082864 <__umodsi3>
 50901d0:	8809883a 	mov	r4,r17
 50901d4:	b80b883a 	mov	r5,r23
 50901d8:	102d883a 	mov	r22,r2
 50901dc:	50828000 	call	5082800 <__udivsi3>
 50901e0:	b02c943a 	slli	r22,r22,16
 50901e4:	9808d43a 	srli	r4,r19,16
 50901e8:	1561383a 	mul	r16,r2,r21
 50901ec:	b108b03a 	or	r4,r22,r4
 50901f0:	2400032e 	bgeu	r4,r16,5090200 <__umoddi3+0x234>
 50901f4:	2509883a 	add	r4,r4,r20
 50901f8:	25000136 	bltu	r4,r20,5090200 <__umoddi3+0x234>
 50901fc:	2400be36 	bltu	r4,r16,50904f8 <__umoddi3+0x52c>
 5090200:	2421c83a 	sub	r16,r4,r16
 5090204:	b80b883a 	mov	r5,r23
 5090208:	8009883a 	mov	r4,r16
 509020c:	50828640 	call	5082864 <__umodsi3>
 5090210:	1023883a 	mov	r17,r2
 5090214:	b80b883a 	mov	r5,r23
 5090218:	8009883a 	mov	r4,r16
 509021c:	50828000 	call	5082800 <__udivsi3>
 5090220:	8822943a 	slli	r17,r17,16
 5090224:	1545383a 	mul	r2,r2,r21
 5090228:	98ffffcc 	andi	r3,r19,65535
 509022c:	88c6b03a 	or	r3,r17,r3
 5090230:	1880042e 	bgeu	r3,r2,5090244 <__umoddi3+0x278>
 5090234:	1d07883a 	add	r3,r3,r20
 5090238:	1d000236 	bltu	r3,r20,5090244 <__umoddi3+0x278>
 509023c:	1880012e 	bgeu	r3,r2,5090244 <__umoddi3+0x278>
 5090240:	1d07883a 	add	r3,r3,r20
 5090244:	1885c83a 	sub	r2,r3,r2
 5090248:	1484d83a 	srl	r2,r2,r18
 509024c:	0007883a 	mov	r3,zero
 5090250:	003fa606 	br	50900ec <__umoddi3+0x120>
 5090254:	a0804030 	cmpltui	r2,r20,256
 5090258:	10009e1e 	bne	r2,zero,50904d4 <__umoddi3+0x508>
 509025c:	a006d23a 	srli	r3,r20,8
 5090260:	04800204 	movi	r18,8
 5090264:	003fcd06 	br	509019c <__umoddi3+0x1d0>
 5090268:	30804030 	cmpltui	r2,r6,256
 509026c:	1000911e 	bne	r2,zero,50904b4 <__umoddi3+0x4e8>
 5090270:	3006d23a 	srli	r3,r6,8
 5090274:	04800204 	movi	r18,8
 5090278:	003f6d06 	br	5090030 <__umoddi3+0x64>
 509027c:	39004030 	cmpltui	r4,r7,256
 5090280:	2000961e 	bne	r4,zero,50904dc <__umoddi3+0x510>
 5090284:	3808d23a 	srli	r4,r7,8
 5090288:	02000204 	movi	r8,8
 509028c:	003faa06 	br	5090138 <__umoddi3+0x16c>
 5090290:	3d0e983a 	sll	r7,r7,r20
 5090294:	3544d83a 	srl	r2,r6,r21
 5090298:	8d64d83a 	srl	r18,r17,r21
 509029c:	8d22983a 	sll	r17,r17,r20
 50902a0:	11eeb03a 	or	r23,r2,r7
 50902a4:	b838d43a 	srli	fp,r23,16
 50902a8:	8544d83a 	srl	r2,r16,r21
 50902ac:	9009883a 	mov	r4,r18
 50902b0:	e00b883a 	mov	r5,fp
 50902b4:	3526983a 	sll	r19,r6,r20
 50902b8:	1462b03a 	or	r17,r2,r17
 50902bc:	50828640 	call	5082864 <__umodsi3>
 50902c0:	9009883a 	mov	r4,r18
 50902c4:	e00b883a 	mov	r5,fp
 50902c8:	1025883a 	mov	r18,r2
 50902cc:	50828000 	call	5082800 <__udivsi3>
 50902d0:	9008943a 	slli	r4,r18,16
 50902d4:	8806d43a 	srli	r3,r17,16
 50902d8:	b9ffffcc 	andi	r7,r23,65535
 50902dc:	38a5383a 	mul	r18,r7,r2
 50902e0:	20c8b03a 	or	r4,r4,r3
 50902e4:	8520983a 	sll	r16,r16,r20
 50902e8:	102d883a 	mov	r22,r2
 50902ec:	2480062e 	bgeu	r4,r18,5090308 <__umoddi3+0x33c>
 50902f0:	25c9883a 	add	r4,r4,r23
 50902f4:	10bfffc4 	addi	r2,r2,-1
 50902f8:	25c07d36 	bltu	r4,r23,50904f0 <__umoddi3+0x524>
 50902fc:	24807c2e 	bgeu	r4,r18,50904f0 <__umoddi3+0x524>
 5090300:	b5bfff84 	addi	r22,r22,-2
 5090304:	25c9883a 	add	r4,r4,r23
 5090308:	24a5c83a 	sub	r18,r4,r18
 509030c:	9009883a 	mov	r4,r18
 5090310:	e00b883a 	mov	r5,fp
 5090314:	d9c00015 	stw	r7,0(sp)
 5090318:	50828640 	call	5082864 <__umodsi3>
 509031c:	9009883a 	mov	r4,r18
 5090320:	e00b883a 	mov	r5,fp
 5090324:	1025883a 	mov	r18,r2
 5090328:	50828000 	call	5082800 <__udivsi3>
 509032c:	d9c00017 	ldw	r7,0(sp)
 5090330:	9024943a 	slli	r18,r18,16
 5090334:	8c7fffcc 	andi	r17,r17,65535
 5090338:	388f383a 	mul	r7,r7,r2
 509033c:	9448b03a 	or	r4,r18,r17
 5090340:	21c0062e 	bgeu	r4,r7,509035c <__umoddi3+0x390>
 5090344:	25c9883a 	add	r4,r4,r23
 5090348:	10ffffc4 	addi	r3,r2,-1
 509034c:	25c06636 	bltu	r4,r23,50904e8 <__umoddi3+0x51c>
 5090350:	21c0652e 	bgeu	r4,r7,50904e8 <__umoddi3+0x51c>
 5090354:	10bfff84 	addi	r2,r2,-2
 5090358:	25c9883a 	add	r4,r4,r23
 509035c:	b00a943a 	slli	r5,r22,16
 5090360:	11bfffcc 	andi	r6,r2,65535
 5090364:	9806d43a 	srli	r3,r19,16
 5090368:	2884b03a 	or	r2,r5,r2
 509036c:	102cd43a 	srli	r22,r2,16
 5090370:	997fffcc 	andi	r5,r19,65535
 5090374:	3151383a 	mul	r8,r6,r5
 5090378:	b14b383a 	mul	r5,r22,r5
 509037c:	30cd383a 	mul	r6,r6,r3
 5090380:	4004d43a 	srli	r2,r8,16
 5090384:	b0ed383a 	mul	r22,r22,r3
 5090388:	314d883a 	add	r6,r6,r5
 509038c:	1185883a 	add	r2,r2,r6
 5090390:	21c9c83a 	sub	r4,r4,r7
 5090394:	1140022e 	bgeu	r2,r5,50903a0 <__umoddi3+0x3d4>
 5090398:	00c00074 	movhi	r3,1
 509039c:	b0ed883a 	add	r22,r22,r3
 50903a0:	1006d43a 	srli	r3,r2,16
 50903a4:	1004943a 	slli	r2,r2,16
 50903a8:	423fffcc 	andi	r8,r8,65535
 50903ac:	1dad883a 	add	r22,r3,r22
 50903b0:	1205883a 	add	r2,r2,r8
 50903b4:	25803636 	bltu	r4,r22,5090490 <__umoddi3+0x4c4>
 50903b8:	25803426 	beq	r4,r22,509048c <__umoddi3+0x4c0>
 50903bc:	8085c83a 	sub	r2,r16,r2
 50903c0:	8087803a 	cmpltu	r3,r16,r2
 50903c4:	2589c83a 	sub	r4,r4,r22
 50903c8:	20c7c83a 	sub	r3,r4,r3
 50903cc:	1d60983a 	sll	r16,r3,r21
 50903d0:	1504d83a 	srl	r2,r2,r20
 50903d4:	1d06d83a 	srl	r3,r3,r20
 50903d8:	8084b03a 	or	r2,r16,r2
 50903dc:	003f4306 	br	50900ec <__umoddi3+0x120>
 50903e0:	a4a8983a 	sll	r20,r20,r18
 50903e4:	8daad83a 	srl	r21,r17,r22
 50903e8:	8ca2983a 	sll	r17,r17,r18
 50903ec:	a02ed43a 	srli	r23,r20,16
 50903f0:	a809883a 	mov	r4,r21
 50903f4:	85acd83a 	srl	r22,r16,r22
 50903f8:	b80b883a 	mov	r5,r23
 50903fc:	50828640 	call	5082864 <__umodsi3>
 5090400:	a809883a 	mov	r4,r21
 5090404:	b80b883a 	mov	r5,r23
 5090408:	b46cb03a 	or	r22,r22,r17
 509040c:	1027883a 	mov	r19,r2
 5090410:	50828000 	call	5082800 <__udivsi3>
 5090414:	9826943a 	slli	r19,r19,16
 5090418:	b008d43a 	srli	r4,r22,16
 509041c:	a57fffcc 	andi	r21,r20,65535
 5090420:	a8a3383a 	mul	r17,r21,r2
 5090424:	9908b03a 	or	r4,r19,r4
 5090428:	84a6983a 	sll	r19,r16,r18
 509042c:	2440042e 	bgeu	r4,r17,5090440 <__umoddi3+0x474>
 5090430:	2509883a 	add	r4,r4,r20
 5090434:	25000236 	bltu	r4,r20,5090440 <__umoddi3+0x474>
 5090438:	2440012e 	bgeu	r4,r17,5090440 <__umoddi3+0x474>
 509043c:	2509883a 	add	r4,r4,r20
 5090440:	2463c83a 	sub	r17,r4,r17
 5090444:	8809883a 	mov	r4,r17
 5090448:	b80b883a 	mov	r5,r23
 509044c:	50828640 	call	5082864 <__umodsi3>
 5090450:	1021883a 	mov	r16,r2
 5090454:	8809883a 	mov	r4,r17
 5090458:	b80b883a 	mov	r5,r23
 509045c:	8020943a 	slli	r16,r16,16
 5090460:	50828000 	call	5082800 <__udivsi3>
 5090464:	a885383a 	mul	r2,r21,r2
 5090468:	b47fffcc 	andi	r17,r22,65535
 509046c:	8462b03a 	or	r17,r16,r17
 5090470:	8880042e 	bgeu	r17,r2,5090484 <__umoddi3+0x4b8>
 5090474:	8d23883a 	add	r17,r17,r20
 5090478:	8d000236 	bltu	r17,r20,5090484 <__umoddi3+0x4b8>
 509047c:	8880012e 	bgeu	r17,r2,5090484 <__umoddi3+0x4b8>
 5090480:	8d23883a 	add	r17,r17,r20
 5090484:	88a3c83a 	sub	r17,r17,r2
 5090488:	003f4e06 	br	50901c4 <__umoddi3+0x1f8>
 509048c:	80bfcb2e 	bgeu	r16,r2,50903bc <__umoddi3+0x3f0>
 5090490:	14e7c83a 	sub	r19,r2,r19
 5090494:	14c5803a 	cmpltu	r2,r2,r19
 5090498:	15c5883a 	add	r2,r2,r23
 509049c:	b0adc83a 	sub	r22,r22,r2
 50904a0:	9805883a 	mov	r2,r19
 50904a4:	003fc506 	br	50903bc <__umoddi3+0x3f0>
 50904a8:	3006d43a 	srli	r3,r6,16
 50904ac:	04800404 	movi	r18,16
 50904b0:	003edf06 	br	5090030 <__umoddi3+0x64>
 50904b4:	3007883a 	mov	r3,r6
 50904b8:	003edd06 	br	5090030 <__umoddi3+0x64>
 50904bc:	3808d43a 	srli	r4,r7,16
 50904c0:	02000404 	movi	r8,16
 50904c4:	003f1c06 	br	5090138 <__umoddi3+0x16c>
 50904c8:	a006d43a 	srli	r3,r20,16
 50904cc:	04800404 	movi	r18,16
 50904d0:	003f3206 	br	509019c <__umoddi3+0x1d0>
 50904d4:	a007883a 	mov	r3,r20
 50904d8:	003f3006 	br	509019c <__umoddi3+0x1d0>
 50904dc:	3809883a 	mov	r4,r7
 50904e0:	0011883a 	mov	r8,zero
 50904e4:	003f1406 	br	5090138 <__umoddi3+0x16c>
 50904e8:	1805883a 	mov	r2,r3
 50904ec:	003f9b06 	br	509035c <__umoddi3+0x390>
 50904f0:	102d883a 	mov	r22,r2
 50904f4:	003f8406 	br	5090308 <__umoddi3+0x33c>
 50904f8:	2509883a 	add	r4,r4,r20
 50904fc:	003f4006 	br	5090200 <__umoddi3+0x234>

05090500 <__adddf3>:
 5090500:	02000434 	movhi	r8,16
 5090504:	423fffc4 	addi	r8,r8,-1
 5090508:	2806d53a 	srli	r3,r5,20
 509050c:	3804d53a 	srli	r2,r7,20
 5090510:	2a14703a 	and	r10,r5,r8
 5090514:	3a12703a 	and	r9,r7,r8
 5090518:	280ad7fa 	srli	r5,r5,31
 509051c:	501490fa 	slli	r10,r10,3
 5090520:	2018d77a 	srli	r12,r4,29
 5090524:	481290fa 	slli	r9,r9,3
 5090528:	3016d77a 	srli	r11,r6,29
 509052c:	380ed7fa 	srli	r7,r7,31
 5090530:	defffb04 	addi	sp,sp,-20
 5090534:	dc800215 	stw	r18,8(sp)
 5090538:	dc000015 	stw	r16,0(sp)
 509053c:	1c81ffcc 	andi	r18,r3,2047
 5090540:	1081ffcc 	andi	r2,r2,2047
 5090544:	dfc00415 	stw	ra,16(sp)
 5090548:	dcc00315 	stw	r19,12(sp)
 509054c:	dc400115 	stw	r17,4(sp)
 5090550:	201c90fa 	slli	r14,r4,3
 5090554:	301a90fa 	slli	r13,r6,3
 5090558:	2821883a 	mov	r16,r5
 509055c:	6294b03a 	or	r10,r12,r10
 5090560:	5a52b03a 	or	r9,r11,r9
 5090564:	9087c83a 	sub	r3,r18,r2
 5090568:	29c06126 	beq	r5,r7,50906f0 <__adddf3+0x1f0>
 509056c:	00c0550e 	bge	zero,r3,50906c4 <__adddf3+0x1c4>
 5090570:	10007326 	beq	r2,zero,5090740 <__adddf3+0x240>
 5090574:	9081ffd8 	cmpnei	r2,r18,2047
 5090578:	1000bd26 	beq	r2,zero,5090870 <__adddf3+0x370>
 509057c:	4a402034 	orhi	r9,r9,128
 5090580:	18800e48 	cmpgei	r2,r3,57
 5090584:	1000ef1e 	bne	r2,zero,5090944 <__adddf3+0x444>
 5090588:	18800808 	cmpgei	r2,r3,32
 509058c:	1001321e 	bne	r2,zero,5090a58 <__adddf3+0x558>
 5090590:	00800804 	movi	r2,32
 5090594:	10c5c83a 	sub	r2,r2,r3
 5090598:	68c8d83a 	srl	r4,r13,r3
 509059c:	48a2983a 	sll	r17,r9,r2
 50905a0:	689a983a 	sll	r13,r13,r2
 50905a4:	48c6d83a 	srl	r3,r9,r3
 50905a8:	8922b03a 	or	r17,r17,r4
 50905ac:	681ac03a 	cmpne	r13,r13,zero
 50905b0:	8b62b03a 	or	r17,r17,r13
 50905b4:	50d5c83a 	sub	r10,r10,r3
 50905b8:	7463c83a 	sub	r17,r14,r17
 50905bc:	7451803a 	cmpltu	r8,r14,r17
 50905c0:	5211c83a 	sub	r8,r10,r8
 50905c4:	4080202c 	andhi	r2,r8,128
 50905c8:	10008d26 	beq	r2,zero,5090800 <__adddf3+0x300>
 50905cc:	02402034 	movhi	r9,128
 50905d0:	4a7fffc4 	addi	r9,r9,-1
 50905d4:	4266703a 	and	r19,r8,r9
 50905d8:	9800b326 	beq	r19,zero,50908a8 <__adddf3+0x3a8>
 50905dc:	9809883a 	mov	r4,r19
 50905e0:	50929e00 	call	50929e0 <__clzsi2>
 50905e4:	10fffe04 	addi	r3,r2,-8
 50905e8:	02000804 	movi	r8,32
 50905ec:	40d1c83a 	sub	r8,r8,r3
 50905f0:	8a10d83a 	srl	r8,r17,r8
 50905f4:	98d2983a 	sll	r9,r19,r3
 50905f8:	88e2983a 	sll	r17,r17,r3
 50905fc:	4250b03a 	or	r8,r8,r9
 5090600:	1c80b216 	blt	r3,r18,50908cc <__adddf3+0x3cc>
 5090604:	1c87c83a 	sub	r3,r3,r18
 5090608:	19000044 	addi	r4,r3,1
 509060c:	20800808 	cmpgei	r2,r4,32
 5090610:	10006f1e 	bne	r2,zero,50907d0 <__adddf3+0x2d0>
 5090614:	00800804 	movi	r2,32
 5090618:	1105c83a 	sub	r2,r2,r4
 509061c:	8906d83a 	srl	r3,r17,r4
 5090620:	88a2983a 	sll	r17,r17,r2
 5090624:	4084983a 	sll	r2,r8,r2
 5090628:	4110d83a 	srl	r8,r8,r4
 509062c:	8822c03a 	cmpne	r17,r17,zero
 5090630:	10c4b03a 	or	r2,r2,r3
 5090634:	1462b03a 	or	r17,r2,r17
 5090638:	0025883a 	mov	r18,zero
 509063c:	888001cc 	andi	r2,r17,7
 5090640:	10000726 	beq	r2,zero,5090660 <__adddf3+0x160>
 5090644:	888003cc 	andi	r2,r17,15
 5090648:	10800120 	cmpeqi	r2,r2,4
 509064c:	1000041e 	bne	r2,zero,5090660 <__adddf3+0x160>
 5090650:	88c00104 	addi	r3,r17,4
 5090654:	1c63803a 	cmpltu	r17,r3,r17
 5090658:	4451883a 	add	r8,r8,r17
 509065c:	1823883a 	mov	r17,r3
 5090660:	4080202c 	andhi	r2,r8,128
 5090664:	10006826 	beq	r2,zero,5090808 <__adddf3+0x308>
 5090668:	90c00044 	addi	r3,r18,1
 509066c:	1881ffe0 	cmpeqi	r2,r3,2047
 5090670:	18c1ffcc 	andi	r3,r3,2047
 5090674:	10007a1e 	bne	r2,zero,5090860 <__adddf3+0x360>
 5090678:	00bfe034 	movhi	r2,65408
 509067c:	10bfffc4 	addi	r2,r2,-1
 5090680:	4090703a 	and	r8,r8,r2
 5090684:	4004977a 	slli	r2,r8,29
 5090688:	4010927a 	slli	r8,r8,9
 509068c:	8822d0fa 	srli	r17,r17,3
 5090690:	4010d33a 	srli	r8,r8,12
 5090694:	1444b03a 	or	r2,r2,r17
 5090698:	1806953a 	slli	r3,r3,20
 509069c:	802097fa 	slli	r16,r16,31
 50906a0:	1a06b03a 	or	r3,r3,r8
 50906a4:	1c06b03a 	or	r3,r3,r16
 50906a8:	dfc00417 	ldw	ra,16(sp)
 50906ac:	dcc00317 	ldw	r19,12(sp)
 50906b0:	dc800217 	ldw	r18,8(sp)
 50906b4:	dc400117 	ldw	r17,4(sp)
 50906b8:	dc000017 	ldw	r16,0(sp)
 50906bc:	dec00504 	addi	sp,sp,20
 50906c0:	f800283a 	ret
 50906c4:	18002626 	beq	r3,zero,5090760 <__adddf3+0x260>
 50906c8:	1487c83a 	sub	r3,r2,r18
 50906cc:	9000ba1e 	bne	r18,zero,50909b8 <__adddf3+0x4b8>
 50906d0:	5388b03a 	or	r4,r10,r14
 50906d4:	20011826 	beq	r4,zero,5090b38 <__adddf3+0x638>
 50906d8:	193fffc4 	addi	r4,r3,-1
 50906dc:	20015726 	beq	r4,zero,5090c3c <__adddf3+0x73c>
 50906e0:	18c1ffd8 	cmpnei	r3,r3,2047
 50906e4:	18013026 	beq	r3,zero,5090ba8 <__adddf3+0x6a8>
 50906e8:	2007883a 	mov	r3,r4
 50906ec:	0000b506 	br	50909c4 <__adddf3+0x4c4>
 50906f0:	00c07b0e 	bge	zero,r3,50908e0 <__adddf3+0x3e0>
 50906f4:	10002e26 	beq	r2,zero,50907b0 <__adddf3+0x2b0>
 50906f8:	9081ffd8 	cmpnei	r2,r18,2047
 50906fc:	10005c26 	beq	r2,zero,5090870 <__adddf3+0x370>
 5090700:	4a402034 	orhi	r9,r9,128
 5090704:	18800e48 	cmpgei	r2,r3,57
 5090708:	10004b1e 	bne	r2,zero,5090838 <__adddf3+0x338>
 509070c:	18800808 	cmpgei	r2,r3,32
 5090710:	1000ec26 	beq	r2,zero,5090ac4 <__adddf3+0x5c4>
 5090714:	1c7ff804 	addi	r17,r3,-32
 5090718:	19000820 	cmpeqi	r4,r3,32
 509071c:	4c44d83a 	srl	r2,r9,r17
 5090720:	2000041e 	bne	r4,zero,5090734 <__adddf3+0x234>
 5090724:	01001004 	movi	r4,64
 5090728:	20c7c83a 	sub	r3,r4,r3
 509072c:	48d2983a 	sll	r9,r9,r3
 5090730:	6a5ab03a 	or	r13,r13,r9
 5090734:	6822c03a 	cmpne	r17,r13,zero
 5090738:	88a2b03a 	or	r17,r17,r2
 509073c:	00004006 	br	5090840 <__adddf3+0x340>
 5090740:	4b44b03a 	or	r2,r9,r13
 5090744:	10008226 	beq	r2,zero,5090950 <__adddf3+0x450>
 5090748:	18bfffc4 	addi	r2,r3,-1
 509074c:	10011026 	beq	r2,zero,5090b90 <__adddf3+0x690>
 5090750:	18c1ffd8 	cmpnei	r3,r3,2047
 5090754:	18004626 	beq	r3,zero,5090870 <__adddf3+0x370>
 5090758:	1007883a 	mov	r3,r2
 509075c:	003f8806 	br	5090580 <__adddf3+0x80>
 5090760:	90800044 	addi	r2,r18,1
 5090764:	1081ff8c 	andi	r2,r2,2046
 5090768:	1000a51e 	bne	r2,zero,5090a00 <__adddf3+0x500>
 509076c:	538ab03a 	or	r5,r10,r14
 5090770:	4b44b03a 	or	r2,r9,r13
 5090774:	9000f81e 	bne	r18,zero,5090b58 <__adddf3+0x658>
 5090778:	28013726 	beq	r5,zero,5090c58 <__adddf3+0x758>
 509077c:	10011226 	beq	r2,zero,5090bc8 <__adddf3+0x6c8>
 5090780:	7363c83a 	sub	r17,r14,r13
 5090784:	7445803a 	cmpltu	r2,r14,r17
 5090788:	5251c83a 	sub	r8,r10,r9
 509078c:	4091c83a 	sub	r8,r8,r2
 5090790:	4080202c 	andhi	r2,r8,128
 5090794:	10018f26 	beq	r2,zero,5090dd4 <__adddf3+0x8d4>
 5090798:	6ba3c83a 	sub	r17,r13,r14
 509079c:	4a95c83a 	sub	r10,r9,r10
 50907a0:	6c51803a 	cmpltu	r8,r13,r17
 50907a4:	5211c83a 	sub	r8,r10,r8
 50907a8:	3821883a 	mov	r16,r7
 50907ac:	003fa306 	br	509063c <__adddf3+0x13c>
 50907b0:	4b44b03a 	or	r2,r9,r13
 50907b4:	10006626 	beq	r2,zero,5090950 <__adddf3+0x450>
 50907b8:	18bfffc4 	addi	r2,r3,-1
 50907bc:	1000ec26 	beq	r2,zero,5090b70 <__adddf3+0x670>
 50907c0:	18c1ffd8 	cmpnei	r3,r3,2047
 50907c4:	18012d26 	beq	r3,zero,5090c7c <__adddf3+0x77c>
 50907c8:	1007883a 	mov	r3,r2
 50907cc:	003fcd06 	br	5090704 <__adddf3+0x204>
 50907d0:	18fff844 	addi	r3,r3,-31
 50907d4:	20800820 	cmpeqi	r2,r4,32
 50907d8:	40c6d83a 	srl	r3,r8,r3
 50907dc:	1000041e 	bne	r2,zero,50907f0 <__adddf3+0x2f0>
 50907e0:	00801004 	movi	r2,64
 50907e4:	1109c83a 	sub	r4,r2,r4
 50907e8:	4110983a 	sll	r8,r8,r4
 50907ec:	8a22b03a 	or	r17,r17,r8
 50907f0:	8822c03a 	cmpne	r17,r17,zero
 50907f4:	88e2b03a 	or	r17,r17,r3
 50907f8:	0011883a 	mov	r8,zero
 50907fc:	0025883a 	mov	r18,zero
 5090800:	888001cc 	andi	r2,r17,7
 5090804:	103f8f1e 	bne	r2,zero,5090644 <__adddf3+0x144>
 5090808:	8822d0fa 	srli	r17,r17,3
 509080c:	4004977a 	slli	r2,r8,29
 5090810:	4014d0fa 	srli	r10,r8,3
 5090814:	9007883a 	mov	r3,r18
 5090818:	8884b03a 	or	r2,r17,r2
 509081c:	1901ffe0 	cmpeqi	r4,r3,2047
 5090820:	2000191e 	bne	r4,zero,5090888 <__adddf3+0x388>
 5090824:	02000434 	movhi	r8,16
 5090828:	423fffc4 	addi	r8,r8,-1
 509082c:	5210703a 	and	r8,r10,r8
 5090830:	18c1ffcc 	andi	r3,r3,2047
 5090834:	003f9806 	br	5090698 <__adddf3+0x198>
 5090838:	4b62b03a 	or	r17,r9,r13
 509083c:	8822c03a 	cmpne	r17,r17,zero
 5090840:	8ba3883a 	add	r17,r17,r14
 5090844:	8b91803a 	cmpltu	r8,r17,r14
 5090848:	4291883a 	add	r8,r8,r10
 509084c:	4080202c 	andhi	r2,r8,128
 5090850:	103feb26 	beq	r2,zero,5090800 <__adddf3+0x300>
 5090854:	94800044 	addi	r18,r18,1
 5090858:	9081ffe0 	cmpeqi	r2,r18,2047
 509085c:	10007426 	beq	r2,zero,5090a30 <__adddf3+0x530>
 5090860:	00c1ffc4 	movi	r3,2047
 5090864:	0011883a 	mov	r8,zero
 5090868:	0005883a 	mov	r2,zero
 509086c:	003f8a06 	br	5090698 <__adddf3+0x198>
 5090870:	500a977a 	slli	r5,r10,29
 5090874:	00c80034 	movhi	r3,8192
 5090878:	18ffffc4 	addi	r3,r3,-1
 509087c:	5014d0fa 	srli	r10,r10,3
 5090880:	20c4703a 	and	r2,r4,r3
 5090884:	1144b03a 	or	r2,r2,r5
 5090888:	1286b03a 	or	r3,r2,r10
 509088c:	18015426 	beq	r3,zero,5090de0 <__adddf3+0x8e0>
 5090890:	00c00434 	movhi	r3,16
 5090894:	18ffffc4 	addi	r3,r3,-1
 5090898:	52000234 	orhi	r8,r10,8
 509089c:	40d0703a 	and	r8,r8,r3
 50908a0:	00c1ffc4 	movi	r3,2047
 50908a4:	003f7c06 	br	5090698 <__adddf3+0x198>
 50908a8:	8809883a 	mov	r4,r17
 50908ac:	50929e00 	call	50929e0 <__clzsi2>
 50908b0:	10c00604 	addi	r3,r2,24
 50908b4:	19000808 	cmpgei	r4,r3,32
 50908b8:	203f4b26 	beq	r4,zero,50905e8 <__adddf3+0xe8>
 50908bc:	123ffe04 	addi	r8,r2,-8
 50908c0:	8a10983a 	sll	r8,r17,r8
 50908c4:	0023883a 	mov	r17,zero
 50908c8:	1cbf4e0e 	bge	r3,r18,5090604 <__adddf3+0x104>
 50908cc:	00bfe034 	movhi	r2,65408
 50908d0:	10bfffc4 	addi	r2,r2,-1
 50908d4:	90e5c83a 	sub	r18,r18,r3
 50908d8:	4090703a 	and	r8,r8,r2
 50908dc:	003f5706 	br	509063c <__adddf3+0x13c>
 50908e0:	18002226 	beq	r3,zero,509096c <__adddf3+0x46c>
 50908e4:	1487c83a 	sub	r3,r2,r18
 50908e8:	90006e26 	beq	r18,zero,5090aa4 <__adddf3+0x5a4>
 50908ec:	1101ffd8 	cmpnei	r4,r2,2047
 50908f0:	2000e926 	beq	r4,zero,5090c98 <__adddf3+0x798>
 50908f4:	52802034 	orhi	r10,r10,128
 50908f8:	19000e48 	cmpgei	r4,r3,57
 50908fc:	2000b91e 	bne	r4,zero,5090be4 <__adddf3+0x6e4>
 5090900:	19000808 	cmpgei	r4,r3,32
 5090904:	2001101e 	bne	r4,zero,5090d48 <__adddf3+0x848>
 5090908:	01000804 	movi	r4,32
 509090c:	20c9c83a 	sub	r4,r4,r3
 5090910:	5122983a 	sll	r17,r10,r4
 5090914:	70cad83a 	srl	r5,r14,r3
 5090918:	7108983a 	sll	r4,r14,r4
 509091c:	50d4d83a 	srl	r10,r10,r3
 5090920:	8962b03a 	or	r17,r17,r5
 5090924:	2008c03a 	cmpne	r4,r4,zero
 5090928:	8922b03a 	or	r17,r17,r4
 509092c:	4a93883a 	add	r9,r9,r10
 5090930:	8b63883a 	add	r17,r17,r13
 5090934:	8b51803a 	cmpltu	r8,r17,r13
 5090938:	4251883a 	add	r8,r8,r9
 509093c:	1025883a 	mov	r18,r2
 5090940:	003fc206 	br	509084c <__adddf3+0x34c>
 5090944:	4b62b03a 	or	r17,r9,r13
 5090948:	8822c03a 	cmpne	r17,r17,zero
 509094c:	003f1a06 	br	50905b8 <__adddf3+0xb8>
 5090950:	500c977a 	slli	r6,r10,29
 5090954:	01480034 	movhi	r5,8192
 5090958:	297fffc4 	addi	r5,r5,-1
 509095c:	2144703a 	and	r2,r4,r5
 5090960:	5014d0fa 	srli	r10,r10,3
 5090964:	1184b03a 	or	r2,r2,r6
 5090968:	003fac06 	br	509081c <__adddf3+0x31c>
 509096c:	90800044 	addi	r2,r18,1
 5090970:	1141ff8c 	andi	r5,r2,2046
 5090974:	28005e1e 	bne	r5,zero,5090af0 <__adddf3+0x5f0>
 5090978:	5384b03a 	or	r2,r10,r14
 509097c:	9000a71e 	bne	r18,zero,5090c1c <__adddf3+0x71c>
 5090980:	1000e526 	beq	r2,zero,5090d18 <__adddf3+0x818>
 5090984:	4b44b03a 	or	r2,r9,r13
 5090988:	10008f26 	beq	r2,zero,5090bc8 <__adddf3+0x6c8>
 509098c:	7363883a 	add	r17,r14,r13
 5090990:	5255883a 	add	r10,r10,r9
 5090994:	8b91803a 	cmpltu	r8,r17,r14
 5090998:	5211883a 	add	r8,r10,r8
 509099c:	4080202c 	andhi	r2,r8,128
 50909a0:	103f9726 	beq	r2,zero,5090800 <__adddf3+0x300>
 50909a4:	00bfe034 	movhi	r2,65408
 50909a8:	10bfffc4 	addi	r2,r2,-1
 50909ac:	4090703a 	and	r8,r8,r2
 50909b0:	04800044 	movi	r18,1
 50909b4:	003f9206 	br	5090800 <__adddf3+0x300>
 50909b8:	1101ffd8 	cmpnei	r4,r2,2047
 50909bc:	20007a26 	beq	r4,zero,5090ba8 <__adddf3+0x6a8>
 50909c0:	52802034 	orhi	r10,r10,128
 50909c4:	19000e48 	cmpgei	r4,r3,57
 50909c8:	20002e1e 	bne	r4,zero,5090a84 <__adddf3+0x584>
 50909cc:	19000808 	cmpgei	r4,r3,32
 50909d0:	2000871e 	bne	r4,zero,5090bf0 <__adddf3+0x6f0>
 50909d4:	01000804 	movi	r4,32
 50909d8:	20c9c83a 	sub	r4,r4,r3
 50909dc:	5122983a 	sll	r17,r10,r4
 50909e0:	70cad83a 	srl	r5,r14,r3
 50909e4:	711c983a 	sll	r14,r14,r4
 50909e8:	50d4d83a 	srl	r10,r10,r3
 50909ec:	8962b03a 	or	r17,r17,r5
 50909f0:	701cc03a 	cmpne	r14,r14,zero
 50909f4:	8ba2b03a 	or	r17,r17,r14
 50909f8:	4a93c83a 	sub	r9,r9,r10
 50909fc:	00002306 	br	5090a8c <__adddf3+0x58c>
 5090a00:	7363c83a 	sub	r17,r14,r13
 5090a04:	5267c83a 	sub	r19,r10,r9
 5090a08:	7451803a 	cmpltu	r8,r14,r17
 5090a0c:	9a27c83a 	sub	r19,r19,r8
 5090a10:	9880202c 	andhi	r2,r19,128
 5090a14:	1000421e 	bne	r2,zero,5090b20 <__adddf3+0x620>
 5090a18:	8cc4b03a 	or	r2,r17,r19
 5090a1c:	103eee1e 	bne	r2,zero,50905d8 <__adddf3+0xd8>
 5090a20:	0015883a 	mov	r10,zero
 5090a24:	0021883a 	mov	r16,zero
 5090a28:	003f7e06 	br	5090824 <__adddf3+0x324>
 5090a2c:	04800084 	movi	r18,2
 5090a30:	00bfe034 	movhi	r2,65408
 5090a34:	10bfffc4 	addi	r2,r2,-1
 5090a38:	8806d07a 	srli	r3,r17,1
 5090a3c:	4090703a 	and	r8,r8,r2
 5090a40:	400497fa 	slli	r2,r8,31
 5090a44:	8c40004c 	andi	r17,r17,1
 5090a48:	1c62b03a 	or	r17,r3,r17
 5090a4c:	4010d07a 	srli	r8,r8,1
 5090a50:	1462b03a 	or	r17,r2,r17
 5090a54:	003ef906 	br	509063c <__adddf3+0x13c>
 5090a58:	1c7ff804 	addi	r17,r3,-32
 5090a5c:	19000820 	cmpeqi	r4,r3,32
 5090a60:	4c44d83a 	srl	r2,r9,r17
 5090a64:	2000041e 	bne	r4,zero,5090a78 <__adddf3+0x578>
 5090a68:	01001004 	movi	r4,64
 5090a6c:	20c7c83a 	sub	r3,r4,r3
 5090a70:	48d2983a 	sll	r9,r9,r3
 5090a74:	6a5ab03a 	or	r13,r13,r9
 5090a78:	6822c03a 	cmpne	r17,r13,zero
 5090a7c:	88a2b03a 	or	r17,r17,r2
 5090a80:	003ecd06 	br	50905b8 <__adddf3+0xb8>
 5090a84:	5394b03a 	or	r10,r10,r14
 5090a88:	5022c03a 	cmpne	r17,r10,zero
 5090a8c:	6c63c83a 	sub	r17,r13,r17
 5090a90:	6c51803a 	cmpltu	r8,r13,r17
 5090a94:	4a11c83a 	sub	r8,r9,r8
 5090a98:	3821883a 	mov	r16,r7
 5090a9c:	1025883a 	mov	r18,r2
 5090aa0:	003ec806 	br	50905c4 <__adddf3+0xc4>
 5090aa4:	5388b03a 	or	r4,r10,r14
 5090aa8:	20008226 	beq	r4,zero,5090cb4 <__adddf3+0x7b4>
 5090aac:	193fffc4 	addi	r4,r3,-1
 5090ab0:	2000b026 	beq	r4,zero,5090d74 <__adddf3+0x874>
 5090ab4:	18c1ffd8 	cmpnei	r3,r3,2047
 5090ab8:	18007726 	beq	r3,zero,5090c98 <__adddf3+0x798>
 5090abc:	2007883a 	mov	r3,r4
 5090ac0:	003f8d06 	br	50908f8 <__adddf3+0x3f8>
 5090ac4:	00800804 	movi	r2,32
 5090ac8:	10c5c83a 	sub	r2,r2,r3
 5090acc:	68c8d83a 	srl	r4,r13,r3
 5090ad0:	48a2983a 	sll	r17,r9,r2
 5090ad4:	689a983a 	sll	r13,r13,r2
 5090ad8:	48c6d83a 	srl	r3,r9,r3
 5090adc:	8922b03a 	or	r17,r17,r4
 5090ae0:	681ac03a 	cmpne	r13,r13,zero
 5090ae4:	8b62b03a 	or	r17,r17,r13
 5090ae8:	50d5883a 	add	r10,r10,r3
 5090aec:	003f5406 	br	5090840 <__adddf3+0x340>
 5090af0:	10c1ffe0 	cmpeqi	r3,r2,2047
 5090af4:	183f5a1e 	bne	r3,zero,5090860 <__adddf3+0x360>
 5090af8:	7351883a 	add	r8,r14,r13
 5090afc:	4387803a 	cmpltu	r3,r8,r14
 5090b00:	5255883a 	add	r10,r10,r9
 5090b04:	50c7883a 	add	r3,r10,r3
 5090b08:	401ad07a 	srli	r13,r8,1
 5090b0c:	182297fa 	slli	r17,r3,31
 5090b10:	1810d07a 	srli	r8,r3,1
 5090b14:	1025883a 	mov	r18,r2
 5090b18:	8b62b03a 	or	r17,r17,r13
 5090b1c:	003f3806 	br	5090800 <__adddf3+0x300>
 5090b20:	6ba3c83a 	sub	r17,r13,r14
 5090b24:	4a93c83a 	sub	r9,r9,r10
 5090b28:	6c51803a 	cmpltu	r8,r13,r17
 5090b2c:	4a27c83a 	sub	r19,r9,r8
 5090b30:	3821883a 	mov	r16,r7
 5090b34:	003ea806 	br	50905d8 <__adddf3+0xd8>
 5090b38:	480a977a 	slli	r5,r9,29
 5090b3c:	01080034 	movhi	r4,8192
 5090b40:	213fffc4 	addi	r4,r4,-1
 5090b44:	3104703a 	and	r2,r6,r4
 5090b48:	4814d0fa 	srli	r10,r9,3
 5090b4c:	1144b03a 	or	r2,r2,r5
 5090b50:	3821883a 	mov	r16,r7
 5090b54:	003f3106 	br	509081c <__adddf3+0x31c>
 5090b58:	28005d1e 	bne	r5,zero,5090cd0 <__adddf3+0x7d0>
 5090b5c:	1000121e 	bne	r2,zero,5090ba8 <__adddf3+0x6a8>
 5090b60:	0021883a 	mov	r16,zero
 5090b64:	4015883a 	mov	r10,r8
 5090b68:	00bfffc4 	movi	r2,-1
 5090b6c:	003f4806 	br	5090890 <__adddf3+0x390>
 5090b70:	7363883a 	add	r17,r14,r13
 5090b74:	5255883a 	add	r10,r10,r9
 5090b78:	8b91803a 	cmpltu	r8,r17,r14
 5090b7c:	5211883a 	add	r8,r10,r8
 5090b80:	4080202c 	andhi	r2,r8,128
 5090b84:	103fa91e 	bne	r2,zero,5090a2c <__adddf3+0x52c>
 5090b88:	04800044 	movi	r18,1
 5090b8c:	003f1c06 	br	5090800 <__adddf3+0x300>
 5090b90:	7363c83a 	sub	r17,r14,r13
 5090b94:	5255c83a 	sub	r10,r10,r9
 5090b98:	7451803a 	cmpltu	r8,r14,r17
 5090b9c:	5211c83a 	sub	r8,r10,r8
 5090ba0:	04800044 	movi	r18,1
 5090ba4:	003e8706 	br	50905c4 <__adddf3+0xc4>
 5090ba8:	4806977a 	slli	r3,r9,29
 5090bac:	00880034 	movhi	r2,8192
 5090bb0:	10bfffc4 	addi	r2,r2,-1
 5090bb4:	3084703a 	and	r2,r6,r2
 5090bb8:	4814d0fa 	srli	r10,r9,3
 5090bbc:	10c4b03a 	or	r2,r2,r3
 5090bc0:	3821883a 	mov	r16,r7
 5090bc4:	003f3006 	br	5090888 <__adddf3+0x388>
 5090bc8:	500a977a 	slli	r5,r10,29
 5090bcc:	00880034 	movhi	r2,8192
 5090bd0:	10bfffc4 	addi	r2,r2,-1
 5090bd4:	2084703a 	and	r2,r4,r2
 5090bd8:	5014d0fa 	srli	r10,r10,3
 5090bdc:	1144b03a 	or	r2,r2,r5
 5090be0:	003f1006 	br	5090824 <__adddf3+0x324>
 5090be4:	5394b03a 	or	r10,r10,r14
 5090be8:	5022c03a 	cmpne	r17,r10,zero
 5090bec:	003f5006 	br	5090930 <__adddf3+0x430>
 5090bf0:	1c7ff804 	addi	r17,r3,-32
 5090bf4:	19400820 	cmpeqi	r5,r3,32
 5090bf8:	5448d83a 	srl	r4,r10,r17
 5090bfc:	2800041e 	bne	r5,zero,5090c10 <__adddf3+0x710>
 5090c00:	01401004 	movi	r5,64
 5090c04:	28c7c83a 	sub	r3,r5,r3
 5090c08:	50d4983a 	sll	r10,r10,r3
 5090c0c:	729cb03a 	or	r14,r14,r10
 5090c10:	7022c03a 	cmpne	r17,r14,zero
 5090c14:	8922b03a 	or	r17,r17,r4
 5090c18:	003f9c06 	br	5090a8c <__adddf3+0x58c>
 5090c1c:	10005a1e 	bne	r2,zero,5090d88 <__adddf3+0x888>
 5090c20:	4804977a 	slli	r2,r9,29
 5090c24:	00c80034 	movhi	r3,8192
 5090c28:	18ffffc4 	addi	r3,r3,-1
 5090c2c:	30cc703a 	and	r6,r6,r3
 5090c30:	4814d0fa 	srli	r10,r9,3
 5090c34:	1184b03a 	or	r2,r2,r6
 5090c38:	003f1306 	br	5090888 <__adddf3+0x388>
 5090c3c:	6ba3c83a 	sub	r17,r13,r14
 5090c40:	4a95c83a 	sub	r10,r9,r10
 5090c44:	6c51803a 	cmpltu	r8,r13,r17
 5090c48:	5211c83a 	sub	r8,r10,r8
 5090c4c:	3821883a 	mov	r16,r7
 5090c50:	04800044 	movi	r18,1
 5090c54:	003e5b06 	br	50905c4 <__adddf3+0xc4>
 5090c58:	103f7126 	beq	r2,zero,5090a20 <__adddf3+0x520>
 5090c5c:	4808977a 	slli	r4,r9,29
 5090c60:	00880034 	movhi	r2,8192
 5090c64:	10bfffc4 	addi	r2,r2,-1
 5090c68:	3084703a 	and	r2,r6,r2
 5090c6c:	4814d0fa 	srli	r10,r9,3
 5090c70:	1104b03a 	or	r2,r2,r4
 5090c74:	3821883a 	mov	r16,r7
 5090c78:	003eea06 	br	5090824 <__adddf3+0x324>
 5090c7c:	5006977a 	slli	r3,r10,29
 5090c80:	00880034 	movhi	r2,8192
 5090c84:	10bfffc4 	addi	r2,r2,-1
 5090c88:	2084703a 	and	r2,r4,r2
 5090c8c:	5014d0fa 	srli	r10,r10,3
 5090c90:	10c4b03a 	or	r2,r2,r3
 5090c94:	003efc06 	br	5090888 <__adddf3+0x388>
 5090c98:	4806977a 	slli	r3,r9,29
 5090c9c:	00880034 	movhi	r2,8192
 5090ca0:	10bfffc4 	addi	r2,r2,-1
 5090ca4:	3084703a 	and	r2,r6,r2
 5090ca8:	4814d0fa 	srli	r10,r9,3
 5090cac:	10c4b03a 	or	r2,r2,r3
 5090cb0:	003ef506 	br	5090888 <__adddf3+0x388>
 5090cb4:	4808977a 	slli	r4,r9,29
 5090cb8:	00880034 	movhi	r2,8192
 5090cbc:	10bfffc4 	addi	r2,r2,-1
 5090cc0:	3084703a 	and	r2,r6,r2
 5090cc4:	4814d0fa 	srli	r10,r9,3
 5090cc8:	1104b03a 	or	r2,r2,r4
 5090ccc:	003ed306 	br	509081c <__adddf3+0x31c>
 5090cd0:	500a977a 	slli	r5,r10,29
 5090cd4:	5014d0fa 	srli	r10,r10,3
 5090cd8:	10001626 	beq	r2,zero,5090d34 <__adddf3+0x834>
 5090cdc:	00c80034 	movhi	r3,8192
 5090ce0:	18ffffc4 	addi	r3,r3,-1
 5090ce4:	20c4703a 	and	r2,r4,r3
 5090ce8:	5100022c 	andhi	r4,r10,8
 5090cec:	1144b03a 	or	r2,r2,r5
 5090cf0:	203ee526 	beq	r4,zero,5090888 <__adddf3+0x388>
 5090cf4:	4808d0fa 	srli	r4,r9,3
 5090cf8:	2140022c 	andhi	r5,r4,8
 5090cfc:	283ee21e 	bne	r5,zero,5090888 <__adddf3+0x388>
 5090d00:	4812977a 	slli	r9,r9,29
 5090d04:	30c4703a 	and	r2,r6,r3
 5090d08:	3821883a 	mov	r16,r7
 5090d0c:	1244b03a 	or	r2,r2,r9
 5090d10:	2015883a 	mov	r10,r4
 5090d14:	003edc06 	br	5090888 <__adddf3+0x388>
 5090d18:	4804977a 	slli	r2,r9,29
 5090d1c:	01080034 	movhi	r4,8192
 5090d20:	213fffc4 	addi	r4,r4,-1
 5090d24:	310c703a 	and	r6,r6,r4
 5090d28:	4814d0fa 	srli	r10,r9,3
 5090d2c:	1184b03a 	or	r2,r2,r6
 5090d30:	003ebc06 	br	5090824 <__adddf3+0x324>
 5090d34:	00880034 	movhi	r2,8192
 5090d38:	10bfffc4 	addi	r2,r2,-1
 5090d3c:	2084703a 	and	r2,r4,r2
 5090d40:	1144b03a 	or	r2,r2,r5
 5090d44:	003ed006 	br	5090888 <__adddf3+0x388>
 5090d48:	193ff804 	addi	r4,r3,-32
 5090d4c:	19400820 	cmpeqi	r5,r3,32
 5090d50:	5108d83a 	srl	r4,r10,r4
 5090d54:	2800041e 	bne	r5,zero,5090d68 <__adddf3+0x868>
 5090d58:	01401004 	movi	r5,64
 5090d5c:	28c7c83a 	sub	r3,r5,r3
 5090d60:	50d4983a 	sll	r10,r10,r3
 5090d64:	729cb03a 	or	r14,r14,r10
 5090d68:	7022c03a 	cmpne	r17,r14,zero
 5090d6c:	8922b03a 	or	r17,r17,r4
 5090d70:	003eef06 	br	5090930 <__adddf3+0x430>
 5090d74:	7363883a 	add	r17,r14,r13
 5090d78:	5255883a 	add	r10,r10,r9
 5090d7c:	8b51803a 	cmpltu	r8,r17,r13
 5090d80:	5211883a 	add	r8,r10,r8
 5090d84:	003f7e06 	br	5090b80 <__adddf3+0x680>
 5090d88:	4b50b03a 	or	r8,r9,r13
 5090d8c:	500a977a 	slli	r5,r10,29
 5090d90:	5014d0fa 	srli	r10,r10,3
 5090d94:	403fe726 	beq	r8,zero,5090d34 <__adddf3+0x834>
 5090d98:	00c80034 	movhi	r3,8192
 5090d9c:	18ffffc4 	addi	r3,r3,-1
 5090da0:	20c4703a 	and	r2,r4,r3
 5090da4:	5100022c 	andhi	r4,r10,8
 5090da8:	1144b03a 	or	r2,r2,r5
 5090dac:	203eb626 	beq	r4,zero,5090888 <__adddf3+0x388>
 5090db0:	4808d0fa 	srli	r4,r9,3
 5090db4:	2140022c 	andhi	r5,r4,8
 5090db8:	283eb31e 	bne	r5,zero,5090888 <__adddf3+0x388>
 5090dbc:	4804977a 	slli	r2,r9,29
 5090dc0:	30cc703a 	and	r6,r6,r3
 5090dc4:	3821883a 	mov	r16,r7
 5090dc8:	3084b03a 	or	r2,r6,r2
 5090dcc:	2015883a 	mov	r10,r4
 5090dd0:	003ead06 	br	5090888 <__adddf3+0x388>
 5090dd4:	8a04b03a 	or	r2,r17,r8
 5090dd8:	103f1126 	beq	r2,zero,5090a20 <__adddf3+0x520>
 5090ddc:	003e8806 	br	5090800 <__adddf3+0x300>
 5090de0:	0005883a 	mov	r2,zero
 5090de4:	00c1ffc4 	movi	r3,2047
 5090de8:	0011883a 	mov	r8,zero
 5090dec:	003e2a06 	br	5090698 <__adddf3+0x198>

05090df0 <__divdf3>:
 5090df0:	2804d53a 	srli	r2,r5,20
 5090df4:	defff204 	addi	sp,sp,-56
 5090df8:	dc000415 	stw	r16,16(sp)
 5090dfc:	04000434 	movhi	r16,16
 5090e00:	ddc00b15 	stw	r23,44(sp)
 5090e04:	dd800a15 	stw	r22,40(sp)
 5090e08:	dc800615 	stw	r18,24(sp)
 5090e0c:	843fffc4 	addi	r16,r16,-1
 5090e10:	dfc00d15 	stw	ra,52(sp)
 5090e14:	df000c15 	stw	fp,48(sp)
 5090e18:	dd400915 	stw	r21,36(sp)
 5090e1c:	dd000815 	stw	r20,32(sp)
 5090e20:	dcc00715 	stw	r19,28(sp)
 5090e24:	dc400515 	stw	r17,20(sp)
 5090e28:	1081ffcc 	andi	r2,r2,2047
 5090e2c:	282cd7fa 	srli	r22,r5,31
 5090e30:	302f883a 	mov	r23,r6
 5090e34:	2025883a 	mov	r18,r4
 5090e38:	2c20703a 	and	r16,r5,r16
 5090e3c:	10006a26 	beq	r2,zero,5090fe8 <__divdf3+0x1f8>
 5090e40:	10c1ffe0 	cmpeqi	r3,r2,2047
 5090e44:	18007d1e 	bne	r3,zero,509103c <__divdf3+0x24c>
 5090e48:	2028d77a 	srli	r20,r4,29
 5090e4c:	800a90fa 	slli	r5,r16,3
 5090e50:	202490fa 	slli	r18,r4,3
 5090e54:	14ff0044 	addi	r19,r2,-1023
 5090e58:	a14ab03a 	or	r5,r20,r5
 5090e5c:	2d002034 	orhi	r20,r5,128
 5090e60:	0021883a 	mov	r16,zero
 5090e64:	0039883a 	mov	fp,zero
 5090e68:	3804d53a 	srli	r2,r7,20
 5090e6c:	00c00434 	movhi	r3,16
 5090e70:	18ffffc4 	addi	r3,r3,-1
 5090e74:	1081ffcc 	andi	r2,r2,2047
 5090e78:	3810d7fa 	srli	r8,r7,31
 5090e7c:	38e2703a 	and	r17,r7,r3
 5090e80:	10004626 	beq	r2,zero,5090f9c <__divdf3+0x1ac>
 5090e84:	10c1ffe0 	cmpeqi	r3,r2,2047
 5090e88:	1800731e 	bne	r3,zero,5091058 <__divdf3+0x268>
 5090e8c:	880690fa 	slli	r3,r17,3
 5090e90:	b822d77a 	srli	r17,r23,29
 5090e94:	b81290fa 	slli	r9,r23,3
 5090e98:	10bf0044 	addi	r2,r2,-1023
 5090e9c:	88c6b03a 	or	r3,r17,r3
 5090ea0:	1c402034 	orhi	r17,r3,128
 5090ea4:	98a7c83a 	sub	r19,r19,r2
 5090ea8:	0007883a 	mov	r3,zero
 5090eac:	80800428 	cmpgeui	r2,r16,16
 5090eb0:	b22af03a 	xor	r21,r22,r8
 5090eb4:	1000ab1e 	bne	r2,zero,5091164 <__divdf3+0x374>
 5090eb8:	800490ba 	slli	r2,r16,2
 5090ebc:	01814274 	movhi	r6,1289
 5090ec0:	118d883a 	add	r6,r2,r6
 5090ec4:	3083b317 	ldw	r2,3788(r6)
 5090ec8:	1000683a 	jmp	r2
 5090ecc:	05091164 	muli	r20,zero,9285
 5090ed0:	05090f78 	rdprs	r20,zero,9277
 5090ed4:	05090f28 	cmpgeui	r20,zero,9276
 5090ed8:	05090f88 	cmpgei	r20,zero,9278
 5090edc:	05090f28 	cmpgeui	r20,zero,9276
 5090ee0:	05091108 	cmpgei	r20,zero,9284
 5090ee4:	05090f28 	cmpgeui	r20,zero,9276
 5090ee8:	05090f88 	cmpgei	r20,zero,9278
 5090eec:	05090f78 	rdprs	r20,zero,9277
 5090ef0:	05090f78 	rdprs	r20,zero,9277
 5090ef4:	05091108 	cmpgei	r20,zero,9284
 5090ef8:	05090f88 	cmpgei	r20,zero,9278
 5090efc:	05090f0c 	andi	r20,zero,9276
 5090f00:	05090f0c 	andi	r20,zero,9276
 5090f04:	05090f0c 	andi	r20,zero,9276
 5090f08:	05091120 	cmpeqi	r20,zero,9284
 5090f0c:	b02b883a 	mov	r21,r22
 5090f10:	e08000a0 	cmpeqi	r2,fp,2
 5090f14:	1000181e 	bne	r2,zero,5090f78 <__divdf3+0x188>
 5090f18:	e08000e0 	cmpeqi	r2,fp,3
 5090f1c:	1001c21e 	bne	r2,zero,5091628 <__divdf3+0x838>
 5090f20:	e0800060 	cmpeqi	r2,fp,1
 5090f24:	10006526 	beq	r2,zero,50910bc <__divdf3+0x2cc>
 5090f28:	0007883a 	mov	r3,zero
 5090f2c:	000b883a 	mov	r5,zero
 5090f30:	0025883a 	mov	r18,zero
 5090f34:	1806953a 	slli	r3,r3,20
 5090f38:	a82a97fa 	slli	r21,r21,31
 5090f3c:	9005883a 	mov	r2,r18
 5090f40:	1946b03a 	or	r3,r3,r5
 5090f44:	1d46b03a 	or	r3,r3,r21
 5090f48:	dfc00d17 	ldw	ra,52(sp)
 5090f4c:	df000c17 	ldw	fp,48(sp)
 5090f50:	ddc00b17 	ldw	r23,44(sp)
 5090f54:	dd800a17 	ldw	r22,40(sp)
 5090f58:	dd400917 	ldw	r21,36(sp)
 5090f5c:	dd000817 	ldw	r20,32(sp)
 5090f60:	dcc00717 	ldw	r19,28(sp)
 5090f64:	dc800617 	ldw	r18,24(sp)
 5090f68:	dc400517 	ldw	r17,20(sp)
 5090f6c:	dc000417 	ldw	r16,16(sp)
 5090f70:	dec00e04 	addi	sp,sp,56
 5090f74:	f800283a 	ret
 5090f78:	00c1ffc4 	movi	r3,2047
 5090f7c:	000b883a 	mov	r5,zero
 5090f80:	0025883a 	mov	r18,zero
 5090f84:	003feb06 	br	5090f34 <__divdf3+0x144>
 5090f88:	402b883a 	mov	r21,r8
 5090f8c:	8829883a 	mov	r20,r17
 5090f90:	4825883a 	mov	r18,r9
 5090f94:	1839883a 	mov	fp,r3
 5090f98:	003fdd06 	br	5090f10 <__divdf3+0x120>
 5090f9c:	8dd2b03a 	or	r9,r17,r23
 5090fa0:	48004226 	beq	r9,zero,50910ac <__divdf3+0x2bc>
 5090fa4:	da000015 	stw	r8,0(sp)
 5090fa8:	88013d26 	beq	r17,zero,50914a0 <__divdf3+0x6b0>
 5090fac:	8809883a 	mov	r4,r17
 5090fb0:	50929e00 	call	50929e0 <__clzsi2>
 5090fb4:	da000017 	ldw	r8,0(sp)
 5090fb8:	117ffd44 	addi	r5,r2,-11
 5090fbc:	01000744 	movi	r4,29
 5090fc0:	127ffe04 	addi	r9,r2,-8
 5090fc4:	2149c83a 	sub	r4,r4,r5
 5090fc8:	8a46983a 	sll	r3,r17,r9
 5090fcc:	b908d83a 	srl	r4,r23,r4
 5090fd0:	ba52983a 	sll	r9,r23,r9
 5090fd4:	20e2b03a 	or	r17,r4,r3
 5090fd8:	14c5883a 	add	r2,r2,r19
 5090fdc:	14c0fcc4 	addi	r19,r2,1011
 5090fe0:	0007883a 	mov	r3,zero
 5090fe4:	003fb106 	br	5090eac <__divdf3+0xbc>
 5090fe8:	8128b03a 	or	r20,r16,r4
 5090fec:	2023883a 	mov	r17,r4
 5090ff0:	a0002926 	beq	r20,zero,5091098 <__divdf3+0x2a8>
 5090ff4:	d9c00015 	stw	r7,0(sp)
 5090ff8:	80013526 	beq	r16,zero,50914d0 <__divdf3+0x6e0>
 5090ffc:	8009883a 	mov	r4,r16
 5091000:	50929e00 	call	50929e0 <__clzsi2>
 5091004:	d9c00017 	ldw	r7,0(sp)
 5091008:	10fffd44 	addi	r3,r2,-11
 509100c:	05000744 	movi	r20,29
 5091010:	113ffe04 	addi	r4,r2,-8
 5091014:	a0e9c83a 	sub	r20,r20,r3
 5091018:	810a983a 	sll	r5,r16,r4
 509101c:	8d28d83a 	srl	r20,r17,r20
 5091020:	8924983a 	sll	r18,r17,r4
 5091024:	a168b03a 	or	r20,r20,r5
 5091028:	04ff0344 	movi	r19,-1011
 509102c:	98a7c83a 	sub	r19,r19,r2
 5091030:	0021883a 	mov	r16,zero
 5091034:	0039883a 	mov	fp,zero
 5091038:	003f8b06 	br	5090e68 <__divdf3+0x78>
 509103c:	8128b03a 	or	r20,r16,r4
 5091040:	a000101e 	bne	r20,zero,5091084 <__divdf3+0x294>
 5091044:	0025883a 	mov	r18,zero
 5091048:	04000204 	movi	r16,8
 509104c:	04c1ffc4 	movi	r19,2047
 5091050:	07000084 	movi	fp,2
 5091054:	003f8406 	br	5090e68 <__divdf3+0x78>
 5091058:	8dd2b03a 	or	r9,r17,r23
 509105c:	9cfe0044 	addi	r19,r19,-2047
 5091060:	4800041e 	bne	r9,zero,5091074 <__divdf3+0x284>
 5091064:	84000094 	ori	r16,r16,2
 5091068:	0023883a 	mov	r17,zero
 509106c:	00c00084 	movi	r3,2
 5091070:	003f8e06 	br	5090eac <__divdf3+0xbc>
 5091074:	840000d4 	ori	r16,r16,3
 5091078:	b813883a 	mov	r9,r23
 509107c:	00c000c4 	movi	r3,3
 5091080:	003f8a06 	br	5090eac <__divdf3+0xbc>
 5091084:	8029883a 	mov	r20,r16
 5091088:	04c1ffc4 	movi	r19,2047
 509108c:	04000304 	movi	r16,12
 5091090:	070000c4 	movi	fp,3
 5091094:	003f7406 	br	5090e68 <__divdf3+0x78>
 5091098:	0025883a 	mov	r18,zero
 509109c:	04000104 	movi	r16,4
 50910a0:	0027883a 	mov	r19,zero
 50910a4:	07000044 	movi	fp,1
 50910a8:	003f6f06 	br	5090e68 <__divdf3+0x78>
 50910ac:	84000054 	ori	r16,r16,1
 50910b0:	0023883a 	mov	r17,zero
 50910b4:	00c00044 	movi	r3,1
 50910b8:	003f7c06 	br	5090eac <__divdf3+0xbc>
 50910bc:	9c40ffc4 	addi	r17,r19,1023
 50910c0:	0440c70e 	bge	zero,r17,50913e0 <__divdf3+0x5f0>
 50910c4:	908001cc 	andi	r2,r18,7
 50910c8:	1001331e 	bne	r2,zero,5091598 <__divdf3+0x7a8>
 50910cc:	900cd0fa 	srli	r6,r18,3
 50910d0:	a080402c 	andhi	r2,r20,256
 50910d4:	10000426 	beq	r2,zero,50910e8 <__divdf3+0x2f8>
 50910d8:	00bfc034 	movhi	r2,65280
 50910dc:	10bfffc4 	addi	r2,r2,-1
 50910e0:	a0a8703a 	and	r20,r20,r2
 50910e4:	9c410004 	addi	r17,r19,1024
 50910e8:	8881ffc8 	cmpgei	r2,r17,2047
 50910ec:	103fa21e 	bne	r2,zero,5090f78 <__divdf3+0x188>
 50910f0:	a008977a 	slli	r4,r20,29
 50910f4:	a00a927a 	slli	r5,r20,9
 50910f8:	88c1ffcc 	andi	r3,r17,2047
 50910fc:	21a4b03a 	or	r18,r4,r6
 5091100:	280ad33a 	srli	r5,r5,12
 5091104:	003f8b06 	br	5090f34 <__divdf3+0x144>
 5091108:	01400434 	movhi	r5,16
 509110c:	002b883a 	mov	r21,zero
 5091110:	297fffc4 	addi	r5,r5,-1
 5091114:	04bfffc4 	movi	r18,-1
 5091118:	00c1ffc4 	movi	r3,2047
 509111c:	003f8506 	br	5090f34 <__divdf3+0x144>
 5091120:	a080022c 	andhi	r2,r20,8
 5091124:	10000926 	beq	r2,zero,509114c <__divdf3+0x35c>
 5091128:	8880022c 	andhi	r2,r17,8
 509112c:	1000071e 	bne	r2,zero,509114c <__divdf3+0x35c>
 5091130:	00800434 	movhi	r2,16
 5091134:	89400234 	orhi	r5,r17,8
 5091138:	10bfffc4 	addi	r2,r2,-1
 509113c:	288a703a 	and	r5,r5,r2
 5091140:	402b883a 	mov	r21,r8
 5091144:	4825883a 	mov	r18,r9
 5091148:	003ff306 	br	5091118 <__divdf3+0x328>
 509114c:	00800434 	movhi	r2,16
 5091150:	a1400234 	orhi	r5,r20,8
 5091154:	10bfffc4 	addi	r2,r2,-1
 5091158:	288a703a 	and	r5,r5,r2
 509115c:	b02b883a 	mov	r21,r22
 5091160:	003fed06 	br	5091118 <__divdf3+0x328>
 5091164:	8d00c836 	bltu	r17,r20,5091488 <__divdf3+0x698>
 5091168:	8d00c626 	beq	r17,r20,5091484 <__divdf3+0x694>
 509116c:	9cffffc4 	addi	r19,r19,-1
 5091170:	0021883a 	mov	r16,zero
 5091174:	8806923a 	slli	r3,r17,8
 5091178:	480cd63a 	srli	r6,r9,24
 509117c:	4804923a 	slli	r2,r9,8
 5091180:	1838d43a 	srli	fp,r3,16
 5091184:	a009883a 	mov	r4,r20
 5091188:	30ecb03a 	or	r22,r6,r3
 509118c:	e00b883a 	mov	r5,fp
 5091190:	d8800015 	stw	r2,0(sp)
 5091194:	50828000 	call	5082800 <__udivsi3>
 5091198:	a009883a 	mov	r4,r20
 509119c:	e00b883a 	mov	r5,fp
 50911a0:	d8800115 	stw	r2,4(sp)
 50911a4:	50828640 	call	5082864 <__umodsi3>
 50911a8:	d8c00117 	ldw	r3,4(sp)
 50911ac:	1004943a 	slli	r2,r2,16
 50911b0:	9008d43a 	srli	r4,r18,16
 50911b4:	b5ffffcc 	andi	r23,r22,65535
 50911b8:	b8e3383a 	mul	r17,r23,r3
 50911bc:	2088b03a 	or	r4,r4,r2
 50911c0:	2440042e 	bgeu	r4,r17,50911d4 <__divdf3+0x3e4>
 50911c4:	2589883a 	add	r4,r4,r22
 50911c8:	18bfffc4 	addi	r2,r3,-1
 50911cc:	2580d32e 	bgeu	r4,r22,509151c <__divdf3+0x72c>
 50911d0:	1007883a 	mov	r3,r2
 50911d4:	2463c83a 	sub	r17,r4,r17
 50911d8:	e00b883a 	mov	r5,fp
 50911dc:	8809883a 	mov	r4,r17
 50911e0:	d8c00115 	stw	r3,4(sp)
 50911e4:	50828000 	call	5082800 <__udivsi3>
 50911e8:	8809883a 	mov	r4,r17
 50911ec:	e00b883a 	mov	r5,fp
 50911f0:	1029883a 	mov	r20,r2
 50911f4:	50828640 	call	5082864 <__umodsi3>
 50911f8:	1008943a 	slli	r4,r2,16
 50911fc:	bd13383a 	mul	r9,r23,r20
 5091200:	94bfffcc 	andi	r18,r18,65535
 5091204:	9108b03a 	or	r4,r18,r4
 5091208:	d8c00117 	ldw	r3,4(sp)
 509120c:	2240042e 	bgeu	r4,r9,5091220 <__divdf3+0x430>
 5091210:	2589883a 	add	r4,r4,r22
 5091214:	a0bfffc4 	addi	r2,r20,-1
 5091218:	2580bc2e 	bgeu	r4,r22,509150c <__divdf3+0x71c>
 509121c:	1029883a 	mov	r20,r2
 5091220:	180a943a 	slli	r5,r3,16
 5091224:	d8800017 	ldw	r2,0(sp)
 5091228:	2249c83a 	sub	r4,r4,r9
 509122c:	2d28b03a 	or	r20,r5,r20
 5091230:	100ed43a 	srli	r7,r2,16
 5091234:	123fffcc 	andi	r8,r2,65535
 5091238:	a00ad43a 	srli	r5,r20,16
 509123c:	a0bfffcc 	andi	r2,r20,65535
 5091240:	1225383a 	mul	r18,r2,r8
 5091244:	2a15383a 	mul	r10,r5,r8
 5091248:	3887383a 	mul	r3,r7,r2
 509124c:	9004d43a 	srli	r2,r18,16
 5091250:	29cb383a 	mul	r5,r5,r7
 5091254:	1a87883a 	add	r3,r3,r10
 5091258:	10c5883a 	add	r2,r2,r3
 509125c:	1280022e 	bgeu	r2,r10,5091268 <__divdf3+0x478>
 5091260:	00c00074 	movhi	r3,1
 5091264:	28cb883a 	add	r5,r5,r3
 5091268:	1006d43a 	srli	r3,r2,16
 509126c:	1004943a 	slli	r2,r2,16
 5091270:	94bfffcc 	andi	r18,r18,65535
 5091274:	1947883a 	add	r3,r3,r5
 5091278:	14a5883a 	add	r18,r2,r18
 509127c:	20c07636 	bltu	r4,r3,5091458 <__divdf3+0x668>
 5091280:	20c07426 	beq	r4,r3,5091454 <__divdf3+0x664>
 5091284:	84a5c83a 	sub	r18,r16,r18
 5091288:	20c9c83a 	sub	r4,r4,r3
 509128c:	84a1803a 	cmpltu	r16,r16,r18
 5091290:	2421c83a 	sub	r16,r4,r16
 5091294:	9c40ffc4 	addi	r17,r19,1023
 5091298:	b400ba26 	beq	r22,r16,5091584 <__divdf3+0x794>
 509129c:	8009883a 	mov	r4,r16
 50912a0:	e00b883a 	mov	r5,fp
 50912a4:	da000315 	stw	r8,12(sp)
 50912a8:	d9c00215 	stw	r7,8(sp)
 50912ac:	50828000 	call	5082800 <__udivsi3>
 50912b0:	8009883a 	mov	r4,r16
 50912b4:	e00b883a 	mov	r5,fp
 50912b8:	d8800115 	stw	r2,4(sp)
 50912bc:	50828640 	call	5082864 <__umodsi3>
 50912c0:	da400117 	ldw	r9,4(sp)
 50912c4:	1004943a 	slli	r2,r2,16
 50912c8:	9008d43a 	srli	r4,r18,16
 50912cc:	ba61383a 	mul	r16,r23,r9
 50912d0:	d9c00217 	ldw	r7,8(sp)
 50912d4:	2088b03a 	or	r4,r4,r2
 50912d8:	da000317 	ldw	r8,12(sp)
 50912dc:	2400062e 	bgeu	r4,r16,50912f8 <__divdf3+0x508>
 50912e0:	2589883a 	add	r4,r4,r22
 50912e4:	48bfffc4 	addi	r2,r9,-1
 50912e8:	2580b536 	bltu	r4,r22,50915c0 <__divdf3+0x7d0>
 50912ec:	2400b42e 	bgeu	r4,r16,50915c0 <__divdf3+0x7d0>
 50912f0:	4a7fff84 	addi	r9,r9,-2
 50912f4:	2589883a 	add	r4,r4,r22
 50912f8:	2421c83a 	sub	r16,r4,r16
 50912fc:	8009883a 	mov	r4,r16
 5091300:	e00b883a 	mov	r5,fp
 5091304:	da000315 	stw	r8,12(sp)
 5091308:	da400215 	stw	r9,8(sp)
 509130c:	d9c00115 	stw	r7,4(sp)
 5091310:	50828000 	call	5082800 <__udivsi3>
 5091314:	8009883a 	mov	r4,r16
 5091318:	e00b883a 	mov	r5,fp
 509131c:	1021883a 	mov	r16,r2
 5091320:	50828640 	call	5082864 <__umodsi3>
 5091324:	1004943a 	slli	r2,r2,16
 5091328:	bc2f383a 	mul	r23,r23,r16
 509132c:	90ffffcc 	andi	r3,r18,65535
 5091330:	1886b03a 	or	r3,r3,r2
 5091334:	d9c00117 	ldw	r7,4(sp)
 5091338:	da400217 	ldw	r9,8(sp)
 509133c:	da000317 	ldw	r8,12(sp)
 5091340:	1dc0062e 	bgeu	r3,r23,509135c <__divdf3+0x56c>
 5091344:	1d87883a 	add	r3,r3,r22
 5091348:	80bfffc4 	addi	r2,r16,-1
 509134c:	1d809a36 	bltu	r3,r22,50915b8 <__divdf3+0x7c8>
 5091350:	1dc0992e 	bgeu	r3,r23,50915b8 <__divdf3+0x7c8>
 5091354:	843fff84 	addi	r16,r16,-2
 5091358:	1d87883a 	add	r3,r3,r22
 509135c:	4808943a 	slli	r4,r9,16
 5091360:	1defc83a 	sub	r23,r3,r23
 5091364:	2424b03a 	or	r18,r4,r16
 5091368:	900ad43a 	srli	r5,r18,16
 509136c:	90bfffcc 	andi	r2,r18,65535
 5091370:	4087383a 	mul	r3,r8,r2
 5091374:	3885383a 	mul	r2,r7,r2
 5091378:	2a11383a 	mul	r8,r5,r8
 509137c:	1808d43a 	srli	r4,r3,16
 5091380:	394f383a 	mul	r7,r7,r5
 5091384:	1205883a 	add	r2,r2,r8
 5091388:	2089883a 	add	r4,r4,r2
 509138c:	2200022e 	bgeu	r4,r8,5091398 <__divdf3+0x5a8>
 5091390:	00800074 	movhi	r2,1
 5091394:	388f883a 	add	r7,r7,r2
 5091398:	2004d43a 	srli	r2,r4,16
 509139c:	2008943a 	slli	r4,r4,16
 50913a0:	18ffffcc 	andi	r3,r3,65535
 50913a4:	11cf883a 	add	r7,r2,r7
 50913a8:	20c9883a 	add	r4,r4,r3
 50913ac:	b9c00436 	bltu	r23,r7,50913c0 <__divdf3+0x5d0>
 50913b0:	b9c00226 	beq	r23,r7,50913bc <__divdf3+0x5cc>
 50913b4:	94800054 	ori	r18,r18,1
 50913b8:	003f4106 	br	50910c0 <__divdf3+0x2d0>
 50913bc:	203f4026 	beq	r4,zero,50910c0 <__divdf3+0x2d0>
 50913c0:	b5ef883a 	add	r23,r22,r23
 50913c4:	90bfffc4 	addi	r2,r18,-1
 50913c8:	bd806936 	bltu	r23,r22,5091570 <__divdf3+0x780>
 50913cc:	b9c08636 	bltu	r23,r7,50915e8 <__divdf3+0x7f8>
 50913d0:	b9c09a26 	beq	r23,r7,509163c <__divdf3+0x84c>
 50913d4:	1025883a 	mov	r18,r2
 50913d8:	003ff606 	br	50913b4 <__divdf3+0x5c4>
 50913dc:	04bfffc4 	movi	r18,-1
 50913e0:	01400044 	movi	r5,1
 50913e4:	2c4bc83a 	sub	r5,r5,r17
 50913e8:	28800e48 	cmpgei	r2,r5,57
 50913ec:	103ece1e 	bne	r2,zero,5090f28 <__divdf3+0x138>
 50913f0:	28800808 	cmpgei	r2,r5,32
 50913f4:	10004d1e 	bne	r2,zero,509152c <__divdf3+0x73c>
 50913f8:	98810784 	addi	r2,r19,1054
 50913fc:	a086983a 	sll	r3,r20,r2
 5091400:	9148d83a 	srl	r4,r18,r5
 5091404:	9084983a 	sll	r2,r18,r2
 5091408:	a14ad83a 	srl	r5,r20,r5
 509140c:	1924b03a 	or	r18,r3,r4
 5091410:	1004c03a 	cmpne	r2,r2,zero
 5091414:	90a4b03a 	or	r18,r18,r2
 5091418:	908001cc 	andi	r2,r18,7
 509141c:	10000726 	beq	r2,zero,509143c <__divdf3+0x64c>
 5091420:	908003cc 	andi	r2,r18,15
 5091424:	10800120 	cmpeqi	r2,r2,4
 5091428:	1000041e 	bne	r2,zero,509143c <__divdf3+0x64c>
 509142c:	90800104 	addi	r2,r18,4
 5091430:	14a5803a 	cmpltu	r18,r2,r18
 5091434:	2c8b883a 	add	r5,r5,r18
 5091438:	1025883a 	mov	r18,r2
 509143c:	2880202c 	andhi	r2,r5,128
 5091440:	10007526 	beq	r2,zero,5091618 <__divdf3+0x828>
 5091444:	00c00044 	movi	r3,1
 5091448:	000b883a 	mov	r5,zero
 509144c:	0025883a 	mov	r18,zero
 5091450:	003eb806 	br	5090f34 <__divdf3+0x144>
 5091454:	84bf8b2e 	bgeu	r16,r18,5091284 <__divdf3+0x494>
 5091458:	d8800017 	ldw	r2,0(sp)
 509145c:	80a1883a 	add	r16,r16,r2
 5091460:	8085803a 	cmpltu	r2,r16,r2
 5091464:	1585883a 	add	r2,r2,r22
 5091468:	2089883a 	add	r4,r4,r2
 509146c:	a0bfffc4 	addi	r2,r20,-1
 5091470:	b100222e 	bgeu	r22,r4,50914fc <__divdf3+0x70c>
 5091474:	20c05536 	bltu	r4,r3,50915cc <__divdf3+0x7dc>
 5091478:	19005326 	beq	r3,r4,50915c8 <__divdf3+0x7d8>
 509147c:	1029883a 	mov	r20,r2
 5091480:	003f8006 	br	5091284 <__divdf3+0x494>
 5091484:	927f3936 	bltu	r18,r9,509116c <__divdf3+0x37c>
 5091488:	a00897fa 	slli	r4,r20,31
 509148c:	9004d07a 	srli	r2,r18,1
 5091490:	902097fa 	slli	r16,r18,31
 5091494:	a028d07a 	srli	r20,r20,1
 5091498:	20a4b03a 	or	r18,r4,r2
 509149c:	003f3506 	br	5091174 <__divdf3+0x384>
 50914a0:	b809883a 	mov	r4,r23
 50914a4:	50929e00 	call	50929e0 <__clzsi2>
 50914a8:	11400544 	addi	r5,r2,21
 50914ac:	29000748 	cmpgei	r4,r5,29
 50914b0:	1007883a 	mov	r3,r2
 50914b4:	da000017 	ldw	r8,0(sp)
 50914b8:	10800804 	addi	r2,r2,32
 50914bc:	203ebf26 	beq	r4,zero,5090fbc <__divdf3+0x1cc>
 50914c0:	18fffe04 	addi	r3,r3,-8
 50914c4:	b8e2983a 	sll	r17,r23,r3
 50914c8:	0013883a 	mov	r9,zero
 50914cc:	003ec206 	br	5090fd8 <__divdf3+0x1e8>
 50914d0:	50929e00 	call	50929e0 <__clzsi2>
 50914d4:	10c00544 	addi	r3,r2,21
 50914d8:	19000748 	cmpgei	r4,r3,29
 50914dc:	100b883a 	mov	r5,r2
 50914e0:	d9c00017 	ldw	r7,0(sp)
 50914e4:	10800804 	addi	r2,r2,32
 50914e8:	203ec826 	beq	r4,zero,509100c <__divdf3+0x21c>
 50914ec:	297ffe04 	addi	r5,r5,-8
 50914f0:	9168983a 	sll	r20,r18,r5
 50914f4:	0025883a 	mov	r18,zero
 50914f8:	003ecb06 	br	5091028 <__divdf3+0x238>
 50914fc:	b13fdf1e 	bne	r22,r4,509147c <__divdf3+0x68c>
 5091500:	d9400017 	ldw	r5,0(sp)
 5091504:	817fdd36 	bltu	r16,r5,509147c <__divdf3+0x68c>
 5091508:	003fda06 	br	5091474 <__divdf3+0x684>
 509150c:	227f432e 	bgeu	r4,r9,509121c <__divdf3+0x42c>
 5091510:	a53fff84 	addi	r20,r20,-2
 5091514:	2589883a 	add	r4,r4,r22
 5091518:	003f4106 	br	5091220 <__divdf3+0x430>
 509151c:	247f2c2e 	bgeu	r4,r17,50911d0 <__divdf3+0x3e0>
 5091520:	18ffff84 	addi	r3,r3,-2
 5091524:	2589883a 	add	r4,r4,r22
 5091528:	003f2a06 	br	50911d4 <__divdf3+0x3e4>
 509152c:	00fff844 	movi	r3,-31
 5091530:	1c47c83a 	sub	r3,r3,r17
 5091534:	29400820 	cmpeqi	r5,r5,32
 5091538:	a0c6d83a 	srl	r3,r20,r3
 509153c:	2800031e 	bne	r5,zero,509154c <__divdf3+0x75c>
 5091540:	99410f84 	addi	r5,r19,1086
 5091544:	a14a983a 	sll	r5,r20,r5
 5091548:	9164b03a 	or	r18,r18,r5
 509154c:	9024c03a 	cmpne	r18,r18,zero
 5091550:	90e4b03a 	or	r18,r18,r3
 5091554:	910001cc 	andi	r4,r18,7
 5091558:	20002b1e 	bne	r4,zero,5091608 <__divdf3+0x818>
 509155c:	000b883a 	mov	r5,zero
 5091560:	9024d0fa 	srli	r18,r18,3
 5091564:	0007883a 	mov	r3,zero
 5091568:	9124b03a 	or	r18,r18,r4
 509156c:	003e7106 	br	5090f34 <__divdf3+0x144>
 5091570:	1025883a 	mov	r18,r2
 5091574:	b9ff8f1e 	bne	r23,r7,50913b4 <__divdf3+0x5c4>
 5091578:	d8800017 	ldw	r2,0(sp)
 509157c:	20bf8d1e 	bne	r4,r2,50913b4 <__divdf3+0x5c4>
 5091580:	003ecf06 	br	50910c0 <__divdf3+0x2d0>
 5091584:	047f950e 	bge	zero,r17,50913dc <__divdf3+0x5ec>
 5091588:	000d883a 	mov	r6,zero
 509158c:	01000044 	movi	r4,1
 5091590:	a129883a 	add	r20,r20,r4
 5091594:	003ece06 	br	50910d0 <__divdf3+0x2e0>
 5091598:	908003cc 	andi	r2,r18,15
 509159c:	10800118 	cmpnei	r2,r2,4
 50915a0:	103eca26 	beq	r2,zero,50910cc <__divdf3+0x2dc>
 50915a4:	91800104 	addi	r6,r18,4
 50915a8:	013ffec4 	movi	r4,-5
 50915ac:	300cd0fa 	srli	r6,r6,3
 50915b0:	2489803a 	cmpltu	r4,r4,r18
 50915b4:	003ff606 	br	5091590 <__divdf3+0x7a0>
 50915b8:	1021883a 	mov	r16,r2
 50915bc:	003f6706 	br	509135c <__divdf3+0x56c>
 50915c0:	1013883a 	mov	r9,r2
 50915c4:	003f4c06 	br	50912f8 <__divdf3+0x508>
 50915c8:	84bfac2e 	bgeu	r16,r18,509147c <__divdf3+0x68c>
 50915cc:	d8800017 	ldw	r2,0(sp)
 50915d0:	a53fff84 	addi	r20,r20,-2
 50915d4:	80a1883a 	add	r16,r16,r2
 50915d8:	8085803a 	cmpltu	r2,r16,r2
 50915dc:	1585883a 	add	r2,r2,r22
 50915e0:	2089883a 	add	r4,r4,r2
 50915e4:	003f2706 	br	5091284 <__divdf3+0x494>
 50915e8:	d8c00017 	ldw	r3,0(sp)
 50915ec:	94bfff84 	addi	r18,r18,-2
 50915f0:	18c5883a 	add	r2,r3,r3
 50915f4:	10c7803a 	cmpltu	r3,r2,r3
 50915f8:	1d8d883a 	add	r6,r3,r22
 50915fc:	b9af883a 	add	r23,r23,r6
 5091600:	d8800015 	stw	r2,0(sp)
 5091604:	003fdb06 	br	5091574 <__divdf3+0x784>
 5091608:	908003cc 	andi	r2,r18,15
 509160c:	10800118 	cmpnei	r2,r2,4
 5091610:	000b883a 	mov	r5,zero
 5091614:	103f851e 	bne	r2,zero,509142c <__divdf3+0x63c>
 5091618:	2804927a 	slli	r2,r5,9
 509161c:	2808977a 	slli	r4,r5,29
 5091620:	100ad33a 	srli	r5,r2,12
 5091624:	003fce06 	br	5091560 <__divdf3+0x770>
 5091628:	00800434 	movhi	r2,16
 509162c:	a1400234 	orhi	r5,r20,8
 5091630:	10bfffc4 	addi	r2,r2,-1
 5091634:	288a703a 	and	r5,r5,r2
 5091638:	003eb706 	br	5091118 <__divdf3+0x328>
 509163c:	d8c00017 	ldw	r3,0(sp)
 5091640:	193fe936 	bltu	r3,r4,50915e8 <__divdf3+0x7f8>
 5091644:	1025883a 	mov	r18,r2
 5091648:	003fcb06 	br	5091578 <__divdf3+0x788>

0509164c <__eqdf2>:
 509164c:	2810d53a 	srli	r8,r5,20
 5091650:	3806d53a 	srli	r3,r7,20
 5091654:	00800434 	movhi	r2,16
 5091658:	4201ffcc 	andi	r8,r8,2047
 509165c:	10bfffc4 	addi	r2,r2,-1
 5091660:	4241ffd8 	cmpnei	r9,r8,2047
 5091664:	2814d7fa 	srli	r10,r5,31
 5091668:	3816d7fa 	srli	r11,r7,31
 509166c:	288a703a 	and	r5,r5,r2
 5091670:	388e703a 	and	r7,r7,r2
 5091674:	1881ffcc 	andi	r2,r3,2047
 5091678:	48000626 	beq	r9,zero,5091694 <__eqdf2+0x48>
 509167c:	10c1ffe0 	cmpeqi	r3,r2,2047
 5091680:	1800021e 	bne	r3,zero,509168c <__eqdf2+0x40>
 5091684:	4080011e 	bne	r8,r2,509168c <__eqdf2+0x40>
 5091688:	29c00826 	beq	r5,r7,50916ac <__eqdf2+0x60>
 509168c:	00800044 	movi	r2,1
 5091690:	f800283a 	ret
 5091694:	2906b03a 	or	r3,r5,r4
 5091698:	183ffc1e 	bne	r3,zero,509168c <__eqdf2+0x40>
 509169c:	1081ffd8 	cmpnei	r2,r2,2047
 50916a0:	103ffa1e 	bne	r2,zero,509168c <__eqdf2+0x40>
 50916a4:	398eb03a 	or	r7,r7,r6
 50916a8:	383ff81e 	bne	r7,zero,509168c <__eqdf2+0x40>
 50916ac:	21bff71e 	bne	r4,r6,509168c <__eqdf2+0x40>
 50916b0:	52c00426 	beq	r10,r11,50916c4 <__eqdf2+0x78>
 50916b4:	403ff51e 	bne	r8,zero,509168c <__eqdf2+0x40>
 50916b8:	290ab03a 	or	r5,r5,r4
 50916bc:	2804c03a 	cmpne	r2,r5,zero
 50916c0:	f800283a 	ret
 50916c4:	0005883a 	mov	r2,zero
 50916c8:	f800283a 	ret

050916cc <__gedf2>:
 50916cc:	2810d53a 	srli	r8,r5,20
 50916d0:	3812d53a 	srli	r9,r7,20
 50916d4:	00c00434 	movhi	r3,16
 50916d8:	4201ffcc 	andi	r8,r8,2047
 50916dc:	18ffffc4 	addi	r3,r3,-1
 50916e0:	4281ffd8 	cmpnei	r10,r8,2047
 50916e4:	2816d7fa 	srli	r11,r5,31
 50916e8:	3804d7fa 	srli	r2,r7,31
 50916ec:	28ca703a 	and	r5,r5,r3
 50916f0:	38ce703a 	and	r7,r7,r3
 50916f4:	48c1ffcc 	andi	r3,r9,2047
 50916f8:	50000a26 	beq	r10,zero,5091724 <__gedf2+0x58>
 50916fc:	1a41ffd8 	cmpnei	r9,r3,2047
 5091700:	48000c26 	beq	r9,zero,5091734 <__gedf2+0x68>
 5091704:	4000171e 	bne	r8,zero,5091764 <__gedf2+0x98>
 5091708:	2912b03a 	or	r9,r5,r4
 509170c:	1800121e 	bne	r3,zero,5091758 <__gedf2+0x8c>
 5091710:	3994b03a 	or	r10,r7,r6
 5091714:	5000101e 	bne	r10,zero,5091758 <__gedf2+0x8c>
 5091718:	48000a1e 	bne	r9,zero,5091744 <__gedf2+0x78>
 509171c:	0005883a 	mov	r2,zero
 5091720:	f800283a 	ret
 5091724:	2912b03a 	or	r9,r5,r4
 5091728:	48001d1e 	bne	r9,zero,50917a0 <__gedf2+0xd4>
 509172c:	1a41ffe0 	cmpeqi	r9,r3,2047
 5091730:	48000c26 	beq	r9,zero,5091764 <__gedf2+0x98>
 5091734:	3992b03a 	or	r9,r7,r6
 5091738:	4800191e 	bne	r9,zero,50917a0 <__gedf2+0xd4>
 509173c:	40000526 	beq	r8,zero,5091754 <__gedf2+0x88>
 5091740:	58800c26 	beq	r11,r2,5091774 <__gedf2+0xa8>
 5091744:	00800044 	movi	r2,1
 5091748:	58000526 	beq	r11,zero,5091760 <__gedf2+0x94>
 509174c:	00bfffc4 	movi	r2,-1
 5091750:	f800283a 	ret
 5091754:	2912b03a 	or	r9,r5,r4
 5091758:	483ff91e 	bne	r9,zero,5091740 <__gedf2+0x74>
 509175c:	103ffb26 	beq	r2,zero,509174c <__gedf2+0x80>
 5091760:	f800283a 	ret
 5091764:	183ff61e 	bne	r3,zero,5091740 <__gedf2+0x74>
 5091768:	3992b03a 	or	r9,r7,r6
 509176c:	483ff41e 	bne	r9,zero,5091740 <__gedf2+0x74>
 5091770:	003ff406 	br	5091744 <__gedf2+0x78>
 5091774:	1a000716 	blt	r3,r8,5091794 <__gedf2+0xc8>
 5091778:	40fff816 	blt	r8,r3,509175c <__gedf2+0x90>
 509177c:	397ff136 	bltu	r7,r5,5091744 <__gedf2+0x78>
 5091780:	29c00926 	beq	r5,r7,50917a8 <__gedf2+0xdc>
 5091784:	29ffe52e 	bgeu	r5,r7,509171c <__gedf2+0x50>
 5091788:	583ff026 	beq	r11,zero,509174c <__gedf2+0x80>
 509178c:	5805883a 	mov	r2,r11
 5091790:	f800283a 	ret
 5091794:	103fed1e 	bne	r2,zero,509174c <__gedf2+0x80>
 5091798:	00800044 	movi	r2,1
 509179c:	f800283a 	ret
 50917a0:	00bfff84 	movi	r2,-2
 50917a4:	f800283a 	ret
 50917a8:	313fe636 	bltu	r6,r4,5091744 <__gedf2+0x78>
 50917ac:	21bfdb2e 	bgeu	r4,r6,509171c <__gedf2+0x50>
 50917b0:	003ff506 	br	5091788 <__gedf2+0xbc>

050917b4 <__ledf2>:
 50917b4:	2810d53a 	srli	r8,r5,20
 50917b8:	3812d53a 	srli	r9,r7,20
 50917bc:	00c00434 	movhi	r3,16
 50917c0:	4201ffcc 	andi	r8,r8,2047
 50917c4:	18ffffc4 	addi	r3,r3,-1
 50917c8:	4281ffd8 	cmpnei	r10,r8,2047
 50917cc:	2816d7fa 	srli	r11,r5,31
 50917d0:	3804d7fa 	srli	r2,r7,31
 50917d4:	28ca703a 	and	r5,r5,r3
 50917d8:	38ce703a 	and	r7,r7,r3
 50917dc:	48c1ffcc 	andi	r3,r9,2047
 50917e0:	50000a26 	beq	r10,zero,509180c <__ledf2+0x58>
 50917e4:	1a41ffd8 	cmpnei	r9,r3,2047
 50917e8:	48000c26 	beq	r9,zero,509181c <__ledf2+0x68>
 50917ec:	4000191e 	bne	r8,zero,5091854 <__ledf2+0xa0>
 50917f0:	2912b03a 	or	r9,r5,r4
 50917f4:	18000d1e 	bne	r3,zero,509182c <__ledf2+0x78>
 50917f8:	3994b03a 	or	r10,r7,r6
 50917fc:	50000b1e 	bne	r10,zero,509182c <__ledf2+0x78>
 5091800:	48000c1e 	bne	r9,zero,5091834 <__ledf2+0x80>
 5091804:	0005883a 	mov	r2,zero
 5091808:	f800283a 	ret
 509180c:	2912b03a 	or	r9,r5,r4
 5091810:	48000c1e 	bne	r9,zero,5091844 <__ledf2+0x90>
 5091814:	1a41ffe0 	cmpeqi	r9,r3,2047
 5091818:	48000e26 	beq	r9,zero,5091854 <__ledf2+0xa0>
 509181c:	3992b03a 	or	r9,r7,r6
 5091820:	4800081e 	bne	r9,zero,5091844 <__ledf2+0x90>
 5091824:	4000021e 	bne	r8,zero,5091830 <__ledf2+0x7c>
 5091828:	2912b03a 	or	r9,r5,r4
 509182c:	48000726 	beq	r9,zero,509184c <__ledf2+0x98>
 5091830:	58800c26 	beq	r11,r2,5091864 <__ledf2+0xb0>
 5091834:	00800044 	movi	r2,1
 5091838:	58000526 	beq	r11,zero,5091850 <__ledf2+0x9c>
 509183c:	00bfffc4 	movi	r2,-1
 5091840:	f800283a 	ret
 5091844:	00800084 	movi	r2,2
 5091848:	f800283a 	ret
 509184c:	103ffb26 	beq	r2,zero,509183c <__ledf2+0x88>
 5091850:	f800283a 	ret
 5091854:	183ff61e 	bne	r3,zero,5091830 <__ledf2+0x7c>
 5091858:	3992b03a 	or	r9,r7,r6
 509185c:	483ff41e 	bne	r9,zero,5091830 <__ledf2+0x7c>
 5091860:	003ff406 	br	5091834 <__ledf2+0x80>
 5091864:	1a00030e 	bge	r3,r8,5091874 <__ledf2+0xc0>
 5091868:	103ff41e 	bne	r2,zero,509183c <__ledf2+0x88>
 509186c:	00800044 	movi	r2,1
 5091870:	f800283a 	ret
 5091874:	40fff516 	blt	r8,r3,509184c <__ledf2+0x98>
 5091878:	397fee36 	bltu	r7,r5,5091834 <__ledf2+0x80>
 509187c:	29c00426 	beq	r5,r7,5091890 <__ledf2+0xdc>
 5091880:	29ffe02e 	bgeu	r5,r7,5091804 <__ledf2+0x50>
 5091884:	583fed26 	beq	r11,zero,509183c <__ledf2+0x88>
 5091888:	5805883a 	mov	r2,r11
 509188c:	f800283a 	ret
 5091890:	313fe836 	bltu	r6,r4,5091834 <__ledf2+0x80>
 5091894:	21bfdb2e 	bgeu	r4,r6,5091804 <__ledf2+0x50>
 5091898:	003ffa06 	br	5091884 <__ledf2+0xd0>

0509189c <__muldf3>:
 509189c:	2804d53a 	srli	r2,r5,20
 50918a0:	defff504 	addi	sp,sp,-44
 50918a4:	02000434 	movhi	r8,16
 50918a8:	df000915 	stw	fp,36(sp)
 50918ac:	dd000515 	stw	r20,20(sp)
 50918b0:	dcc00415 	stw	r19,16(sp)
 50918b4:	dc000115 	stw	r16,4(sp)
 50918b8:	423fffc4 	addi	r8,r8,-1
 50918bc:	dfc00a15 	stw	ra,40(sp)
 50918c0:	ddc00815 	stw	r23,32(sp)
 50918c4:	dd800715 	stw	r22,28(sp)
 50918c8:	dd400615 	stw	r21,24(sp)
 50918cc:	dc800315 	stw	r18,12(sp)
 50918d0:	dc400215 	stw	r17,8(sp)
 50918d4:	1081ffcc 	andi	r2,r2,2047
 50918d8:	2828d7fa 	srli	r20,r5,31
 50918dc:	2027883a 	mov	r19,r4
 50918e0:	3039883a 	mov	fp,r6
 50918e4:	2a20703a 	and	r16,r5,r8
 50918e8:	1000e726 	beq	r2,zero,5091c88 <__muldf3+0x3ec>
 50918ec:	10c1ffe0 	cmpeqi	r3,r2,2047
 50918f0:	1800f91e 	bne	r3,zero,5091cd8 <__muldf3+0x43c>
 50918f4:	800a90fa 	slli	r5,r16,3
 50918f8:	2020d77a 	srli	r16,r4,29
 50918fc:	202490fa 	slli	r18,r4,3
 5091900:	14ff0044 	addi	r19,r2,-1023
 5091904:	8160b03a 	or	r16,r16,r5
 5091908:	84002034 	orhi	r16,r16,128
 509190c:	002b883a 	mov	r21,zero
 5091910:	002d883a 	mov	r22,zero
 5091914:	3804d53a 	srli	r2,r7,20
 5091918:	00c00434 	movhi	r3,16
 509191c:	18ffffc4 	addi	r3,r3,-1
 5091920:	1081ffcc 	andi	r2,r2,2047
 5091924:	382ed7fa 	srli	r23,r7,31
 5091928:	38e2703a 	and	r17,r7,r3
 509192c:	1000c526 	beq	r2,zero,5091c44 <__muldf3+0x3a8>
 5091930:	10c1ffe0 	cmpeqi	r3,r2,2047
 5091934:	1800ef1e 	bne	r3,zero,5091cf4 <__muldf3+0x458>
 5091938:	880690fa 	slli	r3,r17,3
 509193c:	e022d77a 	srli	r17,fp,29
 5091940:	e00a90fa 	slli	r5,fp,3
 5091944:	10bf0044 	addi	r2,r2,-1023
 5091948:	88e2b03a 	or	r17,r17,r3
 509194c:	8c402034 	orhi	r17,r17,128
 5091950:	98a7883a 	add	r19,r19,r2
 5091954:	0007883a 	mov	r3,zero
 5091958:	a8800428 	cmpgeui	r2,r21,16
 509195c:	a5ccf03a 	xor	r6,r20,r23
 5091960:	9a000044 	addi	r8,r19,1
 5091964:	1000371e 	bne	r2,zero,5091a44 <__muldf3+0x1a8>
 5091968:	a80490ba 	slli	r2,r21,2
 509196c:	01014274 	movhi	r4,1289
 5091970:	1109883a 	add	r4,r2,r4
 5091974:	20865f17 	ldw	r2,6524(r4)
 5091978:	1000683a 	jmp	r2
 509197c:	05091a44 	movi	r20,9321
 5091980:	050919c0 	call	50919c <__alt_mem_sdram+0x50919c>
 5091984:	050919c0 	call	50919c <__alt_mem_sdram+0x50919c>
 5091988:	050919bc 	xorhi	r20,zero,9318
 509198c:	050919cc 	andi	r20,zero,9319
 5091990:	050919cc 	andi	r20,zero,9319
 5091994:	05091d68 	cmpgeui	r20,zero,9333
 5091998:	050919bc 	xorhi	r20,zero,9318
 509199c:	050919cc 	andi	r20,zero,9319
 50919a0:	05091d68 	cmpgeui	r20,zero,9333
 50919a4:	050919cc 	andi	r20,zero,9319
 50919a8:	050919bc 	xorhi	r20,zero,9318
 50919ac:	05091d10 	cmplti	r20,zero,9332
 50919b0:	05091d10 	cmplti	r20,zero,9332
 50919b4:	05091d10 	cmplti	r20,zero,9332
 50919b8:	05091df4 	movhi	r20,9335
 50919bc:	b80d883a 	mov	r6,r23
 50919c0:	8821883a 	mov	r16,r17
 50919c4:	2825883a 	mov	r18,r5
 50919c8:	182d883a 	mov	r22,r3
 50919cc:	b08000a0 	cmpeqi	r2,r22,2
 50919d0:	1000181e 	bne	r2,zero,5091a34 <__muldf3+0x198>
 50919d4:	b08000e0 	cmpeqi	r2,r22,3
 50919d8:	1001481e 	bne	r2,zero,5091efc <__muldf3+0x660>
 50919dc:	b0800060 	cmpeqi	r2,r22,1
 50919e0:	10007e26 	beq	r2,zero,5091bdc <__muldf3+0x340>
 50919e4:	0007883a 	mov	r3,zero
 50919e8:	0021883a 	mov	r16,zero
 50919ec:	0025883a 	mov	r18,zero
 50919f0:	1806953a 	slli	r3,r3,20
 50919f4:	300c97fa 	slli	r6,r6,31
 50919f8:	9005883a 	mov	r2,r18
 50919fc:	1c06b03a 	or	r3,r3,r16
 5091a00:	1986b03a 	or	r3,r3,r6
 5091a04:	dfc00a17 	ldw	ra,40(sp)
 5091a08:	df000917 	ldw	fp,36(sp)
 5091a0c:	ddc00817 	ldw	r23,32(sp)
 5091a10:	dd800717 	ldw	r22,28(sp)
 5091a14:	dd400617 	ldw	r21,24(sp)
 5091a18:	dd000517 	ldw	r20,20(sp)
 5091a1c:	dcc00417 	ldw	r19,16(sp)
 5091a20:	dc800317 	ldw	r18,12(sp)
 5091a24:	dc400217 	ldw	r17,8(sp)
 5091a28:	dc000117 	ldw	r16,4(sp)
 5091a2c:	dec00b04 	addi	sp,sp,44
 5091a30:	f800283a 	ret
 5091a34:	00c1ffc4 	movi	r3,2047
 5091a38:	0021883a 	mov	r16,zero
 5091a3c:	0025883a 	mov	r18,zero
 5091a40:	003feb06 	br	50919f0 <__muldf3+0x154>
 5091a44:	9004d43a 	srli	r2,r18,16
 5091a48:	281ed43a 	srli	r15,r5,16
 5091a4c:	94bfffcc 	andi	r18,r18,65535
 5091a50:	297fffcc 	andi	r5,r5,65535
 5091a54:	2c89383a 	mul	r4,r5,r18
 5091a58:	114f383a 	mul	r7,r2,r5
 5091a5c:	7c87383a 	mul	r3,r15,r18
 5091a60:	2012d43a 	srli	r9,r4,16
 5091a64:	13dd383a 	mul	r14,r2,r15
 5091a68:	19c7883a 	add	r3,r3,r7
 5091a6c:	48d3883a 	add	r9,r9,r3
 5091a70:	49c0022e 	bgeu	r9,r7,5091a7c <__muldf3+0x1e0>
 5091a74:	00c00074 	movhi	r3,1
 5091a78:	70dd883a 	add	r14,r14,r3
 5091a7c:	881ad43a 	srli	r13,r17,16
 5091a80:	8c7fffcc 	andi	r17,r17,65535
 5091a84:	8c87383a 	mul	r3,r17,r18
 5091a88:	144f383a 	mul	r7,r2,r17
 5091a8c:	6ca5383a 	mul	r18,r13,r18
 5091a90:	1816d43a 	srli	r11,r3,16
 5091a94:	4814943a 	slli	r10,r9,16
 5091a98:	91e5883a 	add	r18,r18,r7
 5091a9c:	213fffcc 	andi	r4,r4,65535
 5091aa0:	5c97883a 	add	r11,r11,r18
 5091aa4:	4818d43a 	srli	r12,r9,16
 5091aa8:	1345383a 	mul	r2,r2,r13
 5091aac:	5115883a 	add	r10,r10,r4
 5091ab0:	59c0022e 	bgeu	r11,r7,5091abc <__muldf3+0x220>
 5091ab4:	01000074 	movhi	r4,1
 5091ab8:	1105883a 	add	r2,r2,r4
 5091abc:	8028d43a 	srli	r20,r16,16
 5091ac0:	827fffcc 	andi	r9,r16,65535
 5091ac4:	2a6b383a 	mul	r21,r5,r9
 5091ac8:	7a49383a 	mul	r4,r15,r9
 5091acc:	a14b383a 	mul	r5,r20,r5
 5091ad0:	580e943a 	slli	r7,r11,16
 5091ad4:	a82cd43a 	srli	r22,r21,16
 5091ad8:	5824d43a 	srli	r18,r11,16
 5091adc:	18ffffcc 	andi	r3,r3,65535
 5091ae0:	2149883a 	add	r4,r4,r5
 5091ae4:	38cf883a 	add	r7,r7,r3
 5091ae8:	b109883a 	add	r4,r22,r4
 5091aec:	7d1f383a 	mul	r15,r15,r20
 5091af0:	9097883a 	add	r11,r18,r2
 5091af4:	61c7883a 	add	r3,r12,r7
 5091af8:	2140022e 	bgeu	r4,r5,5091b04 <__muldf3+0x268>
 5091afc:	00800074 	movhi	r2,1
 5091b00:	789f883a 	add	r15,r15,r2
 5091b04:	8a65383a 	mul	r18,r17,r9
 5091b08:	6a53383a 	mul	r9,r13,r9
 5091b0c:	a463383a 	mul	r17,r20,r17
 5091b10:	9020d43a 	srli	r16,r18,16
 5091b14:	200ad43a 	srli	r5,r4,16
 5091b18:	2008943a 	slli	r4,r4,16
 5091b1c:	4c53883a 	add	r9,r9,r17
 5091b20:	ab3fffcc 	andi	r12,r21,65535
 5091b24:	8253883a 	add	r9,r16,r9
 5091b28:	6d1b383a 	mul	r13,r13,r20
 5091b2c:	2bdf883a 	add	r15,r5,r15
 5091b30:	2309883a 	add	r4,r4,r12
 5091b34:	4c40022e 	bgeu	r9,r17,5091b40 <__muldf3+0x2a4>
 5091b38:	00800074 	movhi	r2,1
 5091b3c:	689b883a 	add	r13,r13,r2
 5091b40:	4804943a 	slli	r2,r9,16
 5091b44:	917fffcc 	andi	r5,r18,65535
 5091b48:	1b87883a 	add	r3,r3,r14
 5091b4c:	1145883a 	add	r2,r2,r5
 5091b50:	19cf803a 	cmpltu	r7,r3,r7
 5091b54:	12c5883a 	add	r2,r2,r11
 5091b58:	1907883a 	add	r3,r3,r4
 5091b5c:	11dd883a 	add	r14,r2,r7
 5091b60:	1909803a 	cmpltu	r4,r3,r4
 5091b64:	73cb883a 	add	r5,r14,r15
 5091b68:	4812d43a 	srli	r9,r9,16
 5091b6c:	2919883a 	add	r12,r5,r4
 5091b70:	12c5803a 	cmpltu	r2,r2,r11
 5091b74:	71e1803a 	cmpltu	r16,r14,r7
 5091b78:	1420b03a 	or	r16,r2,r16
 5091b7c:	2bcb803a 	cmpltu	r5,r5,r15
 5091b80:	6109803a 	cmpltu	r4,r12,r4
 5091b84:	2908b03a 	or	r4,r5,r4
 5091b88:	8261883a 	add	r16,r16,r9
 5091b8c:	1824927a 	slli	r18,r3,9
 5091b90:	8121883a 	add	r16,r16,r4
 5091b94:	8361883a 	add	r16,r16,r13
 5091b98:	8020927a 	slli	r16,r16,9
 5091b9c:	1806d5fa 	srli	r3,r3,23
 5091ba0:	600ad5fa 	srli	r5,r12,23
 5091ba4:	6004927a 	slli	r2,r12,9
 5091ba8:	92a4b03a 	or	r18,r18,r10
 5091bac:	9024c03a 	cmpne	r18,r18,zero
 5091bb0:	90e4b03a 	or	r18,r18,r3
 5091bb4:	80c0402c 	andhi	r3,r16,256
 5091bb8:	90a4b03a 	or	r18,r18,r2
 5091bbc:	8160b03a 	or	r16,r16,r5
 5091bc0:	1800b326 	beq	r3,zero,5091e90 <__muldf3+0x5f4>
 5091bc4:	9006d07a 	srli	r3,r18,1
 5091bc8:	800497fa 	slli	r2,r16,31
 5091bcc:	9480004c 	andi	r18,r18,1
 5091bd0:	8020d07a 	srli	r16,r16,1
 5091bd4:	1c86b03a 	or	r3,r3,r18
 5091bd8:	18a4b03a 	or	r18,r3,r2
 5091bdc:	4100ffc4 	addi	r4,r8,1023
 5091be0:	0100670e 	bge	zero,r4,5091d80 <__muldf3+0x4e4>
 5091be4:	908001cc 	andi	r2,r18,7
 5091be8:	10000726 	beq	r2,zero,5091c08 <__muldf3+0x36c>
 5091bec:	908003cc 	andi	r2,r18,15
 5091bf0:	10800120 	cmpeqi	r2,r2,4
 5091bf4:	1000041e 	bne	r2,zero,5091c08 <__muldf3+0x36c>
 5091bf8:	90800104 	addi	r2,r18,4
 5091bfc:	14a5803a 	cmpltu	r18,r2,r18
 5091c00:	84a1883a 	add	r16,r16,r18
 5091c04:	1025883a 	mov	r18,r2
 5091c08:	8080402c 	andhi	r2,r16,256
 5091c0c:	10000426 	beq	r2,zero,5091c20 <__muldf3+0x384>
 5091c10:	00bfc034 	movhi	r2,65280
 5091c14:	10bfffc4 	addi	r2,r2,-1
 5091c18:	80a0703a 	and	r16,r16,r2
 5091c1c:	41010004 	addi	r4,r8,1024
 5091c20:	2081ffc8 	cmpgei	r2,r4,2047
 5091c24:	103f831e 	bne	r2,zero,5091a34 <__muldf3+0x198>
 5091c28:	8004977a 	slli	r2,r16,29
 5091c2c:	9024d0fa 	srli	r18,r18,3
 5091c30:	8020927a 	slli	r16,r16,9
 5091c34:	20c1ffcc 	andi	r3,r4,2047
 5091c38:	14a4b03a 	or	r18,r2,r18
 5091c3c:	8020d33a 	srli	r16,r16,12
 5091c40:	003f6b06 	br	50919f0 <__muldf3+0x154>
 5091c44:	8f0ab03a 	or	r5,r17,fp
 5091c48:	28004326 	beq	r5,zero,5091d58 <__muldf3+0x4bc>
 5091c4c:	88008526 	beq	r17,zero,5091e64 <__muldf3+0x5c8>
 5091c50:	8809883a 	mov	r4,r17
 5091c54:	50929e00 	call	50929e0 <__clzsi2>
 5091c58:	11bffd44 	addi	r6,r2,-11
 5091c5c:	01000744 	movi	r4,29
 5091c60:	117ffe04 	addi	r5,r2,-8
 5091c64:	2189c83a 	sub	r4,r4,r6
 5091c68:	8962983a 	sll	r17,r17,r5
 5091c6c:	e108d83a 	srl	r4,fp,r4
 5091c70:	e14a983a 	sll	r5,fp,r5
 5091c74:	2462b03a 	or	r17,r4,r17
 5091c78:	9885c83a 	sub	r2,r19,r2
 5091c7c:	14ff0344 	addi	r19,r2,-1011
 5091c80:	0007883a 	mov	r3,zero
 5091c84:	003f3406 	br	5091958 <__muldf3+0xbc>
 5091c88:	8124b03a 	or	r18,r16,r4
 5091c8c:	90002d26 	beq	r18,zero,5091d44 <__muldf3+0x4a8>
 5091c90:	d9c00015 	stw	r7,0(sp)
 5091c94:	80006826 	beq	r16,zero,5091e38 <__muldf3+0x59c>
 5091c98:	8009883a 	mov	r4,r16
 5091c9c:	50929e00 	call	50929e0 <__clzsi2>
 5091ca0:	d9c00017 	ldw	r7,0(sp)
 5091ca4:	113ffd44 	addi	r4,r2,-11
 5091ca8:	00c00744 	movi	r3,29
 5091cac:	14bffe04 	addi	r18,r2,-8
 5091cb0:	1907c83a 	sub	r3,r3,r4
 5091cb4:	84a0983a 	sll	r16,r16,r18
 5091cb8:	98c6d83a 	srl	r3,r19,r3
 5091cbc:	9ca4983a 	sll	r18,r19,r18
 5091cc0:	1c20b03a 	or	r16,r3,r16
 5091cc4:	04ff0344 	movi	r19,-1011
 5091cc8:	98a7c83a 	sub	r19,r19,r2
 5091ccc:	002b883a 	mov	r21,zero
 5091cd0:	002d883a 	mov	r22,zero
 5091cd4:	003f0f06 	br	5091914 <__muldf3+0x78>
 5091cd8:	8124b03a 	or	r18,r16,r4
 5091cdc:	9000141e 	bne	r18,zero,5091d30 <__muldf3+0x494>
 5091ce0:	0021883a 	mov	r16,zero
 5091ce4:	05400204 	movi	r21,8
 5091ce8:	04c1ffc4 	movi	r19,2047
 5091cec:	05800084 	movi	r22,2
 5091cf0:	003f0806 	br	5091914 <__muldf3+0x78>
 5091cf4:	8f0ab03a 	or	r5,r17,fp
 5091cf8:	9cc1ffc4 	addi	r19,r19,2047
 5091cfc:	2800081e 	bne	r5,zero,5091d20 <__muldf3+0x484>
 5091d00:	ad400094 	ori	r21,r21,2
 5091d04:	0023883a 	mov	r17,zero
 5091d08:	00c00084 	movi	r3,2
 5091d0c:	003f1206 	br	5091958 <__muldf3+0xbc>
 5091d10:	b08000a0 	cmpeqi	r2,r22,2
 5091d14:	a00d883a 	mov	r6,r20
 5091d18:	103f2e26 	beq	r2,zero,50919d4 <__muldf3+0x138>
 5091d1c:	003f4506 	br	5091a34 <__muldf3+0x198>
 5091d20:	ad4000d4 	ori	r21,r21,3
 5091d24:	e00b883a 	mov	r5,fp
 5091d28:	00c000c4 	movi	r3,3
 5091d2c:	003f0a06 	br	5091958 <__muldf3+0xbc>
 5091d30:	2025883a 	mov	r18,r4
 5091d34:	05400304 	movi	r21,12
 5091d38:	04c1ffc4 	movi	r19,2047
 5091d3c:	058000c4 	movi	r22,3
 5091d40:	003ef406 	br	5091914 <__muldf3+0x78>
 5091d44:	0021883a 	mov	r16,zero
 5091d48:	05400104 	movi	r21,4
 5091d4c:	0027883a 	mov	r19,zero
 5091d50:	05800044 	movi	r22,1
 5091d54:	003eef06 	br	5091914 <__muldf3+0x78>
 5091d58:	ad400054 	ori	r21,r21,1
 5091d5c:	0023883a 	mov	r17,zero
 5091d60:	00c00044 	movi	r3,1
 5091d64:	003efc06 	br	5091958 <__muldf3+0xbc>
 5091d68:	04000434 	movhi	r16,16
 5091d6c:	000d883a 	mov	r6,zero
 5091d70:	843fffc4 	addi	r16,r16,-1
 5091d74:	04bfffc4 	movi	r18,-1
 5091d78:	00c1ffc4 	movi	r3,2047
 5091d7c:	003f1c06 	br	50919f0 <__muldf3+0x154>
 5091d80:	00800044 	movi	r2,1
 5091d84:	1105c83a 	sub	r2,r2,r4
 5091d88:	10c00e48 	cmpgei	r3,r2,57
 5091d8c:	183f151e 	bne	r3,zero,50919e4 <__muldf3+0x148>
 5091d90:	10c00808 	cmpgei	r3,r2,32
 5091d94:	1800401e 	bne	r3,zero,5091e98 <__muldf3+0x5fc>
 5091d98:	42010784 	addi	r8,r8,1054
 5091d9c:	8206983a 	sll	r3,r16,r8
 5091da0:	9088d83a 	srl	r4,r18,r2
 5091da4:	9210983a 	sll	r8,r18,r8
 5091da8:	80a0d83a 	srl	r16,r16,r2
 5091dac:	1904b03a 	or	r2,r3,r4
 5091db0:	4024c03a 	cmpne	r18,r8,zero
 5091db4:	1484b03a 	or	r2,r2,r18
 5091db8:	10c001cc 	andi	r3,r2,7
 5091dbc:	18000726 	beq	r3,zero,5091ddc <__muldf3+0x540>
 5091dc0:	10c003cc 	andi	r3,r2,15
 5091dc4:	18c00120 	cmpeqi	r3,r3,4
 5091dc8:	1800041e 	bne	r3,zero,5091ddc <__muldf3+0x540>
 5091dcc:	10c00104 	addi	r3,r2,4
 5091dd0:	1885803a 	cmpltu	r2,r3,r2
 5091dd4:	80a1883a 	add	r16,r16,r2
 5091dd8:	1805883a 	mov	r2,r3
 5091ddc:	80c0202c 	andhi	r3,r16,128
 5091de0:	18004226 	beq	r3,zero,5091eec <__muldf3+0x650>
 5091de4:	00c00044 	movi	r3,1
 5091de8:	0021883a 	mov	r16,zero
 5091dec:	0025883a 	mov	r18,zero
 5091df0:	003eff06 	br	50919f0 <__muldf3+0x154>
 5091df4:	8080022c 	andhi	r2,r16,8
 5091df8:	10000926 	beq	r2,zero,5091e20 <__muldf3+0x584>
 5091dfc:	8880022c 	andhi	r2,r17,8
 5091e00:	1000071e 	bne	r2,zero,5091e20 <__muldf3+0x584>
 5091e04:	00800434 	movhi	r2,16
 5091e08:	8c000234 	orhi	r16,r17,8
 5091e0c:	10bfffc4 	addi	r2,r2,-1
 5091e10:	80a0703a 	and	r16,r16,r2
 5091e14:	b80d883a 	mov	r6,r23
 5091e18:	2825883a 	mov	r18,r5
 5091e1c:	003fd606 	br	5091d78 <__muldf3+0x4dc>
 5091e20:	00800434 	movhi	r2,16
 5091e24:	84000234 	orhi	r16,r16,8
 5091e28:	10bfffc4 	addi	r2,r2,-1
 5091e2c:	80a0703a 	and	r16,r16,r2
 5091e30:	a00d883a 	mov	r6,r20
 5091e34:	003fd006 	br	5091d78 <__muldf3+0x4dc>
 5091e38:	50929e00 	call	50929e0 <__clzsi2>
 5091e3c:	11000544 	addi	r4,r2,21
 5091e40:	21400748 	cmpgei	r5,r4,29
 5091e44:	1007883a 	mov	r3,r2
 5091e48:	d9c00017 	ldw	r7,0(sp)
 5091e4c:	10800804 	addi	r2,r2,32
 5091e50:	283f9526 	beq	r5,zero,5091ca8 <__muldf3+0x40c>
 5091e54:	18fffe04 	addi	r3,r3,-8
 5091e58:	98e0983a 	sll	r16,r19,r3
 5091e5c:	0025883a 	mov	r18,zero
 5091e60:	003f9806 	br	5091cc4 <__muldf3+0x428>
 5091e64:	e009883a 	mov	r4,fp
 5091e68:	50929e00 	call	50929e0 <__clzsi2>
 5091e6c:	11800544 	addi	r6,r2,21
 5091e70:	31000748 	cmpgei	r4,r6,29
 5091e74:	1007883a 	mov	r3,r2
 5091e78:	10800804 	addi	r2,r2,32
 5091e7c:	203f7726 	beq	r4,zero,5091c5c <__muldf3+0x3c0>
 5091e80:	1c7ffe04 	addi	r17,r3,-8
 5091e84:	e462983a 	sll	r17,fp,r17
 5091e88:	000b883a 	mov	r5,zero
 5091e8c:	003f7a06 	br	5091c78 <__muldf3+0x3dc>
 5091e90:	9811883a 	mov	r8,r19
 5091e94:	003f5106 	br	5091bdc <__muldf3+0x340>
 5091e98:	00fff844 	movi	r3,-31
 5091e9c:	1907c83a 	sub	r3,r3,r4
 5091ea0:	10800820 	cmpeqi	r2,r2,32
 5091ea4:	80c6d83a 	srl	r3,r16,r3
 5091ea8:	1000031e 	bne	r2,zero,5091eb8 <__muldf3+0x61c>
 5091eac:	42010f84 	addi	r8,r8,1086
 5091eb0:	8220983a 	sll	r16,r16,r8
 5091eb4:	9424b03a 	or	r18,r18,r16
 5091eb8:	9024c03a 	cmpne	r18,r18,zero
 5091ebc:	90c4b03a 	or	r2,r18,r3
 5091ec0:	148001cc 	andi	r18,r2,7
 5091ec4:	9000051e 	bne	r18,zero,5091edc <__muldf3+0x640>
 5091ec8:	0021883a 	mov	r16,zero
 5091ecc:	1004d0fa 	srli	r2,r2,3
 5091ed0:	0007883a 	mov	r3,zero
 5091ed4:	14a4b03a 	or	r18,r2,r18
 5091ed8:	003ec506 	br	50919f0 <__muldf3+0x154>
 5091edc:	10c003cc 	andi	r3,r2,15
 5091ee0:	18c00118 	cmpnei	r3,r3,4
 5091ee4:	0021883a 	mov	r16,zero
 5091ee8:	183fb81e 	bne	r3,zero,5091dcc <__muldf3+0x530>
 5091eec:	8006927a 	slli	r3,r16,9
 5091ef0:	8024977a 	slli	r18,r16,29
 5091ef4:	1820d33a 	srli	r16,r3,12
 5091ef8:	003ff406 	br	5091ecc <__muldf3+0x630>
 5091efc:	00800434 	movhi	r2,16
 5091f00:	84000234 	orhi	r16,r16,8
 5091f04:	10bfffc4 	addi	r2,r2,-1
 5091f08:	80a0703a 	and	r16,r16,r2
 5091f0c:	003f9a06 	br	5091d78 <__muldf3+0x4dc>

05091f10 <__subdf3>:
 5091f10:	00800434 	movhi	r2,16
 5091f14:	3810d53a 	srli	r8,r7,20
 5091f18:	10bfffc4 	addi	r2,r2,-1
 5091f1c:	2806d53a 	srli	r3,r5,20
 5091f20:	2892703a 	and	r9,r5,r2
 5091f24:	3884703a 	and	r2,r7,r2
 5091f28:	280ad7fa 	srli	r5,r5,31
 5091f2c:	481290fa 	slli	r9,r9,3
 5091f30:	2018d77a 	srli	r12,r4,29
 5091f34:	100490fa 	slli	r2,r2,3
 5091f38:	3016d77a 	srli	r11,r6,29
 5091f3c:	defffb04 	addi	sp,sp,-20
 5091f40:	4201ffcc 	andi	r8,r8,2047
 5091f44:	dc800215 	stw	r18,8(sp)
 5091f48:	dc400115 	stw	r17,4(sp)
 5091f4c:	1c81ffcc 	andi	r18,r3,2047
 5091f50:	dfc00415 	stw	ra,16(sp)
 5091f54:	dcc00315 	stw	r19,12(sp)
 5091f58:	dc000015 	stw	r16,0(sp)
 5091f5c:	4281ffd8 	cmpnei	r10,r8,2047
 5091f60:	2823883a 	mov	r17,r5
 5091f64:	201c90fa 	slli	r14,r4,3
 5091f68:	380ed7fa 	srli	r7,r7,31
 5091f6c:	301a90fa 	slli	r13,r6,3
 5091f70:	29403fcc 	andi	r5,r5,255
 5091f74:	6252b03a 	or	r9,r12,r9
 5091f78:	589eb03a 	or	r15,r11,r2
 5091f7c:	9207c83a 	sub	r3,r18,r8
 5091f80:	50006826 	beq	r10,zero,5092124 <__subdf3+0x214>
 5091f84:	3ac0005c 	xori	r11,r7,1
 5091f88:	2ac07326 	beq	r5,r11,5092158 <__subdf3+0x248>
 5091f8c:	00c0590e 	bge	zero,r3,50920f4 <__subdf3+0x1e4>
 5091f90:	4000691e 	bne	r8,zero,5092138 <__subdf3+0x228>
 5091f94:	7b44b03a 	or	r2,r15,r13
 5091f98:	1000fb26 	beq	r2,zero,5092388 <__subdf3+0x478>
 5091f9c:	18bfffc4 	addi	r2,r3,-1
 5091fa0:	10019126 	beq	r2,zero,50925e8 <__subdf3+0x6d8>
 5091fa4:	18c1ffd8 	cmpnei	r3,r3,2047
 5091fa8:	1800c326 	beq	r3,zero,50922b8 <__subdf3+0x3a8>
 5091fac:	1007883a 	mov	r3,r2
 5091fb0:	18800e48 	cmpgei	r2,r3,57
 5091fb4:	1000651e 	bne	r2,zero,509214c <__subdf3+0x23c>
 5091fb8:	18800808 	cmpgei	r2,r3,32
 5091fbc:	1001331e 	bne	r2,zero,509248c <__subdf3+0x57c>
 5091fc0:	00800804 	movi	r2,32
 5091fc4:	10c5c83a 	sub	r2,r2,r3
 5091fc8:	78a0983a 	sll	r16,r15,r2
 5091fcc:	68c8d83a 	srl	r4,r13,r3
 5091fd0:	689a983a 	sll	r13,r13,r2
 5091fd4:	78c4d83a 	srl	r2,r15,r3
 5091fd8:	8120b03a 	or	r16,r16,r4
 5091fdc:	681ac03a 	cmpne	r13,r13,zero
 5091fe0:	8360b03a 	or	r16,r16,r13
 5091fe4:	4893c83a 	sub	r9,r9,r2
 5091fe8:	7421c83a 	sub	r16,r14,r16
 5091fec:	7409803a 	cmpltu	r4,r14,r16
 5091ff0:	4909c83a 	sub	r4,r9,r4
 5091ff4:	2080202c 	andhi	r2,r4,128
 5091ff8:	10009326 	beq	r2,zero,5092248 <__subdf3+0x338>
 5091ffc:	04c02034 	movhi	r19,128
 5092000:	9cffffc4 	addi	r19,r19,-1
 5092004:	24e6703a 	and	r19,r4,r19
 5092008:	9800b926 	beq	r19,zero,50922f0 <__subdf3+0x3e0>
 509200c:	9809883a 	mov	r4,r19
 5092010:	50929e00 	call	50929e0 <__clzsi2>
 5092014:	10fffe04 	addi	r3,r2,-8
 5092018:	01000804 	movi	r4,32
 509201c:	20c9c83a 	sub	r4,r4,r3
 5092020:	8108d83a 	srl	r4,r16,r4
 5092024:	98e6983a 	sll	r19,r19,r3
 5092028:	80e0983a 	sll	r16,r16,r3
 509202c:	24c8b03a 	or	r4,r4,r19
 5092030:	1c80b816 	blt	r3,r18,5092314 <__subdf3+0x404>
 5092034:	1c87c83a 	sub	r3,r3,r18
 5092038:	19400044 	addi	r5,r3,1
 509203c:	28800808 	cmpgei	r2,r5,32
 5092040:	1000751e 	bne	r2,zero,5092218 <__subdf3+0x308>
 5092044:	00800804 	movi	r2,32
 5092048:	1145c83a 	sub	r2,r2,r5
 509204c:	8146d83a 	srl	r3,r16,r5
 5092050:	80a0983a 	sll	r16,r16,r2
 5092054:	2084983a 	sll	r2,r4,r2
 5092058:	2148d83a 	srl	r4,r4,r5
 509205c:	8020c03a 	cmpne	r16,r16,zero
 5092060:	10c4b03a 	or	r2,r2,r3
 5092064:	1420b03a 	or	r16,r2,r16
 5092068:	0025883a 	mov	r18,zero
 509206c:	808001cc 	andi	r2,r16,7
 5092070:	10000726 	beq	r2,zero,5092090 <__subdf3+0x180>
 5092074:	808003cc 	andi	r2,r16,15
 5092078:	10800120 	cmpeqi	r2,r2,4
 509207c:	1000041e 	bne	r2,zero,5092090 <__subdf3+0x180>
 5092080:	80800104 	addi	r2,r16,4
 5092084:	1421803a 	cmpltu	r16,r2,r16
 5092088:	2409883a 	add	r4,r4,r16
 509208c:	1021883a 	mov	r16,r2
 5092090:	2080202c 	andhi	r2,r4,128
 5092094:	10006e26 	beq	r2,zero,5092250 <__subdf3+0x340>
 5092098:	90c00044 	addi	r3,r18,1
 509209c:	1881ffe0 	cmpeqi	r2,r3,2047
 50920a0:	18c1ffcc 	andi	r3,r3,2047
 50920a4:	1000801e 	bne	r2,zero,50922a8 <__subdf3+0x398>
 50920a8:	00bfe034 	movhi	r2,65408
 50920ac:	10bfffc4 	addi	r2,r2,-1
 50920b0:	2088703a 	and	r4,r4,r2
 50920b4:	2004977a 	slli	r2,r4,29
 50920b8:	2008927a 	slli	r4,r4,9
 50920bc:	8020d0fa 	srli	r16,r16,3
 50920c0:	2008d33a 	srli	r4,r4,12
 50920c4:	1404b03a 	or	r2,r2,r16
 50920c8:	1806953a 	slli	r3,r3,20
 50920cc:	882297fa 	slli	r17,r17,31
 50920d0:	1906b03a 	or	r3,r3,r4
 50920d4:	1c46b03a 	or	r3,r3,r17
 50920d8:	dfc00417 	ldw	ra,16(sp)
 50920dc:	dcc00317 	ldw	r19,12(sp)
 50920e0:	dc800217 	ldw	r18,8(sp)
 50920e4:	dc400117 	ldw	r17,4(sp)
 50920e8:	dc000017 	ldw	r16,0(sp)
 50920ec:	dec00504 	addi	sp,sp,20
 50920f0:	f800283a 	ret
 50920f4:	18002c26 	beq	r3,zero,50921a8 <__subdf3+0x298>
 50920f8:	4487c83a 	sub	r3,r8,r18
 50920fc:	5823883a 	mov	r17,r11
 5092100:	9000bb1e 	bne	r18,zero,50923f0 <__subdf3+0x4e0>
 5092104:	4b84b03a 	or	r2,r9,r14
 5092108:	10011726 	beq	r2,zero,5092568 <__subdf3+0x658>
 509210c:	18bfffc4 	addi	r2,r3,-1
 5092110:	10016326 	beq	r2,zero,50926a0 <__subdf3+0x790>
 5092114:	18c1ffd8 	cmpnei	r3,r3,2047
 5092118:	18012c26 	beq	r3,zero,50925cc <__subdf3+0x6bc>
 509211c:	1007883a 	mov	r3,r2
 5092120:	0000b506 	br	50923f8 <__subdf3+0x4e8>
 5092124:	7b44b03a 	or	r2,r15,r13
 5092128:	103f9626 	beq	r2,zero,5091f84 <__subdf3+0x74>
 509212c:	3ac03fcc 	andi	r11,r7,255
 5092130:	29c07d26 	beq	r5,r7,5092328 <__subdf3+0x418>
 5092134:	00ffef0e 	bge	zero,r3,50920f4 <__subdf3+0x1e4>
 5092138:	9081ffd8 	cmpnei	r2,r18,2047
 509213c:	10005e26 	beq	r2,zero,50922b8 <__subdf3+0x3a8>
 5092140:	18800e48 	cmpgei	r2,r3,57
 5092144:	7bc02034 	orhi	r15,r15,128
 5092148:	103f9b26 	beq	r2,zero,5091fb8 <__subdf3+0xa8>
 509214c:	7b60b03a 	or	r16,r15,r13
 5092150:	8020c03a 	cmpne	r16,r16,zero
 5092154:	003fa406 	br	5091fe8 <__subdf3+0xd8>
 5092158:	00c0730e 	bge	zero,r3,5092328 <__subdf3+0x418>
 509215c:	40002626 	beq	r8,zero,50921f8 <__subdf3+0x2e8>
 5092160:	9081ffd8 	cmpnei	r2,r18,2047
 5092164:	10005426 	beq	r2,zero,50922b8 <__subdf3+0x3a8>
 5092168:	7bc02034 	orhi	r15,r15,128
 509216c:	18800e48 	cmpgei	r2,r3,57
 5092170:	1000431e 	bne	r2,zero,5092280 <__subdf3+0x370>
 5092174:	18800808 	cmpgei	r2,r3,32
 5092178:	1000de26 	beq	r2,zero,50924f4 <__subdf3+0x5e4>
 509217c:	1c3ff804 	addi	r16,r3,-32
 5092180:	18800820 	cmpeqi	r2,r3,32
 5092184:	7c0ad83a 	srl	r5,r15,r16
 5092188:	1000041e 	bne	r2,zero,509219c <__subdf3+0x28c>
 509218c:	00801004 	movi	r2,64
 5092190:	10c5c83a 	sub	r2,r2,r3
 5092194:	7884983a 	sll	r2,r15,r2
 5092198:	689ab03a 	or	r13,r13,r2
 509219c:	6820c03a 	cmpne	r16,r13,zero
 50921a0:	8160b03a 	or	r16,r16,r5
 50921a4:	00003806 	br	5092288 <__subdf3+0x378>
 50921a8:	90800044 	addi	r2,r18,1
 50921ac:	1081ff8c 	andi	r2,r2,2046
 50921b0:	1000a01e 	bne	r2,zero,5092434 <__subdf3+0x524>
 50921b4:	4b8ab03a 	or	r5,r9,r14
 50921b8:	7b44b03a 	or	r2,r15,r13
 50921bc:	9000f11e 	bne	r18,zero,5092584 <__subdf3+0x674>
 50921c0:	28012e26 	beq	r5,zero,509267c <__subdf3+0x76c>
 50921c4:	10010e26 	beq	r2,zero,5092600 <__subdf3+0x6f0>
 50921c8:	7361c83a 	sub	r16,r14,r13
 50921cc:	7405803a 	cmpltu	r2,r14,r16
 50921d0:	4bc9c83a 	sub	r4,r9,r15
 50921d4:	2089c83a 	sub	r4,r4,r2
 50921d8:	2080202c 	andhi	r2,r4,128
 50921dc:	10016d26 	beq	r2,zero,5092794 <__subdf3+0x884>
 50921e0:	6ba1c83a 	sub	r16,r13,r14
 50921e4:	7a49c83a 	sub	r4,r15,r9
 50921e8:	6c1b803a 	cmpltu	r13,r13,r16
 50921ec:	2349c83a 	sub	r4,r4,r13
 50921f0:	5823883a 	mov	r17,r11
 50921f4:	003f9d06 	br	509206c <__subdf3+0x15c>
 50921f8:	7b44b03a 	or	r2,r15,r13
 50921fc:	10006226 	beq	r2,zero,5092388 <__subdf3+0x478>
 5092200:	18bfffc4 	addi	r2,r3,-1
 5092204:	1000e926 	beq	r2,zero,50925ac <__subdf3+0x69c>
 5092208:	18c1ffd8 	cmpnei	r3,r3,2047
 509220c:	18012a26 	beq	r3,zero,50926b8 <__subdf3+0x7a8>
 5092210:	1007883a 	mov	r3,r2
 5092214:	003fd506 	br	509216c <__subdf3+0x25c>
 5092218:	18fff844 	addi	r3,r3,-31
 509221c:	28800820 	cmpeqi	r2,r5,32
 5092220:	20c6d83a 	srl	r3,r4,r3
 5092224:	1000041e 	bne	r2,zero,5092238 <__subdf3+0x328>
 5092228:	00801004 	movi	r2,64
 509222c:	114bc83a 	sub	r5,r2,r5
 5092230:	2148983a 	sll	r4,r4,r5
 5092234:	8120b03a 	or	r16,r16,r4
 5092238:	8020c03a 	cmpne	r16,r16,zero
 509223c:	80e0b03a 	or	r16,r16,r3
 5092240:	0009883a 	mov	r4,zero
 5092244:	0025883a 	mov	r18,zero
 5092248:	808001cc 	andi	r2,r16,7
 509224c:	103f891e 	bne	r2,zero,5092074 <__subdf3+0x164>
 5092250:	8020d0fa 	srli	r16,r16,3
 5092254:	2004977a 	slli	r2,r4,29
 5092258:	2012d0fa 	srli	r9,r4,3
 509225c:	9007883a 	mov	r3,r18
 5092260:	8084b03a 	or	r2,r16,r2
 5092264:	1901ffe0 	cmpeqi	r4,r3,2047
 5092268:	2000191e 	bne	r4,zero,50922d0 <__subdf3+0x3c0>
 509226c:	01000434 	movhi	r4,16
 5092270:	213fffc4 	addi	r4,r4,-1
 5092274:	4908703a 	and	r4,r9,r4
 5092278:	18c1ffcc 	andi	r3,r3,2047
 509227c:	003f9206 	br	50920c8 <__subdf3+0x1b8>
 5092280:	7b60b03a 	or	r16,r15,r13
 5092284:	8020c03a 	cmpne	r16,r16,zero
 5092288:	83a1883a 	add	r16,r16,r14
 509228c:	8389803a 	cmpltu	r4,r16,r14
 5092290:	2249883a 	add	r4,r4,r9
 5092294:	2080202c 	andhi	r2,r4,128
 5092298:	103feb26 	beq	r2,zero,5092248 <__subdf3+0x338>
 509229c:	94800044 	addi	r18,r18,1
 50922a0:	9081ffe0 	cmpeqi	r2,r18,2047
 50922a4:	10006f26 	beq	r2,zero,5092464 <__subdf3+0x554>
 50922a8:	00c1ffc4 	movi	r3,2047
 50922ac:	0009883a 	mov	r4,zero
 50922b0:	0005883a 	mov	r2,zero
 50922b4:	003f8406 	br	50920c8 <__subdf3+0x1b8>
 50922b8:	4806977a 	slli	r3,r9,29
 50922bc:	00880034 	movhi	r2,8192
 50922c0:	10bfffc4 	addi	r2,r2,-1
 50922c4:	4812d0fa 	srli	r9,r9,3
 50922c8:	2088703a 	and	r4,r4,r2
 50922cc:	20c4b03a 	or	r2,r4,r3
 50922d0:	4886b03a 	or	r3,r9,r2
 50922d4:	18013726 	beq	r3,zero,50927b4 <__subdf3+0x8a4>
 50922d8:	00c00434 	movhi	r3,16
 50922dc:	18ffffc4 	addi	r3,r3,-1
 50922e0:	49000234 	orhi	r4,r9,8
 50922e4:	20c8703a 	and	r4,r4,r3
 50922e8:	00c1ffc4 	movi	r3,2047
 50922ec:	003f7606 	br	50920c8 <__subdf3+0x1b8>
 50922f0:	8009883a 	mov	r4,r16
 50922f4:	50929e00 	call	50929e0 <__clzsi2>
 50922f8:	10c00604 	addi	r3,r2,24
 50922fc:	19000808 	cmpgei	r4,r3,32
 5092300:	203f4526 	beq	r4,zero,5092018 <__subdf3+0x108>
 5092304:	113ffe04 	addi	r4,r2,-8
 5092308:	8108983a 	sll	r4,r16,r4
 509230c:	0021883a 	mov	r16,zero
 5092310:	1cbf480e 	bge	r3,r18,5092034 <__subdf3+0x124>
 5092314:	00bfe034 	movhi	r2,65408
 5092318:	10bfffc4 	addi	r2,r2,-1
 509231c:	90e5c83a 	sub	r18,r18,r3
 5092320:	2088703a 	and	r4,r4,r2
 5092324:	003f5106 	br	509206c <__subdf3+0x15c>
 5092328:	18001e26 	beq	r3,zero,50923a4 <__subdf3+0x494>
 509232c:	4487c83a 	sub	r3,r8,r18
 5092330:	90006826 	beq	r18,zero,50924d4 <__subdf3+0x5c4>
 5092334:	5000a526 	beq	r10,zero,50925cc <__subdf3+0x6bc>
 5092338:	4a402034 	orhi	r9,r9,128
 509233c:	18800e48 	cmpgei	r2,r3,57
 5092340:	1000b61e 	bne	r2,zero,509261c <__subdf3+0x70c>
 5092344:	18800808 	cmpgei	r2,r3,32
 5092348:	1001021e 	bne	r2,zero,5092754 <__subdf3+0x844>
 509234c:	00800804 	movi	r2,32
 5092350:	10c5c83a 	sub	r2,r2,r3
 5092354:	48a0983a 	sll	r16,r9,r2
 5092358:	70c8d83a 	srl	r4,r14,r3
 509235c:	7084983a 	sll	r2,r14,r2
 5092360:	48d2d83a 	srl	r9,r9,r3
 5092364:	8120b03a 	or	r16,r16,r4
 5092368:	1004c03a 	cmpne	r2,r2,zero
 509236c:	80a0b03a 	or	r16,r16,r2
 5092370:	7a5f883a 	add	r15,r15,r9
 5092374:	8361883a 	add	r16,r16,r13
 5092378:	8349803a 	cmpltu	r4,r16,r13
 509237c:	23c9883a 	add	r4,r4,r15
 5092380:	4025883a 	mov	r18,r8
 5092384:	003fc306 	br	5092294 <__subdf3+0x384>
 5092388:	480a977a 	slli	r5,r9,29
 509238c:	00880034 	movhi	r2,8192
 5092390:	10bfffc4 	addi	r2,r2,-1
 5092394:	2088703a 	and	r4,r4,r2
 5092398:	4812d0fa 	srli	r9,r9,3
 509239c:	2144b03a 	or	r2,r4,r5
 50923a0:	003fb006 	br	5092264 <__subdf3+0x354>
 50923a4:	90800044 	addi	r2,r18,1
 50923a8:	1141ff8c 	andi	r5,r2,2046
 50923ac:	28005c1e 	bne	r5,zero,5092520 <__subdf3+0x610>
 50923b0:	4b84b03a 	or	r2,r9,r14
 50923b4:	9000a71e 	bne	r18,zero,5092654 <__subdf3+0x744>
 50923b8:	1000df26 	beq	r2,zero,5092738 <__subdf3+0x828>
 50923bc:	7b44b03a 	or	r2,r15,r13
 50923c0:	10008f26 	beq	r2,zero,5092600 <__subdf3+0x6f0>
 50923c4:	7361883a 	add	r16,r14,r13
 50923c8:	4bc9883a 	add	r4,r9,r15
 50923cc:	839d803a 	cmpltu	r14,r16,r14
 50923d0:	2389883a 	add	r4,r4,r14
 50923d4:	2080202c 	andhi	r2,r4,128
 50923d8:	103f9b26 	beq	r2,zero,5092248 <__subdf3+0x338>
 50923dc:	00bfe034 	movhi	r2,65408
 50923e0:	10bfffc4 	addi	r2,r2,-1
 50923e4:	2088703a 	and	r4,r4,r2
 50923e8:	04800044 	movi	r18,1
 50923ec:	003f9606 	br	5092248 <__subdf3+0x338>
 50923f0:	50007626 	beq	r10,zero,50925cc <__subdf3+0x6bc>
 50923f4:	4a402034 	orhi	r9,r9,128
 50923f8:	18800e48 	cmpgei	r2,r3,57
 50923fc:	10002e1e 	bne	r2,zero,50924b8 <__subdf3+0x5a8>
 5092400:	18800808 	cmpgei	r2,r3,32
 5092404:	1000881e 	bne	r2,zero,5092628 <__subdf3+0x718>
 5092408:	00800804 	movi	r2,32
 509240c:	10c5c83a 	sub	r2,r2,r3
 5092410:	48a0983a 	sll	r16,r9,r2
 5092414:	70c8d83a 	srl	r4,r14,r3
 5092418:	709c983a 	sll	r14,r14,r2
 509241c:	48d2d83a 	srl	r9,r9,r3
 5092420:	8120b03a 	or	r16,r16,r4
 5092424:	701cc03a 	cmpne	r14,r14,zero
 5092428:	83a0b03a 	or	r16,r16,r14
 509242c:	7a5fc83a 	sub	r15,r15,r9
 5092430:	00002306 	br	50924c0 <__subdf3+0x5b0>
 5092434:	7361c83a 	sub	r16,r14,r13
 5092438:	4be7c83a 	sub	r19,r9,r15
 509243c:	7409803a 	cmpltu	r4,r14,r16
 5092440:	9927c83a 	sub	r19,r19,r4
 5092444:	9880202c 	andhi	r2,r19,128
 5092448:	1000411e 	bne	r2,zero,5092550 <__subdf3+0x640>
 509244c:	84c4b03a 	or	r2,r16,r19
 5092450:	103eed1e 	bne	r2,zero,5092008 <__subdf3+0xf8>
 5092454:	0013883a 	mov	r9,zero
 5092458:	0023883a 	mov	r17,zero
 509245c:	003f8306 	br	509226c <__subdf3+0x35c>
 5092460:	04800084 	movi	r18,2
 5092464:	00bfe034 	movhi	r2,65408
 5092468:	10bfffc4 	addi	r2,r2,-1
 509246c:	8006d07a 	srli	r3,r16,1
 5092470:	2088703a 	and	r4,r4,r2
 5092474:	200497fa 	slli	r2,r4,31
 5092478:	8400004c 	andi	r16,r16,1
 509247c:	1c20b03a 	or	r16,r3,r16
 5092480:	2008d07a 	srli	r4,r4,1
 5092484:	1420b03a 	or	r16,r2,r16
 5092488:	003ef806 	br	509206c <__subdf3+0x15c>
 509248c:	1c3ff804 	addi	r16,r3,-32
 5092490:	18800820 	cmpeqi	r2,r3,32
 5092494:	7c0ad83a 	srl	r5,r15,r16
 5092498:	1000041e 	bne	r2,zero,50924ac <__subdf3+0x59c>
 509249c:	00801004 	movi	r2,64
 50924a0:	10c5c83a 	sub	r2,r2,r3
 50924a4:	7884983a 	sll	r2,r15,r2
 50924a8:	689ab03a 	or	r13,r13,r2
 50924ac:	6820c03a 	cmpne	r16,r13,zero
 50924b0:	8160b03a 	or	r16,r16,r5
 50924b4:	003ecc06 	br	5091fe8 <__subdf3+0xd8>
 50924b8:	4b92b03a 	or	r9,r9,r14
 50924bc:	4820c03a 	cmpne	r16,r9,zero
 50924c0:	6c21c83a 	sub	r16,r13,r16
 50924c4:	6c09803a 	cmpltu	r4,r13,r16
 50924c8:	7909c83a 	sub	r4,r15,r4
 50924cc:	4025883a 	mov	r18,r8
 50924d0:	003ec806 	br	5091ff4 <__subdf3+0xe4>
 50924d4:	4b84b03a 	or	r2,r9,r14
 50924d8:	10007e26 	beq	r2,zero,50926d4 <__subdf3+0x7c4>
 50924dc:	18bfffc4 	addi	r2,r3,-1
 50924e0:	1000a726 	beq	r2,zero,5092780 <__subdf3+0x870>
 50924e4:	18c1ffd8 	cmpnei	r3,r3,2047
 50924e8:	18003826 	beq	r3,zero,50925cc <__subdf3+0x6bc>
 50924ec:	1007883a 	mov	r3,r2
 50924f0:	003f9206 	br	509233c <__subdf3+0x42c>
 50924f4:	00800804 	movi	r2,32
 50924f8:	10c5c83a 	sub	r2,r2,r3
 50924fc:	78a0983a 	sll	r16,r15,r2
 5092500:	68c8d83a 	srl	r4,r13,r3
 5092504:	689a983a 	sll	r13,r13,r2
 5092508:	78c4d83a 	srl	r2,r15,r3
 509250c:	8120b03a 	or	r16,r16,r4
 5092510:	681ac03a 	cmpne	r13,r13,zero
 5092514:	8360b03a 	or	r16,r16,r13
 5092518:	4893883a 	add	r9,r9,r2
 509251c:	003f5a06 	br	5092288 <__subdf3+0x378>
 5092520:	10c1ffe0 	cmpeqi	r3,r2,2047
 5092524:	183f601e 	bne	r3,zero,50922a8 <__subdf3+0x398>
 5092528:	735b883a 	add	r13,r14,r13
 509252c:	6b9d803a 	cmpltu	r14,r13,r14
 5092530:	4bc9883a 	add	r4,r9,r15
 5092534:	2389883a 	add	r4,r4,r14
 5092538:	202097fa 	slli	r16,r4,31
 509253c:	681ad07a 	srli	r13,r13,1
 5092540:	2008d07a 	srli	r4,r4,1
 5092544:	1025883a 	mov	r18,r2
 5092548:	8360b03a 	or	r16,r16,r13
 509254c:	003f3e06 	br	5092248 <__subdf3+0x338>
 5092550:	6ba1c83a 	sub	r16,r13,r14
 5092554:	7a49c83a 	sub	r4,r15,r9
 5092558:	6c1b803a 	cmpltu	r13,r13,r16
 509255c:	2367c83a 	sub	r19,r4,r13
 5092560:	5823883a 	mov	r17,r11
 5092564:	003ea806 	br	5092008 <__subdf3+0xf8>
 5092568:	7808977a 	slli	r4,r15,29
 509256c:	00880034 	movhi	r2,8192
 5092570:	10bfffc4 	addi	r2,r2,-1
 5092574:	308c703a 	and	r6,r6,r2
 5092578:	7812d0fa 	srli	r9,r15,3
 509257c:	3104b03a 	or	r2,r6,r4
 5092580:	003f3806 	br	5092264 <__subdf3+0x354>
 5092584:	28005a1e 	bne	r5,zero,50926f0 <__subdf3+0x7e0>
 5092588:	10008526 	beq	r2,zero,50927a0 <__subdf3+0x890>
 509258c:	7806977a 	slli	r3,r15,29
 5092590:	00880034 	movhi	r2,8192
 5092594:	10bfffc4 	addi	r2,r2,-1
 5092598:	3084703a 	and	r2,r6,r2
 509259c:	7812d0fa 	srli	r9,r15,3
 50925a0:	10c4b03a 	or	r2,r2,r3
 50925a4:	5823883a 	mov	r17,r11
 50925a8:	003f4906 	br	50922d0 <__subdf3+0x3c0>
 50925ac:	7361883a 	add	r16,r14,r13
 50925b0:	4bc9883a 	add	r4,r9,r15
 50925b4:	839d803a 	cmpltu	r14,r16,r14
 50925b8:	2389883a 	add	r4,r4,r14
 50925bc:	2080202c 	andhi	r2,r4,128
 50925c0:	103fa71e 	bne	r2,zero,5092460 <__subdf3+0x550>
 50925c4:	04800044 	movi	r18,1
 50925c8:	003f1f06 	br	5092248 <__subdf3+0x338>
 50925cc:	7806977a 	slli	r3,r15,29
 50925d0:	00880034 	movhi	r2,8192
 50925d4:	10bfffc4 	addi	r2,r2,-1
 50925d8:	3084703a 	and	r2,r6,r2
 50925dc:	7812d0fa 	srli	r9,r15,3
 50925e0:	10c4b03a 	or	r2,r2,r3
 50925e4:	003f3a06 	br	50922d0 <__subdf3+0x3c0>
 50925e8:	7361c83a 	sub	r16,r14,r13
 50925ec:	4bc9c83a 	sub	r4,r9,r15
 50925f0:	741d803a 	cmpltu	r14,r14,r16
 50925f4:	2389c83a 	sub	r4,r4,r14
 50925f8:	04800044 	movi	r18,1
 50925fc:	003e7d06 	br	5091ff4 <__subdf3+0xe4>
 5092600:	480a977a 	slli	r5,r9,29
 5092604:	00880034 	movhi	r2,8192
 5092608:	10bfffc4 	addi	r2,r2,-1
 509260c:	2084703a 	and	r2,r4,r2
 5092610:	4812d0fa 	srli	r9,r9,3
 5092614:	1144b03a 	or	r2,r2,r5
 5092618:	003f1406 	br	509226c <__subdf3+0x35c>
 509261c:	4b92b03a 	or	r9,r9,r14
 5092620:	4820c03a 	cmpne	r16,r9,zero
 5092624:	003f5306 	br	5092374 <__subdf3+0x464>
 5092628:	1c3ff804 	addi	r16,r3,-32
 509262c:	19000820 	cmpeqi	r4,r3,32
 5092630:	4c04d83a 	srl	r2,r9,r16
 5092634:	2000041e 	bne	r4,zero,5092648 <__subdf3+0x738>
 5092638:	01001004 	movi	r4,64
 509263c:	20c7c83a 	sub	r3,r4,r3
 5092640:	48d2983a 	sll	r9,r9,r3
 5092644:	725cb03a 	or	r14,r14,r9
 5092648:	7020c03a 	cmpne	r16,r14,zero
 509264c:	80a0b03a 	or	r16,r16,r2
 5092650:	003f9b06 	br	50924c0 <__subdf3+0x5b0>
 5092654:	103fdd26 	beq	r2,zero,50925cc <__subdf3+0x6bc>
 5092658:	7b5ab03a 	or	r13,r15,r13
 509265c:	480a977a 	slli	r5,r9,29
 5092660:	4812d0fa 	srli	r9,r9,3
 5092664:	6800251e 	bne	r13,zero,50926fc <__subdf3+0x7ec>
 5092668:	00880034 	movhi	r2,8192
 509266c:	10bfffc4 	addi	r2,r2,-1
 5092670:	2084703a 	and	r2,r4,r2
 5092674:	1144b03a 	or	r2,r2,r5
 5092678:	003f1506 	br	50922d0 <__subdf3+0x3c0>
 509267c:	103f7526 	beq	r2,zero,5092454 <__subdf3+0x544>
 5092680:	7808977a 	slli	r4,r15,29
 5092684:	00880034 	movhi	r2,8192
 5092688:	10bfffc4 	addi	r2,r2,-1
 509268c:	3084703a 	and	r2,r6,r2
 5092690:	7812d0fa 	srli	r9,r15,3
 5092694:	1104b03a 	or	r2,r2,r4
 5092698:	5823883a 	mov	r17,r11
 509269c:	003ef306 	br	509226c <__subdf3+0x35c>
 50926a0:	6ba1c83a 	sub	r16,r13,r14
 50926a4:	7a49c83a 	sub	r4,r15,r9
 50926a8:	6c1b803a 	cmpltu	r13,r13,r16
 50926ac:	2349c83a 	sub	r4,r4,r13
 50926b0:	04800044 	movi	r18,1
 50926b4:	003e4f06 	br	5091ff4 <__subdf3+0xe4>
 50926b8:	4806977a 	slli	r3,r9,29
 50926bc:	00880034 	movhi	r2,8192
 50926c0:	10bfffc4 	addi	r2,r2,-1
 50926c4:	2084703a 	and	r2,r4,r2
 50926c8:	4812d0fa 	srli	r9,r9,3
 50926cc:	10c4b03a 	or	r2,r2,r3
 50926d0:	003eff06 	br	50922d0 <__subdf3+0x3c0>
 50926d4:	7808977a 	slli	r4,r15,29
 50926d8:	00880034 	movhi	r2,8192
 50926dc:	10bfffc4 	addi	r2,r2,-1
 50926e0:	3084703a 	and	r2,r6,r2
 50926e4:	7812d0fa 	srli	r9,r15,3
 50926e8:	1104b03a 	or	r2,r2,r4
 50926ec:	003edd06 	br	5092264 <__subdf3+0x354>
 50926f0:	480a977a 	slli	r5,r9,29
 50926f4:	4812d0fa 	srli	r9,r9,3
 50926f8:	103fdb26 	beq	r2,zero,5092668 <__subdf3+0x758>
 50926fc:	00c80034 	movhi	r3,8192
 5092700:	18ffffc4 	addi	r3,r3,-1
 5092704:	20c4703a 	and	r2,r4,r3
 5092708:	4900022c 	andhi	r4,r9,8
 509270c:	1144b03a 	or	r2,r2,r5
 5092710:	203eef26 	beq	r4,zero,50922d0 <__subdf3+0x3c0>
 5092714:	7808d0fa 	srli	r4,r15,3
 5092718:	2140022c 	andhi	r5,r4,8
 509271c:	283eec1e 	bne	r5,zero,50922d0 <__subdf3+0x3c0>
 5092720:	7804977a 	slli	r2,r15,29
 5092724:	30cc703a 	and	r6,r6,r3
 5092728:	5823883a 	mov	r17,r11
 509272c:	3084b03a 	or	r2,r6,r2
 5092730:	2013883a 	mov	r9,r4
 5092734:	003ee606 	br	50922d0 <__subdf3+0x3c0>
 5092738:	7808977a 	slli	r4,r15,29
 509273c:	00880034 	movhi	r2,8192
 5092740:	10bfffc4 	addi	r2,r2,-1
 5092744:	3084703a 	and	r2,r6,r2
 5092748:	7812d0fa 	srli	r9,r15,3
 509274c:	1104b03a 	or	r2,r2,r4
 5092750:	003ec606 	br	509226c <__subdf3+0x35c>
 5092754:	18bff804 	addi	r2,r3,-32
 5092758:	19000820 	cmpeqi	r4,r3,32
 509275c:	4884d83a 	srl	r2,r9,r2
 5092760:	2000041e 	bne	r4,zero,5092774 <__subdf3+0x864>
 5092764:	01001004 	movi	r4,64
 5092768:	20c7c83a 	sub	r3,r4,r3
 509276c:	48d2983a 	sll	r9,r9,r3
 5092770:	725cb03a 	or	r14,r14,r9
 5092774:	7020c03a 	cmpne	r16,r14,zero
 5092778:	80a0b03a 	or	r16,r16,r2
 509277c:	003efd06 	br	5092374 <__subdf3+0x464>
 5092780:	7361883a 	add	r16,r14,r13
 5092784:	4bc9883a 	add	r4,r9,r15
 5092788:	835b803a 	cmpltu	r13,r16,r13
 509278c:	2349883a 	add	r4,r4,r13
 5092790:	003f8a06 	br	50925bc <__subdf3+0x6ac>
 5092794:	8104b03a 	or	r2,r16,r4
 5092798:	103f2e26 	beq	r2,zero,5092454 <__subdf3+0x544>
 509279c:	003eaa06 	br	5092248 <__subdf3+0x338>
 50927a0:	02400434 	movhi	r9,16
 50927a4:	0023883a 	mov	r17,zero
 50927a8:	00bfffc4 	movi	r2,-1
 50927ac:	4a7fffc4 	addi	r9,r9,-1
 50927b0:	003ec906 	br	50922d8 <__subdf3+0x3c8>
 50927b4:	0005883a 	mov	r2,zero
 50927b8:	00c1ffc4 	movi	r3,2047
 50927bc:	0009883a 	mov	r4,zero
 50927c0:	003e4106 	br	50920c8 <__subdf3+0x1b8>

050927c4 <__unorddf2>:
 50927c4:	2806d53a 	srli	r3,r5,20
 50927c8:	3810d53a 	srli	r8,r7,20
 50927cc:	02400434 	movhi	r9,16
 50927d0:	18c1ffcc 	andi	r3,r3,2047
 50927d4:	4a7fffc4 	addi	r9,r9,-1
 50927d8:	18c1ffd8 	cmpnei	r3,r3,2047
 50927dc:	2a4a703a 	and	r5,r5,r9
 50927e0:	3a4e703a 	and	r7,r7,r9
 50927e4:	4201ffcc 	andi	r8,r8,2047
 50927e8:	18000426 	beq	r3,zero,50927fc <__unorddf2+0x38>
 50927ec:	4201ffd8 	cmpnei	r8,r8,2047
 50927f0:	40000626 	beq	r8,zero,509280c <__unorddf2+0x48>
 50927f4:	0005883a 	mov	r2,zero
 50927f8:	f800283a 	ret
 50927fc:	290ab03a 	or	r5,r5,r4
 5092800:	283ffa26 	beq	r5,zero,50927ec <__unorddf2+0x28>
 5092804:	00800044 	movi	r2,1
 5092808:	f800283a 	ret
 509280c:	398eb03a 	or	r7,r7,r6
 5092810:	3804c03a 	cmpne	r2,r7,zero
 5092814:	f800283a 	ret

05092818 <__fixdfsi>:
 5092818:	2806d53a 	srli	r3,r5,20
 509281c:	01800434 	movhi	r6,16
 5092820:	31bfffc4 	addi	r6,r6,-1
 5092824:	18c1ffcc 	andi	r3,r3,2047
 5092828:	19c0ffd0 	cmplti	r7,r3,1023
 509282c:	2810d7fa 	srli	r8,r5,31
 5092830:	298a703a 	and	r5,r5,r6
 5092834:	3800061e 	bne	r7,zero,5092850 <__fixdfsi+0x38>
 5092838:	18810790 	cmplti	r2,r3,1054
 509283c:	1000061e 	bne	r2,zero,5092858 <__fixdfsi+0x40>
 5092840:	00a00034 	movhi	r2,32768
 5092844:	10bfffc4 	addi	r2,r2,-1
 5092848:	4085883a 	add	r2,r8,r2
 509284c:	f800283a 	ret
 5092850:	0005883a 	mov	r2,zero
 5092854:	f800283a 	ret
 5092858:	01810cc4 	movi	r6,1075
 509285c:	30cdc83a 	sub	r6,r6,r3
 5092860:	30800808 	cmpgei	r2,r6,32
 5092864:	29400434 	orhi	r5,r5,16
 5092868:	1000071e 	bne	r2,zero,5092888 <__fixdfsi+0x70>
 509286c:	18befb44 	addi	r2,r3,-1043
 5092870:	2884983a 	sll	r2,r5,r2
 5092874:	2188d83a 	srl	r4,r4,r6
 5092878:	1104b03a 	or	r2,r2,r4
 509287c:	403ff526 	beq	r8,zero,5092854 <__fixdfsi+0x3c>
 5092880:	0085c83a 	sub	r2,zero,r2
 5092884:	f800283a 	ret
 5092888:	008104c4 	movi	r2,1043
 509288c:	10c5c83a 	sub	r2,r2,r3
 5092890:	2884d83a 	srl	r2,r5,r2
 5092894:	003ff906 	br	509287c <__fixdfsi+0x64>

05092898 <__floatsidf>:
 5092898:	defffd04 	addi	sp,sp,-12
 509289c:	dfc00215 	stw	ra,8(sp)
 50928a0:	dc400115 	stw	r17,4(sp)
 50928a4:	dc000015 	stw	r16,0(sp)
 50928a8:	20001326 	beq	r4,zero,50928f8 <__floatsidf+0x60>
 50928ac:	2022d7fa 	srli	r17,r4,31
 50928b0:	2021883a 	mov	r16,r4
 50928b4:	20002416 	blt	r4,zero,5092948 <__floatsidf+0xb0>
 50928b8:	8009883a 	mov	r4,r16
 50928bc:	50929e00 	call	50929e0 <__clzsi2>
 50928c0:	01010784 	movi	r4,1054
 50928c4:	2089c83a 	sub	r4,r4,r2
 50928c8:	114002c8 	cmpgei	r5,r2,11
 50928cc:	20c1ffcc 	andi	r3,r4,2047
 50928d0:	2800161e 	bne	r5,zero,509292c <__floatsidf+0x94>
 50928d4:	010002c4 	movi	r4,11
 50928d8:	2089c83a 	sub	r4,r4,r2
 50928dc:	810ad83a 	srl	r5,r16,r4
 50928e0:	01000434 	movhi	r4,16
 50928e4:	10800544 	addi	r2,r2,21
 50928e8:	213fffc4 	addi	r4,r4,-1
 50928ec:	8084983a 	sll	r2,r16,r2
 50928f0:	290a703a 	and	r5,r5,r4
 50928f4:	00000406 	br	5092908 <__floatsidf+0x70>
 50928f8:	0023883a 	mov	r17,zero
 50928fc:	0007883a 	mov	r3,zero
 5092900:	000b883a 	mov	r5,zero
 5092904:	0005883a 	mov	r2,zero
 5092908:	1808953a 	slli	r4,r3,20
 509290c:	880697fa 	slli	r3,r17,31
 5092910:	2148b03a 	or	r4,r4,r5
 5092914:	20c6b03a 	or	r3,r4,r3
 5092918:	dfc00217 	ldw	ra,8(sp)
 509291c:	dc400117 	ldw	r17,4(sp)
 5092920:	dc000017 	ldw	r16,0(sp)
 5092924:	dec00304 	addi	sp,sp,12
 5092928:	f800283a 	ret
 509292c:	10bffd44 	addi	r2,r2,-11
 5092930:	808a983a 	sll	r5,r16,r2
 5092934:	00800434 	movhi	r2,16
 5092938:	10bfffc4 	addi	r2,r2,-1
 509293c:	288a703a 	and	r5,r5,r2
 5092940:	0005883a 	mov	r2,zero
 5092944:	003ff006 	br	5092908 <__floatsidf+0x70>
 5092948:	0121c83a 	sub	r16,zero,r4
 509294c:	003fda06 	br	50928b8 <__floatsidf+0x20>

05092950 <__floatunsidf>:
 5092950:	defffe04 	addi	sp,sp,-8
 5092954:	dc000015 	stw	r16,0(sp)
 5092958:	dfc00115 	stw	ra,4(sp)
 509295c:	2021883a 	mov	r16,r4
 5092960:	20000f26 	beq	r4,zero,50929a0 <__floatunsidf+0x50>
 5092964:	50929e00 	call	50929e0 <__clzsi2>
 5092968:	00c10784 	movi	r3,1054
 509296c:	1887c83a 	sub	r3,r3,r2
 5092970:	110002c8 	cmpgei	r4,r2,11
 5092974:	18c1ffcc 	andi	r3,r3,2047
 5092978:	2000121e 	bne	r4,zero,50929c4 <__floatunsidf+0x74>
 509297c:	014002c4 	movi	r5,11
 5092980:	288bc83a 	sub	r5,r5,r2
 5092984:	814ad83a 	srl	r5,r16,r5
 5092988:	01000434 	movhi	r4,16
 509298c:	10800544 	addi	r2,r2,21
 5092990:	213fffc4 	addi	r4,r4,-1
 5092994:	80a0983a 	sll	r16,r16,r2
 5092998:	290a703a 	and	r5,r5,r4
 509299c:	00000206 	br	50929a8 <__floatunsidf+0x58>
 50929a0:	0007883a 	mov	r3,zero
 50929a4:	000b883a 	mov	r5,zero
 50929a8:	1806953a 	slli	r3,r3,20
 50929ac:	8005883a 	mov	r2,r16
 50929b0:	1946b03a 	or	r3,r3,r5
 50929b4:	dfc00117 	ldw	ra,4(sp)
 50929b8:	dc000017 	ldw	r16,0(sp)
 50929bc:	dec00204 	addi	sp,sp,8
 50929c0:	f800283a 	ret
 50929c4:	117ffd44 	addi	r5,r2,-11
 50929c8:	814a983a 	sll	r5,r16,r5
 50929cc:	00800434 	movhi	r2,16
 50929d0:	10bfffc4 	addi	r2,r2,-1
 50929d4:	288a703a 	and	r5,r5,r2
 50929d8:	0021883a 	mov	r16,zero
 50929dc:	003ff206 	br	50929a8 <__floatunsidf+0x58>

050929e0 <__clzsi2>:
 50929e0:	00bfffd4 	movui	r2,65535
 50929e4:	11000436 	bltu	r2,r4,50929f8 <__clzsi2+0x18>
 50929e8:	20804030 	cmpltui	r2,r4,256
 50929ec:	10000e26 	beq	r2,zero,5092a28 <__clzsi2+0x48>
 50929f0:	01400804 	movi	r5,32
 50929f4:	00000406 	br	5092a08 <__clzsi2+0x28>
 50929f8:	00804034 	movhi	r2,256
 50929fc:	20800736 	bltu	r4,r2,5092a1c <__clzsi2+0x3c>
 5092a00:	2008d63a 	srli	r4,r4,24
 5092a04:	01400204 	movi	r5,8
 5092a08:	00c14274 	movhi	r3,1289
 5092a0c:	20c7883a 	add	r3,r4,r3
 5092a10:	18996103 	ldbu	r2,25988(r3)
 5092a14:	2885c83a 	sub	r2,r5,r2
 5092a18:	f800283a 	ret
 5092a1c:	2008d43a 	srli	r4,r4,16
 5092a20:	01400404 	movi	r5,16
 5092a24:	003ff806 	br	5092a08 <__clzsi2+0x28>
 5092a28:	2008d23a 	srli	r4,r4,8
 5092a2c:	01400604 	movi	r5,24
 5092a30:	003ff506 	br	5092a08 <__clzsi2+0x28>

05092a34 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 5092a34:	defffe04 	addi	sp,sp,-8
 5092a38:	dfc00115 	stw	ra,4(sp)
 5092a3c:	df000015 	stw	fp,0(sp)
 5092a40:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5092a44:	d0a00917 	ldw	r2,-32732(gp)
 5092a48:	10000326 	beq	r2,zero,5092a58 <alt_get_errno+0x24>
 5092a4c:	d0a00917 	ldw	r2,-32732(gp)
 5092a50:	103ee83a 	callr	r2
 5092a54:	00000106 	br	5092a5c <alt_get_errno+0x28>
 5092a58:	d0a70e04 	addi	r2,gp,-25544
}
 5092a5c:	e037883a 	mov	sp,fp
 5092a60:	dfc00117 	ldw	ra,4(sp)
 5092a64:	df000017 	ldw	fp,0(sp)
 5092a68:	dec00204 	addi	sp,sp,8
 5092a6c:	f800283a 	ret

05092a70 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 5092a70:	defffb04 	addi	sp,sp,-20
 5092a74:	dfc00415 	stw	ra,16(sp)
 5092a78:	df000315 	stw	fp,12(sp)
 5092a7c:	df000304 	addi	fp,sp,12
 5092a80:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 5092a84:	e0bffd17 	ldw	r2,-12(fp)
 5092a88:	10000616 	blt	r2,zero,5092aa4 <close+0x34>
 5092a8c:	e0bffd17 	ldw	r2,-12(fp)
 5092a90:	10c00324 	muli	r3,r2,12
 5092a94:	00814274 	movhi	r2,1289
 5092a98:	109c2004 	addi	r2,r2,28800
 5092a9c:	1885883a 	add	r2,r3,r2
 5092aa0:	00000106 	br	5092aa8 <close+0x38>
 5092aa4:	0005883a 	mov	r2,zero
 5092aa8:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
 5092aac:	e0bfff17 	ldw	r2,-4(fp)
 5092ab0:	10001926 	beq	r2,zero,5092b18 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 5092ab4:	e0bfff17 	ldw	r2,-4(fp)
 5092ab8:	10800017 	ldw	r2,0(r2)
 5092abc:	10800417 	ldw	r2,16(r2)
 5092ac0:	10000626 	beq	r2,zero,5092adc <close+0x6c>
 5092ac4:	e0bfff17 	ldw	r2,-4(fp)
 5092ac8:	10800017 	ldw	r2,0(r2)
 5092acc:	10800417 	ldw	r2,16(r2)
 5092ad0:	e13fff17 	ldw	r4,-4(fp)
 5092ad4:	103ee83a 	callr	r2
 5092ad8:	00000106 	br	5092ae0 <close+0x70>
 5092adc:	0005883a 	mov	r2,zero
 5092ae0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 5092ae4:	e13ffd17 	ldw	r4,-12(fp)
 5092ae8:	50934700 	call	5093470 <alt_release_fd>
    if (rval < 0)
 5092aec:	e0bffe17 	ldw	r2,-8(fp)
 5092af0:	1000070e 	bge	r2,zero,5092b10 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 5092af4:	5092a340 	call	5092a34 <alt_get_errno>
 5092af8:	1007883a 	mov	r3,r2
 5092afc:	e0bffe17 	ldw	r2,-8(fp)
 5092b00:	0085c83a 	sub	r2,zero,r2
 5092b04:	18800015 	stw	r2,0(r3)
      return -1;
 5092b08:	00bfffc4 	movi	r2,-1
 5092b0c:	00000706 	br	5092b2c <close+0xbc>
    }
    return 0;
 5092b10:	0005883a 	mov	r2,zero
 5092b14:	00000506 	br	5092b2c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 5092b18:	5092a340 	call	5092a34 <alt_get_errno>
 5092b1c:	1007883a 	mov	r3,r2
 5092b20:	00801444 	movi	r2,81
 5092b24:	18800015 	stw	r2,0(r3)
    return -1;
 5092b28:	00bfffc4 	movi	r2,-1
  }
}
 5092b2c:	e037883a 	mov	sp,fp
 5092b30:	dfc00117 	ldw	ra,4(sp)
 5092b34:	df000017 	ldw	fp,0(sp)
 5092b38:	dec00204 	addi	sp,sp,8
 5092b3c:	f800283a 	ret

05092b40 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 5092b40:	defffc04 	addi	sp,sp,-16
 5092b44:	df000315 	stw	fp,12(sp)
 5092b48:	df000304 	addi	fp,sp,12
 5092b4c:	e13fff15 	stw	r4,-4(fp)
 5092b50:	e17ffe15 	stw	r5,-8(fp)
 5092b54:	e1bffd15 	stw	r6,-12(fp)
  return len;
 5092b58:	e0bffd17 	ldw	r2,-12(fp)
}
 5092b5c:	e037883a 	mov	sp,fp
 5092b60:	df000017 	ldw	fp,0(sp)
 5092b64:	dec00104 	addi	sp,sp,4
 5092b68:	f800283a 	ret

05092b6c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 5092b6c:	defffd04 	addi	sp,sp,-12
 5092b70:	df000215 	stw	fp,8(sp)
 5092b74:	df000204 	addi	fp,sp,8
 5092b78:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 5092b7c:	0001883a 	nop
 5092b80:	e0bffe17 	ldw	r2,-8(fp)
 5092b84:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 5092b88:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 5092b8c:	10000226 	beq	r2,zero,5092b98 <_exit+0x2c>
    ALT_SIM_FAIL();
 5092b90:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
 5092b94:	00000106 	br	5092b9c <_exit+0x30>
    ALT_SIM_PASS();
 5092b98:	002af0b0 	cmpltui	zero,zero,43970
}
 5092b9c:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 5092ba0:	003fff06 	br	5092ba0 <_exit+0x34>

05092ba4 <alt_get_errno>:
{
 5092ba4:	defffe04 	addi	sp,sp,-8
 5092ba8:	dfc00115 	stw	ra,4(sp)
 5092bac:	df000015 	stw	fp,0(sp)
 5092bb0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5092bb4:	d0a00917 	ldw	r2,-32732(gp)
 5092bb8:	10000326 	beq	r2,zero,5092bc8 <alt_get_errno+0x24>
 5092bbc:	d0a00917 	ldw	r2,-32732(gp)
 5092bc0:	103ee83a 	callr	r2
 5092bc4:	00000106 	br	5092bcc <alt_get_errno+0x28>
 5092bc8:	d0a70e04 	addi	r2,gp,-25544
}
 5092bcc:	e037883a 	mov	sp,fp
 5092bd0:	dfc00117 	ldw	ra,4(sp)
 5092bd4:	df000017 	ldw	fp,0(sp)
 5092bd8:	dec00204 	addi	sp,sp,8
 5092bdc:	f800283a 	ret

05092be0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 5092be0:	defffb04 	addi	sp,sp,-20
 5092be4:	dfc00415 	stw	ra,16(sp)
 5092be8:	df000315 	stw	fp,12(sp)
 5092bec:	df000304 	addi	fp,sp,12
 5092bf0:	e13ffe15 	stw	r4,-8(fp)
 5092bf4:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 5092bf8:	e0bffe17 	ldw	r2,-8(fp)
 5092bfc:	10000616 	blt	r2,zero,5092c18 <fstat+0x38>
 5092c00:	e0bffe17 	ldw	r2,-8(fp)
 5092c04:	10c00324 	muli	r3,r2,12
 5092c08:	00814274 	movhi	r2,1289
 5092c0c:	109c2004 	addi	r2,r2,28800
 5092c10:	1885883a 	add	r2,r3,r2
 5092c14:	00000106 	br	5092c1c <fstat+0x3c>
 5092c18:	0005883a 	mov	r2,zero
 5092c1c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 5092c20:	e0bfff17 	ldw	r2,-4(fp)
 5092c24:	10001026 	beq	r2,zero,5092c68 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 5092c28:	e0bfff17 	ldw	r2,-4(fp)
 5092c2c:	10800017 	ldw	r2,0(r2)
 5092c30:	10800817 	ldw	r2,32(r2)
 5092c34:	10000726 	beq	r2,zero,5092c54 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 5092c38:	e0bfff17 	ldw	r2,-4(fp)
 5092c3c:	10800017 	ldw	r2,0(r2)
 5092c40:	10800817 	ldw	r2,32(r2)
 5092c44:	e17ffd17 	ldw	r5,-12(fp)
 5092c48:	e13fff17 	ldw	r4,-4(fp)
 5092c4c:	103ee83a 	callr	r2
 5092c50:	00000a06 	br	5092c7c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 5092c54:	e0bffd17 	ldw	r2,-12(fp)
 5092c58:	00c80004 	movi	r3,8192
 5092c5c:	10c00115 	stw	r3,4(r2)
      return 0;
 5092c60:	0005883a 	mov	r2,zero
 5092c64:	00000506 	br	5092c7c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 5092c68:	5092ba40 	call	5092ba4 <alt_get_errno>
 5092c6c:	1007883a 	mov	r3,r2
 5092c70:	00801444 	movi	r2,81
 5092c74:	18800015 	stw	r2,0(r3)
    return -1;
 5092c78:	00bfffc4 	movi	r2,-1
  }
}
 5092c7c:	e037883a 	mov	sp,fp
 5092c80:	dfc00117 	ldw	ra,4(sp)
 5092c84:	df000017 	ldw	fp,0(sp)
 5092c88:	dec00204 	addi	sp,sp,8
 5092c8c:	f800283a 	ret

05092c90 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
 5092c90:	deffff04 	addi	sp,sp,-4
 5092c94:	df000015 	stw	fp,0(sp)
 5092c98:	d839883a 	mov	fp,sp
  return 0;
 5092c9c:	0005883a 	mov	r2,zero
}
 5092ca0:	e037883a 	mov	sp,fp
 5092ca4:	df000017 	ldw	fp,0(sp)
 5092ca8:	dec00104 	addi	sp,sp,4
 5092cac:	f800283a 	ret

05092cb0 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
 5092cb0:	defff004 	addi	sp,sp,-64
 5092cb4:	df000f15 	stw	fp,60(sp)
 5092cb8:	df000f04 	addi	fp,sp,60
 5092cbc:	e13ff315 	stw	r4,-52(fp)
 5092cc0:	e17ff215 	stw	r5,-56(fp)
 5092cc4:	e1bff115 	stw	r6,-60(fp)
  int rc = -EINVAL;  
 5092cc8:	00bffa84 	movi	r2,-22
 5092ccc:	e0bfff15 	stw	r2,-4(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 5092cd0:	e0bff317 	ldw	r2,-52(fp)
 5092cd4:	10800828 	cmpgeui	r2,r2,32
 5092cd8:	1000501e 	bne	r2,zero,5092e1c <alt_irq_register+0x16c>
  NIOS2_READ_STATUS (context);
 5092cdc:	0005303a 	rdctl	r2,status
 5092ce0:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5092ce4:	e0fffd17 	ldw	r3,-12(fp)
 5092ce8:	00bfff84 	movi	r2,-2
 5092cec:	1884703a 	and	r2,r3,r2
 5092cf0:	1001703a 	wrctl	status,r2
  return context;
 5092cf4:	e0bffd17 	ldw	r2,-12(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
 5092cf8:	e0bffe15 	stw	r2,-8(fp)

    alt_irq[id].handler = handler;
 5092cfc:	e0bff317 	ldw	r2,-52(fp)
 5092d00:	100890fa 	slli	r4,r2,3
 5092d04:	e0fff117 	ldw	r3,-60(fp)
 5092d08:	008142b4 	movhi	r2,1290
 5092d0c:	2085883a 	add	r2,r4,r2
 5092d10:	10e7c315 	stw	r3,-24820(r2)
    alt_irq[id].context = context;
 5092d14:	e0bff317 	ldw	r2,-52(fp)
 5092d18:	100890fa 	slli	r4,r2,3
 5092d1c:	e0fff217 	ldw	r3,-56(fp)
 5092d20:	008142b4 	movhi	r2,1290
 5092d24:	2085883a 	add	r2,r4,r2
 5092d28:	10e7c415 	stw	r3,-24816(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
 5092d2c:	e0bff117 	ldw	r2,-60(fp)
 5092d30:	10001a26 	beq	r2,zero,5092d9c <alt_irq_register+0xec>
 5092d34:	e0bff317 	ldw	r2,-52(fp)
 5092d38:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_READ_STATUS (context);
 5092d3c:	0005303a 	rdctl	r2,status
 5092d40:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5092d44:	e0fffb17 	ldw	r3,-20(fp)
 5092d48:	00bfff84 	movi	r2,-2
 5092d4c:	1884703a 	and	r2,r3,r2
 5092d50:	1001703a 	wrctl	status,r2
  return context;
 5092d54:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 5092d58:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active |= (1 << id);
 5092d5c:	00c00044 	movi	r3,1
 5092d60:	e0bffc17 	ldw	r2,-16(fp)
 5092d64:	1884983a 	sll	r2,r3,r2
 5092d68:	1007883a 	mov	r3,r2
 5092d6c:	d0a71017 	ldw	r2,-25536(gp)
 5092d70:	1884b03a 	or	r2,r3,r2
 5092d74:	d0a71015 	stw	r2,-25536(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 5092d78:	d0a71017 	ldw	r2,-25536(gp)
 5092d7c:	100170fa 	wrctl	ienable,r2
 5092d80:	e0bffa17 	ldw	r2,-24(fp)
 5092d84:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context);
 5092d88:	e0bff917 	ldw	r2,-28(fp)
 5092d8c:	1001703a 	wrctl	status,r2
}
 5092d90:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
 5092d94:	0005883a 	mov	r2,zero
 5092d98:	00001a06 	br	5092e04 <alt_irq_register+0x154>
 5092d9c:	e0bff317 	ldw	r2,-52(fp)
 5092da0:	e0bff815 	stw	r2,-32(fp)
  NIOS2_READ_STATUS (context);
 5092da4:	0005303a 	rdctl	r2,status
 5092da8:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5092dac:	e0fff717 	ldw	r3,-36(fp)
 5092db0:	00bfff84 	movi	r2,-2
 5092db4:	1884703a 	and	r2,r3,r2
 5092db8:	1001703a 	wrctl	status,r2
  return context;
 5092dbc:	e0bff717 	ldw	r2,-36(fp)
  status = alt_irq_disable_all ();
 5092dc0:	e0bff615 	stw	r2,-40(fp)
  alt_irq_active &= ~(1 << id);
 5092dc4:	00c00044 	movi	r3,1
 5092dc8:	e0bff817 	ldw	r2,-32(fp)
 5092dcc:	1884983a 	sll	r2,r3,r2
 5092dd0:	0084303a 	nor	r2,zero,r2
 5092dd4:	1007883a 	mov	r3,r2
 5092dd8:	d0a71017 	ldw	r2,-25536(gp)
 5092ddc:	1884703a 	and	r2,r3,r2
 5092de0:	d0a71015 	stw	r2,-25536(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 5092de4:	d0a71017 	ldw	r2,-25536(gp)
 5092de8:	100170fa 	wrctl	ienable,r2
 5092dec:	e0bff617 	ldw	r2,-40(fp)
 5092df0:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
 5092df4:	e0bff517 	ldw	r2,-44(fp)
 5092df8:	1001703a 	wrctl	status,r2
}
 5092dfc:	0001883a 	nop
  return 0;
 5092e00:	0005883a 	mov	r2,zero
 5092e04:	e0bfff15 	stw	r2,-4(fp)
 5092e08:	e0bffe17 	ldw	r2,-8(fp)
 5092e0c:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context);
 5092e10:	e0bff417 	ldw	r2,-48(fp)
 5092e14:	1001703a 	wrctl	status,r2
}
 5092e18:	0001883a 	nop

    alt_irq_enable_all(status);
  }
  return rc; 
 5092e1c:	e0bfff17 	ldw	r2,-4(fp)
}
 5092e20:	e037883a 	mov	sp,fp
 5092e24:	df000017 	ldw	fp,0(sp)
 5092e28:	dec00104 	addi	sp,sp,4
 5092e2c:	f800283a 	ret

05092e30 <alt_get_errno>:
{
 5092e30:	defffe04 	addi	sp,sp,-8
 5092e34:	dfc00115 	stw	ra,4(sp)
 5092e38:	df000015 	stw	fp,0(sp)
 5092e3c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5092e40:	d0a00917 	ldw	r2,-32732(gp)
 5092e44:	10000326 	beq	r2,zero,5092e54 <alt_get_errno+0x24>
 5092e48:	d0a00917 	ldw	r2,-32732(gp)
 5092e4c:	103ee83a 	callr	r2
 5092e50:	00000106 	br	5092e58 <alt_get_errno+0x28>
 5092e54:	d0a70e04 	addi	r2,gp,-25544
}
 5092e58:	e037883a 	mov	sp,fp
 5092e5c:	dfc00117 	ldw	ra,4(sp)
 5092e60:	df000017 	ldw	fp,0(sp)
 5092e64:	dec00204 	addi	sp,sp,8
 5092e68:	f800283a 	ret

05092e6c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 5092e6c:	deffea04 	addi	sp,sp,-88
 5092e70:	dfc01515 	stw	ra,84(sp)
 5092e74:	df001415 	stw	fp,80(sp)
 5092e78:	df001404 	addi	fp,sp,80
 5092e7c:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 5092e80:	e0bfec17 	ldw	r2,-80(fp)
 5092e84:	10000616 	blt	r2,zero,5092ea0 <isatty+0x34>
 5092e88:	e0bfec17 	ldw	r2,-80(fp)
 5092e8c:	10c00324 	muli	r3,r2,12
 5092e90:	00814274 	movhi	r2,1289
 5092e94:	109c2004 	addi	r2,r2,28800
 5092e98:	1885883a 	add	r2,r3,r2
 5092e9c:	00000106 	br	5092ea4 <isatty+0x38>
 5092ea0:	0005883a 	mov	r2,zero
 5092ea4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 5092ea8:	e0bfff17 	ldw	r2,-4(fp)
 5092eac:	10000e26 	beq	r2,zero,5092ee8 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 5092eb0:	e0bfff17 	ldw	r2,-4(fp)
 5092eb4:	10800017 	ldw	r2,0(r2)
 5092eb8:	10800817 	ldw	r2,32(r2)
 5092ebc:	1000021e 	bne	r2,zero,5092ec8 <isatty+0x5c>
    {
      return 1;
 5092ec0:	00800044 	movi	r2,1
 5092ec4:	00000d06 	br	5092efc <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 5092ec8:	e0bfed04 	addi	r2,fp,-76
 5092ecc:	100b883a 	mov	r5,r2
 5092ed0:	e13fec17 	ldw	r4,-80(fp)
 5092ed4:	5092be00 	call	5092be0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 5092ed8:	e0bfee17 	ldw	r2,-72(fp)
 5092edc:	10880020 	cmpeqi	r2,r2,8192
 5092ee0:	10803fcc 	andi	r2,r2,255
 5092ee4:	00000506 	br	5092efc <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 5092ee8:	5092e300 	call	5092e30 <alt_get_errno>
 5092eec:	1007883a 	mov	r3,r2
 5092ef0:	00801444 	movi	r2,81
 5092ef4:	18800015 	stw	r2,0(r3)
    return 0;
 5092ef8:	0005883a 	mov	r2,zero
  }
}
 5092efc:	e037883a 	mov	sp,fp
 5092f00:	dfc00117 	ldw	ra,4(sp)
 5092f04:	df000017 	ldw	fp,0(sp)
 5092f08:	dec00204 	addi	sp,sp,8
 5092f0c:	f800283a 	ret

05092f10 <alt_get_errno>:
{
 5092f10:	defffe04 	addi	sp,sp,-8
 5092f14:	dfc00115 	stw	ra,4(sp)
 5092f18:	df000015 	stw	fp,0(sp)
 5092f1c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5092f20:	d0a00917 	ldw	r2,-32732(gp)
 5092f24:	10000326 	beq	r2,zero,5092f34 <alt_get_errno+0x24>
 5092f28:	d0a00917 	ldw	r2,-32732(gp)
 5092f2c:	103ee83a 	callr	r2
 5092f30:	00000106 	br	5092f38 <alt_get_errno+0x28>
 5092f34:	d0a70e04 	addi	r2,gp,-25544
}
 5092f38:	e037883a 	mov	sp,fp
 5092f3c:	dfc00117 	ldw	ra,4(sp)
 5092f40:	df000017 	ldw	fp,0(sp)
 5092f44:	dec00204 	addi	sp,sp,8
 5092f48:	f800283a 	ret

05092f4c <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
 5092f4c:	defffb04 	addi	sp,sp,-20
 5092f50:	dfc00415 	stw	ra,16(sp)
 5092f54:	df000315 	stw	fp,12(sp)
 5092f58:	df000304 	addi	fp,sp,12
 5092f5c:	e13ffe15 	stw	r4,-8(fp)
 5092f60:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
 5092f64:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
 5092f68:	e0bffe17 	ldw	r2,-8(fp)
 5092f6c:	00802e16 	blt	zero,r2,5093028 <kill+0xdc>
 5092f70:	e0bffd17 	ldw	r2,-12(fp)
 5092f74:	10800828 	cmpgeui	r2,r2,32
 5092f78:	1000281e 	bne	r2,zero,509301c <kill+0xd0>
 5092f7c:	e0bffd17 	ldw	r2,-12(fp)
 5092f80:	100690ba 	slli	r3,r2,2
 5092f84:	00814274 	movhi	r2,1289
 5092f88:	1885883a 	add	r2,r3,r2
 5092f8c:	108be517 	ldw	r2,12180(r2)
 5092f90:	1000683a 	jmp	r2
 5092f94:	0509303c 	xorhi	r20,zero,9408
 5092f98:	0509301c 	xori	r20,zero,9408
 5092f9c:	0509301c 	xori	r20,zero,9408
 5092fa0:	05093014 	movui	r20,9408
 5092fa4:	05093014 	movui	r20,9408
 5092fa8:	05093014 	movui	r20,9408
 5092fac:	05093014 	movui	r20,9408
 5092fb0:	0509301c 	xori	r20,zero,9408
 5092fb4:	05093014 	movui	r20,9408
 5092fb8:	05093014 	movui	r20,9408
 5092fbc:	05093014 	movui	r20,9408
 5092fc0:	05093014 	movui	r20,9408
 5092fc4:	05093014 	movui	r20,9408
 5092fc8:	05093014 	movui	r20,9408
 5092fcc:	05093014 	movui	r20,9408
 5092fd0:	05093014 	movui	r20,9408
 5092fd4:	0509303c 	xorhi	r20,zero,9408
 5092fd8:	0509301c 	xori	r20,zero,9408
 5092fdc:	0509301c 	xori	r20,zero,9408
 5092fe0:	0509301c 	xori	r20,zero,9408
 5092fe4:	0509303c 	xorhi	r20,zero,9408
 5092fe8:	0509301c 	xori	r20,zero,9408
 5092fec:	0509301c 	xori	r20,zero,9408
 5092ff0:	05093014 	movui	r20,9408
 5092ff4:	05093014 	movui	r20,9408
 5092ff8:	05093014 	movui	r20,9408
 5092ffc:	05093014 	movui	r20,9408
 5093000:	05093014 	movui	r20,9408
 5093004:	0509301c 	xori	r20,zero,9408
 5093008:	0509301c 	xori	r20,zero,9408
 509300c:	05093014 	movui	r20,9408
 5093010:	05093014 	movui	r20,9408
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
 5093014:	0009883a 	mov	r4,zero
 5093018:	5092b6c0 	call	5092b6c <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
 509301c:	00800584 	movi	r2,22
 5093020:	e0bfff15 	stw	r2,-4(fp)
 5093024:	00000606 	br	5093040 <kill+0xf4>
    }
  }

  else if (pid > 0)
 5093028:	e0bffe17 	ldw	r2,-8(fp)
 509302c:	0080040e 	bge	zero,r2,5093040 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
 5093030:	008000c4 	movi	r2,3
 5093034:	e0bfff15 	stw	r2,-4(fp)
 5093038:	00000106 	br	5093040 <kill+0xf4>
      break;
 509303c:	0001883a 	nop
  }

  if (status)
 5093040:	e0bfff17 	ldw	r2,-4(fp)
 5093044:	10000626 	beq	r2,zero,5093060 <kill+0x114>
  {
    ALT_ERRNO = status;
 5093048:	5092f100 	call	5092f10 <alt_get_errno>
 509304c:	1007883a 	mov	r3,r2
 5093050:	e0bfff17 	ldw	r2,-4(fp)
 5093054:	18800015 	stw	r2,0(r3)
    return -1;
 5093058:	00bfffc4 	movi	r2,-1
 509305c:	00000106 	br	5093064 <kill+0x118>
  }

  return 0;
 5093060:	0005883a 	mov	r2,zero
}
 5093064:	e037883a 	mov	sp,fp
 5093068:	dfc00117 	ldw	ra,4(sp)
 509306c:	df000017 	ldw	fp,0(sp)
 5093070:	dec00204 	addi	sp,sp,8
 5093074:	f800283a 	ret

05093078 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 5093078:	defffc04 	addi	sp,sp,-16
 509307c:	df000315 	stw	fp,12(sp)
 5093080:	df000304 	addi	fp,sp,12
 5093084:	e13fff15 	stw	r4,-4(fp)
 5093088:	e17ffe15 	stw	r5,-8(fp)
 509308c:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
 5093090:	e0fffe17 	ldw	r3,-8(fp)
 5093094:	e0bfff17 	ldw	r2,-4(fp)
 5093098:	18800c26 	beq	r3,r2,50930cc <alt_load_section+0x54>
  {
    while( to != end )
 509309c:	00000806 	br	50930c0 <alt_load_section+0x48>
    {
      *to++ = *from++;
 50930a0:	e0ffff17 	ldw	r3,-4(fp)
 50930a4:	18800104 	addi	r2,r3,4
 50930a8:	e0bfff15 	stw	r2,-4(fp)
 50930ac:	e0bffe17 	ldw	r2,-8(fp)
 50930b0:	11000104 	addi	r4,r2,4
 50930b4:	e13ffe15 	stw	r4,-8(fp)
 50930b8:	18c00017 	ldw	r3,0(r3)
 50930bc:	10c00015 	stw	r3,0(r2)
    while( to != end )
 50930c0:	e0fffe17 	ldw	r3,-8(fp)
 50930c4:	e0bffd17 	ldw	r2,-12(fp)
 50930c8:	18bff51e 	bne	r3,r2,50930a0 <alt_load_section+0x28>
    }
  }
}
 50930cc:	0001883a 	nop
 50930d0:	e037883a 	mov	sp,fp
 50930d4:	df000017 	ldw	fp,0(sp)
 50930d8:	dec00104 	addi	sp,sp,4
 50930dc:	f800283a 	ret

050930e0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 50930e0:	defffe04 	addi	sp,sp,-8
 50930e4:	dfc00115 	stw	ra,4(sp)
 50930e8:	df000015 	stw	fp,0(sp)
 50930ec:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 50930f0:	018142b4 	movhi	r6,1290
 50930f4:	31a0a604 	addi	r6,r6,-32104
 50930f8:	01414274 	movhi	r5,1289
 50930fc:	2959ac04 	addi	r5,r5,26288
 5093100:	010142b4 	movhi	r4,1290
 5093104:	2120a604 	addi	r4,r4,-32104
 5093108:	50930780 	call	5093078 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 509310c:	01814234 	movhi	r6,1288
 5093110:	31808e04 	addi	r6,r6,568
 5093114:	01414234 	movhi	r5,1288
 5093118:	29400804 	addi	r5,r5,32
 509311c:	01014234 	movhi	r4,1288
 5093120:	21000804 	addi	r4,r4,32
 5093124:	50930780 	call	5093078 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 5093128:	01814274 	movhi	r6,1289
 509312c:	3199ac04 	addi	r6,r6,26288
 5093130:	01414274 	movhi	r5,1289
 5093134:	29556404 	addi	r5,r5,21904
 5093138:	01014274 	movhi	r4,1289
 509313c:	21156404 	addi	r4,r4,21904
 5093140:	50930780 	call	5093078 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 5093144:	50945b80 	call	50945b8 <alt_dcache_flush_all>
  alt_icache_flush_all();
 5093148:	50947b00 	call	50947b0 <alt_icache_flush_all>
}
 509314c:	0001883a 	nop
 5093150:	e037883a 	mov	sp,fp
 5093154:	dfc00117 	ldw	ra,4(sp)
 5093158:	df000017 	ldw	fp,0(sp)
 509315c:	dec00204 	addi	sp,sp,8
 5093160:	f800283a 	ret

05093164 <alt_get_errno>:
{
 5093164:	defffe04 	addi	sp,sp,-8
 5093168:	dfc00115 	stw	ra,4(sp)
 509316c:	df000015 	stw	fp,0(sp)
 5093170:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5093174:	d0a00917 	ldw	r2,-32732(gp)
 5093178:	10000326 	beq	r2,zero,5093188 <alt_get_errno+0x24>
 509317c:	d0a00917 	ldw	r2,-32732(gp)
 5093180:	103ee83a 	callr	r2
 5093184:	00000106 	br	509318c <alt_get_errno+0x28>
 5093188:	d0a70e04 	addi	r2,gp,-25544
}
 509318c:	e037883a 	mov	sp,fp
 5093190:	dfc00117 	ldw	ra,4(sp)
 5093194:	df000017 	ldw	fp,0(sp)
 5093198:	dec00204 	addi	sp,sp,8
 509319c:	f800283a 	ret

050931a0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 50931a0:	defff904 	addi	sp,sp,-28
 50931a4:	dfc00615 	stw	ra,24(sp)
 50931a8:	df000515 	stw	fp,20(sp)
 50931ac:	df000504 	addi	fp,sp,20
 50931b0:	e13ffd15 	stw	r4,-12(fp)
 50931b4:	e17ffc15 	stw	r5,-16(fp)
 50931b8:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 50931bc:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 50931c0:	e0bffd17 	ldw	r2,-12(fp)
 50931c4:	10000616 	blt	r2,zero,50931e0 <lseek+0x40>
 50931c8:	e0bffd17 	ldw	r2,-12(fp)
 50931cc:	10c00324 	muli	r3,r2,12
 50931d0:	00814274 	movhi	r2,1289
 50931d4:	109c2004 	addi	r2,r2,28800
 50931d8:	1885883a 	add	r2,r3,r2
 50931dc:	00000106 	br	50931e4 <lseek+0x44>
 50931e0:	0005883a 	mov	r2,zero
 50931e4:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
 50931e8:	e0bffe17 	ldw	r2,-8(fp)
 50931ec:	10001026 	beq	r2,zero,5093230 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 50931f0:	e0bffe17 	ldw	r2,-8(fp)
 50931f4:	10800017 	ldw	r2,0(r2)
 50931f8:	10800717 	ldw	r2,28(r2)
 50931fc:	10000926 	beq	r2,zero,5093224 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 5093200:	e0bffe17 	ldw	r2,-8(fp)
 5093204:	10800017 	ldw	r2,0(r2)
 5093208:	10800717 	ldw	r2,28(r2)
 509320c:	e1bffb17 	ldw	r6,-20(fp)
 5093210:	e17ffc17 	ldw	r5,-16(fp)
 5093214:	e13ffe17 	ldw	r4,-8(fp)
 5093218:	103ee83a 	callr	r2
 509321c:	e0bfff15 	stw	r2,-4(fp)
 5093220:	00000506 	br	5093238 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 5093224:	00bfde84 	movi	r2,-134
 5093228:	e0bfff15 	stw	r2,-4(fp)
 509322c:	00000206 	br	5093238 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 5093230:	00bfebc4 	movi	r2,-81
 5093234:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
 5093238:	e0bfff17 	ldw	r2,-4(fp)
 509323c:	1000070e 	bge	r2,zero,509325c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 5093240:	50931640 	call	5093164 <alt_get_errno>
 5093244:	1007883a 	mov	r3,r2
 5093248:	e0bfff17 	ldw	r2,-4(fp)
 509324c:	0085c83a 	sub	r2,zero,r2
 5093250:	18800015 	stw	r2,0(r3)
    rc = -1;
 5093254:	00bfffc4 	movi	r2,-1
 5093258:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
 509325c:	e0bfff17 	ldw	r2,-4(fp)
}
 5093260:	e037883a 	mov	sp,fp
 5093264:	dfc00117 	ldw	ra,4(sp)
 5093268:	df000017 	ldw	fp,0(sp)
 509326c:	dec00204 	addi	sp,sp,8
 5093270:	f800283a 	ret

05093274 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 5093274:	defffd04 	addi	sp,sp,-12
 5093278:	dfc00215 	stw	ra,8(sp)
 509327c:	df000115 	stw	fp,4(sp)
 5093280:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 5093284:	0009883a 	mov	r4,zero
 5093288:	50937180 	call	5093718 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 509328c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 5093290:	50937540 	call	5093754 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 5093294:	01814274 	movhi	r6,1289
 5093298:	3199a404 	addi	r6,r6,26256
 509329c:	01414274 	movhi	r5,1289
 50932a0:	2959a404 	addi	r5,r5,26256
 50932a4:	01014274 	movhi	r4,1289
 50932a8:	2119a404 	addi	r4,r4,26256
 50932ac:	5094b2c0 	call	5094b2c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 50932b0:	50946e80 	call	50946e8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 50932b4:	01014274 	movhi	r4,1289
 50932b8:	2111d304 	addi	r4,r4,18252
 50932bc:	50953200 	call	5095320 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 50932c0:	d0a71117 	ldw	r2,-25532(gp)
 50932c4:	d0e71217 	ldw	r3,-25528(gp)
 50932c8:	d1271317 	ldw	r4,-25524(gp)
 50932cc:	200d883a 	mov	r6,r4
 50932d0:	180b883a 	mov	r5,r3
 50932d4:	1009883a 	mov	r4,r2
 50932d8:	50808ec0 	call	50808ec <main>
 50932dc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 50932e0:	01000044 	movi	r4,1
 50932e4:	5092a700 	call	5092a70 <close>
  exit (result);
 50932e8:	e13fff17 	ldw	r4,-4(fp)
 50932ec:	50953340 	call	5095334 <exit>

050932f0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 50932f0:	defffe04 	addi	sp,sp,-8
 50932f4:	df000115 	stw	fp,4(sp)
 50932f8:	df000104 	addi	fp,sp,4
 50932fc:	e13fff15 	stw	r4,-4(fp)
}
 5093300:	0001883a 	nop
 5093304:	e037883a 	mov	sp,fp
 5093308:	df000017 	ldw	fp,0(sp)
 509330c:	dec00104 	addi	sp,sp,4
 5093310:	f800283a 	ret

05093314 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 5093314:	defffe04 	addi	sp,sp,-8
 5093318:	df000115 	stw	fp,4(sp)
 509331c:	df000104 	addi	fp,sp,4
 5093320:	e13fff15 	stw	r4,-4(fp)
}
 5093324:	0001883a 	nop
 5093328:	e037883a 	mov	sp,fp
 509332c:	df000017 	ldw	fp,0(sp)
 5093330:	dec00104 	addi	sp,sp,4
 5093334:	f800283a 	ret

05093338 <alt_get_errno>:
{
 5093338:	defffe04 	addi	sp,sp,-8
 509333c:	dfc00115 	stw	ra,4(sp)
 5093340:	df000015 	stw	fp,0(sp)
 5093344:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5093348:	d0a00917 	ldw	r2,-32732(gp)
 509334c:	10000326 	beq	r2,zero,509335c <alt_get_errno+0x24>
 5093350:	d0a00917 	ldw	r2,-32732(gp)
 5093354:	103ee83a 	callr	r2
 5093358:	00000106 	br	5093360 <alt_get_errno+0x28>
 509335c:	d0a70e04 	addi	r2,gp,-25544
}
 5093360:	e037883a 	mov	sp,fp
 5093364:	dfc00117 	ldw	ra,4(sp)
 5093368:	df000017 	ldw	fp,0(sp)
 509336c:	dec00204 	addi	sp,sp,8
 5093370:	f800283a 	ret

05093374 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 5093374:	defff904 	addi	sp,sp,-28
 5093378:	dfc00615 	stw	ra,24(sp)
 509337c:	df000515 	stw	fp,20(sp)
 5093380:	df000504 	addi	fp,sp,20
 5093384:	e13ffd15 	stw	r4,-12(fp)
 5093388:	e17ffc15 	stw	r5,-16(fp)
 509338c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 5093390:	e0bffd17 	ldw	r2,-12(fp)
 5093394:	10000616 	blt	r2,zero,50933b0 <read+0x3c>
 5093398:	e0bffd17 	ldw	r2,-12(fp)
 509339c:	10c00324 	muli	r3,r2,12
 50933a0:	00814274 	movhi	r2,1289
 50933a4:	109c2004 	addi	r2,r2,28800
 50933a8:	1885883a 	add	r2,r3,r2
 50933ac:	00000106 	br	50933b4 <read+0x40>
 50933b0:	0005883a 	mov	r2,zero
 50933b4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 50933b8:	e0bfff17 	ldw	r2,-4(fp)
 50933bc:	10002226 	beq	r2,zero,5093448 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 50933c0:	e0bfff17 	ldw	r2,-4(fp)
 50933c4:	10800217 	ldw	r2,8(r2)
 50933c8:	108000cc 	andi	r2,r2,3
 50933cc:	10800060 	cmpeqi	r2,r2,1
 50933d0:	1000181e 	bne	r2,zero,5093434 <read+0xc0>
        (fd->dev->read))
 50933d4:	e0bfff17 	ldw	r2,-4(fp)
 50933d8:	10800017 	ldw	r2,0(r2)
 50933dc:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 50933e0:	10001426 	beq	r2,zero,5093434 <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 50933e4:	e0bfff17 	ldw	r2,-4(fp)
 50933e8:	10800017 	ldw	r2,0(r2)
 50933ec:	10800517 	ldw	r2,20(r2)
 50933f0:	e0fffb17 	ldw	r3,-20(fp)
 50933f4:	180d883a 	mov	r6,r3
 50933f8:	e17ffc17 	ldw	r5,-16(fp)
 50933fc:	e13fff17 	ldw	r4,-4(fp)
 5093400:	103ee83a 	callr	r2
 5093404:	e0bffe15 	stw	r2,-8(fp)
 5093408:	e0bffe17 	ldw	r2,-8(fp)
 509340c:	1000070e 	bge	r2,zero,509342c <read+0xb8>
        {
          ALT_ERRNO = -rval;
 5093410:	50933380 	call	5093338 <alt_get_errno>
 5093414:	1007883a 	mov	r3,r2
 5093418:	e0bffe17 	ldw	r2,-8(fp)
 509341c:	0085c83a 	sub	r2,zero,r2
 5093420:	18800015 	stw	r2,0(r3)
          return -1;
 5093424:	00bfffc4 	movi	r2,-1
 5093428:	00000c06 	br	509345c <read+0xe8>
        }
        return rval;
 509342c:	e0bffe17 	ldw	r2,-8(fp)
 5093430:	00000a06 	br	509345c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 5093434:	50933380 	call	5093338 <alt_get_errno>
 5093438:	1007883a 	mov	r3,r2
 509343c:	00800344 	movi	r2,13
 5093440:	18800015 	stw	r2,0(r3)
 5093444:	00000406 	br	5093458 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 5093448:	50933380 	call	5093338 <alt_get_errno>
 509344c:	1007883a 	mov	r3,r2
 5093450:	00801444 	movi	r2,81
 5093454:	18800015 	stw	r2,0(r3)
  }
  return -1;
 5093458:	00bfffc4 	movi	r2,-1
}
 509345c:	e037883a 	mov	sp,fp
 5093460:	dfc00117 	ldw	ra,4(sp)
 5093464:	df000017 	ldw	fp,0(sp)
 5093468:	dec00204 	addi	sp,sp,8
 509346c:	f800283a 	ret

05093470 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 5093470:	defffe04 	addi	sp,sp,-8
 5093474:	df000115 	stw	fp,4(sp)
 5093478:	df000104 	addi	fp,sp,4
 509347c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 5093480:	e0bfff17 	ldw	r2,-4(fp)
 5093484:	108000d0 	cmplti	r2,r2,3
 5093488:	10000a1e 	bne	r2,zero,50934b4 <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
 509348c:	e0bfff17 	ldw	r2,-4(fp)
 5093490:	10c00324 	muli	r3,r2,12
 5093494:	00814274 	movhi	r2,1289
 5093498:	1885883a 	add	r2,r3,r2
 509349c:	101c2215 	stw	zero,28808(r2)
    alt_fd_list[fd].dev      = 0;
 50934a0:	e0bfff17 	ldw	r2,-4(fp)
 50934a4:	10c00324 	muli	r3,r2,12
 50934a8:	00814274 	movhi	r2,1289
 50934ac:	1885883a 	add	r2,r3,r2
 50934b0:	101c2015 	stw	zero,28800(r2)
  }
}
 50934b4:	0001883a 	nop
 50934b8:	e037883a 	mov	sp,fp
 50934bc:	df000017 	ldw	fp,0(sp)
 50934c0:	dec00104 	addi	sp,sp,4
 50934c4:	f800283a 	ret

050934c8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 50934c8:	defff904 	addi	sp,sp,-28
 50934cc:	df000615 	stw	fp,24(sp)
 50934d0:	df000604 	addi	fp,sp,24
 50934d4:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
 50934d8:	0005303a 	rdctl	r2,status
 50934dc:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 50934e0:	e0fffd17 	ldw	r3,-12(fp)
 50934e4:	00bfff84 	movi	r2,-2
 50934e8:	1884703a 	and	r2,r3,r2
 50934ec:	1001703a 	wrctl	status,r2
  return context;
 50934f0:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 50934f4:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 50934f8:	d0a00b17 	ldw	r2,-32724(gp)
 50934fc:	10c000c4 	addi	r3,r2,3
 5093500:	00bfff04 	movi	r2,-4
 5093504:	1884703a 	and	r2,r3,r2
 5093508:	d0a00b15 	stw	r2,-32724(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 509350c:	d0e00b17 	ldw	r3,-32724(gp)
 5093510:	e0bffa17 	ldw	r2,-24(fp)
 5093514:	1887883a 	add	r3,r3,r2
 5093518:	00814374 	movhi	r2,1293
 509351c:	10b88004 	addi	r2,r2,-7680
 5093520:	10c0072e 	bgeu	r2,r3,5093540 <sbrk+0x78>
 5093524:	e0bfff17 	ldw	r2,-4(fp)
 5093528:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
 509352c:	e0bffc17 	ldw	r2,-16(fp)
 5093530:	1001703a 	wrctl	status,r2
}
 5093534:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 5093538:	00bfffc4 	movi	r2,-1
 509353c:	00000c06 	br	5093570 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
 5093540:	d0a00b17 	ldw	r2,-32724(gp)
 5093544:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
 5093548:	d0e00b17 	ldw	r3,-32724(gp)
 509354c:	e0bffa17 	ldw	r2,-24(fp)
 5093550:	1885883a 	add	r2,r3,r2
 5093554:	d0a00b15 	stw	r2,-32724(gp)
 5093558:	e0bfff17 	ldw	r2,-4(fp)
 509355c:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
 5093560:	e0bffb17 	ldw	r2,-20(fp)
 5093564:	1001703a 	wrctl	status,r2
}
 5093568:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 509356c:	e0bffe17 	ldw	r2,-8(fp)
} 
 5093570:	e037883a 	mov	sp,fp
 5093574:	df000017 	ldw	fp,0(sp)
 5093578:	dec00104 	addi	sp,sp,4
 509357c:	f800283a 	ret

05093580 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 5093580:	defffd04 	addi	sp,sp,-12
 5093584:	dfc00215 	stw	ra,8(sp)
 5093588:	df000115 	stw	fp,4(sp)
 509358c:	df000104 	addi	fp,sp,4
 5093590:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 5093594:	e13fff17 	ldw	r4,-4(fp)
 5093598:	50944600 	call	5094460 <alt_busy_sleep>
}
 509359c:	e037883a 	mov	sp,fp
 50935a0:	dfc00117 	ldw	ra,4(sp)
 50935a4:	df000017 	ldw	fp,0(sp)
 50935a8:	dec00204 	addi	sp,sp,8
 50935ac:	f800283a 	ret

050935b0 <alt_get_errno>:
{
 50935b0:	defffe04 	addi	sp,sp,-8
 50935b4:	dfc00115 	stw	ra,4(sp)
 50935b8:	df000015 	stw	fp,0(sp)
 50935bc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 50935c0:	d0a00917 	ldw	r2,-32732(gp)
 50935c4:	10000326 	beq	r2,zero,50935d4 <alt_get_errno+0x24>
 50935c8:	d0a00917 	ldw	r2,-32732(gp)
 50935cc:	103ee83a 	callr	r2
 50935d0:	00000106 	br	50935d8 <alt_get_errno+0x28>
 50935d4:	d0a70e04 	addi	r2,gp,-25544
}
 50935d8:	e037883a 	mov	sp,fp
 50935dc:	dfc00117 	ldw	ra,4(sp)
 50935e0:	df000017 	ldw	fp,0(sp)
 50935e4:	dec00204 	addi	sp,sp,8
 50935e8:	f800283a 	ret

050935ec <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 50935ec:	defff904 	addi	sp,sp,-28
 50935f0:	dfc00615 	stw	ra,24(sp)
 50935f4:	df000515 	stw	fp,20(sp)
 50935f8:	df000504 	addi	fp,sp,20
 50935fc:	e13ffd15 	stw	r4,-12(fp)
 5093600:	e17ffc15 	stw	r5,-16(fp)
 5093604:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 5093608:	e0bffd17 	ldw	r2,-12(fp)
 509360c:	10000616 	blt	r2,zero,5093628 <write+0x3c>
 5093610:	e0bffd17 	ldw	r2,-12(fp)
 5093614:	10c00324 	muli	r3,r2,12
 5093618:	00814274 	movhi	r2,1289
 509361c:	109c2004 	addi	r2,r2,28800
 5093620:	1885883a 	add	r2,r3,r2
 5093624:	00000106 	br	509362c <write+0x40>
 5093628:	0005883a 	mov	r2,zero
 509362c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 5093630:	e0bfff17 	ldw	r2,-4(fp)
 5093634:	10002126 	beq	r2,zero,50936bc <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 5093638:	e0bfff17 	ldw	r2,-4(fp)
 509363c:	10800217 	ldw	r2,8(r2)
 5093640:	108000cc 	andi	r2,r2,3
 5093644:	10001826 	beq	r2,zero,50936a8 <write+0xbc>
 5093648:	e0bfff17 	ldw	r2,-4(fp)
 509364c:	10800017 	ldw	r2,0(r2)
 5093650:	10800617 	ldw	r2,24(r2)
 5093654:	10001426 	beq	r2,zero,50936a8 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 5093658:	e0bfff17 	ldw	r2,-4(fp)
 509365c:	10800017 	ldw	r2,0(r2)
 5093660:	10800617 	ldw	r2,24(r2)
 5093664:	e0fffb17 	ldw	r3,-20(fp)
 5093668:	180d883a 	mov	r6,r3
 509366c:	e17ffc17 	ldw	r5,-16(fp)
 5093670:	e13fff17 	ldw	r4,-4(fp)
 5093674:	103ee83a 	callr	r2
 5093678:	e0bffe15 	stw	r2,-8(fp)
 509367c:	e0bffe17 	ldw	r2,-8(fp)
 5093680:	1000070e 	bge	r2,zero,50936a0 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 5093684:	50935b00 	call	50935b0 <alt_get_errno>
 5093688:	1007883a 	mov	r3,r2
 509368c:	e0bffe17 	ldw	r2,-8(fp)
 5093690:	0085c83a 	sub	r2,zero,r2
 5093694:	18800015 	stw	r2,0(r3)
        return -1;
 5093698:	00bfffc4 	movi	r2,-1
 509369c:	00000c06 	br	50936d0 <write+0xe4>
      }
      return rval;
 50936a0:	e0bffe17 	ldw	r2,-8(fp)
 50936a4:	00000a06 	br	50936d0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 50936a8:	50935b00 	call	50935b0 <alt_get_errno>
 50936ac:	1007883a 	mov	r3,r2
 50936b0:	00800344 	movi	r2,13
 50936b4:	18800015 	stw	r2,0(r3)
 50936b8:	00000406 	br	50936cc <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 50936bc:	50935b00 	call	50935b0 <alt_get_errno>
 50936c0:	1007883a 	mov	r3,r2
 50936c4:	00801444 	movi	r2,81
 50936c8:	18800015 	stw	r2,0(r3)
  }
  return -1;
 50936cc:	00bfffc4 	movi	r2,-1
}
 50936d0:	e037883a 	mov	sp,fp
 50936d4:	dfc00117 	ldw	ra,4(sp)
 50936d8:	df000017 	ldw	fp,0(sp)
 50936dc:	dec00204 	addi	sp,sp,8
 50936e0:	f800283a 	ret

050936e4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 50936e4:	defffd04 	addi	sp,sp,-12
 50936e8:	dfc00215 	stw	ra,8(sp)
 50936ec:	df000115 	stw	fp,4(sp)
 50936f0:	df000104 	addi	fp,sp,4
 50936f4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 50936f8:	d1600604 	addi	r5,gp,-32744
 50936fc:	e13fff17 	ldw	r4,-4(fp)
 5093700:	50946400 	call	5094640 <alt_dev_llist_insert>
}
 5093704:	e037883a 	mov	sp,fp
 5093708:	dfc00117 	ldw	ra,4(sp)
 509370c:	df000017 	ldw	fp,0(sp)
 5093710:	dec00204 	addi	sp,sp,8
 5093714:	f800283a 	ret

05093718 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 5093718:	defffd04 	addi	sp,sp,-12
 509371c:	dfc00215 	stw	ra,8(sp)
 5093720:	df000115 	stw	fp,4(sp)
 5093724:	df000104 	addi	fp,sp,4
 5093728:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 509372c:	5094f9c0 	call	5094f9c <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 5093730:	00800044 	movi	r2,1
 5093734:	1001703a 	wrctl	status,r2
}
 5093738:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
 509373c:	0001883a 	nop
 5093740:	e037883a 	mov	sp,fp
 5093744:	dfc00117 	ldw	ra,4(sp)
 5093748:	df000017 	ldw	fp,0(sp)
 509374c:	dec00204 	addi	sp,sp,8
 5093750:	f800283a 	ret

05093754 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 5093754:	defffe04 	addi	sp,sp,-8
 5093758:	dfc00115 	stw	ra,4(sp)
 509375c:	df000015 	stw	fp,0(sp)
 5093760:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
 5093764:	01c0fa04 	movi	r7,1000
 5093768:	000d883a 	mov	r6,zero
 509376c:	000b883a 	mov	r5,zero
 5093770:	01014434 	movhi	r4,1296
 5093774:	21040804 	addi	r4,r4,4128
 5093778:	50942a80 	call	50942a8 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 509377c:	01800044 	movi	r6,1
 5093780:	000b883a 	mov	r5,zero
 5093784:	01014274 	movhi	r4,1289
 5093788:	211c8a04 	addi	r4,r4,29224
 509378c:	509391c0 	call	509391c <altera_avalon_jtag_uart_init>
 5093790:	01014274 	movhi	r4,1289
 5093794:	211c8004 	addi	r4,r4,29184
 5093798:	50936e40 	call	50936e4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
 509379c:	0001883a 	nop
}
 50937a0:	0001883a 	nop
 50937a4:	e037883a 	mov	sp,fp
 50937a8:	dfc00117 	ldw	ra,4(sp)
 50937ac:	df000017 	ldw	fp,0(sp)
 50937b0:	dec00204 	addi	sp,sp,8
 50937b4:	f800283a 	ret

050937b8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 50937b8:	defffa04 	addi	sp,sp,-24
 50937bc:	dfc00515 	stw	ra,20(sp)
 50937c0:	df000415 	stw	fp,16(sp)
 50937c4:	df000404 	addi	fp,sp,16
 50937c8:	e13ffe15 	stw	r4,-8(fp)
 50937cc:	e17ffd15 	stw	r5,-12(fp)
 50937d0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 50937d4:	e0bffe17 	ldw	r2,-8(fp)
 50937d8:	10800017 	ldw	r2,0(r2)
 50937dc:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 50937e0:	e0bfff17 	ldw	r2,-4(fp)
 50937e4:	10c00a04 	addi	r3,r2,40
 50937e8:	e0bffe17 	ldw	r2,-8(fp)
 50937ec:	10800217 	ldw	r2,8(r2)
 50937f0:	100f883a 	mov	r7,r2
 50937f4:	e1bffc17 	ldw	r6,-16(fp)
 50937f8:	e17ffd17 	ldw	r5,-12(fp)
 50937fc:	1809883a 	mov	r4,r3
 5093800:	5093de40 	call	5093de4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 5093804:	e037883a 	mov	sp,fp
 5093808:	dfc00117 	ldw	ra,4(sp)
 509380c:	df000017 	ldw	fp,0(sp)
 5093810:	dec00204 	addi	sp,sp,8
 5093814:	f800283a 	ret

05093818 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 5093818:	defffa04 	addi	sp,sp,-24
 509381c:	dfc00515 	stw	ra,20(sp)
 5093820:	df000415 	stw	fp,16(sp)
 5093824:	df000404 	addi	fp,sp,16
 5093828:	e13ffe15 	stw	r4,-8(fp)
 509382c:	e17ffd15 	stw	r5,-12(fp)
 5093830:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 5093834:	e0bffe17 	ldw	r2,-8(fp)
 5093838:	10800017 	ldw	r2,0(r2)
 509383c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 5093840:	e0bfff17 	ldw	r2,-4(fp)
 5093844:	10c00a04 	addi	r3,r2,40
 5093848:	e0bffe17 	ldw	r2,-8(fp)
 509384c:	10800217 	ldw	r2,8(r2)
 5093850:	100f883a 	mov	r7,r2
 5093854:	e1bffc17 	ldw	r6,-16(fp)
 5093858:	e17ffd17 	ldw	r5,-12(fp)
 509385c:	1809883a 	mov	r4,r3
 5093860:	50940040 	call	5094004 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 5093864:	e037883a 	mov	sp,fp
 5093868:	dfc00117 	ldw	ra,4(sp)
 509386c:	df000017 	ldw	fp,0(sp)
 5093870:	dec00204 	addi	sp,sp,8
 5093874:	f800283a 	ret

05093878 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 5093878:	defffc04 	addi	sp,sp,-16
 509387c:	dfc00315 	stw	ra,12(sp)
 5093880:	df000215 	stw	fp,8(sp)
 5093884:	df000204 	addi	fp,sp,8
 5093888:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 509388c:	e0bffe17 	ldw	r2,-8(fp)
 5093890:	10800017 	ldw	r2,0(r2)
 5093894:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 5093898:	e0bfff17 	ldw	r2,-4(fp)
 509389c:	10c00a04 	addi	r3,r2,40
 50938a0:	e0bffe17 	ldw	r2,-8(fp)
 50938a4:	10800217 	ldw	r2,8(r2)
 50938a8:	100b883a 	mov	r5,r2
 50938ac:	1809883a 	mov	r4,r3
 50938b0:	5093c880 	call	5093c88 <altera_avalon_jtag_uart_close>
}
 50938b4:	e037883a 	mov	sp,fp
 50938b8:	dfc00117 	ldw	ra,4(sp)
 50938bc:	df000017 	ldw	fp,0(sp)
 50938c0:	dec00204 	addi	sp,sp,8
 50938c4:	f800283a 	ret

050938c8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 50938c8:	defffa04 	addi	sp,sp,-24
 50938cc:	dfc00515 	stw	ra,20(sp)
 50938d0:	df000415 	stw	fp,16(sp)
 50938d4:	df000404 	addi	fp,sp,16
 50938d8:	e13ffe15 	stw	r4,-8(fp)
 50938dc:	e17ffd15 	stw	r5,-12(fp)
 50938e0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 50938e4:	e0bffe17 	ldw	r2,-8(fp)
 50938e8:	10800017 	ldw	r2,0(r2)
 50938ec:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 50938f0:	e0bfff17 	ldw	r2,-4(fp)
 50938f4:	10800a04 	addi	r2,r2,40
 50938f8:	e1bffc17 	ldw	r6,-16(fp)
 50938fc:	e17ffd17 	ldw	r5,-12(fp)
 5093900:	1009883a 	mov	r4,r2
 5093904:	5093cf00 	call	5093cf0 <altera_avalon_jtag_uart_ioctl>
}
 5093908:	e037883a 	mov	sp,fp
 509390c:	dfc00117 	ldw	ra,4(sp)
 5093910:	df000017 	ldw	fp,0(sp)
 5093914:	dec00204 	addi	sp,sp,8
 5093918:	f800283a 	ret

0509391c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 509391c:	defffa04 	addi	sp,sp,-24
 5093920:	dfc00515 	stw	ra,20(sp)
 5093924:	df000415 	stw	fp,16(sp)
 5093928:	df000404 	addi	fp,sp,16
 509392c:	e13fff15 	stw	r4,-4(fp)
 5093930:	e17ffe15 	stw	r5,-8(fp)
 5093934:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 5093938:	e0bfff17 	ldw	r2,-4(fp)
 509393c:	00c00044 	movi	r3,1
 5093940:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 5093944:	e0bfff17 	ldw	r2,-4(fp)
 5093948:	10800017 	ldw	r2,0(r2)
 509394c:	10800104 	addi	r2,r2,4
 5093950:	1007883a 	mov	r3,r2
 5093954:	e0bfff17 	ldw	r2,-4(fp)
 5093958:	10800817 	ldw	r2,32(r2)
 509395c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 5093960:	e0bffe17 	ldw	r2,-8(fp)
 5093964:	e0fffd17 	ldw	r3,-12(fp)
 5093968:	d8000015 	stw	zero,0(sp)
 509396c:	e1ffff17 	ldw	r7,-4(fp)
 5093970:	01814274 	movhi	r6,1289
 5093974:	318e7704 	addi	r6,r6,14812
 5093978:	180b883a 	mov	r5,r3
 509397c:	1009883a 	mov	r4,r2
 5093980:	50947e40 	call	50947e4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 5093984:	e0bfff17 	ldw	r2,-4(fp)
 5093988:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 509398c:	e0bfff17 	ldw	r2,-4(fp)
 5093990:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 5093994:	d0e71417 	ldw	r3,-25520(gp)
 5093998:	e1ffff17 	ldw	r7,-4(fp)
 509399c:	01814274 	movhi	r6,1289
 50939a0:	318efa04 	addi	r6,r6,15336
 50939a4:	180b883a 	mov	r5,r3
 50939a8:	1009883a 	mov	r4,r2
 50939ac:	509432c0 	call	509432c <alt_alarm_start>
 50939b0:	1000040e 	bge	r2,zero,50939c4 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 50939b4:	e0ffff17 	ldw	r3,-4(fp)
 50939b8:	00a00034 	movhi	r2,32768
 50939bc:	10bfffc4 	addi	r2,r2,-1
 50939c0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 50939c4:	0001883a 	nop
 50939c8:	e037883a 	mov	sp,fp
 50939cc:	dfc00117 	ldw	ra,4(sp)
 50939d0:	df000017 	ldw	fp,0(sp)
 50939d4:	dec00204 	addi	sp,sp,8
 50939d8:	f800283a 	ret

050939dc <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 50939dc:	defff804 	addi	sp,sp,-32
 50939e0:	df000715 	stw	fp,28(sp)
 50939e4:	df000704 	addi	fp,sp,28
 50939e8:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 50939ec:	e0bff917 	ldw	r2,-28(fp)
 50939f0:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
 50939f4:	e0bffd17 	ldw	r2,-12(fp)
 50939f8:	10800017 	ldw	r2,0(r2)
 50939fc:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 5093a00:	e0bffc17 	ldw	r2,-16(fp)
 5093a04:	10800104 	addi	r2,r2,4
 5093a08:	10800037 	ldwio	r2,0(r2)
 5093a0c:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 5093a10:	e0bffb17 	ldw	r2,-20(fp)
 5093a14:	1080c00c 	andi	r2,r2,768
 5093a18:	10006d26 	beq	r2,zero,5093bd0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 5093a1c:	e0bffb17 	ldw	r2,-20(fp)
 5093a20:	1080400c 	andi	r2,r2,256
 5093a24:	10003526 	beq	r2,zero,5093afc <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 5093a28:	00800074 	movhi	r2,1
 5093a2c:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 5093a30:	e0bffd17 	ldw	r2,-12(fp)
 5093a34:	10800a17 	ldw	r2,40(r2)
 5093a38:	10800044 	addi	r2,r2,1
 5093a3c:	1081ffcc 	andi	r2,r2,2047
 5093a40:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
 5093a44:	e0bffd17 	ldw	r2,-12(fp)
 5093a48:	10800b17 	ldw	r2,44(r2)
 5093a4c:	e0fffa17 	ldw	r3,-24(fp)
 5093a50:	18801526 	beq	r3,r2,5093aa8 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 5093a54:	e0bffc17 	ldw	r2,-16(fp)
 5093a58:	10800037 	ldwio	r2,0(r2)
 5093a5c:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 5093a60:	e0bfff17 	ldw	r2,-4(fp)
 5093a64:	10a0000c 	andi	r2,r2,32768
 5093a68:	10001126 	beq	r2,zero,5093ab0 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 5093a6c:	e0bffd17 	ldw	r2,-12(fp)
 5093a70:	10800a17 	ldw	r2,40(r2)
 5093a74:	e0ffff17 	ldw	r3,-4(fp)
 5093a78:	1809883a 	mov	r4,r3
 5093a7c:	e0fffd17 	ldw	r3,-12(fp)
 5093a80:	1885883a 	add	r2,r3,r2
 5093a84:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 5093a88:	e0bffd17 	ldw	r2,-12(fp)
 5093a8c:	10800a17 	ldw	r2,40(r2)
 5093a90:	10800044 	addi	r2,r2,1
 5093a94:	10c1ffcc 	andi	r3,r2,2047
 5093a98:	e0bffd17 	ldw	r2,-12(fp)
 5093a9c:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
 5093aa0:	0001883a 	nop
      {
 5093aa4:	003fe206 	br	5093a30 <altera_avalon_jtag_uart_irq+0x54>
          break;
 5093aa8:	0001883a 	nop
 5093aac:	00000106 	br	5093ab4 <altera_avalon_jtag_uart_irq+0xd8>
          break;
 5093ab0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 5093ab4:	e0bfff17 	ldw	r2,-4(fp)
 5093ab8:	10bfffec 	andhi	r2,r2,65535
 5093abc:	10000f26 	beq	r2,zero,5093afc <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 5093ac0:	e0bffd17 	ldw	r2,-12(fp)
 5093ac4:	10c00817 	ldw	r3,32(r2)
 5093ac8:	00bfff84 	movi	r2,-2
 5093acc:	1886703a 	and	r3,r3,r2
 5093ad0:	e0bffd17 	ldw	r2,-12(fp)
 5093ad4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 5093ad8:	e0bffc17 	ldw	r2,-16(fp)
 5093adc:	10800104 	addi	r2,r2,4
 5093ae0:	1007883a 	mov	r3,r2
 5093ae4:	e0bffd17 	ldw	r2,-12(fp)
 5093ae8:	10800817 	ldw	r2,32(r2)
 5093aec:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 5093af0:	e0bffc17 	ldw	r2,-16(fp)
 5093af4:	10800104 	addi	r2,r2,4
 5093af8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 5093afc:	e0bffb17 	ldw	r2,-20(fp)
 5093b00:	1080800c 	andi	r2,r2,512
 5093b04:	103fbe26 	beq	r2,zero,5093a00 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 5093b08:	e0bffb17 	ldw	r2,-20(fp)
 5093b0c:	1004d43a 	srli	r2,r2,16
 5093b10:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 5093b14:	00001406 	br	5093b68 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 5093b18:	e0bffc17 	ldw	r2,-16(fp)
 5093b1c:	e0fffd17 	ldw	r3,-12(fp)
 5093b20:	18c00d17 	ldw	r3,52(r3)
 5093b24:	e13ffd17 	ldw	r4,-12(fp)
 5093b28:	20c7883a 	add	r3,r4,r3
 5093b2c:	18c20e03 	ldbu	r3,2104(r3)
 5093b30:	18c03fcc 	andi	r3,r3,255
 5093b34:	18c0201c 	xori	r3,r3,128
 5093b38:	18ffe004 	addi	r3,r3,-128
 5093b3c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 5093b40:	e0bffd17 	ldw	r2,-12(fp)
 5093b44:	10800d17 	ldw	r2,52(r2)
 5093b48:	10800044 	addi	r2,r2,1
 5093b4c:	10c1ffcc 	andi	r3,r2,2047
 5093b50:	e0bffd17 	ldw	r2,-12(fp)
 5093b54:	10c00d15 	stw	r3,52(r2)
 5093b58:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 5093b5c:	e0bffe17 	ldw	r2,-8(fp)
 5093b60:	10bfffc4 	addi	r2,r2,-1
 5093b64:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
 5093b68:	e0bffe17 	ldw	r2,-8(fp)
 5093b6c:	10000526 	beq	r2,zero,5093b84 <altera_avalon_jtag_uart_irq+0x1a8>
 5093b70:	e0bffd17 	ldw	r2,-12(fp)
 5093b74:	10c00d17 	ldw	r3,52(r2)
 5093b78:	e0bffd17 	ldw	r2,-12(fp)
 5093b7c:	10800c17 	ldw	r2,48(r2)
 5093b80:	18bfe51e 	bne	r3,r2,5093b18 <altera_avalon_jtag_uart_irq+0x13c>
      }

      if (space > 0)
 5093b84:	e0bffe17 	ldw	r2,-8(fp)
 5093b88:	103f9d26 	beq	r2,zero,5093a00 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 5093b8c:	e0bffd17 	ldw	r2,-12(fp)
 5093b90:	10c00817 	ldw	r3,32(r2)
 5093b94:	00bfff44 	movi	r2,-3
 5093b98:	1886703a 	and	r3,r3,r2
 5093b9c:	e0bffd17 	ldw	r2,-12(fp)
 5093ba0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 5093ba4:	e0bffd17 	ldw	r2,-12(fp)
 5093ba8:	10800017 	ldw	r2,0(r2)
 5093bac:	10800104 	addi	r2,r2,4
 5093bb0:	1007883a 	mov	r3,r2
 5093bb4:	e0bffd17 	ldw	r2,-12(fp)
 5093bb8:	10800817 	ldw	r2,32(r2)
 5093bbc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 5093bc0:	e0bffc17 	ldw	r2,-16(fp)
 5093bc4:	10800104 	addi	r2,r2,4
 5093bc8:	10800037 	ldwio	r2,0(r2)
  {
 5093bcc:	003f8c06 	br	5093a00 <altera_avalon_jtag_uart_irq+0x24>
      break;
 5093bd0:	0001883a 	nop
      }
    }
  }
}
 5093bd4:	0001883a 	nop
 5093bd8:	e037883a 	mov	sp,fp
 5093bdc:	df000017 	ldw	fp,0(sp)
 5093be0:	dec00104 	addi	sp,sp,4
 5093be4:	f800283a 	ret

05093be8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 5093be8:	defffc04 	addi	sp,sp,-16
 5093bec:	df000315 	stw	fp,12(sp)
 5093bf0:	df000304 	addi	fp,sp,12
 5093bf4:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 5093bf8:	e0bffd17 	ldw	r2,-12(fp)
 5093bfc:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 5093c00:	e0bfff17 	ldw	r2,-4(fp)
 5093c04:	10800017 	ldw	r2,0(r2)
 5093c08:	10800104 	addi	r2,r2,4
 5093c0c:	10800037 	ldwio	r2,0(r2)
 5093c10:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 5093c14:	e0bffe17 	ldw	r2,-8(fp)
 5093c18:	1081000c 	andi	r2,r2,1024
 5093c1c:	10000b26 	beq	r2,zero,5093c4c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 5093c20:	e0bfff17 	ldw	r2,-4(fp)
 5093c24:	10800017 	ldw	r2,0(r2)
 5093c28:	10800104 	addi	r2,r2,4
 5093c2c:	1007883a 	mov	r3,r2
 5093c30:	e0bfff17 	ldw	r2,-4(fp)
 5093c34:	10800817 	ldw	r2,32(r2)
 5093c38:	10810014 	ori	r2,r2,1024
 5093c3c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 5093c40:	e0bfff17 	ldw	r2,-4(fp)
 5093c44:	10000915 	stw	zero,36(r2)
 5093c48:	00000a06 	br	5093c74 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 5093c4c:	e0bfff17 	ldw	r2,-4(fp)
 5093c50:	10c00917 	ldw	r3,36(r2)
 5093c54:	00a00034 	movhi	r2,32768
 5093c58:	10bfff04 	addi	r2,r2,-4
 5093c5c:	10c00536 	bltu	r2,r3,5093c74 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 5093c60:	e0bfff17 	ldw	r2,-4(fp)
 5093c64:	10800917 	ldw	r2,36(r2)
 5093c68:	10c00044 	addi	r3,r2,1
 5093c6c:	e0bfff17 	ldw	r2,-4(fp)
 5093c70:	10c00915 	stw	r3,36(r2)
 5093c74:	d0a71417 	ldw	r2,-25520(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 5093c78:	e037883a 	mov	sp,fp
 5093c7c:	df000017 	ldw	fp,0(sp)
 5093c80:	dec00104 	addi	sp,sp,4
 5093c84:	f800283a 	ret

05093c88 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 5093c88:	defffd04 	addi	sp,sp,-12
 5093c8c:	df000215 	stw	fp,8(sp)
 5093c90:	df000204 	addi	fp,sp,8
 5093c94:	e13fff15 	stw	r4,-4(fp)
 5093c98:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 5093c9c:	00000506 	br	5093cb4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 5093ca0:	e0bffe17 	ldw	r2,-8(fp)
 5093ca4:	1090000c 	andi	r2,r2,16384
 5093ca8:	10000226 	beq	r2,zero,5093cb4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 5093cac:	00bffd44 	movi	r2,-11
 5093cb0:	00000b06 	br	5093ce0 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 5093cb4:	e0bfff17 	ldw	r2,-4(fp)
 5093cb8:	10c00d17 	ldw	r3,52(r2)
 5093cbc:	e0bfff17 	ldw	r2,-4(fp)
 5093cc0:	10800c17 	ldw	r2,48(r2)
 5093cc4:	18800526 	beq	r3,r2,5093cdc <altera_avalon_jtag_uart_close+0x54>
 5093cc8:	e0bfff17 	ldw	r2,-4(fp)
 5093ccc:	10c00917 	ldw	r3,36(r2)
 5093cd0:	e0bfff17 	ldw	r2,-4(fp)
 5093cd4:	10800117 	ldw	r2,4(r2)
 5093cd8:	18bff136 	bltu	r3,r2,5093ca0 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
 5093cdc:	0005883a 	mov	r2,zero
}
 5093ce0:	e037883a 	mov	sp,fp
 5093ce4:	df000017 	ldw	fp,0(sp)
 5093ce8:	dec00104 	addi	sp,sp,4
 5093cec:	f800283a 	ret

05093cf0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 5093cf0:	defffa04 	addi	sp,sp,-24
 5093cf4:	df000515 	stw	fp,20(sp)
 5093cf8:	df000504 	addi	fp,sp,20
 5093cfc:	e13ffd15 	stw	r4,-12(fp)
 5093d00:	e17ffc15 	stw	r5,-16(fp)
 5093d04:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
 5093d08:	00bff9c4 	movi	r2,-25
 5093d0c:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
 5093d10:	e0bffc17 	ldw	r2,-16(fp)
 5093d14:	109a8060 	cmpeqi	r2,r2,27137
 5093d18:	1000041e 	bne	r2,zero,5093d2c <altera_avalon_jtag_uart_ioctl+0x3c>
 5093d1c:	e0bffc17 	ldw	r2,-16(fp)
 5093d20:	109a80a0 	cmpeqi	r2,r2,27138
 5093d24:	1000181e 	bne	r2,zero,5093d88 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 5093d28:	00002906 	br	5093dd0 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
 5093d2c:	e0bffd17 	ldw	r2,-12(fp)
 5093d30:	10c00117 	ldw	r3,4(r2)
 5093d34:	00a00034 	movhi	r2,32768
 5093d38:	10bfffc4 	addi	r2,r2,-1
 5093d3c:	18802126 	beq	r3,r2,5093dc4 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
 5093d40:	e0bffb17 	ldw	r2,-20(fp)
 5093d44:	10800017 	ldw	r2,0(r2)
 5093d48:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 5093d4c:	e0bffe17 	ldw	r2,-8(fp)
 5093d50:	10800090 	cmplti	r2,r2,2
 5093d54:	1000061e 	bne	r2,zero,5093d70 <altera_avalon_jtag_uart_ioctl+0x80>
 5093d58:	e0fffe17 	ldw	r3,-8(fp)
 5093d5c:	00a00034 	movhi	r2,32768
 5093d60:	10bfffc4 	addi	r2,r2,-1
 5093d64:	18800226 	beq	r3,r2,5093d70 <altera_avalon_jtag_uart_ioctl+0x80>
 5093d68:	e0bffe17 	ldw	r2,-8(fp)
 5093d6c:	00000206 	br	5093d78 <altera_avalon_jtag_uart_ioctl+0x88>
 5093d70:	00a00034 	movhi	r2,32768
 5093d74:	10bfff84 	addi	r2,r2,-2
 5093d78:	e0fffd17 	ldw	r3,-12(fp)
 5093d7c:	18800115 	stw	r2,4(r3)
      rc = 0;
 5093d80:	e03fff15 	stw	zero,-4(fp)
    break;
 5093d84:	00000f06 	br	5093dc4 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
 5093d88:	e0bffd17 	ldw	r2,-12(fp)
 5093d8c:	10c00117 	ldw	r3,4(r2)
 5093d90:	00a00034 	movhi	r2,32768
 5093d94:	10bfffc4 	addi	r2,r2,-1
 5093d98:	18800c26 	beq	r3,r2,5093dcc <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 5093d9c:	e0bffd17 	ldw	r2,-12(fp)
 5093da0:	10c00917 	ldw	r3,36(r2)
 5093da4:	e0bffd17 	ldw	r2,-12(fp)
 5093da8:	10800117 	ldw	r2,4(r2)
 5093dac:	1885803a 	cmpltu	r2,r3,r2
 5093db0:	10c03fcc 	andi	r3,r2,255
 5093db4:	e0bffb17 	ldw	r2,-20(fp)
 5093db8:	10c00015 	stw	r3,0(r2)
      rc = 0;
 5093dbc:	e03fff15 	stw	zero,-4(fp)
    break;
 5093dc0:	00000206 	br	5093dcc <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
 5093dc4:	0001883a 	nop
 5093dc8:	00000106 	br	5093dd0 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
 5093dcc:	0001883a 	nop
  }

  return rc;
 5093dd0:	e0bfff17 	ldw	r2,-4(fp)
}
 5093dd4:	e037883a 	mov	sp,fp
 5093dd8:	df000017 	ldw	fp,0(sp)
 5093ddc:	dec00104 	addi	sp,sp,4
 5093de0:	f800283a 	ret

05093de4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 5093de4:	defff304 	addi	sp,sp,-52
 5093de8:	dfc00c15 	stw	ra,48(sp)
 5093dec:	df000b15 	stw	fp,44(sp)
 5093df0:	df000b04 	addi	fp,sp,44
 5093df4:	e13ff815 	stw	r4,-32(fp)
 5093df8:	e17ff715 	stw	r5,-36(fp)
 5093dfc:	e1bff615 	stw	r6,-40(fp)
 5093e00:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
 5093e04:	e0bff717 	ldw	r2,-36(fp)
 5093e08:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 5093e0c:	00004706 	br	5093f2c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 5093e10:	e0bff817 	ldw	r2,-32(fp)
 5093e14:	10800a17 	ldw	r2,40(r2)
 5093e18:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
 5093e1c:	e0bff817 	ldw	r2,-32(fp)
 5093e20:	10800b17 	ldw	r2,44(r2)
 5093e24:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
 5093e28:	e0fffd17 	ldw	r3,-12(fp)
 5093e2c:	e0bffc17 	ldw	r2,-16(fp)
 5093e30:	18800536 	bltu	r3,r2,5093e48 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 5093e34:	e0fffd17 	ldw	r3,-12(fp)
 5093e38:	e0bffc17 	ldw	r2,-16(fp)
 5093e3c:	1885c83a 	sub	r2,r3,r2
 5093e40:	e0bffe15 	stw	r2,-8(fp)
 5093e44:	00000406 	br	5093e58 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 5093e48:	00c20004 	movi	r3,2048
 5093e4c:	e0bffc17 	ldw	r2,-16(fp)
 5093e50:	1885c83a 	sub	r2,r3,r2
 5093e54:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
 5093e58:	e0bffe17 	ldw	r2,-8(fp)
 5093e5c:	10001e26 	beq	r2,zero,5093ed8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 5093e60:	e0fff617 	ldw	r3,-40(fp)
 5093e64:	e0bffe17 	ldw	r2,-8(fp)
 5093e68:	1880022e 	bgeu	r3,r2,5093e74 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 5093e6c:	e0bff617 	ldw	r2,-40(fp)
 5093e70:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 5093e74:	e0bff817 	ldw	r2,-32(fp)
 5093e78:	10c00e04 	addi	r3,r2,56
 5093e7c:	e0bffc17 	ldw	r2,-16(fp)
 5093e80:	1885883a 	add	r2,r3,r2
 5093e84:	e1bffe17 	ldw	r6,-8(fp)
 5093e88:	100b883a 	mov	r5,r2
 5093e8c:	e13fff17 	ldw	r4,-4(fp)
 5093e90:	508a5a80 	call	508a5a8 <memcpy>
      ptr   += n;
 5093e94:	e0ffff17 	ldw	r3,-4(fp)
 5093e98:	e0bffe17 	ldw	r2,-8(fp)
 5093e9c:	1885883a 	add	r2,r3,r2
 5093ea0:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
 5093ea4:	e0fff617 	ldw	r3,-40(fp)
 5093ea8:	e0bffe17 	ldw	r2,-8(fp)
 5093eac:	1885c83a 	sub	r2,r3,r2
 5093eb0:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 5093eb4:	e0fffc17 	ldw	r3,-16(fp)
 5093eb8:	e0bffe17 	ldw	r2,-8(fp)
 5093ebc:	1885883a 	add	r2,r3,r2
 5093ec0:	10c1ffcc 	andi	r3,r2,2047
 5093ec4:	e0bff817 	ldw	r2,-32(fp)
 5093ec8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 5093ecc:	e0bff617 	ldw	r2,-40(fp)
 5093ed0:	00bfcf16 	blt	zero,r2,5093e10 <altera_avalon_jtag_uart_read+0x2c>
 5093ed4:	00000106 	br	5093edc <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
 5093ed8:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
 5093edc:	e0ffff17 	ldw	r3,-4(fp)
 5093ee0:	e0bff717 	ldw	r2,-36(fp)
 5093ee4:	1880141e 	bne	r3,r2,5093f38 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 5093ee8:	e0bff517 	ldw	r2,-44(fp)
 5093eec:	1090000c 	andi	r2,r2,16384
 5093ef0:	1000131e 	bne	r2,zero,5093f40 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 5093ef4:	0001883a 	nop
 5093ef8:	e0bff817 	ldw	r2,-32(fp)
 5093efc:	10800a17 	ldw	r2,40(r2)
 5093f00:	e0fffd17 	ldw	r3,-12(fp)
 5093f04:	1880051e 	bne	r3,r2,5093f1c <altera_avalon_jtag_uart_read+0x138>
 5093f08:	e0bff817 	ldw	r2,-32(fp)
 5093f0c:	10c00917 	ldw	r3,36(r2)
 5093f10:	e0bff817 	ldw	r2,-32(fp)
 5093f14:	10800117 	ldw	r2,4(r2)
 5093f18:	18bff736 	bltu	r3,r2,5093ef8 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 5093f1c:	e0bff817 	ldw	r2,-32(fp)
 5093f20:	10800a17 	ldw	r2,40(r2)
 5093f24:	e0fffd17 	ldw	r3,-12(fp)
 5093f28:	18800726 	beq	r3,r2,5093f48 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
 5093f2c:	e0bff617 	ldw	r2,-40(fp)
 5093f30:	00bfb716 	blt	zero,r2,5093e10 <altera_avalon_jtag_uart_read+0x2c>
 5093f34:	00000506 	br	5093f4c <altera_avalon_jtag_uart_read+0x168>
      break;
 5093f38:	0001883a 	nop
 5093f3c:	00000306 	br	5093f4c <altera_avalon_jtag_uart_read+0x168>
      break;
 5093f40:	0001883a 	nop
 5093f44:	00000106 	br	5093f4c <altera_avalon_jtag_uart_read+0x168>
      break;
 5093f48:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 5093f4c:	e0ffff17 	ldw	r3,-4(fp)
 5093f50:	e0bff717 	ldw	r2,-36(fp)
 5093f54:	18801926 	beq	r3,r2,5093fbc <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
 5093f58:	0005303a 	rdctl	r2,status
 5093f5c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5093f60:	e0fff917 	ldw	r3,-28(fp)
 5093f64:	00bfff84 	movi	r2,-2
 5093f68:	1884703a 	and	r2,r3,r2
 5093f6c:	1001703a 	wrctl	status,r2
  return context;
 5093f70:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 5093f74:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 5093f78:	e0bff817 	ldw	r2,-32(fp)
 5093f7c:	10800817 	ldw	r2,32(r2)
 5093f80:	10c00054 	ori	r3,r2,1
 5093f84:	e0bff817 	ldw	r2,-32(fp)
 5093f88:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 5093f8c:	e0bff817 	ldw	r2,-32(fp)
 5093f90:	10800017 	ldw	r2,0(r2)
 5093f94:	10800104 	addi	r2,r2,4
 5093f98:	1007883a 	mov	r3,r2
 5093f9c:	e0bff817 	ldw	r2,-32(fp)
 5093fa0:	10800817 	ldw	r2,32(r2)
 5093fa4:	18800035 	stwio	r2,0(r3)
 5093fa8:	e0bffb17 	ldw	r2,-20(fp)
 5093fac:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
 5093fb0:	e0bffa17 	ldw	r2,-24(fp)
 5093fb4:	1001703a 	wrctl	status,r2
}
 5093fb8:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 5093fbc:	e0ffff17 	ldw	r3,-4(fp)
 5093fc0:	e0bff717 	ldw	r2,-36(fp)
 5093fc4:	18800426 	beq	r3,r2,5093fd8 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
 5093fc8:	e0ffff17 	ldw	r3,-4(fp)
 5093fcc:	e0bff717 	ldw	r2,-36(fp)
 5093fd0:	1885c83a 	sub	r2,r3,r2
 5093fd4:	00000606 	br	5093ff0 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
 5093fd8:	e0bff517 	ldw	r2,-44(fp)
 5093fdc:	1090000c 	andi	r2,r2,16384
 5093fe0:	10000226 	beq	r2,zero,5093fec <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
 5093fe4:	00bffd44 	movi	r2,-11
 5093fe8:	00000106 	br	5093ff0 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
 5093fec:	00bffec4 	movi	r2,-5
}
 5093ff0:	e037883a 	mov	sp,fp
 5093ff4:	dfc00117 	ldw	ra,4(sp)
 5093ff8:	df000017 	ldw	fp,0(sp)
 5093ffc:	dec00204 	addi	sp,sp,8
 5094000:	f800283a 	ret

05094004 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 5094004:	defff304 	addi	sp,sp,-52
 5094008:	dfc00c15 	stw	ra,48(sp)
 509400c:	df000b15 	stw	fp,44(sp)
 5094010:	df000b04 	addi	fp,sp,44
 5094014:	e13ff815 	stw	r4,-32(fp)
 5094018:	e17ff715 	stw	r5,-36(fp)
 509401c:	e1bff615 	stw	r6,-40(fp)
 5094020:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 5094024:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 5094028:	e0bff717 	ldw	r2,-36(fp)
 509402c:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 5094030:	00003706 	br	5094110 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 5094034:	e0bff817 	ldw	r2,-32(fp)
 5094038:	10800c17 	ldw	r2,48(r2)
 509403c:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
 5094040:	e0bff817 	ldw	r2,-32(fp)
 5094044:	10800d17 	ldw	r2,52(r2)
 5094048:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
 509404c:	e0fffc17 	ldw	r3,-16(fp)
 5094050:	e0bfff17 	ldw	r2,-4(fp)
 5094054:	1880062e 	bgeu	r3,r2,5094070 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 5094058:	e0ffff17 	ldw	r3,-4(fp)
 509405c:	e0bffc17 	ldw	r2,-16(fp)
 5094060:	1885c83a 	sub	r2,r3,r2
 5094064:	10bfffc4 	addi	r2,r2,-1
 5094068:	e0bffe15 	stw	r2,-8(fp)
 509406c:	00000b06 	br	509409c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 5094070:	e0bfff17 	ldw	r2,-4(fp)
 5094074:	10000526 	beq	r2,zero,509408c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 5094078:	00c20004 	movi	r3,2048
 509407c:	e0bffc17 	ldw	r2,-16(fp)
 5094080:	1885c83a 	sub	r2,r3,r2
 5094084:	e0bffe15 	stw	r2,-8(fp)
 5094088:	00000406 	br	509409c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 509408c:	00c1ffc4 	movi	r3,2047
 5094090:	e0bffc17 	ldw	r2,-16(fp)
 5094094:	1885c83a 	sub	r2,r3,r2
 5094098:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
 509409c:	e0bffe17 	ldw	r2,-8(fp)
 50940a0:	10001e26 	beq	r2,zero,509411c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 50940a4:	e0fff617 	ldw	r3,-40(fp)
 50940a8:	e0bffe17 	ldw	r2,-8(fp)
 50940ac:	1880022e 	bgeu	r3,r2,50940b8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 50940b0:	e0bff617 	ldw	r2,-40(fp)
 50940b4:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 50940b8:	e0bff817 	ldw	r2,-32(fp)
 50940bc:	10c20e04 	addi	r3,r2,2104
 50940c0:	e0bffc17 	ldw	r2,-16(fp)
 50940c4:	1885883a 	add	r2,r3,r2
 50940c8:	e1bffe17 	ldw	r6,-8(fp)
 50940cc:	e17ff717 	ldw	r5,-36(fp)
 50940d0:	1009883a 	mov	r4,r2
 50940d4:	508a5a80 	call	508a5a8 <memcpy>
      ptr   += n;
 50940d8:	e0fff717 	ldw	r3,-36(fp)
 50940dc:	e0bffe17 	ldw	r2,-8(fp)
 50940e0:	1885883a 	add	r2,r3,r2
 50940e4:	e0bff715 	stw	r2,-36(fp)
      count -= n;
 50940e8:	e0fff617 	ldw	r3,-40(fp)
 50940ec:	e0bffe17 	ldw	r2,-8(fp)
 50940f0:	1885c83a 	sub	r2,r3,r2
 50940f4:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 50940f8:	e0fffc17 	ldw	r3,-16(fp)
 50940fc:	e0bffe17 	ldw	r2,-8(fp)
 5094100:	1885883a 	add	r2,r3,r2
 5094104:	10c1ffcc 	andi	r3,r2,2047
 5094108:	e0bff817 	ldw	r2,-32(fp)
 509410c:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
 5094110:	e0bff617 	ldw	r2,-40(fp)
 5094114:	00bfc716 	blt	zero,r2,5094034 <altera_avalon_jtag_uart_write+0x30>
 5094118:	00000106 	br	5094120 <altera_avalon_jtag_uart_write+0x11c>
        break;
 509411c:	0001883a 	nop
  NIOS2_READ_STATUS (context);
 5094120:	0005303a 	rdctl	r2,status
 5094124:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5094128:	e0fff917 	ldw	r3,-28(fp)
 509412c:	00bfff84 	movi	r2,-2
 5094130:	1884703a 	and	r2,r3,r2
 5094134:	1001703a 	wrctl	status,r2
  return context;
 5094138:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 509413c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 5094140:	e0bff817 	ldw	r2,-32(fp)
 5094144:	10800817 	ldw	r2,32(r2)
 5094148:	10c00094 	ori	r3,r2,2
 509414c:	e0bff817 	ldw	r2,-32(fp)
 5094150:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 5094154:	e0bff817 	ldw	r2,-32(fp)
 5094158:	10800017 	ldw	r2,0(r2)
 509415c:	10800104 	addi	r2,r2,4
 5094160:	1007883a 	mov	r3,r2
 5094164:	e0bff817 	ldw	r2,-32(fp)
 5094168:	10800817 	ldw	r2,32(r2)
 509416c:	18800035 	stwio	r2,0(r3)
 5094170:	e0bffb17 	ldw	r2,-20(fp)
 5094174:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
 5094178:	e0bffa17 	ldw	r2,-24(fp)
 509417c:	1001703a 	wrctl	status,r2
}
 5094180:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 5094184:	e0bff617 	ldw	r2,-40(fp)
 5094188:	0080100e 	bge	zero,r2,50941cc <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 509418c:	e0bff517 	ldw	r2,-44(fp)
 5094190:	1090000c 	andi	r2,r2,16384
 5094194:	1000101e 	bne	r2,zero,50941d8 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 5094198:	0001883a 	nop
 509419c:	e0bff817 	ldw	r2,-32(fp)
 50941a0:	10800d17 	ldw	r2,52(r2)
 50941a4:	e0ffff17 	ldw	r3,-4(fp)
 50941a8:	1880051e 	bne	r3,r2,50941c0 <altera_avalon_jtag_uart_write+0x1bc>
 50941ac:	e0bff817 	ldw	r2,-32(fp)
 50941b0:	10c00917 	ldw	r3,36(r2)
 50941b4:	e0bff817 	ldw	r2,-32(fp)
 50941b8:	10800117 	ldw	r2,4(r2)
 50941bc:	18bff736 	bltu	r3,r2,509419c <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 50941c0:	e0bff817 	ldw	r2,-32(fp)
 50941c4:	10800917 	ldw	r2,36(r2)
 50941c8:	1000051e 	bne	r2,zero,50941e0 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
 50941cc:	e0bff617 	ldw	r2,-40(fp)
 50941d0:	00bfcf16 	blt	zero,r2,5094110 <altera_avalon_jtag_uart_write+0x10c>
 50941d4:	00000306 	br	50941e4 <altera_avalon_jtag_uart_write+0x1e0>
        break;
 50941d8:	0001883a 	nop
 50941dc:	00000106 	br	50941e4 <altera_avalon_jtag_uart_write+0x1e0>
         break;
 50941e0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 50941e4:	e0fff717 	ldw	r3,-36(fp)
 50941e8:	e0bffd17 	ldw	r2,-12(fp)
 50941ec:	18800426 	beq	r3,r2,5094200 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
 50941f0:	e0fff717 	ldw	r3,-36(fp)
 50941f4:	e0bffd17 	ldw	r2,-12(fp)
 50941f8:	1885c83a 	sub	r2,r3,r2
 50941fc:	00000606 	br	5094218 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
 5094200:	e0bff517 	ldw	r2,-44(fp)
 5094204:	1090000c 	andi	r2,r2,16384
 5094208:	10000226 	beq	r2,zero,5094214 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
 509420c:	00bffd44 	movi	r2,-11
 5094210:	00000106 	br	5094218 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 5094214:	00bffec4 	movi	r2,-5
}
 5094218:	e037883a 	mov	sp,fp
 509421c:	dfc00117 	ldw	ra,4(sp)
 5094220:	df000017 	ldw	fp,0(sp)
 5094224:	dec00204 	addi	sp,sp,8
 5094228:	f800283a 	ret

0509422c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 509422c:	defffa04 	addi	sp,sp,-24
 5094230:	dfc00515 	stw	ra,20(sp)
 5094234:	df000415 	stw	fp,16(sp)
 5094238:	df000404 	addi	fp,sp,16
 509423c:	e13ffc15 	stw	r4,-16(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 5094240:	0007883a 	mov	r3,zero
 5094244:	e0bffc17 	ldw	r2,-16(fp)
 5094248:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 509424c:	e0bffc17 	ldw	r2,-16(fp)
 5094250:	10800104 	addi	r2,r2,4
 5094254:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
 5094258:	0005303a 	rdctl	r2,status
 509425c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5094260:	e0fffd17 	ldw	r3,-12(fp)
 5094264:	00bfff84 	movi	r2,-2
 5094268:	1884703a 	and	r2,r3,r2
 509426c:	1001703a 	wrctl	status,r2
  return context;
 5094270:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 5094274:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
 5094278:	5094e940 	call	5094e94 <alt_tick>
 509427c:	e0bfff17 	ldw	r2,-4(fp)
 5094280:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
 5094284:	e0bffe17 	ldw	r2,-8(fp)
 5094288:	1001703a 	wrctl	status,r2
}
 509428c:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
 5094290:	0001883a 	nop
 5094294:	e037883a 	mov	sp,fp
 5094298:	dfc00117 	ldw	ra,4(sp)
 509429c:	df000017 	ldw	fp,0(sp)
 50942a0:	dec00204 	addi	sp,sp,8
 50942a4:	f800283a 	ret

050942a8 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 50942a8:	defff804 	addi	sp,sp,-32
 50942ac:	dfc00715 	stw	ra,28(sp)
 50942b0:	df000615 	stw	fp,24(sp)
 50942b4:	df000604 	addi	fp,sp,24
 50942b8:	e13ffe15 	stw	r4,-8(fp)
 50942bc:	e17ffd15 	stw	r5,-12(fp)
 50942c0:	e1bffc15 	stw	r6,-16(fp)
 50942c4:	e1fffb15 	stw	r7,-20(fp)
 50942c8:	e0bffb17 	ldw	r2,-20(fp)
 50942cc:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 50942d0:	d0a71417 	ldw	r2,-25520(gp)
 50942d4:	1000031e 	bne	r2,zero,50942e4 <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
 50942d8:	e0bfff17 	ldw	r2,-4(fp)
 50942dc:	d0a71415 	stw	r2,-25520(gp)
    return 0;
 50942e0:	00000106 	br	50942e8 <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
 50942e4:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 50942e8:	e0bffe17 	ldw	r2,-8(fp)
 50942ec:	10800104 	addi	r2,r2,4
 50942f0:	00c001c4 	movi	r3,7
 50942f4:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 50942f8:	d8000015 	stw	zero,0(sp)
 50942fc:	e1fffe17 	ldw	r7,-8(fp)
 5094300:	01814274 	movhi	r6,1289
 5094304:	31908b04 	addi	r6,r6,16940
 5094308:	e17ffc17 	ldw	r5,-16(fp)
 509430c:	e13ffd17 	ldw	r4,-12(fp)
 5094310:	50947e40 	call	50947e4 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 5094314:	0001883a 	nop
 5094318:	e037883a 	mov	sp,fp
 509431c:	dfc00117 	ldw	ra,4(sp)
 5094320:	df000017 	ldw	fp,0(sp)
 5094324:	dec00204 	addi	sp,sp,8
 5094328:	f800283a 	ret

0509432c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 509432c:	defff504 	addi	sp,sp,-44
 5094330:	df000a15 	stw	fp,40(sp)
 5094334:	df000a04 	addi	fp,sp,40
 5094338:	e13ff915 	stw	r4,-28(fp)
 509433c:	e17ff815 	stw	r5,-32(fp)
 5094340:	e1bff715 	stw	r6,-36(fp)
 5094344:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 5094348:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
 509434c:	d0a71417 	ldw	r2,-25520(gp)
  
  if (alt_ticks_per_second ())
 5094350:	10003e26 	beq	r2,zero,509444c <alt_alarm_start+0x120>
  {
    if (alarm)
 5094354:	e0bff917 	ldw	r2,-28(fp)
 5094358:	10003a26 	beq	r2,zero,5094444 <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
 509435c:	e0bff917 	ldw	r2,-28(fp)
 5094360:	e0fff717 	ldw	r3,-36(fp)
 5094364:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 5094368:	e0bff917 	ldw	r2,-28(fp)
 509436c:	e0fff617 	ldw	r3,-40(fp)
 5094370:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
 5094374:	0005303a 	rdctl	r2,status
 5094378:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 509437c:	e0fffd17 	ldw	r3,-12(fp)
 5094380:	00bfff84 	movi	r2,-2
 5094384:	1884703a 	and	r2,r3,r2
 5094388:	1001703a 	wrctl	status,r2
  return context;
 509438c:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
 5094390:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 5094394:	d0a71517 	ldw	r2,-25516(gp)
      
      current_nticks = alt_nticks();
 5094398:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 509439c:	e0fff817 	ldw	r3,-32(fp)
 50943a0:	e0bfff17 	ldw	r2,-4(fp)
 50943a4:	1885883a 	add	r2,r3,r2
 50943a8:	10c00044 	addi	r3,r2,1
 50943ac:	e0bff917 	ldw	r2,-28(fp)
 50943b0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 50943b4:	e0bff917 	ldw	r2,-28(fp)
 50943b8:	10c00217 	ldw	r3,8(r2)
 50943bc:	e0bfff17 	ldw	r2,-4(fp)
 50943c0:	1880042e 	bgeu	r3,r2,50943d4 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 50943c4:	e0bff917 	ldw	r2,-28(fp)
 50943c8:	00c00044 	movi	r3,1
 50943cc:	10c00405 	stb	r3,16(r2)
 50943d0:	00000206 	br	50943dc <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 50943d4:	e0bff917 	ldw	r2,-28(fp)
 50943d8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 50943dc:	e0bff917 	ldw	r2,-28(fp)
 50943e0:	d0e00c04 	addi	r3,gp,-32720
 50943e4:	e0fffb15 	stw	r3,-20(fp)
 50943e8:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 50943ec:	e0bffa17 	ldw	r2,-24(fp)
 50943f0:	e0fffb17 	ldw	r3,-20(fp)
 50943f4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 50943f8:	e0bffb17 	ldw	r2,-20(fp)
 50943fc:	10c00017 	ldw	r3,0(r2)
 5094400:	e0bffa17 	ldw	r2,-24(fp)
 5094404:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 5094408:	e0bffb17 	ldw	r2,-20(fp)
 509440c:	10800017 	ldw	r2,0(r2)
 5094410:	e0fffa17 	ldw	r3,-24(fp)
 5094414:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 5094418:	e0bffb17 	ldw	r2,-20(fp)
 509441c:	e0fffa17 	ldw	r3,-24(fp)
 5094420:	10c00015 	stw	r3,0(r2)
}
 5094424:	0001883a 	nop
 5094428:	e0bffe17 	ldw	r2,-8(fp)
 509442c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
 5094430:	e0bffc17 	ldw	r2,-16(fp)
 5094434:	1001703a 	wrctl	status,r2
}
 5094438:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
 509443c:	0005883a 	mov	r2,zero
 5094440:	00000306 	br	5094450 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
 5094444:	00bffa84 	movi	r2,-22
 5094448:	00000106 	br	5094450 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
 509444c:	00bfde84 	movi	r2,-134
  }
}
 5094450:	e037883a 	mov	sp,fp
 5094454:	df000017 	ldw	fp,0(sp)
 5094458:	dec00104 	addi	sp,sp,4
 509445c:	f800283a 	ret

05094460 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 5094460:	defffa04 	addi	sp,sp,-24
 5094464:	dfc00515 	stw	ra,20(sp)
 5094468:	df000415 	stw	fp,16(sp)
 509446c:	df000404 	addi	fp,sp,16
 5094470:	e13ffc15 	stw	r4,-16(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
 5094474:	008000c4 	movi	r2,3
 5094478:	e0bffe15 	stw	r2,-8(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 509447c:	e0fffe17 	ldw	r3,-8(fp)
 5094480:	008003f4 	movhi	r2,15
 5094484:	10909004 	addi	r2,r2,16960
 5094488:	1885383a 	mul	r2,r3,r2
 509448c:	100b883a 	mov	r5,r2
 5094490:	01017db4 	movhi	r4,1526
 5094494:	21384004 	addi	r4,r4,-7936
 5094498:	50828000 	call	5082800 <__udivsi3>
  big_loops = us / (INT_MAX/
 509449c:	100b883a 	mov	r5,r2
 50944a0:	01200034 	movhi	r4,32768
 50944a4:	213fffc4 	addi	r4,r4,-1
 50944a8:	50828000 	call	5082800 <__udivsi3>
 50944ac:	100b883a 	mov	r5,r2
 50944b0:	e13ffc17 	ldw	r4,-16(fp)
 50944b4:	50828000 	call	5082800 <__udivsi3>
 50944b8:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
 50944bc:	e0bffd17 	ldw	r2,-12(fp)
 50944c0:	10002a26 	beq	r2,zero,509456c <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 50944c4:	e03fff15 	stw	zero,-4(fp)
 50944c8:	00001706 	br	5094528 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 50944cc:	00a00034 	movhi	r2,32768
 50944d0:	10bfffc4 	addi	r2,r2,-1
 50944d4:	10bfffc4 	addi	r2,r2,-1
 50944d8:	103ffe1e 	bne	r2,zero,50944d4 <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 50944dc:	e0fffe17 	ldw	r3,-8(fp)
 50944e0:	008003f4 	movhi	r2,15
 50944e4:	10909004 	addi	r2,r2,16960
 50944e8:	1885383a 	mul	r2,r3,r2
      us -= (INT_MAX/(ALT_CPU_FREQ/
 50944ec:	100b883a 	mov	r5,r2
 50944f0:	01017db4 	movhi	r4,1526
 50944f4:	21384004 	addi	r4,r4,-7936
 50944f8:	50828000 	call	5082800 <__udivsi3>
 50944fc:	100b883a 	mov	r5,r2
 5094500:	01200034 	movhi	r4,32768
 5094504:	213fffc4 	addi	r4,r4,-1
 5094508:	50828000 	call	5082800 <__udivsi3>
 509450c:	1007883a 	mov	r3,r2
 5094510:	e0bffc17 	ldw	r2,-16(fp)
 5094514:	10c5c83a 	sub	r2,r2,r3
 5094518:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
 509451c:	e0bfff17 	ldw	r2,-4(fp)
 5094520:	10800044 	addi	r2,r2,1
 5094524:	e0bfff15 	stw	r2,-4(fp)
 5094528:	e0ffff17 	ldw	r3,-4(fp)
 509452c:	e0bffd17 	ldw	r2,-12(fp)
 5094530:	18bfe616 	blt	r3,r2,50944cc <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 5094534:	e0fffe17 	ldw	r3,-8(fp)
 5094538:	008003f4 	movhi	r2,15
 509453c:	10909004 	addi	r2,r2,16960
 5094540:	1885383a 	mul	r2,r3,r2
 5094544:	100b883a 	mov	r5,r2
 5094548:	01017db4 	movhi	r4,1526
 509454c:	21384004 	addi	r4,r4,-7936
 5094550:	50828000 	call	5082800 <__udivsi3>
 5094554:	1007883a 	mov	r3,r2
 5094558:	e0bffc17 	ldw	r2,-16(fp)
 509455c:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
 5094560:	10bfffc4 	addi	r2,r2,-1
 5094564:	103ffe1e 	bne	r2,zero,5094560 <alt_busy_sleep+0x100>
 5094568:	00000d06 	br	50945a0 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 509456c:	e0fffe17 	ldw	r3,-8(fp)
 5094570:	008003f4 	movhi	r2,15
 5094574:	10909004 	addi	r2,r2,16960
 5094578:	1885383a 	mul	r2,r3,r2
 509457c:	100b883a 	mov	r5,r2
 5094580:	01017db4 	movhi	r4,1526
 5094584:	21384004 	addi	r4,r4,-7936
 5094588:	50828000 	call	5082800 <__udivsi3>
 509458c:	1007883a 	mov	r3,r2
 5094590:	e0bffc17 	ldw	r2,-16(fp)
 5094594:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
 5094598:	10bfffc4 	addi	r2,r2,-1
 509459c:	00bffe16 	blt	zero,r2,5094598 <alt_busy_sleep+0x138>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 50945a0:	0005883a 	mov	r2,zero
}
 50945a4:	e037883a 	mov	sp,fp
 50945a8:	dfc00117 	ldw	ra,4(sp)
 50945ac:	df000017 	ldw	fp,0(sp)
 50945b0:	dec00204 	addi	sp,sp,8
 50945b4:	f800283a 	ret

050945b8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 50945b8:	defffe04 	addi	sp,sp,-8
 50945bc:	df000115 	stw	fp,4(sp)
 50945c0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 50945c4:	e03fff15 	stw	zero,-4(fp)
 50945c8:	00000506 	br	50945e0 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 50945cc:	e0bfff17 	ldw	r2,-4(fp)
 50945d0:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 50945d4:	e0bfff17 	ldw	r2,-4(fp)
 50945d8:	10800804 	addi	r2,r2,32
 50945dc:	e0bfff15 	stw	r2,-4(fp)
 50945e0:	e0bfff17 	ldw	r2,-4(fp)
 50945e4:	10820030 	cmpltui	r2,r2,2048
 50945e8:	103ff81e 	bne	r2,zero,50945cc <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 50945ec:	0001883a 	nop
 50945f0:	0001883a 	nop
 50945f4:	e037883a 	mov	sp,fp
 50945f8:	df000017 	ldw	fp,0(sp)
 50945fc:	dec00104 	addi	sp,sp,4
 5094600:	f800283a 	ret

05094604 <alt_get_errno>:
{
 5094604:	defffe04 	addi	sp,sp,-8
 5094608:	dfc00115 	stw	ra,4(sp)
 509460c:	df000015 	stw	fp,0(sp)
 5094610:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5094614:	d0a00917 	ldw	r2,-32732(gp)
 5094618:	10000326 	beq	r2,zero,5094628 <alt_get_errno+0x24>
 509461c:	d0a00917 	ldw	r2,-32732(gp)
 5094620:	103ee83a 	callr	r2
 5094624:	00000106 	br	509462c <alt_get_errno+0x28>
 5094628:	d0a70e04 	addi	r2,gp,-25544
}
 509462c:	e037883a 	mov	sp,fp
 5094630:	dfc00117 	ldw	ra,4(sp)
 5094634:	df000017 	ldw	fp,0(sp)
 5094638:	dec00204 	addi	sp,sp,8
 509463c:	f800283a 	ret

05094640 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 5094640:	defffa04 	addi	sp,sp,-24
 5094644:	dfc00515 	stw	ra,20(sp)
 5094648:	df000415 	stw	fp,16(sp)
 509464c:	df000404 	addi	fp,sp,16
 5094650:	e13ffd15 	stw	r4,-12(fp)
 5094654:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 5094658:	e0bffd17 	ldw	r2,-12(fp)
 509465c:	10000326 	beq	r2,zero,509466c <alt_dev_llist_insert+0x2c>
 5094660:	e0bffd17 	ldw	r2,-12(fp)
 5094664:	10800217 	ldw	r2,8(r2)
 5094668:	1000061e 	bne	r2,zero,5094684 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 509466c:	50946040 	call	5094604 <alt_get_errno>
 5094670:	1007883a 	mov	r3,r2
 5094674:	00800584 	movi	r2,22
 5094678:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 509467c:	00bffa84 	movi	r2,-22
 5094680:	00001406 	br	50946d4 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 5094684:	e0bffd17 	ldw	r2,-12(fp)
 5094688:	e0fffc17 	ldw	r3,-16(fp)
 509468c:	e0ffff15 	stw	r3,-4(fp)
 5094690:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
 5094694:	e0bffe17 	ldw	r2,-8(fp)
 5094698:	e0ffff17 	ldw	r3,-4(fp)
 509469c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 50946a0:	e0bfff17 	ldw	r2,-4(fp)
 50946a4:	10c00017 	ldw	r3,0(r2)
 50946a8:	e0bffe17 	ldw	r2,-8(fp)
 50946ac:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
 50946b0:	e0bfff17 	ldw	r2,-4(fp)
 50946b4:	10800017 	ldw	r2,0(r2)
 50946b8:	e0fffe17 	ldw	r3,-8(fp)
 50946bc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 50946c0:	e0bfff17 	ldw	r2,-4(fp)
 50946c4:	e0fffe17 	ldw	r3,-8(fp)
 50946c8:	10c00015 	stw	r3,0(r2)
}
 50946cc:	0001883a 	nop

  return 0;  
 50946d0:	0005883a 	mov	r2,zero
}
 50946d4:	e037883a 	mov	sp,fp
 50946d8:	dfc00117 	ldw	ra,4(sp)
 50946dc:	df000017 	ldw	fp,0(sp)
 50946e0:	dec00204 	addi	sp,sp,8
 50946e4:	f800283a 	ret

050946e8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 50946e8:	defffd04 	addi	sp,sp,-12
 50946ec:	dfc00215 	stw	ra,8(sp)
 50946f0:	df000115 	stw	fp,4(sp)
 50946f4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 50946f8:	00814274 	movhi	r2,1289
 50946fc:	10956304 	addi	r2,r2,21900
 5094700:	e0bfff15 	stw	r2,-4(fp)
 5094704:	00000606 	br	5094720 <_do_ctors+0x38>
        (*ctor) (); 
 5094708:	e0bfff17 	ldw	r2,-4(fp)
 509470c:	10800017 	ldw	r2,0(r2)
 5094710:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 5094714:	e0bfff17 	ldw	r2,-4(fp)
 5094718:	10bfff04 	addi	r2,r2,-4
 509471c:	e0bfff15 	stw	r2,-4(fp)
 5094720:	e0ffff17 	ldw	r3,-4(fp)
 5094724:	00814274 	movhi	r2,1289
 5094728:	10956404 	addi	r2,r2,21904
 509472c:	18bff62e 	bgeu	r3,r2,5094708 <_do_ctors+0x20>
}
 5094730:	0001883a 	nop
 5094734:	0001883a 	nop
 5094738:	e037883a 	mov	sp,fp
 509473c:	dfc00117 	ldw	ra,4(sp)
 5094740:	df000017 	ldw	fp,0(sp)
 5094744:	dec00204 	addi	sp,sp,8
 5094748:	f800283a 	ret

0509474c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 509474c:	defffd04 	addi	sp,sp,-12
 5094750:	dfc00215 	stw	ra,8(sp)
 5094754:	df000115 	stw	fp,4(sp)
 5094758:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 509475c:	00814274 	movhi	r2,1289
 5094760:	10956304 	addi	r2,r2,21900
 5094764:	e0bfff15 	stw	r2,-4(fp)
 5094768:	00000606 	br	5094784 <_do_dtors+0x38>
        (*dtor) (); 
 509476c:	e0bfff17 	ldw	r2,-4(fp)
 5094770:	10800017 	ldw	r2,0(r2)
 5094774:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 5094778:	e0bfff17 	ldw	r2,-4(fp)
 509477c:	10bfff04 	addi	r2,r2,-4
 5094780:	e0bfff15 	stw	r2,-4(fp)
 5094784:	e0ffff17 	ldw	r3,-4(fp)
 5094788:	00814274 	movhi	r2,1289
 509478c:	10956404 	addi	r2,r2,21904
 5094790:	18bff62e 	bgeu	r3,r2,509476c <_do_dtors+0x20>
}
 5094794:	0001883a 	nop
 5094798:	0001883a 	nop
 509479c:	e037883a 	mov	sp,fp
 50947a0:	dfc00117 	ldw	ra,4(sp)
 50947a4:	df000017 	ldw	fp,0(sp)
 50947a8:	dec00204 	addi	sp,sp,8
 50947ac:	f800283a 	ret

050947b0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 50947b0:	defffe04 	addi	sp,sp,-8
 50947b4:	dfc00115 	stw	ra,4(sp)
 50947b8:	df000015 	stw	fp,0(sp)
 50947bc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 50947c0:	01440004 	movi	r5,4096
 50947c4:	0009883a 	mov	r4,zero
 50947c8:	50951f80 	call	50951f8 <alt_icache_flush>
#endif
}
 50947cc:	0001883a 	nop
 50947d0:	e037883a 	mov	sp,fp
 50947d4:	dfc00117 	ldw	ra,4(sp)
 50947d8:	df000017 	ldw	fp,0(sp)
 50947dc:	dec00204 	addi	sp,sp,8
 50947e0:	f800283a 	ret

050947e4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 50947e4:	defff904 	addi	sp,sp,-28
 50947e8:	dfc00615 	stw	ra,24(sp)
 50947ec:	df000515 	stw	fp,20(sp)
 50947f0:	df000504 	addi	fp,sp,20
 50947f4:	e13fff15 	stw	r4,-4(fp)
 50947f8:	e17ffe15 	stw	r5,-8(fp)
 50947fc:	e1bffd15 	stw	r6,-12(fp)
 5094800:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 5094804:	e0800217 	ldw	r2,8(fp)
 5094808:	d8800015 	stw	r2,0(sp)
 509480c:	e1fffc17 	ldw	r7,-16(fp)
 5094810:	e1bffd17 	ldw	r6,-12(fp)
 5094814:	e17ffe17 	ldw	r5,-8(fp)
 5094818:	e13fff17 	ldw	r4,-4(fp)
 509481c:	50949940 	call	5094994 <alt_iic_isr_register>
}  
 5094820:	e037883a 	mov	sp,fp
 5094824:	dfc00117 	ldw	ra,4(sp)
 5094828:	df000017 	ldw	fp,0(sp)
 509482c:	dec00204 	addi	sp,sp,8
 5094830:	f800283a 	ret

05094834 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 5094834:	defff904 	addi	sp,sp,-28
 5094838:	df000615 	stw	fp,24(sp)
 509483c:	df000604 	addi	fp,sp,24
 5094840:	e13ffb15 	stw	r4,-20(fp)
 5094844:	e17ffa15 	stw	r5,-24(fp)
 5094848:	e0bffa17 	ldw	r2,-24(fp)
 509484c:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
 5094850:	0005303a 	rdctl	r2,status
 5094854:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5094858:	e0fffe17 	ldw	r3,-8(fp)
 509485c:	00bfff84 	movi	r2,-2
 5094860:	1884703a 	and	r2,r3,r2
 5094864:	1001703a 	wrctl	status,r2
  return context;
 5094868:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
 509486c:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active |= (1 << id);
 5094870:	00c00044 	movi	r3,1
 5094874:	e0bfff17 	ldw	r2,-4(fp)
 5094878:	1884983a 	sll	r2,r3,r2
 509487c:	1007883a 	mov	r3,r2
 5094880:	d0a71017 	ldw	r2,-25536(gp)
 5094884:	1884b03a 	or	r2,r3,r2
 5094888:	d0a71015 	stw	r2,-25536(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 509488c:	d0a71017 	ldw	r2,-25536(gp)
 5094890:	100170fa 	wrctl	ienable,r2
 5094894:	e0bffd17 	ldw	r2,-12(fp)
 5094898:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
 509489c:	e0bffc17 	ldw	r2,-16(fp)
 50948a0:	1001703a 	wrctl	status,r2
}
 50948a4:	0001883a 	nop
  return 0;
 50948a8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
 50948ac:	e037883a 	mov	sp,fp
 50948b0:	df000017 	ldw	fp,0(sp)
 50948b4:	dec00104 	addi	sp,sp,4
 50948b8:	f800283a 	ret

050948bc <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 50948bc:	defff904 	addi	sp,sp,-28
 50948c0:	df000615 	stw	fp,24(sp)
 50948c4:	df000604 	addi	fp,sp,24
 50948c8:	e13ffb15 	stw	r4,-20(fp)
 50948cc:	e17ffa15 	stw	r5,-24(fp)
 50948d0:	e0bffa17 	ldw	r2,-24(fp)
 50948d4:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
 50948d8:	0005303a 	rdctl	r2,status
 50948dc:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 50948e0:	e0fffe17 	ldw	r3,-8(fp)
 50948e4:	00bfff84 	movi	r2,-2
 50948e8:	1884703a 	and	r2,r3,r2
 50948ec:	1001703a 	wrctl	status,r2
  return context;
 50948f0:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
 50948f4:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
 50948f8:	00c00044 	movi	r3,1
 50948fc:	e0bfff17 	ldw	r2,-4(fp)
 5094900:	1884983a 	sll	r2,r3,r2
 5094904:	0084303a 	nor	r2,zero,r2
 5094908:	1007883a 	mov	r3,r2
 509490c:	d0a71017 	ldw	r2,-25536(gp)
 5094910:	1884703a 	and	r2,r3,r2
 5094914:	d0a71015 	stw	r2,-25536(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 5094918:	d0a71017 	ldw	r2,-25536(gp)
 509491c:	100170fa 	wrctl	ienable,r2
 5094920:	e0bffd17 	ldw	r2,-12(fp)
 5094924:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
 5094928:	e0bffc17 	ldw	r2,-16(fp)
 509492c:	1001703a 	wrctl	status,r2
}
 5094930:	0001883a 	nop
  return 0;
 5094934:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
 5094938:	e037883a 	mov	sp,fp
 509493c:	df000017 	ldw	fp,0(sp)
 5094940:	dec00104 	addi	sp,sp,4
 5094944:	f800283a 	ret

05094948 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 5094948:	defffc04 	addi	sp,sp,-16
 509494c:	df000315 	stw	fp,12(sp)
 5094950:	df000304 	addi	fp,sp,12
 5094954:	e13ffe15 	stw	r4,-8(fp)
 5094958:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 509495c:	000530fa 	rdctl	r2,ienable
 5094960:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 5094964:	00c00044 	movi	r3,1
 5094968:	e0bffd17 	ldw	r2,-12(fp)
 509496c:	1884983a 	sll	r2,r3,r2
 5094970:	1007883a 	mov	r3,r2
 5094974:	e0bfff17 	ldw	r2,-4(fp)
 5094978:	1884703a 	and	r2,r3,r2
 509497c:	1004c03a 	cmpne	r2,r2,zero
 5094980:	10803fcc 	andi	r2,r2,255
}
 5094984:	e037883a 	mov	sp,fp
 5094988:	df000017 	ldw	fp,0(sp)
 509498c:	dec00104 	addi	sp,sp,4
 5094990:	f800283a 	ret

05094994 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 5094994:	defff504 	addi	sp,sp,-44
 5094998:	dfc00a15 	stw	ra,40(sp)
 509499c:	df000915 	stw	fp,36(sp)
 50949a0:	df000904 	addi	fp,sp,36
 50949a4:	e13ffa15 	stw	r4,-24(fp)
 50949a8:	e17ff915 	stw	r5,-28(fp)
 50949ac:	e1bff815 	stw	r6,-32(fp)
 50949b0:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
 50949b4:	00bffa84 	movi	r2,-22
 50949b8:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 50949bc:	e0bff917 	ldw	r2,-28(fp)
 50949c0:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 50949c4:	e0bffe17 	ldw	r2,-8(fp)
 50949c8:	10800808 	cmpgei	r2,r2,32
 50949cc:	1000251e 	bne	r2,zero,5094a64 <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
 50949d0:	0005303a 	rdctl	r2,status
 50949d4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 50949d8:	e0fffc17 	ldw	r3,-16(fp)
 50949dc:	00bfff84 	movi	r2,-2
 50949e0:	1884703a 	and	r2,r3,r2
 50949e4:	1001703a 	wrctl	status,r2
  return context;
 50949e8:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 50949ec:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
 50949f0:	e0bffe17 	ldw	r2,-8(fp)
 50949f4:	100890fa 	slli	r4,r2,3
 50949f8:	e0fff817 	ldw	r3,-32(fp)
 50949fc:	008142b4 	movhi	r2,1290
 5094a00:	2085883a 	add	r2,r4,r2
 5094a04:	10e7c315 	stw	r3,-24820(r2)
    alt_irq[id].context = isr_context;
 5094a08:	e0bffe17 	ldw	r2,-8(fp)
 5094a0c:	100890fa 	slli	r4,r2,3
 5094a10:	e0fff717 	ldw	r3,-36(fp)
 5094a14:	008142b4 	movhi	r2,1290
 5094a18:	2085883a 	add	r2,r4,r2
 5094a1c:	10e7c415 	stw	r3,-24816(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 5094a20:	e0bff817 	ldw	r2,-32(fp)
 5094a24:	10000526 	beq	r2,zero,5094a3c <alt_iic_isr_register+0xa8>
 5094a28:	e0bffe17 	ldw	r2,-8(fp)
 5094a2c:	100b883a 	mov	r5,r2
 5094a30:	e13ffa17 	ldw	r4,-24(fp)
 5094a34:	50948340 	call	5094834 <alt_ic_irq_enable>
 5094a38:	00000406 	br	5094a4c <alt_iic_isr_register+0xb8>
 5094a3c:	e0bffe17 	ldw	r2,-8(fp)
 5094a40:	100b883a 	mov	r5,r2
 5094a44:	e13ffa17 	ldw	r4,-24(fp)
 5094a48:	50948bc0 	call	50948bc <alt_ic_irq_disable>
 5094a4c:	e0bfff15 	stw	r2,-4(fp)
 5094a50:	e0bffd17 	ldw	r2,-12(fp)
 5094a54:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
 5094a58:	e0bffb17 	ldw	r2,-20(fp)
 5094a5c:	1001703a 	wrctl	status,r2
}
 5094a60:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
 5094a64:	e0bfff17 	ldw	r2,-4(fp)
}
 5094a68:	e037883a 	mov	sp,fp
 5094a6c:	dfc00117 	ldw	ra,4(sp)
 5094a70:	df000017 	ldw	fp,0(sp)
 5094a74:	dec00204 	addi	sp,sp,8
 5094a78:	f800283a 	ret

05094a7c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 5094a7c:	defff904 	addi	sp,sp,-28
 5094a80:	dfc00615 	stw	ra,24(sp)
 5094a84:	df000515 	stw	fp,20(sp)
 5094a88:	df000504 	addi	fp,sp,20
 5094a8c:	e13ffe15 	stw	r4,-8(fp)
 5094a90:	e17ffd15 	stw	r5,-12(fp)
 5094a94:	e1bffc15 	stw	r6,-16(fp)
 5094a98:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
 5094a9c:	e1bffb17 	ldw	r6,-20(fp)
 5094aa0:	e17ffc17 	ldw	r5,-16(fp)
 5094aa4:	e13ffd17 	ldw	r4,-12(fp)
 5094aa8:	5094c9c0 	call	5094c9c <open>
 5094aac:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
 5094ab0:	e0bfff17 	ldw	r2,-4(fp)
 5094ab4:	10001716 	blt	r2,zero,5094b14 <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
 5094ab8:	e0bfff17 	ldw	r2,-4(fp)
 5094abc:	10c00324 	muli	r3,r2,12
 5094ac0:	00814274 	movhi	r2,1289
 5094ac4:	1885883a 	add	r2,r3,r2
 5094ac8:	10dc2017 	ldw	r3,28800(r2)
 5094acc:	e0bffe17 	ldw	r2,-8(fp)
 5094ad0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 5094ad4:	e0bfff17 	ldw	r2,-4(fp)
 5094ad8:	10c00324 	muli	r3,r2,12
 5094adc:	00814274 	movhi	r2,1289
 5094ae0:	1885883a 	add	r2,r3,r2
 5094ae4:	10dc2117 	ldw	r3,28804(r2)
 5094ae8:	e0bffe17 	ldw	r2,-8(fp)
 5094aec:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 5094af0:	e0bfff17 	ldw	r2,-4(fp)
 5094af4:	10c00324 	muli	r3,r2,12
 5094af8:	00814274 	movhi	r2,1289
 5094afc:	1885883a 	add	r2,r3,r2
 5094b00:	10dc2217 	ldw	r3,28808(r2)
 5094b04:	e0bffe17 	ldw	r2,-8(fp)
 5094b08:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 5094b0c:	e13fff17 	ldw	r4,-4(fp)
 5094b10:	50934700 	call	5093470 <alt_release_fd>
  }
} 
 5094b14:	0001883a 	nop
 5094b18:	e037883a 	mov	sp,fp
 5094b1c:	dfc00117 	ldw	ra,4(sp)
 5094b20:	df000017 	ldw	fp,0(sp)
 5094b24:	dec00204 	addi	sp,sp,8
 5094b28:	f800283a 	ret

05094b2c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 5094b2c:	defffb04 	addi	sp,sp,-20
 5094b30:	dfc00415 	stw	ra,16(sp)
 5094b34:	df000315 	stw	fp,12(sp)
 5094b38:	df000304 	addi	fp,sp,12
 5094b3c:	e13fff15 	stw	r4,-4(fp)
 5094b40:	e17ffe15 	stw	r5,-8(fp)
 5094b44:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 5094b48:	01c07fc4 	movi	r7,511
 5094b4c:	01800044 	movi	r6,1
 5094b50:	e17fff17 	ldw	r5,-4(fp)
 5094b54:	01014274 	movhi	r4,1289
 5094b58:	211c2304 	addi	r4,r4,28812
 5094b5c:	5094a7c0 	call	5094a7c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 5094b60:	01c07fc4 	movi	r7,511
 5094b64:	000d883a 	mov	r6,zero
 5094b68:	e17ffe17 	ldw	r5,-8(fp)
 5094b6c:	01014274 	movhi	r4,1289
 5094b70:	211c2004 	addi	r4,r4,28800
 5094b74:	5094a7c0 	call	5094a7c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 5094b78:	01c07fc4 	movi	r7,511
 5094b7c:	01800044 	movi	r6,1
 5094b80:	e17ffd17 	ldw	r5,-12(fp)
 5094b84:	01014274 	movhi	r4,1289
 5094b88:	211c2604 	addi	r4,r4,28824
 5094b8c:	5094a7c0 	call	5094a7c <alt_open_fd>
}  
 5094b90:	0001883a 	nop
 5094b94:	e037883a 	mov	sp,fp
 5094b98:	dfc00117 	ldw	ra,4(sp)
 5094b9c:	df000017 	ldw	fp,0(sp)
 5094ba0:	dec00204 	addi	sp,sp,8
 5094ba4:	f800283a 	ret

05094ba8 <alt_get_errno>:
{
 5094ba8:	defffe04 	addi	sp,sp,-8
 5094bac:	dfc00115 	stw	ra,4(sp)
 5094bb0:	df000015 	stw	fp,0(sp)
 5094bb4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5094bb8:	d0a00917 	ldw	r2,-32732(gp)
 5094bbc:	10000326 	beq	r2,zero,5094bcc <alt_get_errno+0x24>
 5094bc0:	d0a00917 	ldw	r2,-32732(gp)
 5094bc4:	103ee83a 	callr	r2
 5094bc8:	00000106 	br	5094bd0 <alt_get_errno+0x28>
 5094bcc:	d0a70e04 	addi	r2,gp,-25544
}
 5094bd0:	e037883a 	mov	sp,fp
 5094bd4:	dfc00117 	ldw	ra,4(sp)
 5094bd8:	df000017 	ldw	fp,0(sp)
 5094bdc:	dec00204 	addi	sp,sp,8
 5094be0:	f800283a 	ret

05094be4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 5094be4:	defffd04 	addi	sp,sp,-12
 5094be8:	df000215 	stw	fp,8(sp)
 5094bec:	df000204 	addi	fp,sp,8
 5094bf0:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 5094bf4:	e0bffe17 	ldw	r2,-8(fp)
 5094bf8:	10800217 	ldw	r2,8(r2)
 5094bfc:	10d00034 	orhi	r3,r2,16384
 5094c00:	e0bffe17 	ldw	r2,-8(fp)
 5094c04:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 5094c08:	e03fff15 	stw	zero,-4(fp)
 5094c0c:	00001a06 	br	5094c78 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 5094c10:	e0bfff17 	ldw	r2,-4(fp)
 5094c14:	10c00324 	muli	r3,r2,12
 5094c18:	00814274 	movhi	r2,1289
 5094c1c:	1885883a 	add	r2,r3,r2
 5094c20:	10dc2017 	ldw	r3,28800(r2)
 5094c24:	e0bffe17 	ldw	r2,-8(fp)
 5094c28:	10800017 	ldw	r2,0(r2)
 5094c2c:	18800f1e 	bne	r3,r2,5094c6c <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 5094c30:	e0bfff17 	ldw	r2,-4(fp)
 5094c34:	10c00324 	muli	r3,r2,12
 5094c38:	00814274 	movhi	r2,1289
 5094c3c:	1885883a 	add	r2,r3,r2
 5094c40:	109c2217 	ldw	r2,28808(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
 5094c44:	1000090e 	bge	r2,zero,5094c6c <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
 5094c48:	e0bfff17 	ldw	r2,-4(fp)
 5094c4c:	10c00324 	muli	r3,r2,12
 5094c50:	00814274 	movhi	r2,1289
 5094c54:	109c2004 	addi	r2,r2,28800
 5094c58:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 5094c5c:	e0fffe17 	ldw	r3,-8(fp)
 5094c60:	18800226 	beq	r3,r2,5094c6c <alt_file_locked+0x88>
    {
      return -EACCES;
 5094c64:	00bffcc4 	movi	r2,-13
 5094c68:	00000806 	br	5094c8c <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
 5094c6c:	e0bfff17 	ldw	r2,-4(fp)
 5094c70:	10800044 	addi	r2,r2,1
 5094c74:	e0bfff15 	stw	r2,-4(fp)
 5094c78:	d0a00817 	ldw	r2,-32736(gp)
 5094c7c:	1007883a 	mov	r3,r2
 5094c80:	e0bfff17 	ldw	r2,-4(fp)
 5094c84:	18bfe22e 	bgeu	r3,r2,5094c10 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 5094c88:	0005883a 	mov	r2,zero
}
 5094c8c:	e037883a 	mov	sp,fp
 5094c90:	df000017 	ldw	fp,0(sp)
 5094c94:	dec00104 	addi	sp,sp,4
 5094c98:	f800283a 	ret

05094c9c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 5094c9c:	defff604 	addi	sp,sp,-40
 5094ca0:	dfc00915 	stw	ra,36(sp)
 5094ca4:	df000815 	stw	fp,32(sp)
 5094ca8:	df000804 	addi	fp,sp,32
 5094cac:	e13ffa15 	stw	r4,-24(fp)
 5094cb0:	e17ff915 	stw	r5,-28(fp)
 5094cb4:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 5094cb8:	00bfffc4 	movi	r2,-1
 5094cbc:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
 5094cc0:	00bffb44 	movi	r2,-19
 5094cc4:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
 5094cc8:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 5094ccc:	d1600604 	addi	r5,gp,-32744
 5094cd0:	e13ffa17 	ldw	r4,-24(fp)
 5094cd4:	5094fc00 	call	5094fc0 <alt_find_dev>
 5094cd8:	e0bfff15 	stw	r2,-4(fp)
 5094cdc:	e0bfff17 	ldw	r2,-4(fp)
 5094ce0:	1000051e 	bne	r2,zero,5094cf8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 5094ce4:	e13ffa17 	ldw	r4,-24(fp)
 5094ce8:	50950500 	call	5095050 <alt_find_file>
 5094cec:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
 5094cf0:	00800044 	movi	r2,1
 5094cf4:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 5094cf8:	e0bfff17 	ldw	r2,-4(fp)
 5094cfc:	10002926 	beq	r2,zero,5094da4 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 5094d00:	e13fff17 	ldw	r4,-4(fp)
 5094d04:	50951580 	call	5095158 <alt_get_fd>
 5094d08:	e0bffe15 	stw	r2,-8(fp)
 5094d0c:	e0bffe17 	ldw	r2,-8(fp)
 5094d10:	1000030e 	bge	r2,zero,5094d20 <open+0x84>
    {
      status = index;
 5094d14:	e0bffe17 	ldw	r2,-8(fp)
 5094d18:	e0bffd15 	stw	r2,-12(fp)
 5094d1c:	00002306 	br	5094dac <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 5094d20:	e0bffe17 	ldw	r2,-8(fp)
 5094d24:	10c00324 	muli	r3,r2,12
 5094d28:	00814274 	movhi	r2,1289
 5094d2c:	109c2004 	addi	r2,r2,28800
 5094d30:	1885883a 	add	r2,r3,r2
 5094d34:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 5094d38:	e0fff917 	ldw	r3,-28(fp)
 5094d3c:	00900034 	movhi	r2,16384
 5094d40:	10bfffc4 	addi	r2,r2,-1
 5094d44:	1886703a 	and	r3,r3,r2
 5094d48:	e0bffb17 	ldw	r2,-20(fp)
 5094d4c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 5094d50:	e0bffc17 	ldw	r2,-16(fp)
 5094d54:	1000051e 	bne	r2,zero,5094d6c <open+0xd0>
 5094d58:	e13ffb17 	ldw	r4,-20(fp)
 5094d5c:	5094be40 	call	5094be4 <alt_file_locked>
 5094d60:	e0bffd15 	stw	r2,-12(fp)
 5094d64:	e0bffd17 	ldw	r2,-12(fp)
 5094d68:	10001016 	blt	r2,zero,5094dac <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 5094d6c:	e0bfff17 	ldw	r2,-4(fp)
 5094d70:	10800317 	ldw	r2,12(r2)
 5094d74:	10000826 	beq	r2,zero,5094d98 <open+0xfc>
 5094d78:	e0bfff17 	ldw	r2,-4(fp)
 5094d7c:	10800317 	ldw	r2,12(r2)
 5094d80:	e1fff817 	ldw	r7,-32(fp)
 5094d84:	e1bff917 	ldw	r6,-28(fp)
 5094d88:	e17ffa17 	ldw	r5,-24(fp)
 5094d8c:	e13ffb17 	ldw	r4,-20(fp)
 5094d90:	103ee83a 	callr	r2
 5094d94:	00000106 	br	5094d9c <open+0x100>
 5094d98:	0005883a 	mov	r2,zero
 5094d9c:	e0bffd15 	stw	r2,-12(fp)
 5094da0:	00000206 	br	5094dac <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 5094da4:	00bffb44 	movi	r2,-19
 5094da8:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 5094dac:	e0bffd17 	ldw	r2,-12(fp)
 5094db0:	1000090e 	bge	r2,zero,5094dd8 <open+0x13c>
  {
    alt_release_fd (index);  
 5094db4:	e13ffe17 	ldw	r4,-8(fp)
 5094db8:	50934700 	call	5093470 <alt_release_fd>
    ALT_ERRNO = -status;
 5094dbc:	5094ba80 	call	5094ba8 <alt_get_errno>
 5094dc0:	1007883a 	mov	r3,r2
 5094dc4:	e0bffd17 	ldw	r2,-12(fp)
 5094dc8:	0085c83a 	sub	r2,zero,r2
 5094dcc:	18800015 	stw	r2,0(r3)
    return -1;
 5094dd0:	00bfffc4 	movi	r2,-1
 5094dd4:	00000106 	br	5094ddc <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 5094dd8:	e0bffe17 	ldw	r2,-8(fp)
}
 5094ddc:	e037883a 	mov	sp,fp
 5094de0:	dfc00117 	ldw	ra,4(sp)
 5094de4:	df000017 	ldw	fp,0(sp)
 5094de8:	dec00204 	addi	sp,sp,8
 5094dec:	f800283a 	ret

05094df0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 5094df0:	defffa04 	addi	sp,sp,-24
 5094df4:	df000515 	stw	fp,20(sp)
 5094df8:	df000504 	addi	fp,sp,20
 5094dfc:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
 5094e00:	0005303a 	rdctl	r2,status
 5094e04:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5094e08:	e0fffc17 	ldw	r3,-16(fp)
 5094e0c:	00bfff84 	movi	r2,-2
 5094e10:	1884703a 	and	r2,r3,r2
 5094e14:	1001703a 	wrctl	status,r2
  return context;
 5094e18:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 5094e1c:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
 5094e20:	e0bffb17 	ldw	r2,-20(fp)
 5094e24:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 5094e28:	e0bffd17 	ldw	r2,-12(fp)
 5094e2c:	10800017 	ldw	r2,0(r2)
 5094e30:	e0fffd17 	ldw	r3,-12(fp)
 5094e34:	18c00117 	ldw	r3,4(r3)
 5094e38:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 5094e3c:	e0bffd17 	ldw	r2,-12(fp)
 5094e40:	10800117 	ldw	r2,4(r2)
 5094e44:	e0fffd17 	ldw	r3,-12(fp)
 5094e48:	18c00017 	ldw	r3,0(r3)
 5094e4c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 5094e50:	e0bffd17 	ldw	r2,-12(fp)
 5094e54:	e0fffd17 	ldw	r3,-12(fp)
 5094e58:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 5094e5c:	e0bffd17 	ldw	r2,-12(fp)
 5094e60:	e0fffd17 	ldw	r3,-12(fp)
 5094e64:	10c00015 	stw	r3,0(r2)
} 
 5094e68:	0001883a 	nop
 5094e6c:	e0bfff17 	ldw	r2,-4(fp)
 5094e70:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
 5094e74:	e0bffe17 	ldw	r2,-8(fp)
 5094e78:	1001703a 	wrctl	status,r2
}
 5094e7c:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
 5094e80:	0001883a 	nop
 5094e84:	e037883a 	mov	sp,fp
 5094e88:	df000017 	ldw	fp,0(sp)
 5094e8c:	dec00104 	addi	sp,sp,4
 5094e90:	f800283a 	ret

05094e94 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 5094e94:	defffb04 	addi	sp,sp,-20
 5094e98:	dfc00415 	stw	ra,16(sp)
 5094e9c:	df000315 	stw	fp,12(sp)
 5094ea0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 5094ea4:	d0a00c17 	ldw	r2,-32720(gp)
 5094ea8:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 5094eac:	d0a71517 	ldw	r2,-25516(gp)
 5094eb0:	10800044 	addi	r2,r2,1
 5094eb4:	d0a71515 	stw	r2,-25516(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 5094eb8:	00002e06 	br	5094f74 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 5094ebc:	e0bfff17 	ldw	r2,-4(fp)
 5094ec0:	10800017 	ldw	r2,0(r2)
 5094ec4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 5094ec8:	e0bfff17 	ldw	r2,-4(fp)
 5094ecc:	10800403 	ldbu	r2,16(r2)
 5094ed0:	10803fcc 	andi	r2,r2,255
 5094ed4:	10000426 	beq	r2,zero,5094ee8 <alt_tick+0x54>
 5094ed8:	d0a71517 	ldw	r2,-25516(gp)
 5094edc:	1000021e 	bne	r2,zero,5094ee8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 5094ee0:	e0bfff17 	ldw	r2,-4(fp)
 5094ee4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 5094ee8:	e0bfff17 	ldw	r2,-4(fp)
 5094eec:	10800217 	ldw	r2,8(r2)
 5094ef0:	d0e71517 	ldw	r3,-25516(gp)
 5094ef4:	18801d36 	bltu	r3,r2,5094f6c <alt_tick+0xd8>
 5094ef8:	e0bfff17 	ldw	r2,-4(fp)
 5094efc:	10800403 	ldbu	r2,16(r2)
 5094f00:	10803fcc 	andi	r2,r2,255
 5094f04:	1000191e 	bne	r2,zero,5094f6c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 5094f08:	e0bfff17 	ldw	r2,-4(fp)
 5094f0c:	10800317 	ldw	r2,12(r2)
 5094f10:	e0ffff17 	ldw	r3,-4(fp)
 5094f14:	18c00517 	ldw	r3,20(r3)
 5094f18:	1809883a 	mov	r4,r3
 5094f1c:	103ee83a 	callr	r2
 5094f20:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 5094f24:	e0bffd17 	ldw	r2,-12(fp)
 5094f28:	1000031e 	bne	r2,zero,5094f38 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 5094f2c:	e13fff17 	ldw	r4,-4(fp)
 5094f30:	5094df00 	call	5094df0 <alt_alarm_stop>
 5094f34:	00000d06 	br	5094f6c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 5094f38:	e0bfff17 	ldw	r2,-4(fp)
 5094f3c:	10c00217 	ldw	r3,8(r2)
 5094f40:	e0bffd17 	ldw	r2,-12(fp)
 5094f44:	1887883a 	add	r3,r3,r2
 5094f48:	e0bfff17 	ldw	r2,-4(fp)
 5094f4c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 5094f50:	e0bfff17 	ldw	r2,-4(fp)
 5094f54:	10c00217 	ldw	r3,8(r2)
 5094f58:	d0a71517 	ldw	r2,-25516(gp)
 5094f5c:	1880032e 	bgeu	r3,r2,5094f6c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 5094f60:	e0bfff17 	ldw	r2,-4(fp)
 5094f64:	00c00044 	movi	r3,1
 5094f68:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 5094f6c:	e0bffe17 	ldw	r2,-8(fp)
 5094f70:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
 5094f74:	e0ffff17 	ldw	r3,-4(fp)
 5094f78:	d0a00c04 	addi	r2,gp,-32720
 5094f7c:	18bfcf1e 	bne	r3,r2,5094ebc <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 5094f80:	0001883a 	nop
}
 5094f84:	0001883a 	nop
 5094f88:	e037883a 	mov	sp,fp
 5094f8c:	dfc00117 	ldw	ra,4(sp)
 5094f90:	df000017 	ldw	fp,0(sp)
 5094f94:	dec00204 	addi	sp,sp,8
 5094f98:	f800283a 	ret

05094f9c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 5094f9c:	deffff04 	addi	sp,sp,-4
 5094fa0:	df000015 	stw	fp,0(sp)
 5094fa4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 5094fa8:	000170fa 	wrctl	ienable,zero
}
 5094fac:	0001883a 	nop
 5094fb0:	e037883a 	mov	sp,fp
 5094fb4:	df000017 	ldw	fp,0(sp)
 5094fb8:	dec00104 	addi	sp,sp,4
 5094fbc:	f800283a 	ret

05094fc0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 5094fc0:	defffa04 	addi	sp,sp,-24
 5094fc4:	dfc00515 	stw	ra,20(sp)
 5094fc8:	df000415 	stw	fp,16(sp)
 5094fcc:	df000404 	addi	fp,sp,16
 5094fd0:	e13ffd15 	stw	r4,-12(fp)
 5094fd4:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
 5094fd8:	e0bffc17 	ldw	r2,-16(fp)
 5094fdc:	10800017 	ldw	r2,0(r2)
 5094fe0:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 5094fe4:	e13ffd17 	ldw	r4,-12(fp)
 5094fe8:	5082abc0 	call	5082abc <strlen>
 5094fec:	10800044 	addi	r2,r2,1
 5094ff0:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 5094ff4:	00000d06 	br	509502c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 5094ff8:	e0bfff17 	ldw	r2,-4(fp)
 5094ffc:	10800217 	ldw	r2,8(r2)
 5095000:	e0fffe17 	ldw	r3,-8(fp)
 5095004:	180d883a 	mov	r6,r3
 5095008:	e17ffd17 	ldw	r5,-12(fp)
 509500c:	1009883a 	mov	r4,r2
 5095010:	50953680 	call	5095368 <memcmp>
 5095014:	1000021e 	bne	r2,zero,5095020 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 5095018:	e0bfff17 	ldw	r2,-4(fp)
 509501c:	00000706 	br	509503c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 5095020:	e0bfff17 	ldw	r2,-4(fp)
 5095024:	10800017 	ldw	r2,0(r2)
 5095028:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
 509502c:	e0ffff17 	ldw	r3,-4(fp)
 5095030:	e0bffc17 	ldw	r2,-16(fp)
 5095034:	18bff01e 	bne	r3,r2,5094ff8 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
 5095038:	0005883a 	mov	r2,zero
}
 509503c:	e037883a 	mov	sp,fp
 5095040:	dfc00117 	ldw	ra,4(sp)
 5095044:	df000017 	ldw	fp,0(sp)
 5095048:	dec00204 	addi	sp,sp,8
 509504c:	f800283a 	ret

05095050 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 5095050:	defffb04 	addi	sp,sp,-20
 5095054:	dfc00415 	stw	ra,16(sp)
 5095058:	df000315 	stw	fp,12(sp)
 509505c:	df000304 	addi	fp,sp,12
 5095060:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 5095064:	d0a00417 	ldw	r2,-32752(gp)
 5095068:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 509506c:	00003106 	br	5095134 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 5095070:	e0bfff17 	ldw	r2,-4(fp)
 5095074:	10800217 	ldw	r2,8(r2)
 5095078:	1009883a 	mov	r4,r2
 509507c:	5082abc0 	call	5082abc <strlen>
 5095080:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 5095084:	e0bfff17 	ldw	r2,-4(fp)
 5095088:	10c00217 	ldw	r3,8(r2)
 509508c:	e0bffe17 	ldw	r2,-8(fp)
 5095090:	10bfffc4 	addi	r2,r2,-1
 5095094:	1885883a 	add	r2,r3,r2
 5095098:	10800003 	ldbu	r2,0(r2)
 509509c:	10803fcc 	andi	r2,r2,255
 50950a0:	1080201c 	xori	r2,r2,128
 50950a4:	10bfe004 	addi	r2,r2,-128
 50950a8:	10800bd8 	cmpnei	r2,r2,47
 50950ac:	1000031e 	bne	r2,zero,50950bc <alt_find_file+0x6c>
    {
      len -= 1;
 50950b0:	e0bffe17 	ldw	r2,-8(fp)
 50950b4:	10bfffc4 	addi	r2,r2,-1
 50950b8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 50950bc:	e0bffe17 	ldw	r2,-8(fp)
 50950c0:	e0fffd17 	ldw	r3,-12(fp)
 50950c4:	1885883a 	add	r2,r3,r2
 50950c8:	10800003 	ldbu	r2,0(r2)
 50950cc:	10803fcc 	andi	r2,r2,255
 50950d0:	1080201c 	xori	r2,r2,128
 50950d4:	10bfe004 	addi	r2,r2,-128
 50950d8:	10800be0 	cmpeqi	r2,r2,47
 50950dc:	1000081e 	bne	r2,zero,5095100 <alt_find_file+0xb0>
 50950e0:	e0bffe17 	ldw	r2,-8(fp)
 50950e4:	e0fffd17 	ldw	r3,-12(fp)
 50950e8:	1885883a 	add	r2,r3,r2
 50950ec:	10800003 	ldbu	r2,0(r2)
 50950f0:	10803fcc 	andi	r2,r2,255
 50950f4:	1080201c 	xori	r2,r2,128
 50950f8:	10bfe004 	addi	r2,r2,-128
 50950fc:	10000a1e 	bne	r2,zero,5095128 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 5095100:	e0bfff17 	ldw	r2,-4(fp)
 5095104:	10800217 	ldw	r2,8(r2)
 5095108:	e0fffe17 	ldw	r3,-8(fp)
 509510c:	180d883a 	mov	r6,r3
 5095110:	e17ffd17 	ldw	r5,-12(fp)
 5095114:	1009883a 	mov	r4,r2
 5095118:	50953680 	call	5095368 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
 509511c:	1000021e 	bne	r2,zero,5095128 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
 5095120:	e0bfff17 	ldw	r2,-4(fp)
 5095124:	00000706 	br	5095144 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 5095128:	e0bfff17 	ldw	r2,-4(fp)
 509512c:	10800017 	ldw	r2,0(r2)
 5095130:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
 5095134:	e0ffff17 	ldw	r3,-4(fp)
 5095138:	d0a00404 	addi	r2,gp,-32752
 509513c:	18bfcc1e 	bne	r3,r2,5095070 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
 5095140:	0005883a 	mov	r2,zero
}
 5095144:	e037883a 	mov	sp,fp
 5095148:	dfc00117 	ldw	ra,4(sp)
 509514c:	df000017 	ldw	fp,0(sp)
 5095150:	dec00204 	addi	sp,sp,8
 5095154:	f800283a 	ret

05095158 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 5095158:	defffc04 	addi	sp,sp,-16
 509515c:	df000315 	stw	fp,12(sp)
 5095160:	df000304 	addi	fp,sp,12
 5095164:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
 5095168:	00bffa04 	movi	r2,-24
 509516c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 5095170:	e03fff15 	stw	zero,-4(fp)
 5095174:	00001706 	br	50951d4 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
 5095178:	e0bfff17 	ldw	r2,-4(fp)
 509517c:	10c00324 	muli	r3,r2,12
 5095180:	00814274 	movhi	r2,1289
 5095184:	1885883a 	add	r2,r3,r2
 5095188:	109c2017 	ldw	r2,28800(r2)
 509518c:	10000e1e 	bne	r2,zero,50951c8 <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
 5095190:	e0bfff17 	ldw	r2,-4(fp)
 5095194:	11000324 	muli	r4,r2,12
 5095198:	e0fffd17 	ldw	r3,-12(fp)
 509519c:	00814274 	movhi	r2,1289
 50951a0:	2085883a 	add	r2,r4,r2
 50951a4:	10dc2015 	stw	r3,28800(r2)
      if (i > alt_max_fd)
 50951a8:	d0e00817 	ldw	r3,-32736(gp)
 50951ac:	e0bfff17 	ldw	r2,-4(fp)
 50951b0:	1880020e 	bge	r3,r2,50951bc <alt_get_fd+0x64>
      {
        alt_max_fd = i;
 50951b4:	e0bfff17 	ldw	r2,-4(fp)
 50951b8:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
 50951bc:	e0bfff17 	ldw	r2,-4(fp)
 50951c0:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 50951c4:	00000706 	br	50951e4 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
 50951c8:	e0bfff17 	ldw	r2,-4(fp)
 50951cc:	10800044 	addi	r2,r2,1
 50951d0:	e0bfff15 	stw	r2,-4(fp)
 50951d4:	e0bfff17 	ldw	r2,-4(fp)
 50951d8:	10800810 	cmplti	r2,r2,32
 50951dc:	103fe61e 	bne	r2,zero,5095178 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
 50951e0:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 50951e4:	e0bffe17 	ldw	r2,-8(fp)
}
 50951e8:	e037883a 	mov	sp,fp
 50951ec:	df000017 	ldw	fp,0(sp)
 50951f0:	dec00104 	addi	sp,sp,4
 50951f4:	f800283a 	ret

050951f8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 50951f8:	defffb04 	addi	sp,sp,-20
 50951fc:	df000415 	stw	fp,16(sp)
 5095200:	df000404 	addi	fp,sp,16
 5095204:	e13ffd15 	stw	r4,-12(fp)
 5095208:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 509520c:	e0bffc17 	ldw	r2,-16(fp)
 5095210:	10840070 	cmpltui	r2,r2,4097
 5095214:	1000021e 	bne	r2,zero,5095220 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 5095218:	00840004 	movi	r2,4096
 509521c:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
 5095220:	e0fffd17 	ldw	r3,-12(fp)
 5095224:	e0bffc17 	ldw	r2,-16(fp)
 5095228:	1885883a 	add	r2,r3,r2
 509522c:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 5095230:	e0bffd17 	ldw	r2,-12(fp)
 5095234:	e0bfff15 	stw	r2,-4(fp)
 5095238:	00000506 	br	5095250 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 509523c:	e0bfff17 	ldw	r2,-4(fp)
 5095240:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 5095244:	e0bfff17 	ldw	r2,-4(fp)
 5095248:	10800804 	addi	r2,r2,32
 509524c:	e0bfff15 	stw	r2,-4(fp)
 5095250:	e0ffff17 	ldw	r3,-4(fp)
 5095254:	e0bffe17 	ldw	r2,-8(fp)
 5095258:	18bff836 	bltu	r3,r2,509523c <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 509525c:	e0bffd17 	ldw	r2,-12(fp)
 5095260:	108007cc 	andi	r2,r2,31
 5095264:	10000226 	beq	r2,zero,5095270 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 5095268:	e0bfff17 	ldw	r2,-4(fp)
 509526c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 5095270:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 5095274:	0001883a 	nop
 5095278:	e037883a 	mov	sp,fp
 509527c:	df000017 	ldw	fp,0(sp)
 5095280:	dec00104 	addi	sp,sp,4
 5095284:	f800283a 	ret

05095288 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 5095288:	defffe04 	addi	sp,sp,-8
 509528c:	df000115 	stw	fp,4(sp)
 5095290:	df000104 	addi	fp,sp,4
 5095294:	e13fff15 	stw	r4,-4(fp)
 5095298:	e0bfff17 	ldw	r2,-4(fp)
 509529c:	10bffe84 	addi	r2,r2,-6
 50952a0:	10c00428 	cmpgeui	r3,r2,16
 50952a4:	1800191e 	bne	r3,zero,509530c <alt_exception_cause_generated_bad_addr+0x84>
 50952a8:	100690ba 	slli	r3,r2,2
 50952ac:	00814274 	movhi	r2,1289
 50952b0:	1885883a 	add	r2,r3,r2
 50952b4:	1094af17 	ldw	r2,21180(r2)
 50952b8:	1000683a 	jmp	r2
 50952bc:	050952fc 	xorhi	r20,zero,9547
 50952c0:	050952fc 	xorhi	r20,zero,9547
 50952c4:	0509530c 	andi	r20,zero,9548
 50952c8:	0509530c 	andi	r20,zero,9548
 50952cc:	0509530c 	andi	r20,zero,9548
 50952d0:	050952fc 	xorhi	r20,zero,9547
 50952d4:	05095304 	movi	r20,9548
 50952d8:	0509530c 	andi	r20,zero,9548
 50952dc:	050952fc 	xorhi	r20,zero,9547
 50952e0:	050952fc 	xorhi	r20,zero,9547
 50952e4:	0509530c 	andi	r20,zero,9548
 50952e8:	050952fc 	xorhi	r20,zero,9547
 50952ec:	05095304 	movi	r20,9548
 50952f0:	0509530c 	andi	r20,zero,9548
 50952f4:	0509530c 	andi	r20,zero,9548
 50952f8:	050952fc 	xorhi	r20,zero,9547
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 50952fc:	00800044 	movi	r2,1
 5095300:	00000306 	br	5095310 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 5095304:	0005883a 	mov	r2,zero
 5095308:	00000106 	br	5095310 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
 509530c:	0005883a 	mov	r2,zero
  }
}
 5095310:	e037883a 	mov	sp,fp
 5095314:	df000017 	ldw	fp,0(sp)
 5095318:	dec00104 	addi	sp,sp,4
 509531c:	f800283a 	ret

05095320 <atexit>:
 5095320:	200b883a 	mov	r5,r4
 5095324:	000f883a 	mov	r7,zero
 5095328:	000d883a 	mov	r6,zero
 509532c:	0009883a 	mov	r4,zero
 5095330:	50953e01 	jmpi	50953e0 <__register_exitproc>

05095334 <exit>:
 5095334:	defffe04 	addi	sp,sp,-8
 5095338:	000b883a 	mov	r5,zero
 509533c:	dc000015 	stw	r16,0(sp)
 5095340:	dfc00115 	stw	ra,4(sp)
 5095344:	2021883a 	mov	r16,r4
 5095348:	50954700 	call	5095470 <__call_exitprocs>
 509534c:	008142b4 	movhi	r2,1290
 5095350:	11209817 	ldw	r4,-32160(r2)
 5095354:	20800f17 	ldw	r2,60(r4)
 5095358:	10000126 	beq	r2,zero,5095360 <exit+0x2c>
 509535c:	103ee83a 	callr	r2
 5095360:	8009883a 	mov	r4,r16
 5095364:	5092b6c0 	call	5092b6c <_exit>

05095368 <memcmp>:
 5095368:	30800130 	cmpltui	r2,r6,4
 509536c:	10000b1e 	bne	r2,zero,509539c <memcmp+0x34>
 5095370:	2144b03a 	or	r2,r4,r5
 5095374:	108000cc 	andi	r2,r2,3
 5095378:	1000171e 	bne	r2,zero,50953d8 <memcmp+0x70>
 509537c:	20c00017 	ldw	r3,0(r4)
 5095380:	28800017 	ldw	r2,0(r5)
 5095384:	1880141e 	bne	r3,r2,50953d8 <memcmp+0x70>
 5095388:	31bfff04 	addi	r6,r6,-4
 509538c:	30800128 	cmpgeui	r2,r6,4
 5095390:	21000104 	addi	r4,r4,4
 5095394:	29400104 	addi	r5,r5,4
 5095398:	103ff81e 	bne	r2,zero,509537c <memcmp+0x14>
 509539c:	30bfffc4 	addi	r2,r6,-1
 50953a0:	30000b26 	beq	r6,zero,50953d0 <memcmp+0x68>
 50953a4:	11800044 	addi	r6,r2,1
 50953a8:	218d883a 	add	r6,r4,r6
 50953ac:	00000106 	br	50953b4 <memcmp+0x4c>
 50953b0:	21800726 	beq	r4,r6,50953d0 <memcmp+0x68>
 50953b4:	20800003 	ldbu	r2,0(r4)
 50953b8:	28c00003 	ldbu	r3,0(r5)
 50953bc:	21000044 	addi	r4,r4,1
 50953c0:	29400044 	addi	r5,r5,1
 50953c4:	10fffa26 	beq	r2,r3,50953b0 <memcmp+0x48>
 50953c8:	10c5c83a 	sub	r2,r2,r3
 50953cc:	f800283a 	ret
 50953d0:	0005883a 	mov	r2,zero
 50953d4:	f800283a 	ret
 50953d8:	30bfffc4 	addi	r2,r6,-1
 50953dc:	003ff106 	br	50953a4 <memcmp+0x3c>

050953e0 <__register_exitproc>:
 50953e0:	008142b4 	movhi	r2,1290
 50953e4:	10e09817 	ldw	r3,-32160(r2)
 50953e8:	18805217 	ldw	r2,328(r3)
 50953ec:	10001726 	beq	r2,zero,509544c <__register_exitproc+0x6c>
 50953f0:	10c00117 	ldw	r3,4(r2)
 50953f4:	1a000808 	cmpgei	r8,r3,32
 50953f8:	40001b1e 	bne	r8,zero,5095468 <__register_exitproc+0x88>
 50953fc:	20000b26 	beq	r4,zero,509542c <__register_exitproc+0x4c>
 5095400:	181090ba 	slli	r8,r3,2
 5095404:	02400044 	movi	r9,1
 5095408:	48d2983a 	sll	r9,r9,r3
 509540c:	1211883a 	add	r8,r2,r8
 5095410:	41802215 	stw	r6,136(r8)
 5095414:	11806217 	ldw	r6,392(r2)
 5095418:	21000098 	cmpnei	r4,r4,2
 509541c:	324cb03a 	or	r6,r6,r9
 5095420:	11806215 	stw	r6,392(r2)
 5095424:	41c04215 	stw	r7,264(r8)
 5095428:	20000b26 	beq	r4,zero,5095458 <__register_exitproc+0x78>
 509542c:	19000084 	addi	r4,r3,2
 5095430:	200890ba 	slli	r4,r4,2
 5095434:	18c00044 	addi	r3,r3,1
 5095438:	10c00115 	stw	r3,4(r2)
 509543c:	1105883a 	add	r2,r2,r4
 5095440:	11400015 	stw	r5,0(r2)
 5095444:	0005883a 	mov	r2,zero
 5095448:	f800283a 	ret
 509544c:	18805304 	addi	r2,r3,332
 5095450:	18805215 	stw	r2,328(r3)
 5095454:	003fe606 	br	50953f0 <__register_exitproc+0x10>
 5095458:	11006317 	ldw	r4,396(r2)
 509545c:	2252b03a 	or	r9,r4,r9
 5095460:	12406315 	stw	r9,396(r2)
 5095464:	003ff106 	br	509542c <__register_exitproc+0x4c>
 5095468:	00bfffc4 	movi	r2,-1
 509546c:	f800283a 	ret

05095470 <__call_exitprocs>:
 5095470:	defff704 	addi	sp,sp,-36
 5095474:	008142b4 	movhi	r2,1290
 5095478:	dcc00315 	stw	r19,12(sp)
 509547c:	14e09817 	ldw	r19,-32160(r2)
 5095480:	dc800215 	stw	r18,8(sp)
 5095484:	dfc00815 	stw	ra,32(sp)
 5095488:	9c805217 	ldw	r18,328(r19)
 509548c:	ddc00715 	stw	r23,28(sp)
 5095490:	dd800615 	stw	r22,24(sp)
 5095494:	dd400515 	stw	r21,20(sp)
 5095498:	dd000415 	stw	r20,16(sp)
 509549c:	dc400115 	stw	r17,4(sp)
 50954a0:	dc000015 	stw	r16,0(sp)
 50954a4:	90001026 	beq	r18,zero,50954e8 <__call_exitprocs+0x78>
 50954a8:	202b883a 	mov	r21,r4
 50954ac:	282d883a 	mov	r22,r5
 50954b0:	05000044 	movi	r20,1
 50954b4:	94000117 	ldw	r16,4(r18)
 50954b8:	847fffc4 	addi	r17,r16,-1
 50954bc:	88000a16 	blt	r17,zero,50954e8 <__call_exitprocs+0x78>
 50954c0:	84000044 	addi	r16,r16,1
 50954c4:	802090ba 	slli	r16,r16,2
 50954c8:	9421883a 	add	r16,r18,r16
 50954cc:	b0001126 	beq	r22,zero,5095514 <__call_exitprocs+0xa4>
 50954d0:	80804017 	ldw	r2,256(r16)
 50954d4:	15800f26 	beq	r2,r22,5095514 <__call_exitprocs+0xa4>
 50954d8:	8c7fffc4 	addi	r17,r17,-1
 50954dc:	88bfffd8 	cmpnei	r2,r17,-1
 50954e0:	843fff04 	addi	r16,r16,-4
 50954e4:	103ff91e 	bne	r2,zero,50954cc <__call_exitprocs+0x5c>
 50954e8:	dfc00817 	ldw	ra,32(sp)
 50954ec:	ddc00717 	ldw	r23,28(sp)
 50954f0:	dd800617 	ldw	r22,24(sp)
 50954f4:	dd400517 	ldw	r21,20(sp)
 50954f8:	dd000417 	ldw	r20,16(sp)
 50954fc:	dcc00317 	ldw	r19,12(sp)
 5095500:	dc800217 	ldw	r18,8(sp)
 5095504:	dc400117 	ldw	r17,4(sp)
 5095508:	dc000017 	ldw	r16,0(sp)
 509550c:	dec00904 	addi	sp,sp,36
 5095510:	f800283a 	ret
 5095514:	90800117 	ldw	r2,4(r18)
 5095518:	81800017 	ldw	r6,0(r16)
 509551c:	10bfffc4 	addi	r2,r2,-1
 5095520:	14401726 	beq	r2,r17,5095580 <__call_exitprocs+0x110>
 5095524:	80000015 	stw	zero,0(r16)
 5095528:	303feb26 	beq	r6,zero,50954d8 <__call_exitprocs+0x68>
 509552c:	a446983a 	sll	r3,r20,r17
 5095530:	90806217 	ldw	r2,392(r18)
 5095534:	95c00117 	ldw	r23,4(r18)
 5095538:	1884703a 	and	r2,r3,r2
 509553c:	1000081e 	bne	r2,zero,5095560 <__call_exitprocs+0xf0>
 5095540:	303ee83a 	callr	r6
 5095544:	90c00117 	ldw	r3,4(r18)
 5095548:	98805217 	ldw	r2,328(r19)
 509554c:	1dc0011e 	bne	r3,r23,5095554 <__call_exitprocs+0xe4>
 5095550:	90bfe126 	beq	r18,r2,50954d8 <__call_exitprocs+0x68>
 5095554:	103fe426 	beq	r2,zero,50954e8 <__call_exitprocs+0x78>
 5095558:	1025883a 	mov	r18,r2
 509555c:	003fd506 	br	50954b4 <__call_exitprocs+0x44>
 5095560:	90806317 	ldw	r2,396(r18)
 5095564:	81002017 	ldw	r4,128(r16)
 5095568:	1886703a 	and	r3,r3,r2
 509556c:	1800061e 	bne	r3,zero,5095588 <__call_exitprocs+0x118>
 5095570:	200b883a 	mov	r5,r4
 5095574:	a809883a 	mov	r4,r21
 5095578:	303ee83a 	callr	r6
 509557c:	003ff106 	br	5095544 <__call_exitprocs+0xd4>
 5095580:	94400115 	stw	r17,4(r18)
 5095584:	003fe806 	br	5095528 <__call_exitprocs+0xb8>
 5095588:	303ee83a 	callr	r6
 509558c:	003fed06 	br	5095544 <__call_exitprocs+0xd4>
