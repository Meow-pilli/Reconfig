
DE1_SoC_ADC.elf:     file format elf32-littlenios2
DE1_SoC_ADC.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040238

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x000102f0 memsz 0x000102f0 flags r-x
    LOAD off    0x00011310 vaddr 0x00050310 paddr 0x00051ee8 align 2**12
         filesz 0x00001bd8 memsz 0x00001bd8 flags rw-
    LOAD off    0x00013ac0 vaddr 0x00053ac0 paddr 0x00053ac0 align 2**12
         filesz 0x00000000 memsz 0x00000158 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fa48  00040238  00040238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000690  0004fc80  0004fc80  00010c80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bd8  00050310  00051ee8  00011310  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000158  00053ac0  00053ac0  00013ac0  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  00053c18  00053c18  00012ee8  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  00012ee8  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000010c0  00000000  00000000  00012f18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0002de97  00000000  00000000  00013fd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000b721  00000000  00000000  00041e6f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00016fc8  00000000  00000000  0004d590  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00002494  00000000  00000000  00064558  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    00003dda  00000000  00000000  000669ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0001e497  00000000  00000000  0006a7c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000060  00000000  00000000  00088c60  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00002578  00000000  00000000  00088cc0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  0008e5d4  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0008e5d7  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0008e5e3  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0008e5e4  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0008e5e5  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0008e5e9  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0008e5ed  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0008e5f1  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0008e5fa  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0008e603  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000c  00000000  00000000  0008e60c  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000000e  00000000  00000000  0008e618  2**0
                  CONTENTS, READONLY
 29 .jdi          00005262  00000000  00000000  0008e626  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040238 l    d  .text	00000000 .text
0004fc80 l    d  .rodata	00000000 .rodata
00050310 l    d  .rwdata	00000000 .rwdata
00053ac0 l    d  .bss	00000000 .bss
00053c18 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 e:/DE1_SoC_ADC/software/DE1_SoC_ADC_bsp//obj/HAL/src/crt0.o
00040280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00043350 l     F .text	000000c0 __sbprintf
0004fe20 l     O .rodata	00000010 blanks.1
0004fe10 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00043574 l     F .text	000001fc quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000451c4 l     F .text	00000008 __fp_lock
000451d8 l     F .text	00000008 __fp_unlock
000451e0 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00050310 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0004fecc l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
00048600 l     F .text	000000f4 __sprint_r.part.0
00049a5c l     F .text	000000c0 __sbprintf
00050000 l     O .rodata	00000010 blanks.1
0004fff0 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00049d04 l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0004d3bc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004d4c8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004d52c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0004d638 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0004d718 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004d880 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004d96c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004db40 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00051ed8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0004ddb8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004deec l     F .text	00000034 alt_dev_reg
00050e50 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004e1cc l     F .text	0000020c altera_avalon_jtag_uart_irq
0004e3d8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0004ecf4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0004f16c l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0004f298 l     F .text	0000003c alt_get_errno
0004f2d4 l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00053aec g     O .bss	00000004 alt_instruction_exception_handler
00047db8 g     F .text	00000070 _mprec_log10
00047ea4 g     F .text	00000060 __any_on
0004a15c g     F .text	00000058 _isatty_r
0004fed8 g     O .rodata	00000028 __mprec_tinytens
0004da7c g     F .text	0000007c alt_main
000410cc g     F .text	000000cc _puts_r
00053b18 g     O .bss	00000100 alt_irq
0004a2a8 g     F .text	00000064 _lseek_r
00051ee8 g       *ABS*	00000000 __flash_rwdata_start
0004c028 g     F .text	00000080 .hidden __eqdf2
00053c18 g       *ABS*	00000000 __alt_heap_start
0004ac10 g     F .text	00000060 _kill_r
00041094 g     F .text	00000038 printf
0004a5dc g     F .text	0000006c _wcrtomb_r
0004a780 g     F .text	00000098 _signal_r
0004859c g     F .text	0000005c __sseek
00045518 g     F .text	00000010 __sinit
0004a47c g     F .text	00000148 __swbuf_r
0004a1b4 g     F .text	00000074 _setlocale_r
00045348 g     F .text	00000068 __sfmoreglue
0004db1c g     F .text	00000024 __malloc_unlock
00046b88 g     F .text	0000012c memmove
00045504 g     F .text	00000014 _cleanup
00046da4 g     F .text	000000a4 _Balloc
0004c0a8 g     F .text	000000e8 .hidden __gtdf2
0004f68c g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000001c __reset
00045f70 g     F .text	00000008 __localeconv_l
00040020 g       *ABS*	00000000 __flash_exceptions_start
0004a0fc g     F .text	00000060 _fstat_r
00053acc g     O .bss	00000004 errno
00048514 g     F .text	00000008 __seofread
00053ad8 g     O .bss	00000004 alt_argv
00059eb0 g       *ABS*	00000000 _gp
0004dd88 g     F .text	00000030 usleep
0004d618 g     F .text	00000020 getpid
00050cd0 g     O .rwdata	00000180 alt_fd_list
0004f6b0 g     F .text	00000090 alt_find_dev
00046a88 g     F .text	00000100 memcpy
000451cc g     F .text	0000000c _cleanup_r
0004d274 g     F .text	000000b8 .hidden __floatsidf
0004f21c g     F .text	0000007c alt_io_redirect
0004c190 g     F .text	000000e8 .hidden __ltdf2
0004fc80 g       *ABS*	00000000 __DTOR_END__
00041198 g     F .text	00000010 puts
0004f978 g     F .text	00000098 alt_exception_cause_generated_bad_addr
00047d10 g     F .text	000000a8 __ratio
00049a40 g     F .text	0000001c __vfiprintf_internal
0004e5d4 g     F .text	00000220 altera_avalon_jtag_uart_read
00041064 g     F .text	00000030 _printf_r
00040fa4 g     F .text	00000064 .hidden __udivsi3
0004d674 g     F .text	000000a4 isatty
0004a818 g     F .text	000000c4 _raise_r
00049bd8 g     F .text	00000064 __assert_func
0004ff28 g     O .rodata	000000c8 __mprec_tens
0004f8e8 g     F .text	00000090 alt_icache_flush
00053ac8 g     O .bss	00000004 __malloc_top_pad
0004ac70 g     F .text	00000004 _getpid_r
00045f78 g     F .text	0000000c _localeconv_r
000471f0 g     F .text	000000b0 __i2b
00045978 g     F .text	000004b8 __sfvwrite_r
0004a8dc g     F .text	000000bc __sigtramp_r
00048468 g     F .text	00000058 _sbrk_r
0004a35c g     F .text	00000064 _read_r
00051ed0 g     O .rwdata	00000004 alt_max_fd
00049dc4 g     F .text	00000070 _fclose_r
00045140 g     F .text	00000084 fflush
00053ac4 g     O .bss	00000004 __malloc_max_sbrked_mem
00040d60 g     F .text	000000fc .hidden __extendsfdf2
0004b738 g     F .text	000008f0 .hidden __adddf3
00047aa4 g     F .text	00000108 __b2d
0004b204 g     F .text	00000534 .hidden __umoddi3
0004d9a8 g     F .text	000000d4 lseek
00051eb0 g     O .rwdata	00000004 _global_impure_ptr
00047f04 g     F .text	00000564 _realloc_r
00053c18 g       *ABS*	00000000 __bss_end
0004f084 g     F .text	000000e8 alt_iic_isr_register
0004f584 g     F .text	00000108 alt_tick
0004ac74 g     F .text	00000590 .hidden __udivdi3
0004a060 g     F .text	00000024 _fputwc_r
0004ff00 g     O .rodata	00000028 __mprec_bigtens
00046fa4 g     F .text	00000138 __s2b
0004a70c g     F .text	00000018 abort
0004d32c g     F .text	00000090 .hidden __floatunsidf
000477c4 g     F .text	00000058 __mcmp
00045538 g     F .text	00000014 __fp_lock_all
0004f038 g     F .text	0000004c alt_ic_irq_enabled
0004f4e0 g     F .text	000000a4 alt_alarm_stop
00053ae0 g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000c8 alt_irq_handler
00050ca8 g     O .rwdata	00000028 alt_dev_null
0004eca8 g     F .text	0000004c alt_dcache_flush_all
000470dc g     F .text	00000064 __hi0bits
0004d1f4 g     F .text	00000080 .hidden __fixdfsi
00051ee8 g       *ABS*	00000000 __ram_rwdata_end
00051ec8 g     O .rwdata	00000008 alt_dev_list
0004ddf4 g     F .text	000000f8 write
00050310 g       *ABS*	00000000 __ram_rodata_end
0004d568 g     F .text	000000b0 fstat
0004d754 g     F .text	0000012c kill
0004c190 g     F .text	000000e8 .hidden __ledf2
000474f4 g     F .text	00000148 __pow5mult
0004870c g     F .text	00001334 ___vfiprintf_internal_r
00041008 g     F .text	0000005c .hidden __umodsi3
00053c18 g       *ABS*	00000000 end
0004e10c g     F .text	000000c0 altera_avalon_jtag_uart_init
000401c4 g     F .exceptions	00000074 alt_instruction_exception_entry
0004fc80 g       *ABS*	00000000 __CTOR_LIST__
00067100 g       *ABS*	00000000 __alt_stack_pointer
00040e5c g     F .text	00000054 .hidden __clzsi2
0004e7f4 g     F .text	00000228 altera_avalon_jtag_uart_write
00045528 g     F .text	00000004 __sfp_lock_acquire
000469b8 g     F .text	000000d0 memchr
00041240 g     F .text	000020f4 ___vfprintf_internal_r
0004567c g     F .text	000002fc _free_r
00050164 g     O .rodata	00000180 _ctype_b
0004a228 g     F .text	0000000c __locale_mb_cur_max
0004fb60 g     F .text	00000120 __call_exitprocs
00051eb8 g     O .rwdata	00000004 __malloc_sbrk_base
00040238 g     F .text	0000004c _start
00053ae4 g     O .bss	00000004 _alt_tick_rate
0004763c g     F .text	00000188 __lshift
00053ae8 g     O .bss	00000004 _alt_nticks
0004aa54 g     F .text	000000a0 signal
0004db7c g     F .text	000000fc read
0004df5c g     F .text	0000004c alt_sys_init
000403e0 g     F .text	00000124 .hidden __floatsisf
0004fad0 g     F .text	00000090 __register_exitproc
000472a0 g     F .text	00000254 __multiply
0004e478 g     F .text	00000068 altera_avalon_jtag_uart_close
00050310 g       *ABS*	00000000 __ram_rwdata_start
0004fc80 g       *ABS*	00000000 __ram_rodata_start
00053af0 g     O .bss	00000028 __malloc_current_mallinfo
00047bac g     F .text	00000164 __d2b
0004dfa8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0004f848 g     F .text	000000a0 alt_get_fd
0004eb50 g     F .text	00000158 alt_busy_sleep
00049b80 g     F .text	00000058 _close_r
0004fa58 g     F .text	00000078 memcmp
0004e068 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00053c18 g       *ABS*	00000000 __alt_stack_base
0004e0b8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00043410 g     F .text	00000164 __swsetup_r
00040504 g     F .text	0000085c .hidden __divdf3
000453b0 g     F .text	00000154 __sfp
00047e28 g     F .text	0000007c __copybits
00050734 g     O .rwdata	00000408 __malloc_av_
00045534 g     F .text	00000004 __sinit_lock_release
0004c278 g     F .text	00000674 .hidden __muldf3
000484c0 g     F .text	00000054 __sread
0004f740 g     F .text	00000108 alt_find_file
0004ed30 g     F .text	000000a8 alt_dev_llist_insert
0004daf8 g     F .text	00000024 __malloc_lock
0004dcd0 g     F .text	000000b8 sbrk
000450e0 g     F .text	00000060 _fflush_r
00049c50 g     F .text	000000b4 _calloc_r
00053ac0 g       *ABS*	00000000 __bss_start
00046cb4 g     F .text	000000f0 memset
00040284 g     F .text	0000015c main
00053adc g     O .bss	00000004 alt_envp
00053ac0 g     O .bss	00000004 __malloc_max_total_mem
0004e008 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004a5c4 g     F .text	00000018 __swbuf
000485f8 g     F .text	00000008 __sclose
00067100 g       *ABS*	00000000 __alt_heap_limit
00049e34 g     F .text	00000070 fclose
00043770 g     F .text	00001748 _dtoa_r
000461d8 g     F .text	000007e0 _malloc_r
0004a6dc g     F .text	00000030 __ascii_wctomb
00051ed4 g     O .rwdata	00000004 alt_errno
00049ea4 g     F .text	00000020 _fiprintf_r
0004aaf4 g     F .text	00000060 _init_signal
00045e30 g     F .text	00000098 _fwalk
0004a30c g     F .text	0000000c _mbtowc_r
00040eb0 g     F .text	00000080 .hidden __divsi3
00045560 g     F .text	0000011c _malloc_trim_r
0004fc80 g       *ABS*	00000000 __CTOR_END__
0004a3c0 g     F .text	000000b8 strcmp
0004fc80 g       *ABS*	00000000 __flash_rodata_start
0004fc80 g       *ABS*	00000000 __DTOR_LIST__
0004c028 g     F .text	00000080 .hidden __nedf2
0004df20 g     F .text	0000003c alt_irq_init
0004dc78 g     F .text	00000058 alt_release_fd
0004fcc8 g     O .rodata	00000100 .hidden __clz_tab
00053ad0 g     O .bss	00000004 _PathLocale
0004fa10 g     F .text	00000014 atexit
00049b1c g     F .text	00000064 _write_r
0004a234 g     F .text	00000074 setlocale
00051eb4 g     O .rwdata	00000004 _impure_ptr
00053ad4 g     O .bss	00000004 alt_argc
00044eb8 g     F .text	00000228 __sflush_r
0004ee3c g     F .text	00000064 _do_dtors
00040020 g       .exceptions	00000000 alt_irq_entry
0004a318 g     F .text	00000044 __ascii_mbtowc
00047a48 g     F .text	0000005c __ulp
0004554c g     F .text	00000014 __fp_unlock_all
00051ec0 g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
00045f84 g     F .text	0000000c localeconv
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2
00046140 g     F .text	00000098 __swhatbuf_r
0004eed4 g     F .text	00000050 alt_ic_isr_register
00051ee8 g       *ABS*	00000000 _edata
00053c18 g       *ABS*	00000000 _end
00049efc g     F .text	00000164 __fputwc
00040238 g       *ABS*	00000000 __ram_exceptions_end
0004e4e0 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0004efac g     F .text	0000008c alt_ic_irq_disable
0004851c g     F .text	00000080 __swrite
00051ebc g     O .rwdata	00000004 __malloc_trim_threshold
0004fa24 g     F .text	00000034 exit
00049ec4 g     F .text	00000038 fiprintf
0004a478 g     F .text	00000004 _vfiprintf_r
00045ec8 g     F .text	000000a8 _fwalk_reent
0004781c g     F .text	0000022c __mdiff
00040f30 g     F .text	00000074 .hidden __modsi3
00067100 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
0004552c g     F .text	00000004 __sfp_lock_release
00050060 g     O .rodata	00000101 _ctype_
0004d1a0 g     F .text	00000054 .hidden __unorddf2
0004d4f4 g     F .text	00000038 _exit
0004ea1c g     F .text	00000134 alt_alarm_start
00045f90 g     F .text	000001b0 __smakebuf_r
000411a8 g     F .text	00000098 strlen
0004a724 g     F .text	0000005c _init_signal_r
0004f38c g     F .text	00000154 open
0004c0a8 g     F .text	000000e8 .hidden __gedf2
00049c3c g     F .text	00000014 __assert
000486f4 g     F .text	00000018 __sprint_r
0004eea0 g     F .text	00000034 alt_icache_flush_all
00051edc g     O .rwdata	00000004 alt_priority_mask
0004ef24 g     F .text	00000088 alt_ic_irq_enable
00043334 g     F .text	0000001c __vfprintf_internal
0004a6d0 g     F .text	0000000c _wctomb_r
0004c8ec g     F .text	000008b4 .hidden __subdf3
00047140 g     F .text	000000b0 __lo0bits
00051ee0 g     O .rwdata	00000008 alt_alarm_list
0004edd8 g     F .text	00000064 _do_ctors
0004ab54 g     F .text	000000bc __sigtramp
0004a648 g     F .text	00000088 wcrtomb
0004d3f8 g     F .text	000000d0 close
00050b3c g     O .rwdata	0000016c __global_locale
0004d8e8 g     F .text	00000084 alt_load
0004a084 g     F .text	00000078 fputwc
0004a998 g     F .text	000000bc raise
00045530 g     F .text	00000004 __sinit_lock_acquire
00046e6c g     F .text	00000138 __multadd
00046e48 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08408e14 	ori	at,at,568
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__reset-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401c40 	call	401c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffc15 	stw	r2,-16(fp)

  return active;
   40118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0ffff17 	ldw	r3,-4(fp)
   40130:	e0bffe17 	ldw	r2,-8(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001126 	beq	r2,zero,40180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	e0bffd17 	ldw	r2,-12(fp)
   40140:	100690fa 	slli	r3,r2,3
   40144:	00800174 	movhi	r2,5
   40148:	1885883a 	add	r2,r3,r2
   4014c:	10cec617 	ldw	r3,15128(r2)
   40150:	e0bffd17 	ldw	r2,-12(fp)
   40154:	100890fa 	slli	r4,r2,3
   40158:	00800174 	movhi	r2,5
   4015c:	2085883a 	add	r2,r4,r2
   40160:	108ec717 	ldw	r2,15132(r2)
   40164:	1009883a 	mov	r4,r2
   40168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   4016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
   40170:	0005313a 	rdctl	r2,ipending
   40174:	e0bffb15 	stw	r2,-20(fp)
  return active;
   40178:	e0bffb17 	ldw	r2,-20(fp)
   4017c:	00000706 	br	4019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
   40180:	e0bffe17 	ldw	r2,-8(fp)
   40184:	1085883a 	add	r2,r2,r2
   40188:	e0bffe15 	stw	r2,-8(fp)
      i++;
   4018c:	e0bffd17 	ldw	r2,-12(fp)
   40190:	10800044 	addi	r2,r2,1
   40194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
   40198:	003fe406 	br	4012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
   4019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   401a0:	e0bfff17 	ldw	r2,-4(fp)
   401a4:	103fde1e 	bne	r2,zero,40120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401a8:	0001883a 	nop
}
   401ac:	0001883a 	nop
   401b0:	e037883a 	mov	sp,fp
   401b4:	dfc00117 	ldw	ra,4(sp)
   401b8:	df000017 	ldw	fp,0(sp)
   401bc:	dec00204 	addi	sp,sp,8
   401c0:	f800283a 	ret

000401c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401c4:	defffb04 	addi	sp,sp,-20
   401c8:	dfc00415 	stw	ra,16(sp)
   401cc:	df000315 	stw	fp,12(sp)
   401d0:	df000304 	addi	fp,sp,12
   401d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   401d8:	000531fa 	rdctl	r2,exception
   401dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   401e0:	e0bfff17 	ldw	r2,-4(fp)
   401e4:	1004d0ba 	srli	r2,r2,2
   401e8:	108007cc 	andi	r2,r2,31
   401ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   401f0:	0005333a 	rdctl	r2,badaddr
   401f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   401f8:	d0a70f17 	ldw	r2,-25540(gp)
   401fc:	10000726 	beq	r2,zero,4021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   40200:	d0a70f17 	ldw	r2,-25540(gp)
   40204:	e0ffff17 	ldw	r3,-4(fp)
   40208:	e1bffe17 	ldw	r6,-8(fp)
   4020c:	e17ffd17 	ldw	r5,-12(fp)
   40210:	1809883a 	mov	r4,r3
   40214:	103ee83a 	callr	r2
   40218:	00000206 	br	40224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   4021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   40220:	0005883a 	mov	r2,zero
}
   40224:	e037883a 	mov	sp,fp
   40228:	dfc00117 	ldw	ra,4(sp)
   4022c:	df000017 	ldw	fp,0(sp)
   40230:	dec00204 	addi	sp,sp,8
   40234:	f800283a 	ret

Disassembly of section .text:

00040238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   40238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   4023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   40240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   40244:	00bffd16 	blt	zero,r2,4023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40248:	06c001b4 	movhi	sp,6
    ori sp, sp, %lo(__alt_stack_pointer)
   4024c:	dedc4014 	ori	sp,sp,28928
    movhi gp, %hi(_gp)
   40250:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40254:	d6a7ac14 	ori	gp,gp,40624
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40258:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   4025c:	108eb014 	ori	r2,r2,15040

    movhi r3, %hi(__bss_end)
   40260:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40264:	18cf0614 	ori	r3,r3,15384

    beq r2, r3, 1f
   40268:	10c00326 	beq	r2,r3,40278 <_start+0x40>

0:
    stw zero, (r2)
   4026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   40270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40274:	10fffd36 	bltu	r2,r3,4026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40278:	004d8e80 	call	4d8e8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   4027c:	004da7c0 	call	4da7c <alt_main>

00040280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   40280:	003fff06 	br	40280 <alt_after_alt_main>

00040284 <main>:
#include <io.h>
#include <unistd.h>

#include "system.h"

void main(void){
   40284:	defff804 	addi	sp,sp,-32
   40288:	dfc00715 	stw	ra,28(sp)
   4028c:	df000615 	stw	fp,24(sp)
   40290:	df000604 	addi	fp,sp,24
	int ch = 0;
   40294:	e03ffd15 	stw	zero,-12(fp)
	const int nReadNum = 10; // max 1024
   40298:	00800284 	movi	r2,10
   4029c:	e0bffc15 	stw	r2,-16(fp)
	int i, Value, nIndex=0;
   402a0:	e03ffe15 	stw	zero,-8(fp)

	printf("ADC Demo\r\n");
   402a4:	01000174 	movhi	r4,5
   402a8:	213f2004 	addi	r4,r4,-896
   402ac:	00411980 	call	41198 <puts>
	while(1){
		ch = IORD(SW_BASE, 0x00) & 0x07;
   402b0:	00800037 	ldwio	r2,0(zero)
   402b4:	108001cc 	andi	r2,r2,7
   402b8:	e0bffd15 	stw	r2,-12(fp)

		printf("======================= %d, ch=%d\r\n", nIndex++, ch);
   402bc:	e0bffe17 	ldw	r2,-8(fp)
   402c0:	10c00044 	addi	r3,r2,1
   402c4:	e0fffe15 	stw	r3,-8(fp)
   402c8:	e1bffd17 	ldw	r6,-12(fp)
   402cc:	100b883a 	mov	r5,r2
   402d0:	01000174 	movhi	r4,5
   402d4:	213f2304 	addi	r4,r4,-884
   402d8:	00410940 	call	41094 <printf>
		// set measure number for ADC convert
		IOWR(ADC_LTC2308_BASE, 0x01, nReadNum);
   402dc:	e0fffc17 	ldw	r3,-16(fp)
   402e0:	00800234 	movhi	r2,8
   402e4:	10c40535 	stwio	r3,4116(r2)


		// start measure
		IOWR(ADC_LTC2308_BASE, 0x00, (ch << 1) | 0x00);
   402e8:	e0bffd17 	ldw	r2,-12(fp)
   402ec:	1085883a 	add	r2,r2,r2
   402f0:	1007883a 	mov	r3,r2
   402f4:	00800234 	movhi	r2,8
   402f8:	10c40435 	stwio	r3,4112(r2)
		IOWR(ADC_LTC2308_BASE, 0x00, (ch << 1) | 0x01);
   402fc:	e0bffd17 	ldw	r2,-12(fp)
   40300:	1085883a 	add	r2,r2,r2
   40304:	10c00054 	ori	r3,r2,1
   40308:	00800234 	movhi	r2,8
   4030c:	10c40435 	stwio	r3,4112(r2)
		IOWR(ADC_LTC2308_BASE, 0x00, (ch << 1) | 0x00);
   40310:	e0bffd17 	ldw	r2,-12(fp)
   40314:	1085883a 	add	r2,r2,r2
   40318:	1007883a 	mov	r3,r2
   4031c:	00800234 	movhi	r2,8
   40320:	10c40435 	stwio	r3,4112(r2)
		usleep(1);
   40324:	01000044 	movi	r4,1
   40328:	004dd880 	call	4dd88 <usleep>

		// wait measure done
		while ((IORD(ADC_LTC2308_BASE,0x00) & 0x01) == 0x00);
   4032c:	0001883a 	nop
   40330:	00800234 	movhi	r2,8
   40334:	10840437 	ldwio	r2,4112(r2)
   40338:	1080004c 	andi	r2,r2,1
   4033c:	103ffc26 	beq	r2,zero,40330 <main+0xac>

		// read adc value
		for(i=0;i<nReadNum;i++){
   40340:	e03fff15 	stw	zero,-4(fp)
   40344:	00001f06 	br	403c4 <main+0x140>
			Value = IORD(ADC_LTC2308_BASE, 0x01);
   40348:	00800234 	movhi	r2,8
   4034c:	10840537 	ldwio	r2,4116(r2)
   40350:	e0bffb15 	stw	r2,-20(fp)
			printf("CH%d=%.3fV (0x%04x)\r\n", ch, (float)Value/1000.0, Value);
   40354:	e13ffb17 	ldw	r4,-20(fp)
   40358:	00403e00 	call	403e0 <__floatsisf>
   4035c:	1007883a 	mov	r3,r2
   40360:	1809883a 	mov	r4,r3
   40364:	0040d600 	call	40d60 <__extendsfdf2>
   40368:	1011883a 	mov	r8,r2
   4036c:	1813883a 	mov	r9,r3
   40370:	000d883a 	mov	r6,zero
   40374:	01d023f4 	movhi	r7,16527
   40378:	39d00004 	addi	r7,r7,16384
   4037c:	4009883a 	mov	r4,r8
   40380:	480b883a 	mov	r5,r9
   40384:	00405040 	call	40504 <__divdf3>
   40388:	1009883a 	mov	r4,r2
   4038c:	180b883a 	mov	r5,r3
   40390:	2005883a 	mov	r2,r4
   40394:	2807883a 	mov	r3,r5
   40398:	e13ffb17 	ldw	r4,-20(fp)
   4039c:	d9000015 	stw	r4,0(sp)
   403a0:	100d883a 	mov	r6,r2
   403a4:	180f883a 	mov	r7,r3
   403a8:	e17ffd17 	ldw	r5,-12(fp)
   403ac:	01000174 	movhi	r4,5
   403b0:	213f2c04 	addi	r4,r4,-848
   403b4:	00410940 	call	41094 <printf>
		for(i=0;i<nReadNum;i++){
   403b8:	e0bfff17 	ldw	r2,-4(fp)
   403bc:	10800044 	addi	r2,r2,1
   403c0:	e0bfff15 	stw	r2,-4(fp)
   403c4:	e0ffff17 	ldw	r3,-4(fp)
   403c8:	e0bffc17 	ldw	r2,-16(fp)
   403cc:	18bfde16 	blt	r3,r2,40348 <main+0xc4>
		}

		usleep(200*1000);
   403d0:	010000f4 	movhi	r4,3
   403d4:	21035004 	addi	r4,r4,3392
   403d8:	004dd880 	call	4dd88 <usleep>
		ch = IORD(SW_BASE, 0x00) & 0x07;
   403dc:	003fb406 	br	402b0 <main+0x2c>

000403e0 <__floatsisf>:
   403e0:	defffd04 	addi	sp,sp,-12
   403e4:	dfc00215 	stw	ra,8(sp)
   403e8:	dc400115 	stw	r17,4(sp)
   403ec:	dc000015 	stw	r16,0(sp)
   403f0:	20001226 	beq	r4,zero,4043c <__floatsisf+0x5c>
   403f4:	2022d7fa 	srli	r17,r4,31
   403f8:	2021883a 	mov	r16,r4
   403fc:	20003816 	blt	r4,zero,404e0 <__floatsisf+0x100>
   40400:	8009883a 	mov	r4,r16
   40404:	0040e5c0 	call	40e5c <__clzsi2>
   40408:	1009883a 	mov	r4,r2
   4040c:	00802784 	movi	r2,158
   40410:	1105c83a 	sub	r2,r2,r4
   40414:	10c025c8 	cmpgei	r3,r2,151
   40418:	1800151e 	bne	r3,zero,40470 <__floatsisf+0x90>
   4041c:	20c00248 	cmpgei	r3,r4,9
   40420:	18003126 	beq	r3,zero,404e8 <__floatsisf+0x108>
   40424:	213ffe04 	addi	r4,r4,-8
   40428:	8120983a 	sll	r16,r16,r4
   4042c:	00c02034 	movhi	r3,128
   40430:	18ffffc4 	addi	r3,r3,-1
   40434:	80e0703a 	and	r16,r16,r3
   40438:	00000306 	br	40448 <__floatsisf+0x68>
   4043c:	0023883a 	mov	r17,zero
   40440:	0005883a 	mov	r2,zero
   40444:	0021883a 	mov	r16,zero
   40448:	10803fcc 	andi	r2,r2,255
   4044c:	100495fa 	slli	r2,r2,23
   40450:	882297fa 	slli	r17,r17,31
   40454:	1404b03a 	or	r2,r2,r16
   40458:	1444b03a 	or	r2,r2,r17
   4045c:	dfc00217 	ldw	ra,8(sp)
   40460:	dc400117 	ldw	r17,4(sp)
   40464:	dc000017 	ldw	r16,0(sp)
   40468:	dec00304 	addi	sp,sp,12
   4046c:	f800283a 	ret
   40470:	10c02690 	cmplti	r3,r2,154
   40474:	1800071e 	bne	r3,zero,40494 <__floatsisf+0xb4>
   40478:	20c006c4 	addi	r3,r4,27
   4047c:	01400144 	movi	r5,5
   40480:	80c6983a 	sll	r3,r16,r3
   40484:	290bc83a 	sub	r5,r5,r4
   40488:	814ad83a 	srl	r5,r16,r5
   4048c:	1806c03a 	cmpne	r3,r3,zero
   40490:	28e0b03a 	or	r16,r5,r3
   40494:	20c00188 	cmpgei	r3,r4,6
   40498:	1800171e 	bne	r3,zero,404f8 <__floatsisf+0x118>
   4049c:	00ff0034 	movhi	r3,64512
   404a0:	18ffffc4 	addi	r3,r3,-1
   404a4:	818001cc 	andi	r6,r16,7
   404a8:	80ca703a 	and	r5,r16,r3
   404ac:	30000926 	beq	r6,zero,404d4 <__floatsisf+0xf4>
   404b0:	818003cc 	andi	r6,r16,15
   404b4:	31800120 	cmpeqi	r6,r6,4
   404b8:	3000061e 	bne	r6,zero,404d4 <__floatsisf+0xf4>
   404bc:	29400104 	addi	r5,r5,4
   404c0:	2981002c 	andhi	r6,r5,1024
   404c4:	30000326 	beq	r6,zero,404d4 <__floatsisf+0xf4>
   404c8:	28ca703a 	and	r5,r5,r3
   404cc:	00c027c4 	movi	r3,159
   404d0:	1905c83a 	sub	r2,r3,r4
   404d4:	282091ba 	slli	r16,r5,6
   404d8:	8020d27a 	srli	r16,r16,9
   404dc:	003fda06 	br	40448 <__floatsisf+0x68>
   404e0:	0121c83a 	sub	r16,zero,r4
   404e4:	003fc606 	br	40400 <__floatsisf+0x20>
   404e8:	01002034 	movhi	r4,128
   404ec:	213fffc4 	addi	r4,r4,-1
   404f0:	8120703a 	and	r16,r16,r4
   404f4:	003fd406 	br	40448 <__floatsisf+0x68>
   404f8:	20fffec4 	addi	r3,r4,-5
   404fc:	80e0983a 	sll	r16,r16,r3
   40500:	003fe606 	br	4049c <__floatsisf+0xbc>

00040504 <__divdf3>:
   40504:	2804d53a 	srli	r2,r5,20
   40508:	defff204 	addi	sp,sp,-56
   4050c:	dc000415 	stw	r16,16(sp)
   40510:	04000434 	movhi	r16,16
   40514:	ddc00b15 	stw	r23,44(sp)
   40518:	dd800a15 	stw	r22,40(sp)
   4051c:	dc800615 	stw	r18,24(sp)
   40520:	843fffc4 	addi	r16,r16,-1
   40524:	dfc00d15 	stw	ra,52(sp)
   40528:	df000c15 	stw	fp,48(sp)
   4052c:	dd400915 	stw	r21,36(sp)
   40530:	dd000815 	stw	r20,32(sp)
   40534:	dcc00715 	stw	r19,28(sp)
   40538:	dc400515 	stw	r17,20(sp)
   4053c:	1081ffcc 	andi	r2,r2,2047
   40540:	282cd7fa 	srli	r22,r5,31
   40544:	302f883a 	mov	r23,r6
   40548:	2025883a 	mov	r18,r4
   4054c:	2c20703a 	and	r16,r5,r16
   40550:	10006a26 	beq	r2,zero,406fc <__divdf3+0x1f8>
   40554:	10c1ffe0 	cmpeqi	r3,r2,2047
   40558:	18007d1e 	bne	r3,zero,40750 <__divdf3+0x24c>
   4055c:	2028d77a 	srli	r20,r4,29
   40560:	800a90fa 	slli	r5,r16,3
   40564:	202490fa 	slli	r18,r4,3
   40568:	14ff0044 	addi	r19,r2,-1023
   4056c:	a14ab03a 	or	r5,r20,r5
   40570:	2d002034 	orhi	r20,r5,128
   40574:	0021883a 	mov	r16,zero
   40578:	0039883a 	mov	fp,zero
   4057c:	3804d53a 	srli	r2,r7,20
   40580:	00c00434 	movhi	r3,16
   40584:	18ffffc4 	addi	r3,r3,-1
   40588:	1081ffcc 	andi	r2,r2,2047
   4058c:	3810d7fa 	srli	r8,r7,31
   40590:	38e2703a 	and	r17,r7,r3
   40594:	10004626 	beq	r2,zero,406b0 <__divdf3+0x1ac>
   40598:	10c1ffe0 	cmpeqi	r3,r2,2047
   4059c:	1800731e 	bne	r3,zero,4076c <__divdf3+0x268>
   405a0:	880690fa 	slli	r3,r17,3
   405a4:	b822d77a 	srli	r17,r23,29
   405a8:	b81290fa 	slli	r9,r23,3
   405ac:	10bf0044 	addi	r2,r2,-1023
   405b0:	88c6b03a 	or	r3,r17,r3
   405b4:	1c402034 	orhi	r17,r3,128
   405b8:	98a7c83a 	sub	r19,r19,r2
   405bc:	0007883a 	mov	r3,zero
   405c0:	80800428 	cmpgeui	r2,r16,16
   405c4:	b22af03a 	xor	r21,r22,r8
   405c8:	1000ab1e 	bne	r2,zero,40878 <__divdf3+0x374>
   405cc:	800490ba 	slli	r2,r16,2
   405d0:	01800134 	movhi	r6,4
   405d4:	118d883a 	add	r6,r2,r6
   405d8:	30817817 	ldw	r2,1504(r6)
   405dc:	1000683a 	jmp	r2
   405e0:	00040878 	rdprs	zero,zero,4129
   405e4:	0004068c 	andi	zero,zero,4122
   405e8:	0004063c 	xorhi	zero,zero,4120
   405ec:	0004069c 	xori	zero,zero,4122
   405f0:	0004063c 	xorhi	zero,zero,4120
   405f4:	0004081c 	xori	zero,zero,4128
   405f8:	0004063c 	xorhi	zero,zero,4120
   405fc:	0004069c 	xori	zero,zero,4122
   40600:	0004068c 	andi	zero,zero,4122
   40604:	0004068c 	andi	zero,zero,4122
   40608:	0004081c 	xori	zero,zero,4128
   4060c:	0004069c 	xori	zero,zero,4122
   40610:	00040620 	cmpeqi	zero,zero,4120
   40614:	00040620 	cmpeqi	zero,zero,4120
   40618:	00040620 	cmpeqi	zero,zero,4120
   4061c:	00040834 	movhi	zero,4128
   40620:	b02b883a 	mov	r21,r22
   40624:	e08000a0 	cmpeqi	r2,fp,2
   40628:	1000181e 	bne	r2,zero,4068c <__divdf3+0x188>
   4062c:	e08000e0 	cmpeqi	r2,fp,3
   40630:	1001c21e 	bne	r2,zero,40d3c <__divdf3+0x838>
   40634:	e0800060 	cmpeqi	r2,fp,1
   40638:	10006526 	beq	r2,zero,407d0 <__divdf3+0x2cc>
   4063c:	0007883a 	mov	r3,zero
   40640:	000b883a 	mov	r5,zero
   40644:	0025883a 	mov	r18,zero
   40648:	1806953a 	slli	r3,r3,20
   4064c:	a82a97fa 	slli	r21,r21,31
   40650:	9005883a 	mov	r2,r18
   40654:	1946b03a 	or	r3,r3,r5
   40658:	1d46b03a 	or	r3,r3,r21
   4065c:	dfc00d17 	ldw	ra,52(sp)
   40660:	df000c17 	ldw	fp,48(sp)
   40664:	ddc00b17 	ldw	r23,44(sp)
   40668:	dd800a17 	ldw	r22,40(sp)
   4066c:	dd400917 	ldw	r21,36(sp)
   40670:	dd000817 	ldw	r20,32(sp)
   40674:	dcc00717 	ldw	r19,28(sp)
   40678:	dc800617 	ldw	r18,24(sp)
   4067c:	dc400517 	ldw	r17,20(sp)
   40680:	dc000417 	ldw	r16,16(sp)
   40684:	dec00e04 	addi	sp,sp,56
   40688:	f800283a 	ret
   4068c:	00c1ffc4 	movi	r3,2047
   40690:	000b883a 	mov	r5,zero
   40694:	0025883a 	mov	r18,zero
   40698:	003feb06 	br	40648 <__divdf3+0x144>
   4069c:	402b883a 	mov	r21,r8
   406a0:	8829883a 	mov	r20,r17
   406a4:	4825883a 	mov	r18,r9
   406a8:	1839883a 	mov	fp,r3
   406ac:	003fdd06 	br	40624 <__divdf3+0x120>
   406b0:	8dd2b03a 	or	r9,r17,r23
   406b4:	48004226 	beq	r9,zero,407c0 <__divdf3+0x2bc>
   406b8:	da000015 	stw	r8,0(sp)
   406bc:	88013d26 	beq	r17,zero,40bb4 <__divdf3+0x6b0>
   406c0:	8809883a 	mov	r4,r17
   406c4:	0040e5c0 	call	40e5c <__clzsi2>
   406c8:	da000017 	ldw	r8,0(sp)
   406cc:	117ffd44 	addi	r5,r2,-11
   406d0:	01000744 	movi	r4,29
   406d4:	127ffe04 	addi	r9,r2,-8
   406d8:	2149c83a 	sub	r4,r4,r5
   406dc:	8a46983a 	sll	r3,r17,r9
   406e0:	b908d83a 	srl	r4,r23,r4
   406e4:	ba52983a 	sll	r9,r23,r9
   406e8:	20e2b03a 	or	r17,r4,r3
   406ec:	14c5883a 	add	r2,r2,r19
   406f0:	14c0fcc4 	addi	r19,r2,1011
   406f4:	0007883a 	mov	r3,zero
   406f8:	003fb106 	br	405c0 <__divdf3+0xbc>
   406fc:	8128b03a 	or	r20,r16,r4
   40700:	2023883a 	mov	r17,r4
   40704:	a0002926 	beq	r20,zero,407ac <__divdf3+0x2a8>
   40708:	d9c00015 	stw	r7,0(sp)
   4070c:	80013526 	beq	r16,zero,40be4 <__divdf3+0x6e0>
   40710:	8009883a 	mov	r4,r16
   40714:	0040e5c0 	call	40e5c <__clzsi2>
   40718:	d9c00017 	ldw	r7,0(sp)
   4071c:	10fffd44 	addi	r3,r2,-11
   40720:	05000744 	movi	r20,29
   40724:	113ffe04 	addi	r4,r2,-8
   40728:	a0e9c83a 	sub	r20,r20,r3
   4072c:	810a983a 	sll	r5,r16,r4
   40730:	8d28d83a 	srl	r20,r17,r20
   40734:	8924983a 	sll	r18,r17,r4
   40738:	a168b03a 	or	r20,r20,r5
   4073c:	04ff0344 	movi	r19,-1011
   40740:	98a7c83a 	sub	r19,r19,r2
   40744:	0021883a 	mov	r16,zero
   40748:	0039883a 	mov	fp,zero
   4074c:	003f8b06 	br	4057c <__divdf3+0x78>
   40750:	8128b03a 	or	r20,r16,r4
   40754:	a000101e 	bne	r20,zero,40798 <__divdf3+0x294>
   40758:	0025883a 	mov	r18,zero
   4075c:	04000204 	movi	r16,8
   40760:	04c1ffc4 	movi	r19,2047
   40764:	07000084 	movi	fp,2
   40768:	003f8406 	br	4057c <__divdf3+0x78>
   4076c:	8dd2b03a 	or	r9,r17,r23
   40770:	9cfe0044 	addi	r19,r19,-2047
   40774:	4800041e 	bne	r9,zero,40788 <__divdf3+0x284>
   40778:	84000094 	ori	r16,r16,2
   4077c:	0023883a 	mov	r17,zero
   40780:	00c00084 	movi	r3,2
   40784:	003f8e06 	br	405c0 <__divdf3+0xbc>
   40788:	840000d4 	ori	r16,r16,3
   4078c:	b813883a 	mov	r9,r23
   40790:	00c000c4 	movi	r3,3
   40794:	003f8a06 	br	405c0 <__divdf3+0xbc>
   40798:	8029883a 	mov	r20,r16
   4079c:	04c1ffc4 	movi	r19,2047
   407a0:	04000304 	movi	r16,12
   407a4:	070000c4 	movi	fp,3
   407a8:	003f7406 	br	4057c <__divdf3+0x78>
   407ac:	0025883a 	mov	r18,zero
   407b0:	04000104 	movi	r16,4
   407b4:	0027883a 	mov	r19,zero
   407b8:	07000044 	movi	fp,1
   407bc:	003f6f06 	br	4057c <__divdf3+0x78>
   407c0:	84000054 	ori	r16,r16,1
   407c4:	0023883a 	mov	r17,zero
   407c8:	00c00044 	movi	r3,1
   407cc:	003f7c06 	br	405c0 <__divdf3+0xbc>
   407d0:	9c40ffc4 	addi	r17,r19,1023
   407d4:	0440c70e 	bge	zero,r17,40af4 <__divdf3+0x5f0>
   407d8:	908001cc 	andi	r2,r18,7
   407dc:	1001331e 	bne	r2,zero,40cac <__divdf3+0x7a8>
   407e0:	900cd0fa 	srli	r6,r18,3
   407e4:	a080402c 	andhi	r2,r20,256
   407e8:	10000426 	beq	r2,zero,407fc <__divdf3+0x2f8>
   407ec:	00bfc034 	movhi	r2,65280
   407f0:	10bfffc4 	addi	r2,r2,-1
   407f4:	a0a8703a 	and	r20,r20,r2
   407f8:	9c410004 	addi	r17,r19,1024
   407fc:	8881ffc8 	cmpgei	r2,r17,2047
   40800:	103fa21e 	bne	r2,zero,4068c <__divdf3+0x188>
   40804:	a008977a 	slli	r4,r20,29
   40808:	a00a927a 	slli	r5,r20,9
   4080c:	88c1ffcc 	andi	r3,r17,2047
   40810:	21a4b03a 	or	r18,r4,r6
   40814:	280ad33a 	srli	r5,r5,12
   40818:	003f8b06 	br	40648 <__divdf3+0x144>
   4081c:	01400434 	movhi	r5,16
   40820:	002b883a 	mov	r21,zero
   40824:	297fffc4 	addi	r5,r5,-1
   40828:	04bfffc4 	movi	r18,-1
   4082c:	00c1ffc4 	movi	r3,2047
   40830:	003f8506 	br	40648 <__divdf3+0x144>
   40834:	a080022c 	andhi	r2,r20,8
   40838:	10000926 	beq	r2,zero,40860 <__divdf3+0x35c>
   4083c:	8880022c 	andhi	r2,r17,8
   40840:	1000071e 	bne	r2,zero,40860 <__divdf3+0x35c>
   40844:	00800434 	movhi	r2,16
   40848:	89400234 	orhi	r5,r17,8
   4084c:	10bfffc4 	addi	r2,r2,-1
   40850:	288a703a 	and	r5,r5,r2
   40854:	402b883a 	mov	r21,r8
   40858:	4825883a 	mov	r18,r9
   4085c:	003ff306 	br	4082c <__divdf3+0x328>
   40860:	00800434 	movhi	r2,16
   40864:	a1400234 	orhi	r5,r20,8
   40868:	10bfffc4 	addi	r2,r2,-1
   4086c:	288a703a 	and	r5,r5,r2
   40870:	b02b883a 	mov	r21,r22
   40874:	003fed06 	br	4082c <__divdf3+0x328>
   40878:	8d00c836 	bltu	r17,r20,40b9c <__divdf3+0x698>
   4087c:	8d00c626 	beq	r17,r20,40b98 <__divdf3+0x694>
   40880:	9cffffc4 	addi	r19,r19,-1
   40884:	0021883a 	mov	r16,zero
   40888:	8806923a 	slli	r3,r17,8
   4088c:	480cd63a 	srli	r6,r9,24
   40890:	4804923a 	slli	r2,r9,8
   40894:	1838d43a 	srli	fp,r3,16
   40898:	a009883a 	mov	r4,r20
   4089c:	30ecb03a 	or	r22,r6,r3
   408a0:	e00b883a 	mov	r5,fp
   408a4:	d8800015 	stw	r2,0(sp)
   408a8:	0040fa40 	call	40fa4 <__udivsi3>
   408ac:	a009883a 	mov	r4,r20
   408b0:	e00b883a 	mov	r5,fp
   408b4:	d8800115 	stw	r2,4(sp)
   408b8:	00410080 	call	41008 <__umodsi3>
   408bc:	d8c00117 	ldw	r3,4(sp)
   408c0:	1004943a 	slli	r2,r2,16
   408c4:	9008d43a 	srli	r4,r18,16
   408c8:	b5ffffcc 	andi	r23,r22,65535
   408cc:	b8e3383a 	mul	r17,r23,r3
   408d0:	2088b03a 	or	r4,r4,r2
   408d4:	2440042e 	bgeu	r4,r17,408e8 <__divdf3+0x3e4>
   408d8:	2589883a 	add	r4,r4,r22
   408dc:	18bfffc4 	addi	r2,r3,-1
   408e0:	2580d32e 	bgeu	r4,r22,40c30 <__divdf3+0x72c>
   408e4:	1007883a 	mov	r3,r2
   408e8:	2463c83a 	sub	r17,r4,r17
   408ec:	e00b883a 	mov	r5,fp
   408f0:	8809883a 	mov	r4,r17
   408f4:	d8c00115 	stw	r3,4(sp)
   408f8:	0040fa40 	call	40fa4 <__udivsi3>
   408fc:	8809883a 	mov	r4,r17
   40900:	e00b883a 	mov	r5,fp
   40904:	1029883a 	mov	r20,r2
   40908:	00410080 	call	41008 <__umodsi3>
   4090c:	1008943a 	slli	r4,r2,16
   40910:	bd13383a 	mul	r9,r23,r20
   40914:	94bfffcc 	andi	r18,r18,65535
   40918:	9108b03a 	or	r4,r18,r4
   4091c:	d8c00117 	ldw	r3,4(sp)
   40920:	2240042e 	bgeu	r4,r9,40934 <__divdf3+0x430>
   40924:	2589883a 	add	r4,r4,r22
   40928:	a0bfffc4 	addi	r2,r20,-1
   4092c:	2580bc2e 	bgeu	r4,r22,40c20 <__divdf3+0x71c>
   40930:	1029883a 	mov	r20,r2
   40934:	180a943a 	slli	r5,r3,16
   40938:	d8800017 	ldw	r2,0(sp)
   4093c:	2249c83a 	sub	r4,r4,r9
   40940:	2d28b03a 	or	r20,r5,r20
   40944:	100ed43a 	srli	r7,r2,16
   40948:	123fffcc 	andi	r8,r2,65535
   4094c:	a00ad43a 	srli	r5,r20,16
   40950:	a0bfffcc 	andi	r2,r20,65535
   40954:	1225383a 	mul	r18,r2,r8
   40958:	2a15383a 	mul	r10,r5,r8
   4095c:	3887383a 	mul	r3,r7,r2
   40960:	9004d43a 	srli	r2,r18,16
   40964:	29cb383a 	mul	r5,r5,r7
   40968:	1a87883a 	add	r3,r3,r10
   4096c:	10c5883a 	add	r2,r2,r3
   40970:	1280022e 	bgeu	r2,r10,4097c <__divdf3+0x478>
   40974:	00c00074 	movhi	r3,1
   40978:	28cb883a 	add	r5,r5,r3
   4097c:	1006d43a 	srli	r3,r2,16
   40980:	1004943a 	slli	r2,r2,16
   40984:	94bfffcc 	andi	r18,r18,65535
   40988:	1947883a 	add	r3,r3,r5
   4098c:	14a5883a 	add	r18,r2,r18
   40990:	20c07636 	bltu	r4,r3,40b6c <__divdf3+0x668>
   40994:	20c07426 	beq	r4,r3,40b68 <__divdf3+0x664>
   40998:	84a5c83a 	sub	r18,r16,r18
   4099c:	20c9c83a 	sub	r4,r4,r3
   409a0:	84a1803a 	cmpltu	r16,r16,r18
   409a4:	2421c83a 	sub	r16,r4,r16
   409a8:	9c40ffc4 	addi	r17,r19,1023
   409ac:	b400ba26 	beq	r22,r16,40c98 <__divdf3+0x794>
   409b0:	8009883a 	mov	r4,r16
   409b4:	e00b883a 	mov	r5,fp
   409b8:	da000315 	stw	r8,12(sp)
   409bc:	d9c00215 	stw	r7,8(sp)
   409c0:	0040fa40 	call	40fa4 <__udivsi3>
   409c4:	8009883a 	mov	r4,r16
   409c8:	e00b883a 	mov	r5,fp
   409cc:	d8800115 	stw	r2,4(sp)
   409d0:	00410080 	call	41008 <__umodsi3>
   409d4:	da400117 	ldw	r9,4(sp)
   409d8:	1004943a 	slli	r2,r2,16
   409dc:	9008d43a 	srli	r4,r18,16
   409e0:	ba61383a 	mul	r16,r23,r9
   409e4:	d9c00217 	ldw	r7,8(sp)
   409e8:	2088b03a 	or	r4,r4,r2
   409ec:	da000317 	ldw	r8,12(sp)
   409f0:	2400062e 	bgeu	r4,r16,40a0c <__divdf3+0x508>
   409f4:	2589883a 	add	r4,r4,r22
   409f8:	48bfffc4 	addi	r2,r9,-1
   409fc:	2580b536 	bltu	r4,r22,40cd4 <__divdf3+0x7d0>
   40a00:	2400b42e 	bgeu	r4,r16,40cd4 <__divdf3+0x7d0>
   40a04:	4a7fff84 	addi	r9,r9,-2
   40a08:	2589883a 	add	r4,r4,r22
   40a0c:	2421c83a 	sub	r16,r4,r16
   40a10:	8009883a 	mov	r4,r16
   40a14:	e00b883a 	mov	r5,fp
   40a18:	da000315 	stw	r8,12(sp)
   40a1c:	da400215 	stw	r9,8(sp)
   40a20:	d9c00115 	stw	r7,4(sp)
   40a24:	0040fa40 	call	40fa4 <__udivsi3>
   40a28:	8009883a 	mov	r4,r16
   40a2c:	e00b883a 	mov	r5,fp
   40a30:	1021883a 	mov	r16,r2
   40a34:	00410080 	call	41008 <__umodsi3>
   40a38:	1004943a 	slli	r2,r2,16
   40a3c:	bc2f383a 	mul	r23,r23,r16
   40a40:	90ffffcc 	andi	r3,r18,65535
   40a44:	1886b03a 	or	r3,r3,r2
   40a48:	d9c00117 	ldw	r7,4(sp)
   40a4c:	da400217 	ldw	r9,8(sp)
   40a50:	da000317 	ldw	r8,12(sp)
   40a54:	1dc0062e 	bgeu	r3,r23,40a70 <__divdf3+0x56c>
   40a58:	1d87883a 	add	r3,r3,r22
   40a5c:	80bfffc4 	addi	r2,r16,-1
   40a60:	1d809a36 	bltu	r3,r22,40ccc <__divdf3+0x7c8>
   40a64:	1dc0992e 	bgeu	r3,r23,40ccc <__divdf3+0x7c8>
   40a68:	843fff84 	addi	r16,r16,-2
   40a6c:	1d87883a 	add	r3,r3,r22
   40a70:	4808943a 	slli	r4,r9,16
   40a74:	1defc83a 	sub	r23,r3,r23
   40a78:	2424b03a 	or	r18,r4,r16
   40a7c:	900ad43a 	srli	r5,r18,16
   40a80:	90bfffcc 	andi	r2,r18,65535
   40a84:	4087383a 	mul	r3,r8,r2
   40a88:	3885383a 	mul	r2,r7,r2
   40a8c:	2a11383a 	mul	r8,r5,r8
   40a90:	1808d43a 	srli	r4,r3,16
   40a94:	394f383a 	mul	r7,r7,r5
   40a98:	1205883a 	add	r2,r2,r8
   40a9c:	2089883a 	add	r4,r4,r2
   40aa0:	2200022e 	bgeu	r4,r8,40aac <__divdf3+0x5a8>
   40aa4:	00800074 	movhi	r2,1
   40aa8:	388f883a 	add	r7,r7,r2
   40aac:	2004d43a 	srli	r2,r4,16
   40ab0:	2008943a 	slli	r4,r4,16
   40ab4:	18ffffcc 	andi	r3,r3,65535
   40ab8:	11cf883a 	add	r7,r2,r7
   40abc:	20c9883a 	add	r4,r4,r3
   40ac0:	b9c00436 	bltu	r23,r7,40ad4 <__divdf3+0x5d0>
   40ac4:	b9c00226 	beq	r23,r7,40ad0 <__divdf3+0x5cc>
   40ac8:	94800054 	ori	r18,r18,1
   40acc:	003f4106 	br	407d4 <__divdf3+0x2d0>
   40ad0:	203f4026 	beq	r4,zero,407d4 <__divdf3+0x2d0>
   40ad4:	b5ef883a 	add	r23,r22,r23
   40ad8:	90bfffc4 	addi	r2,r18,-1
   40adc:	bd806936 	bltu	r23,r22,40c84 <__divdf3+0x780>
   40ae0:	b9c08636 	bltu	r23,r7,40cfc <__divdf3+0x7f8>
   40ae4:	b9c09a26 	beq	r23,r7,40d50 <__divdf3+0x84c>
   40ae8:	1025883a 	mov	r18,r2
   40aec:	003ff606 	br	40ac8 <__divdf3+0x5c4>
   40af0:	04bfffc4 	movi	r18,-1
   40af4:	01400044 	movi	r5,1
   40af8:	2c4bc83a 	sub	r5,r5,r17
   40afc:	28800e48 	cmpgei	r2,r5,57
   40b00:	103ece1e 	bne	r2,zero,4063c <__divdf3+0x138>
   40b04:	28800808 	cmpgei	r2,r5,32
   40b08:	10004d1e 	bne	r2,zero,40c40 <__divdf3+0x73c>
   40b0c:	98810784 	addi	r2,r19,1054
   40b10:	a086983a 	sll	r3,r20,r2
   40b14:	9148d83a 	srl	r4,r18,r5
   40b18:	9084983a 	sll	r2,r18,r2
   40b1c:	a14ad83a 	srl	r5,r20,r5
   40b20:	1924b03a 	or	r18,r3,r4
   40b24:	1004c03a 	cmpne	r2,r2,zero
   40b28:	90a4b03a 	or	r18,r18,r2
   40b2c:	908001cc 	andi	r2,r18,7
   40b30:	10000726 	beq	r2,zero,40b50 <__divdf3+0x64c>
   40b34:	908003cc 	andi	r2,r18,15
   40b38:	10800120 	cmpeqi	r2,r2,4
   40b3c:	1000041e 	bne	r2,zero,40b50 <__divdf3+0x64c>
   40b40:	90800104 	addi	r2,r18,4
   40b44:	14a5803a 	cmpltu	r18,r2,r18
   40b48:	2c8b883a 	add	r5,r5,r18
   40b4c:	1025883a 	mov	r18,r2
   40b50:	2880202c 	andhi	r2,r5,128
   40b54:	10007526 	beq	r2,zero,40d2c <__divdf3+0x828>
   40b58:	00c00044 	movi	r3,1
   40b5c:	000b883a 	mov	r5,zero
   40b60:	0025883a 	mov	r18,zero
   40b64:	003eb806 	br	40648 <__divdf3+0x144>
   40b68:	84bf8b2e 	bgeu	r16,r18,40998 <__divdf3+0x494>
   40b6c:	d8800017 	ldw	r2,0(sp)
   40b70:	80a1883a 	add	r16,r16,r2
   40b74:	8085803a 	cmpltu	r2,r16,r2
   40b78:	1585883a 	add	r2,r2,r22
   40b7c:	2089883a 	add	r4,r4,r2
   40b80:	a0bfffc4 	addi	r2,r20,-1
   40b84:	b100222e 	bgeu	r22,r4,40c10 <__divdf3+0x70c>
   40b88:	20c05536 	bltu	r4,r3,40ce0 <__divdf3+0x7dc>
   40b8c:	19005326 	beq	r3,r4,40cdc <__divdf3+0x7d8>
   40b90:	1029883a 	mov	r20,r2
   40b94:	003f8006 	br	40998 <__divdf3+0x494>
   40b98:	927f3936 	bltu	r18,r9,40880 <__divdf3+0x37c>
   40b9c:	a00897fa 	slli	r4,r20,31
   40ba0:	9004d07a 	srli	r2,r18,1
   40ba4:	902097fa 	slli	r16,r18,31
   40ba8:	a028d07a 	srli	r20,r20,1
   40bac:	20a4b03a 	or	r18,r4,r2
   40bb0:	003f3506 	br	40888 <__divdf3+0x384>
   40bb4:	b809883a 	mov	r4,r23
   40bb8:	0040e5c0 	call	40e5c <__clzsi2>
   40bbc:	11400544 	addi	r5,r2,21
   40bc0:	29000748 	cmpgei	r4,r5,29
   40bc4:	1007883a 	mov	r3,r2
   40bc8:	da000017 	ldw	r8,0(sp)
   40bcc:	10800804 	addi	r2,r2,32
   40bd0:	203ebf26 	beq	r4,zero,406d0 <__divdf3+0x1cc>
   40bd4:	18fffe04 	addi	r3,r3,-8
   40bd8:	b8e2983a 	sll	r17,r23,r3
   40bdc:	0013883a 	mov	r9,zero
   40be0:	003ec206 	br	406ec <__divdf3+0x1e8>
   40be4:	0040e5c0 	call	40e5c <__clzsi2>
   40be8:	10c00544 	addi	r3,r2,21
   40bec:	19000748 	cmpgei	r4,r3,29
   40bf0:	100b883a 	mov	r5,r2
   40bf4:	d9c00017 	ldw	r7,0(sp)
   40bf8:	10800804 	addi	r2,r2,32
   40bfc:	203ec826 	beq	r4,zero,40720 <__divdf3+0x21c>
   40c00:	297ffe04 	addi	r5,r5,-8
   40c04:	9168983a 	sll	r20,r18,r5
   40c08:	0025883a 	mov	r18,zero
   40c0c:	003ecb06 	br	4073c <__divdf3+0x238>
   40c10:	b13fdf1e 	bne	r22,r4,40b90 <__divdf3+0x68c>
   40c14:	d9400017 	ldw	r5,0(sp)
   40c18:	817fdd36 	bltu	r16,r5,40b90 <__divdf3+0x68c>
   40c1c:	003fda06 	br	40b88 <__divdf3+0x684>
   40c20:	227f432e 	bgeu	r4,r9,40930 <__divdf3+0x42c>
   40c24:	a53fff84 	addi	r20,r20,-2
   40c28:	2589883a 	add	r4,r4,r22
   40c2c:	003f4106 	br	40934 <__divdf3+0x430>
   40c30:	247f2c2e 	bgeu	r4,r17,408e4 <__divdf3+0x3e0>
   40c34:	18ffff84 	addi	r3,r3,-2
   40c38:	2589883a 	add	r4,r4,r22
   40c3c:	003f2a06 	br	408e8 <__divdf3+0x3e4>
   40c40:	00fff844 	movi	r3,-31
   40c44:	1c47c83a 	sub	r3,r3,r17
   40c48:	29400820 	cmpeqi	r5,r5,32
   40c4c:	a0c6d83a 	srl	r3,r20,r3
   40c50:	2800031e 	bne	r5,zero,40c60 <__divdf3+0x75c>
   40c54:	99410f84 	addi	r5,r19,1086
   40c58:	a14a983a 	sll	r5,r20,r5
   40c5c:	9164b03a 	or	r18,r18,r5
   40c60:	9024c03a 	cmpne	r18,r18,zero
   40c64:	90e4b03a 	or	r18,r18,r3
   40c68:	910001cc 	andi	r4,r18,7
   40c6c:	20002b1e 	bne	r4,zero,40d1c <__divdf3+0x818>
   40c70:	000b883a 	mov	r5,zero
   40c74:	9024d0fa 	srli	r18,r18,3
   40c78:	0007883a 	mov	r3,zero
   40c7c:	9124b03a 	or	r18,r18,r4
   40c80:	003e7106 	br	40648 <__divdf3+0x144>
   40c84:	1025883a 	mov	r18,r2
   40c88:	b9ff8f1e 	bne	r23,r7,40ac8 <__divdf3+0x5c4>
   40c8c:	d8800017 	ldw	r2,0(sp)
   40c90:	20bf8d1e 	bne	r4,r2,40ac8 <__divdf3+0x5c4>
   40c94:	003ecf06 	br	407d4 <__divdf3+0x2d0>
   40c98:	047f950e 	bge	zero,r17,40af0 <__divdf3+0x5ec>
   40c9c:	000d883a 	mov	r6,zero
   40ca0:	01000044 	movi	r4,1
   40ca4:	a129883a 	add	r20,r20,r4
   40ca8:	003ece06 	br	407e4 <__divdf3+0x2e0>
   40cac:	908003cc 	andi	r2,r18,15
   40cb0:	10800118 	cmpnei	r2,r2,4
   40cb4:	103eca26 	beq	r2,zero,407e0 <__divdf3+0x2dc>
   40cb8:	91800104 	addi	r6,r18,4
   40cbc:	013ffec4 	movi	r4,-5
   40cc0:	300cd0fa 	srli	r6,r6,3
   40cc4:	2489803a 	cmpltu	r4,r4,r18
   40cc8:	003ff606 	br	40ca4 <__divdf3+0x7a0>
   40ccc:	1021883a 	mov	r16,r2
   40cd0:	003f6706 	br	40a70 <__divdf3+0x56c>
   40cd4:	1013883a 	mov	r9,r2
   40cd8:	003f4c06 	br	40a0c <__divdf3+0x508>
   40cdc:	84bfac2e 	bgeu	r16,r18,40b90 <__divdf3+0x68c>
   40ce0:	d8800017 	ldw	r2,0(sp)
   40ce4:	a53fff84 	addi	r20,r20,-2
   40ce8:	80a1883a 	add	r16,r16,r2
   40cec:	8085803a 	cmpltu	r2,r16,r2
   40cf0:	1585883a 	add	r2,r2,r22
   40cf4:	2089883a 	add	r4,r4,r2
   40cf8:	003f2706 	br	40998 <__divdf3+0x494>
   40cfc:	d8c00017 	ldw	r3,0(sp)
   40d00:	94bfff84 	addi	r18,r18,-2
   40d04:	18c5883a 	add	r2,r3,r3
   40d08:	10c7803a 	cmpltu	r3,r2,r3
   40d0c:	1d8d883a 	add	r6,r3,r22
   40d10:	b9af883a 	add	r23,r23,r6
   40d14:	d8800015 	stw	r2,0(sp)
   40d18:	003fdb06 	br	40c88 <__divdf3+0x784>
   40d1c:	908003cc 	andi	r2,r18,15
   40d20:	10800118 	cmpnei	r2,r2,4
   40d24:	000b883a 	mov	r5,zero
   40d28:	103f851e 	bne	r2,zero,40b40 <__divdf3+0x63c>
   40d2c:	2804927a 	slli	r2,r5,9
   40d30:	2808977a 	slli	r4,r5,29
   40d34:	100ad33a 	srli	r5,r2,12
   40d38:	003fce06 	br	40c74 <__divdf3+0x770>
   40d3c:	00800434 	movhi	r2,16
   40d40:	a1400234 	orhi	r5,r20,8
   40d44:	10bfffc4 	addi	r2,r2,-1
   40d48:	288a703a 	and	r5,r5,r2
   40d4c:	003eb706 	br	4082c <__divdf3+0x328>
   40d50:	d8c00017 	ldw	r3,0(sp)
   40d54:	193fe936 	bltu	r3,r4,40cfc <__divdf3+0x7f8>
   40d58:	1025883a 	mov	r18,r2
   40d5c:	003fcb06 	br	40c8c <__divdf3+0x788>

00040d60 <__extendsfdf2>:
   40d60:	200ad5fa 	srli	r5,r4,23
   40d64:	defffd04 	addi	sp,sp,-12
   40d68:	dc000015 	stw	r16,0(sp)
   40d6c:	29403fcc 	andi	r5,r5,255
   40d70:	04002034 	movhi	r16,128
   40d74:	28800044 	addi	r2,r5,1
   40d78:	dc400115 	stw	r17,4(sp)
   40d7c:	843fffc4 	addi	r16,r16,-1
   40d80:	dfc00215 	stw	ra,8(sp)
   40d84:	10803f8c 	andi	r2,r2,254
   40d88:	2022d7fa 	srli	r17,r4,31
   40d8c:	8120703a 	and	r16,r16,r4
   40d90:	10000d26 	beq	r2,zero,40dc8 <__extendsfdf2+0x68>
   40d94:	8008d0fa 	srli	r4,r16,3
   40d98:	8020977a 	slli	r16,r16,29
   40d9c:	28c0e004 	addi	r3,r5,896
   40da0:	180a953a 	slli	r5,r3,20
   40da4:	880697fa 	slli	r3,r17,31
   40da8:	8005883a 	mov	r2,r16
   40dac:	290ab03a 	or	r5,r5,r4
   40db0:	28c6b03a 	or	r3,r5,r3
   40db4:	dfc00217 	ldw	ra,8(sp)
   40db8:	dc400117 	ldw	r17,4(sp)
   40dbc:	dc000017 	ldw	r16,0(sp)
   40dc0:	dec00304 	addi	sp,sp,12
   40dc4:	f800283a 	ret
   40dc8:	2800111e 	bne	r5,zero,40e10 <__extendsfdf2+0xb0>
   40dcc:	80001926 	beq	r16,zero,40e34 <__extendsfdf2+0xd4>
   40dd0:	8009883a 	mov	r4,r16
   40dd4:	0040e5c0 	call	40e5c <__clzsi2>
   40dd8:	10c002c8 	cmpgei	r3,r2,11
   40ddc:	18001b1e 	bne	r3,zero,40e4c <__extendsfdf2+0xec>
   40de0:	010002c4 	movi	r4,11
   40de4:	2089c83a 	sub	r4,r4,r2
   40de8:	10c00544 	addi	r3,r2,21
   40dec:	810ad83a 	srl	r5,r16,r4
   40df0:	80e0983a 	sll	r16,r16,r3
   40df4:	01000434 	movhi	r4,16
   40df8:	00c0e244 	movi	r3,905
   40dfc:	213fffc4 	addi	r4,r4,-1
   40e00:	1887c83a 	sub	r3,r3,r2
   40e04:	2908703a 	and	r4,r5,r4
   40e08:	18c1ffcc 	andi	r3,r3,2047
   40e0c:	003fe406 	br	40da0 <__extendsfdf2+0x40>
   40e10:	80000b26 	beq	r16,zero,40e40 <__extendsfdf2+0xe0>
   40e14:	800ad0fa 	srli	r5,r16,3
   40e18:	00800434 	movhi	r2,16
   40e1c:	10bfffc4 	addi	r2,r2,-1
   40e20:	29000234 	orhi	r4,r5,8
   40e24:	8020977a 	slli	r16,r16,29
   40e28:	2088703a 	and	r4,r4,r2
   40e2c:	00c1ffc4 	movi	r3,2047
   40e30:	003fdb06 	br	40da0 <__extendsfdf2+0x40>
   40e34:	0007883a 	mov	r3,zero
   40e38:	0009883a 	mov	r4,zero
   40e3c:	003fd806 	br	40da0 <__extendsfdf2+0x40>
   40e40:	00c1ffc4 	movi	r3,2047
   40e44:	0009883a 	mov	r4,zero
   40e48:	003fd506 	br	40da0 <__extendsfdf2+0x40>
   40e4c:	113ffd44 	addi	r4,r2,-11
   40e50:	810a983a 	sll	r5,r16,r4
   40e54:	0021883a 	mov	r16,zero
   40e58:	003fe606 	br	40df4 <__extendsfdf2+0x94>

00040e5c <__clzsi2>:
   40e5c:	00bfffd4 	movui	r2,65535
   40e60:	11000436 	bltu	r2,r4,40e74 <__clzsi2+0x18>
   40e64:	20804030 	cmpltui	r2,r4,256
   40e68:	10000e26 	beq	r2,zero,40ea4 <__clzsi2+0x48>
   40e6c:	01400804 	movi	r5,32
   40e70:	00000406 	br	40e84 <__clzsi2+0x28>
   40e74:	00804034 	movhi	r2,256
   40e78:	20800736 	bltu	r4,r2,40e98 <__clzsi2+0x3c>
   40e7c:	2008d63a 	srli	r4,r4,24
   40e80:	01400204 	movi	r5,8
   40e84:	00c00174 	movhi	r3,5
   40e88:	20c7883a 	add	r3,r4,r3
   40e8c:	18bf3203 	ldbu	r2,-824(r3)
   40e90:	2885c83a 	sub	r2,r5,r2
   40e94:	f800283a 	ret
   40e98:	2008d43a 	srli	r4,r4,16
   40e9c:	01400404 	movi	r5,16
   40ea0:	003ff806 	br	40e84 <__clzsi2+0x28>
   40ea4:	2008d23a 	srli	r4,r4,8
   40ea8:	01400604 	movi	r5,24
   40eac:	003ff506 	br	40e84 <__clzsi2+0x28>

00040eb0 <__divsi3>:
   40eb0:	20001a16 	blt	r4,zero,40f1c <__divsi3+0x6c>
   40eb4:	000f883a 	mov	r7,zero
   40eb8:	2800020e 	bge	r5,zero,40ec4 <__divsi3+0x14>
   40ebc:	014bc83a 	sub	r5,zero,r5
   40ec0:	39c0005c 	xori	r7,r7,1
   40ec4:	200d883a 	mov	r6,r4
   40ec8:	00c00044 	movi	r3,1
   40ecc:	2900092e 	bgeu	r5,r4,40ef4 <__divsi3+0x44>
   40ed0:	00800804 	movi	r2,32
   40ed4:	00c00044 	movi	r3,1
   40ed8:	00000106 	br	40ee0 <__divsi3+0x30>
   40edc:	10001226 	beq	r2,zero,40f28 <__divsi3+0x78>
   40ee0:	294b883a 	add	r5,r5,r5
   40ee4:	10bfffc4 	addi	r2,r2,-1
   40ee8:	18c7883a 	add	r3,r3,r3
   40eec:	293ffb36 	bltu	r5,r4,40edc <__divsi3+0x2c>
   40ef0:	18000d26 	beq	r3,zero,40f28 <__divsi3+0x78>
   40ef4:	0005883a 	mov	r2,zero
   40ef8:	31400236 	bltu	r6,r5,40f04 <__divsi3+0x54>
   40efc:	314dc83a 	sub	r6,r6,r5
   40f00:	10c4b03a 	or	r2,r2,r3
   40f04:	1806d07a 	srli	r3,r3,1
   40f08:	280ad07a 	srli	r5,r5,1
   40f0c:	183ffa1e 	bne	r3,zero,40ef8 <__divsi3+0x48>
   40f10:	38000126 	beq	r7,zero,40f18 <__divsi3+0x68>
   40f14:	0085c83a 	sub	r2,zero,r2
   40f18:	f800283a 	ret
   40f1c:	0109c83a 	sub	r4,zero,r4
   40f20:	01c00044 	movi	r7,1
   40f24:	003fe406 	br	40eb8 <__divsi3+0x8>
   40f28:	0005883a 	mov	r2,zero
   40f2c:	003ff806 	br	40f10 <__divsi3+0x60>

00040f30 <__modsi3>:
   40f30:	20001916 	blt	r4,zero,40f98 <__modsi3+0x68>
   40f34:	000f883a 	mov	r7,zero
   40f38:	2005883a 	mov	r2,r4
   40f3c:	2800010e 	bge	r5,zero,40f44 <__modsi3+0x14>
   40f40:	014bc83a 	sub	r5,zero,r5
   40f44:	00c00044 	movi	r3,1
   40f48:	2900092e 	bgeu	r5,r4,40f70 <__modsi3+0x40>
   40f4c:	01800804 	movi	r6,32
   40f50:	00c00044 	movi	r3,1
   40f54:	00000106 	br	40f5c <__modsi3+0x2c>
   40f58:	30000d26 	beq	r6,zero,40f90 <__modsi3+0x60>
   40f5c:	294b883a 	add	r5,r5,r5
   40f60:	31bfffc4 	addi	r6,r6,-1
   40f64:	18c7883a 	add	r3,r3,r3
   40f68:	293ffb36 	bltu	r5,r4,40f58 <__modsi3+0x28>
   40f6c:	18000826 	beq	r3,zero,40f90 <__modsi3+0x60>
   40f70:	1806d07a 	srli	r3,r3,1
   40f74:	11400136 	bltu	r2,r5,40f7c <__modsi3+0x4c>
   40f78:	1145c83a 	sub	r2,r2,r5
   40f7c:	280ad07a 	srli	r5,r5,1
   40f80:	183ffb1e 	bne	r3,zero,40f70 <__modsi3+0x40>
   40f84:	38000126 	beq	r7,zero,40f8c <__modsi3+0x5c>
   40f88:	0085c83a 	sub	r2,zero,r2
   40f8c:	f800283a 	ret
   40f90:	2005883a 	mov	r2,r4
   40f94:	003ffb06 	br	40f84 <__modsi3+0x54>
   40f98:	0109c83a 	sub	r4,zero,r4
   40f9c:	01c00044 	movi	r7,1
   40fa0:	003fe506 	br	40f38 <__modsi3+0x8>

00040fa4 <__udivsi3>:
   40fa4:	200d883a 	mov	r6,r4
   40fa8:	2900152e 	bgeu	r5,r4,41000 <__udivsi3+0x5c>
   40fac:	28001416 	blt	r5,zero,41000 <__udivsi3+0x5c>
   40fb0:	00800804 	movi	r2,32
   40fb4:	00c00044 	movi	r3,1
   40fb8:	00000206 	br	40fc4 <__udivsi3+0x20>
   40fbc:	10000e26 	beq	r2,zero,40ff8 <__udivsi3+0x54>
   40fc0:	28000516 	blt	r5,zero,40fd8 <__udivsi3+0x34>
   40fc4:	294b883a 	add	r5,r5,r5
   40fc8:	10bfffc4 	addi	r2,r2,-1
   40fcc:	18c7883a 	add	r3,r3,r3
   40fd0:	293ffa36 	bltu	r5,r4,40fbc <__udivsi3+0x18>
   40fd4:	18000826 	beq	r3,zero,40ff8 <__udivsi3+0x54>
   40fd8:	0005883a 	mov	r2,zero
   40fdc:	31400236 	bltu	r6,r5,40fe8 <__udivsi3+0x44>
   40fe0:	314dc83a 	sub	r6,r6,r5
   40fe4:	10c4b03a 	or	r2,r2,r3
   40fe8:	1806d07a 	srli	r3,r3,1
   40fec:	280ad07a 	srli	r5,r5,1
   40ff0:	183ffa1e 	bne	r3,zero,40fdc <__udivsi3+0x38>
   40ff4:	f800283a 	ret
   40ff8:	0005883a 	mov	r2,zero
   40ffc:	f800283a 	ret
   41000:	00c00044 	movi	r3,1
   41004:	003ff406 	br	40fd8 <__udivsi3+0x34>

00041008 <__umodsi3>:
   41008:	2005883a 	mov	r2,r4
   4100c:	2900132e 	bgeu	r5,r4,4105c <__umodsi3+0x54>
   41010:	28001216 	blt	r5,zero,4105c <__umodsi3+0x54>
   41014:	01800804 	movi	r6,32
   41018:	00c00044 	movi	r3,1
   4101c:	00000206 	br	41028 <__umodsi3+0x20>
   41020:	30000c26 	beq	r6,zero,41054 <__umodsi3+0x4c>
   41024:	28000516 	blt	r5,zero,4103c <__umodsi3+0x34>
   41028:	294b883a 	add	r5,r5,r5
   4102c:	31bfffc4 	addi	r6,r6,-1
   41030:	18c7883a 	add	r3,r3,r3
   41034:	293ffa36 	bltu	r5,r4,41020 <__umodsi3+0x18>
   41038:	18000626 	beq	r3,zero,41054 <__umodsi3+0x4c>
   4103c:	1806d07a 	srli	r3,r3,1
   41040:	11400136 	bltu	r2,r5,41048 <__umodsi3+0x40>
   41044:	1145c83a 	sub	r2,r2,r5
   41048:	280ad07a 	srli	r5,r5,1
   4104c:	183ffb1e 	bne	r3,zero,4103c <__umodsi3+0x34>
   41050:	f800283a 	ret
   41054:	2005883a 	mov	r2,r4
   41058:	f800283a 	ret
   4105c:	00c00044 	movi	r3,1
   41060:	003ff606 	br	4103c <__umodsi3+0x34>

00041064 <_printf_r>:
   41064:	defffd04 	addi	sp,sp,-12
   41068:	2805883a 	mov	r2,r5
   4106c:	dfc00015 	stw	ra,0(sp)
   41070:	d9800115 	stw	r6,4(sp)
   41074:	d9c00215 	stw	r7,8(sp)
   41078:	21400217 	ldw	r5,8(r4)
   4107c:	d9c00104 	addi	r7,sp,4
   41080:	100d883a 	mov	r6,r2
   41084:	00412400 	call	41240 <___vfprintf_internal_r>
   41088:	dfc00017 	ldw	ra,0(sp)
   4108c:	dec00304 	addi	sp,sp,12
   41090:	f800283a 	ret

00041094 <printf>:
   41094:	defffc04 	addi	sp,sp,-16
   41098:	dfc00015 	stw	ra,0(sp)
   4109c:	d9400115 	stw	r5,4(sp)
   410a0:	d9800215 	stw	r6,8(sp)
   410a4:	d9c00315 	stw	r7,12(sp)
   410a8:	00800174 	movhi	r2,5
   410ac:	1087ad17 	ldw	r2,7860(r2)
   410b0:	200b883a 	mov	r5,r4
   410b4:	d9800104 	addi	r6,sp,4
   410b8:	11000217 	ldw	r4,8(r2)
   410bc:	00433340 	call	43334 <__vfprintf_internal>
   410c0:	dfc00017 	ldw	ra,0(sp)
   410c4:	dec00404 	addi	sp,sp,16
   410c8:	f800283a 	ret

000410cc <_puts_r>:
   410cc:	defff504 	addi	sp,sp,-44
   410d0:	dc000815 	stw	r16,32(sp)
   410d4:	2021883a 	mov	r16,r4
   410d8:	2809883a 	mov	r4,r5
   410dc:	dc400915 	stw	r17,36(sp)
   410e0:	dfc00a15 	stw	ra,40(sp)
   410e4:	2823883a 	mov	r17,r5
   410e8:	00411a80 	call	411a8 <strlen>
   410ec:	11000044 	addi	r4,r2,1
   410f0:	d8800515 	stw	r2,20(sp)
   410f4:	00800044 	movi	r2,1
   410f8:	00c00174 	movhi	r3,5
   410fc:	d8800715 	stw	r2,28(sp)
   41100:	d8800404 	addi	r2,sp,16
   41104:	18ff7204 	addi	r3,r3,-568
   41108:	d8800115 	stw	r2,4(sp)
   4110c:	00800084 	movi	r2,2
   41110:	dc400415 	stw	r17,16(sp)
   41114:	d8c00615 	stw	r3,24(sp)
   41118:	d9000315 	stw	r4,12(sp)
   4111c:	d8800215 	stw	r2,8(sp)
   41120:	81400217 	ldw	r5,8(r16)
   41124:	80000226 	beq	r16,zero,41130 <_puts_r+0x64>
   41128:	80800e17 	ldw	r2,56(r16)
   4112c:	10001326 	beq	r2,zero,4117c <_puts_r+0xb0>
   41130:	2880030b 	ldhu	r2,12(r5)
   41134:	10c8000c 	andi	r3,r2,8192
   41138:	1800061e 	bne	r3,zero,41154 <_puts_r+0x88>
   4113c:	28c01917 	ldw	r3,100(r5)
   41140:	0137ffc4 	movi	r4,-8193
   41144:	10880014 	ori	r2,r2,8192
   41148:	1906703a 	and	r3,r3,r4
   4114c:	2880030d 	sth	r2,12(r5)
   41150:	28c01915 	stw	r3,100(r5)
   41154:	d9800104 	addi	r6,sp,4
   41158:	8009883a 	mov	r4,r16
   4115c:	00459780 	call	45978 <__sfvwrite_r>
   41160:	10000b1e 	bne	r2,zero,41190 <_puts_r+0xc4>
   41164:	00800284 	movi	r2,10
   41168:	dfc00a17 	ldw	ra,40(sp)
   4116c:	dc400917 	ldw	r17,36(sp)
   41170:	dc000817 	ldw	r16,32(sp)
   41174:	dec00b04 	addi	sp,sp,44
   41178:	f800283a 	ret
   4117c:	8009883a 	mov	r4,r16
   41180:	d9400015 	stw	r5,0(sp)
   41184:	00455180 	call	45518 <__sinit>
   41188:	d9400017 	ldw	r5,0(sp)
   4118c:	003fe806 	br	41130 <_puts_r+0x64>
   41190:	00bfffc4 	movi	r2,-1
   41194:	003ff406 	br	41168 <_puts_r+0x9c>

00041198 <puts>:
   41198:	00800174 	movhi	r2,5
   4119c:	200b883a 	mov	r5,r4
   411a0:	1107ad17 	ldw	r4,7860(r2)
   411a4:	00410cc1 	jmpi	410cc <_puts_r>

000411a8 <strlen>:
   411a8:	208000cc 	andi	r2,r4,3
   411ac:	10000926 	beq	r2,zero,411d4 <strlen+0x2c>
   411b0:	2005883a 	mov	r2,r4
   411b4:	00000306 	br	411c4 <strlen+0x1c>
   411b8:	10800044 	addi	r2,r2,1
   411bc:	10c000cc 	andi	r3,r2,3
   411c0:	18000526 	beq	r3,zero,411d8 <strlen+0x30>
   411c4:	10c00007 	ldb	r3,0(r2)
   411c8:	183ffb1e 	bne	r3,zero,411b8 <strlen+0x10>
   411cc:	1105c83a 	sub	r2,r2,r4
   411d0:	f800283a 	ret
   411d4:	2005883a 	mov	r2,r4
   411d8:	11400017 	ldw	r5,0(r2)
   411dc:	01ffbff4 	movhi	r7,65279
   411e0:	39ffbfc4 	addi	r7,r7,-257
   411e4:	29c7883a 	add	r3,r5,r7
   411e8:	01a02074 	movhi	r6,32897
   411ec:	014a303a 	nor	r5,zero,r5
   411f0:	1946703a 	and	r3,r3,r5
   411f4:	31a02004 	addi	r6,r6,-32640
   411f8:	1986703a 	and	r3,r3,r6
   411fc:	1800071e 	bne	r3,zero,4121c <strlen+0x74>
   41200:	11400117 	ldw	r5,4(r2)
   41204:	10800104 	addi	r2,r2,4
   41208:	29c7883a 	add	r3,r5,r7
   4120c:	014a303a 	nor	r5,zero,r5
   41210:	1946703a 	and	r3,r3,r5
   41214:	1986703a 	and	r3,r3,r6
   41218:	183ff926 	beq	r3,zero,41200 <strlen+0x58>
   4121c:	10c00007 	ldb	r3,0(r2)
   41220:	183fea26 	beq	r3,zero,411cc <strlen+0x24>
   41224:	10c00047 	ldb	r3,1(r2)
   41228:	10800044 	addi	r2,r2,1
   4122c:	183fe726 	beq	r3,zero,411cc <strlen+0x24>
   41230:	10c00047 	ldb	r3,1(r2)
   41234:	10800044 	addi	r2,r2,1
   41238:	183ffa1e 	bne	r3,zero,41224 <strlen+0x7c>
   4123c:	003fe306 	br	411cc <strlen+0x24>

00041240 <___vfprintf_internal_r>:
   41240:	deffbf04 	addi	sp,sp,-260
   41244:	dfc04015 	stw	ra,256(sp)
   41248:	dd803d15 	stw	r22,244(sp)
   4124c:	dcc03a15 	stw	r19,232(sp)
   41250:	dc803915 	stw	r18,228(sp)
   41254:	2027883a 	mov	r19,r4
   41258:	2825883a 	mov	r18,r5
   4125c:	302d883a 	mov	r22,r6
   41260:	d9c00615 	stw	r7,24(sp)
   41264:	df003f15 	stw	fp,252(sp)
   41268:	ddc03e15 	stw	r23,248(sp)
   4126c:	dd403c15 	stw	r21,240(sp)
   41270:	dd003b15 	stw	r20,236(sp)
   41274:	dc403815 	stw	r17,224(sp)
   41278:	dc003715 	stw	r16,220(sp)
   4127c:	0045f780 	call	45f78 <_localeconv_r>
   41280:	10800017 	ldw	r2,0(r2)
   41284:	1009883a 	mov	r4,r2
   41288:	d8800d15 	stw	r2,52(sp)
   4128c:	00411a80 	call	411a8 <strlen>
   41290:	d8800b15 	stw	r2,44(sp)
   41294:	98000226 	beq	r19,zero,412a0 <___vfprintf_internal_r+0x60>
   41298:	98800e17 	ldw	r2,56(r19)
   4129c:	1001de26 	beq	r2,zero,41a18 <___vfprintf_internal_r+0x7d8>
   412a0:	9080030b 	ldhu	r2,12(r18)
   412a4:	10c8000c 	andi	r3,r2,8192
   412a8:	1800061e 	bne	r3,zero,412c4 <___vfprintf_internal_r+0x84>
   412ac:	90c01917 	ldw	r3,100(r18)
   412b0:	0137ffc4 	movi	r4,-8193
   412b4:	10880014 	ori	r2,r2,8192
   412b8:	1906703a 	and	r3,r3,r4
   412bc:	9080030d 	sth	r2,12(r18)
   412c0:	90c01915 	stw	r3,100(r18)
   412c4:	10c0020c 	andi	r3,r2,8
   412c8:	1800fa26 	beq	r3,zero,416b4 <___vfprintf_internal_r+0x474>
   412cc:	90c00417 	ldw	r3,16(r18)
   412d0:	1800f826 	beq	r3,zero,416b4 <___vfprintf_internal_r+0x474>
   412d4:	1080068c 	andi	r2,r2,26
   412d8:	10800298 	cmpnei	r2,r2,10
   412dc:	1000fd26 	beq	r2,zero,416d4 <___vfprintf_internal_r+0x494>
   412e0:	d8802704 	addi	r2,sp,156
   412e4:	b02f883a 	mov	r23,r22
   412e8:	d8801a15 	stw	r2,104(sp)
   412ec:	d8001c15 	stw	zero,112(sp)
   412f0:	d8001b15 	stw	zero,108(sp)
   412f4:	d8000815 	stw	zero,32(sp)
   412f8:	d8000915 	stw	zero,36(sp)
   412fc:	d8000a15 	stw	zero,40(sp)
   41300:	d8000c15 	stw	zero,48(sp)
   41304:	d8001015 	stw	zero,64(sp)
   41308:	d8000515 	stw	zero,20(sp)
   4130c:	102d883a 	mov	r22,r2
   41310:	b8800007 	ldb	r2,0(r23)
   41314:	1000d526 	beq	r2,zero,4166c <___vfprintf_internal_r+0x42c>
   41318:	b821883a 	mov	r16,r23
   4131c:	00000306 	br	4132c <___vfprintf_internal_r+0xec>
   41320:	80800047 	ldb	r2,1(r16)
   41324:	84000044 	addi	r16,r16,1
   41328:	10012026 	beq	r2,zero,417ac <___vfprintf_internal_r+0x56c>
   4132c:	10800958 	cmpnei	r2,r2,37
   41330:	103ffb1e 	bne	r2,zero,41320 <___vfprintf_internal_r+0xe0>
   41334:	85e3c83a 	sub	r17,r16,r23
   41338:	85c11e1e 	bne	r16,r23,417b4 <___vfprintf_internal_r+0x574>
   4133c:	80800003 	ldbu	r2,0(r16)
   41340:	10803fcc 	andi	r2,r2,255
   41344:	1080201c 	xori	r2,r2,128
   41348:	10bfe004 	addi	r2,r2,-128
   4134c:	1000c726 	beq	r2,zero,4166c <___vfprintf_internal_r+0x42c>
   41350:	82c00047 	ldb	r11,1(r16)
   41354:	85c00044 	addi	r23,r16,1
   41358:	d8001345 	stb	zero,77(sp)
   4135c:	0009883a 	mov	r4,zero
   41360:	000b883a 	mov	r5,zero
   41364:	023fffc4 	movi	r8,-1
   41368:	0021883a 	mov	r16,zero
   4136c:	0019883a 	mov	r12,zero
   41370:	bdc00044 	addi	r23,r23,1
   41374:	5839883a 	mov	fp,r11
   41378:	e0bff804 	addi	r2,fp,-32
   4137c:	10c01668 	cmpgeui	r3,r2,89
   41380:	18006a1e 	bne	r3,zero,4152c <___vfprintf_internal_r+0x2ec>
   41384:	100490ba 	slli	r2,r2,2
   41388:	00c00134 	movhi	r3,4
   4138c:	10c7883a 	add	r3,r2,r3
   41390:	1884e617 	ldw	r2,5016(r3)
   41394:	1000683a 	jmp	r2
   41398:	00041cd8 	cmpnei	zero,zero,4211
   4139c:	0004152c 	andhi	zero,zero,4180
   413a0:	0004152c 	andhi	zero,zero,4180
   413a4:	00041ccc 	andi	zero,zero,4211
   413a8:	0004152c 	andhi	zero,zero,4180
   413ac:	0004152c 	andhi	zero,zero,4180
   413b0:	0004152c 	andhi	zero,zero,4180
   413b4:	0004152c 	andhi	zero,zero,4180
   413b8:	0004152c 	andhi	zero,zero,4180
   413bc:	0004152c 	andhi	zero,zero,4180
   413c0:	00041ca4 	muli	zero,zero,4210
   413c4:	00041c94 	movui	zero,4210
   413c8:	0004152c 	andhi	zero,zero,4180
   413cc:	00041c7c 	xorhi	zero,zero,4209
   413d0:	00041c38 	rdprs	zero,zero,4208
   413d4:	0004152c 	andhi	zero,zero,4180
   413d8:	00041c2c 	andhi	zero,zero,4208
   413dc:	000414fc 	xorhi	zero,zero,4179
   413e0:	000414fc 	xorhi	zero,zero,4179
   413e4:	000414fc 	xorhi	zero,zero,4179
   413e8:	000414fc 	xorhi	zero,zero,4179
   413ec:	000414fc 	xorhi	zero,zero,4179
   413f0:	000414fc 	xorhi	zero,zero,4179
   413f4:	000414fc 	xorhi	zero,zero,4179
   413f8:	000414fc 	xorhi	zero,zero,4179
   413fc:	000414fc 	xorhi	zero,zero,4179
   41400:	0004152c 	andhi	zero,zero,4180
   41404:	0004152c 	andhi	zero,zero,4180
   41408:	0004152c 	andhi	zero,zero,4180
   4140c:	0004152c 	andhi	zero,zero,4180
   41410:	0004152c 	andhi	zero,zero,4180
   41414:	0004152c 	andhi	zero,zero,4180
   41418:	0004152c 	andhi	zero,zero,4180
   4141c:	0004152c 	andhi	zero,zero,4180
   41420:	0004152c 	andhi	zero,zero,4180
   41424:	0004152c 	andhi	zero,zero,4180
   41428:	00041b44 	movi	zero,4205
   4142c:	00041810 	cmplti	zero,zero,4192
   41430:	0004152c 	andhi	zero,zero,4180
   41434:	00041810 	cmplti	zero,zero,4192
   41438:	0004152c 	andhi	zero,zero,4180
   4143c:	0004152c 	andhi	zero,zero,4180
   41440:	0004152c 	andhi	zero,zero,4180
   41444:	0004152c 	andhi	zero,zero,4180
   41448:	00041b38 	rdprs	zero,zero,4204
   4144c:	0004152c 	andhi	zero,zero,4180
   41450:	0004152c 	andhi	zero,zero,4180
   41454:	00041744 	movi	zero,4189
   41458:	0004152c 	andhi	zero,zero,4180
   4145c:	0004152c 	andhi	zero,zero,4180
   41460:	0004152c 	andhi	zero,zero,4180
   41464:	0004152c 	andhi	zero,zero,4180
   41468:	0004152c 	andhi	zero,zero,4180
   4146c:	0004171c 	xori	zero,zero,4188
   41470:	0004152c 	andhi	zero,zero,4180
   41474:	0004152c 	andhi	zero,zero,4180
   41478:	00041af0 	cmpltui	zero,zero,4203
   4147c:	0004152c 	andhi	zero,zero,4180
   41480:	0004152c 	andhi	zero,zero,4180
   41484:	0004152c 	andhi	zero,zero,4180
   41488:	0004152c 	andhi	zero,zero,4180
   4148c:	0004152c 	andhi	zero,zero,4180
   41490:	0004152c 	andhi	zero,zero,4180
   41494:	0004152c 	andhi	zero,zero,4180
   41498:	0004152c 	andhi	zero,zero,4180
   4149c:	0004152c 	andhi	zero,zero,4180
   414a0:	0004152c 	andhi	zero,zero,4180
   414a4:	00041ac8 	cmpgei	zero,zero,4203
   414a8:	00041a24 	muli	zero,zero,4200
   414ac:	00041810 	cmplti	zero,zero,4192
   414b0:	00041810 	cmplti	zero,zero,4192
   414b4:	00041810 	cmplti	zero,zero,4192
   414b8:	00041abc 	xorhi	zero,zero,4202
   414bc:	00041a24 	muli	zero,zero,4200
   414c0:	0004152c 	andhi	zero,zero,4180
   414c4:	0004152c 	andhi	zero,zero,4180
   414c8:	00041e2c 	andhi	zero,zero,4216
   414cc:	0004152c 	andhi	zero,zero,4180
   414d0:	00041df0 	cmpltui	zero,zero,4215
   414d4:	00041748 	cmpgei	zero,zero,4189
   414d8:	00041db0 	cmpltui	zero,zero,4214
   414dc:	00041da4 	muli	zero,zero,4214
   414e0:	0004152c 	andhi	zero,zero,4180
   414e4:	00041d4c 	andi	zero,zero,4213
   414e8:	0004152c 	andhi	zero,zero,4180
   414ec:	00041720 	cmpeqi	zero,zero,4188
   414f0:	0004152c 	andhi	zero,zero,4180
   414f4:	0004152c 	andhi	zero,zero,4180
   414f8:	00041d04 	movi	zero,4212
   414fc:	0021883a 	mov	r16,zero
   41500:	e0bff404 	addi	r2,fp,-48
   41504:	bf000007 	ldb	fp,0(r23)
   41508:	840002a4 	muli	r16,r16,10
   4150c:	bdc00044 	addi	r23,r23,1
   41510:	1421883a 	add	r16,r2,r16
   41514:	e0bff404 	addi	r2,fp,-48
   41518:	10c002b0 	cmpltui	r3,r2,10
   4151c:	183ff91e 	bne	r3,zero,41504 <___vfprintf_internal_r+0x2c4>
   41520:	e0bff804 	addi	r2,fp,-32
   41524:	10c01668 	cmpgeui	r3,r2,89
   41528:	183f9626 	beq	r3,zero,41384 <___vfprintf_internal_r+0x144>
   4152c:	21003fcc 	andi	r4,r4,255
   41530:	2006851e 	bne	r4,zero,42f48 <___vfprintf_internal_r+0x1d08>
   41534:	e0004d26 	beq	fp,zero,4166c <___vfprintf_internal_r+0x42c>
   41538:	df001d05 	stb	fp,116(sp)
   4153c:	d8001345 	stb	zero,77(sp)
   41540:	05000044 	movi	r20,1
   41544:	05400044 	movi	r21,1
   41548:	dc401d04 	addi	r17,sp,116
   4154c:	db000415 	stw	r12,16(sp)
   41550:	0011883a 	mov	r8,zero
   41554:	d8000715 	stw	zero,28(sp)
   41558:	d8800417 	ldw	r2,16(sp)
   4155c:	1380008c 	andi	r14,r2,2
   41560:	70000126 	beq	r14,zero,41568 <___vfprintf_internal_r+0x328>
   41564:	a5000084 	addi	r20,r20,2
   41568:	d8800417 	ldw	r2,16(sp)
   4156c:	d8c01c17 	ldw	r3,112(sp)
   41570:	1340210c 	andi	r13,r2,132
   41574:	6800021e 	bne	r13,zero,41580 <___vfprintf_internal_r+0x340>
   41578:	850fc83a 	sub	r7,r16,r20
   4157c:	01c34316 	blt	zero,r7,4228c <___vfprintf_internal_r+0x104c>
   41580:	d8801347 	ldb	r2,77(sp)
   41584:	10000c26 	beq	r2,zero,415b8 <___vfprintf_internal_r+0x378>
   41588:	d8801b17 	ldw	r2,108(sp)
   4158c:	d9001344 	addi	r4,sp,77
   41590:	18c00044 	addi	r3,r3,1
   41594:	10800044 	addi	r2,r2,1
   41598:	b1000015 	stw	r4,0(r22)
   4159c:	01000044 	movi	r4,1
   415a0:	d8801b15 	stw	r2,108(sp)
   415a4:	b1000115 	stw	r4,4(r22)
   415a8:	d8c01c15 	stw	r3,112(sp)
   415ac:	10800208 	cmpgei	r2,r2,8
   415b0:	1003771e 	bne	r2,zero,42390 <___vfprintf_internal_r+0x1150>
   415b4:	b5800204 	addi	r22,r22,8
   415b8:	70000c26 	beq	r14,zero,415ec <___vfprintf_internal_r+0x3ac>
   415bc:	d8801b17 	ldw	r2,108(sp)
   415c0:	d9001384 	addi	r4,sp,78
   415c4:	18c00084 	addi	r3,r3,2
   415c8:	10800044 	addi	r2,r2,1
   415cc:	b1000015 	stw	r4,0(r22)
   415d0:	01000084 	movi	r4,2
   415d4:	d8801b15 	stw	r2,108(sp)
   415d8:	b1000115 	stw	r4,4(r22)
   415dc:	d8c01c15 	stw	r3,112(sp)
   415e0:	10800208 	cmpgei	r2,r2,8
   415e4:	1003781e 	bne	r2,zero,423c8 <___vfprintf_internal_r+0x1188>
   415e8:	b5800204 	addi	r22,r22,8
   415ec:	6b402018 	cmpnei	r13,r13,128
   415f0:	68025926 	beq	r13,zero,41f58 <___vfprintf_internal_r+0xd18>
   415f4:	4551c83a 	sub	r8,r8,r21
   415f8:	02029116 	blt	zero,r8,42040 <___vfprintf_internal_r+0xe00>
   415fc:	d8800417 	ldw	r2,16(sp)
   41600:	1080400c 	andi	r2,r2,256
   41604:	10020e1e 	bne	r2,zero,41e40 <___vfprintf_internal_r+0xc00>
   41608:	d8801b17 	ldw	r2,108(sp)
   4160c:	1d47883a 	add	r3,r3,r21
   41610:	b4400015 	stw	r17,0(r22)
   41614:	10800044 	addi	r2,r2,1
   41618:	b5400115 	stw	r21,4(r22)
   4161c:	d8801b15 	stw	r2,108(sp)
   41620:	d8c01c15 	stw	r3,112(sp)
   41624:	10800208 	cmpgei	r2,r2,8
   41628:	10030e1e 	bne	r2,zero,42264 <___vfprintf_internal_r+0x1024>
   4162c:	b5800204 	addi	r22,r22,8
   41630:	d8800417 	ldw	r2,16(sp)
   41634:	1440010c 	andi	r17,r2,4
   41638:	88000226 	beq	r17,zero,41644 <___vfprintf_internal_r+0x404>
   4163c:	8523c83a 	sub	r17,r16,r20
   41640:	0440c616 	blt	zero,r17,4195c <___vfprintf_internal_r+0x71c>
   41644:	8500010e 	bge	r16,r20,4164c <___vfprintf_internal_r+0x40c>
   41648:	a021883a 	mov	r16,r20
   4164c:	d8800517 	ldw	r2,20(sp)
   41650:	1405883a 	add	r2,r2,r16
   41654:	d8800515 	stw	r2,20(sp)
   41658:	1802c01e 	bne	r3,zero,4215c <___vfprintf_internal_r+0xf1c>
   4165c:	b8800007 	ldb	r2,0(r23)
   41660:	d8001b15 	stw	zero,108(sp)
   41664:	dd802704 	addi	r22,sp,156
   41668:	103f2b1e 	bne	r2,zero,41318 <___vfprintf_internal_r+0xd8>
   4166c:	d8801c17 	ldw	r2,112(sp)
   41670:	1006371e 	bne	r2,zero,42f50 <___vfprintf_internal_r+0x1d10>
   41674:	9080030b 	ldhu	r2,12(r18)
   41678:	1080100c 	andi	r2,r2,64
   4167c:	1006cd1e 	bne	r2,zero,431b4 <___vfprintf_internal_r+0x1f74>
   41680:	d8800517 	ldw	r2,20(sp)
   41684:	dfc04017 	ldw	ra,256(sp)
   41688:	df003f17 	ldw	fp,252(sp)
   4168c:	ddc03e17 	ldw	r23,248(sp)
   41690:	dd803d17 	ldw	r22,244(sp)
   41694:	dd403c17 	ldw	r21,240(sp)
   41698:	dd003b17 	ldw	r20,236(sp)
   4169c:	dcc03a17 	ldw	r19,232(sp)
   416a0:	dc803917 	ldw	r18,228(sp)
   416a4:	dc403817 	ldw	r17,224(sp)
   416a8:	dc003717 	ldw	r16,220(sp)
   416ac:	dec04104 	addi	sp,sp,260
   416b0:	f800283a 	ret
   416b4:	900b883a 	mov	r5,r18
   416b8:	9809883a 	mov	r4,r19
   416bc:	00434100 	call	43410 <__swsetup_r>
   416c0:	1006bc1e 	bne	r2,zero,431b4 <___vfprintf_internal_r+0x1f74>
   416c4:	9080030b 	ldhu	r2,12(r18)
   416c8:	1080068c 	andi	r2,r2,26
   416cc:	10800298 	cmpnei	r2,r2,10
   416d0:	103f031e 	bne	r2,zero,412e0 <___vfprintf_internal_r+0xa0>
   416d4:	9080038f 	ldh	r2,14(r18)
   416d8:	103f0116 	blt	r2,zero,412e0 <___vfprintf_internal_r+0xa0>
   416dc:	d9c00617 	ldw	r7,24(sp)
   416e0:	b00d883a 	mov	r6,r22
   416e4:	900b883a 	mov	r5,r18
   416e8:	9809883a 	mov	r4,r19
   416ec:	dfc04017 	ldw	ra,256(sp)
   416f0:	df003f17 	ldw	fp,252(sp)
   416f4:	ddc03e17 	ldw	r23,248(sp)
   416f8:	dd803d17 	ldw	r22,244(sp)
   416fc:	dd403c17 	ldw	r21,240(sp)
   41700:	dd003b17 	ldw	r20,236(sp)
   41704:	dcc03a17 	ldw	r19,232(sp)
   41708:	dc803917 	ldw	r18,228(sp)
   4170c:	dc403817 	ldw	r17,224(sp)
   41710:	dc003717 	ldw	r16,220(sp)
   41714:	dec04104 	addi	sp,sp,260
   41718:	00433501 	jmpi	43350 <__sbprintf>
   4171c:	63000414 	ori	r12,r12,16
   41720:	6080080c 	andi	r2,r12,32
   41724:	10008126 	beq	r2,zero,4192c <___vfprintf_internal_r+0x6ec>
   41728:	d8c00617 	ldw	r3,24(sp)
   4172c:	00800044 	movi	r2,1
   41730:	1d000017 	ldw	r20,0(r3)
   41734:	1d400117 	ldw	r21,4(r3)
   41738:	18c00204 	addi	r3,r3,8
   4173c:	d8c00615 	stw	r3,24(sp)
   41740:	00000906 	br	41768 <___vfprintf_internal_r+0x528>
   41744:	63000414 	ori	r12,r12,16
   41748:	6080080c 	andi	r2,r12,32
   4174c:	10006b26 	beq	r2,zero,418fc <___vfprintf_internal_r+0x6bc>
   41750:	d8c00617 	ldw	r3,24(sp)
   41754:	0005883a 	mov	r2,zero
   41758:	1d000017 	ldw	r20,0(r3)
   4175c:	1d400117 	ldw	r21,4(r3)
   41760:	18c00204 	addi	r3,r3,8
   41764:	d8c00615 	stw	r3,24(sp)
   41768:	d8001345 	stb	zero,77(sp)
   4176c:	40ffffe0 	cmpeqi	r3,r8,-1
   41770:	001b883a 	mov	r13,zero
   41774:	18010e1e 	bne	r3,zero,41bb0 <___vfprintf_internal_r+0x970>
   41778:	047fdfc4 	movi	r17,-129
   4177c:	6448703a 	and	r4,r12,r17
   41780:	a546b03a 	or	r3,r20,r21
   41784:	d9000415 	stw	r4,16(sp)
   41788:	1802be1e 	bne	r3,zero,42284 <___vfprintf_internal_r+0x1044>
   4178c:	40025d1e 	bne	r8,zero,42104 <___vfprintf_internal_r+0xec4>
   41790:	1003731e 	bne	r2,zero,42560 <___vfprintf_internal_r+0x1320>
   41794:	6540004c 	andi	r21,r12,1
   41798:	a803ae26 	beq	r21,zero,42654 <___vfprintf_internal_r+0x1414>
   4179c:	00800c04 	movi	r2,48
   417a0:	d88026c5 	stb	r2,155(sp)
   417a4:	dc4026c4 	addi	r17,sp,155
   417a8:	0000ba06 	br	41a94 <___vfprintf_internal_r+0x854>
   417ac:	85e3c83a 	sub	r17,r16,r23
   417b0:	85ffae26 	beq	r16,r23,4166c <___vfprintf_internal_r+0x42c>
   417b4:	d8c01c17 	ldw	r3,112(sp)
   417b8:	d8801b17 	ldw	r2,108(sp)
   417bc:	b5c00015 	stw	r23,0(r22)
   417c0:	1c47883a 	add	r3,r3,r17
   417c4:	10800044 	addi	r2,r2,1
   417c8:	d8801b15 	stw	r2,108(sp)
   417cc:	b4400115 	stw	r17,4(r22)
   417d0:	d8c01c15 	stw	r3,112(sp)
   417d4:	10800208 	cmpgei	r2,r2,8
   417d8:	1000061e 	bne	r2,zero,417f4 <___vfprintf_internal_r+0x5b4>
   417dc:	b5800204 	addi	r22,r22,8
   417e0:	d8c00517 	ldw	r3,20(sp)
   417e4:	80800003 	ldbu	r2,0(r16)
   417e8:	1c47883a 	add	r3,r3,r17
   417ec:	d8c00515 	stw	r3,20(sp)
   417f0:	003ed306 	br	41340 <___vfprintf_internal_r+0x100>
   417f4:	d9801a04 	addi	r6,sp,104
   417f8:	900b883a 	mov	r5,r18
   417fc:	9809883a 	mov	r4,r19
   41800:	00486f40 	call	486f4 <__sprint_r>
   41804:	103f9b1e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   41808:	dd802704 	addi	r22,sp,156
   4180c:	003ff406 	br	417e0 <___vfprintf_internal_r+0x5a0>
   41810:	21003fcc 	andi	r4,r4,255
   41814:	2006651e 	bne	r4,zero,431ac <___vfprintf_internal_r+0x1f6c>
   41818:	d8c00617 	ldw	r3,24(sp)
   4181c:	6080020c 	andi	r2,r12,8
   41820:	19000204 	addi	r4,r3,8
   41824:	d9000e15 	stw	r4,56(sp)
   41828:	1003a51e 	bne	r2,zero,426c0 <___vfprintf_internal_r+0x1480>
   4182c:	d8800617 	ldw	r2,24(sp)
   41830:	10c00017 	ldw	r3,0(r2)
   41834:	10800117 	ldw	r2,4(r2)
   41838:	d8c00915 	stw	r3,36(sp)
   4183c:	d8800a15 	stw	r2,40(sp)
   41840:	dd400a17 	ldw	r21,40(sp)
   41844:	dd000917 	ldw	r20,36(sp)
   41848:	00a00034 	movhi	r2,32768
   4184c:	10bfffc4 	addi	r2,r2,-1
   41850:	a8a2703a 	and	r17,r21,r2
   41854:	01dffc34 	movhi	r7,32752
   41858:	01bfffc4 	movi	r6,-1
   4185c:	39ffffc4 	addi	r7,r7,-1
   41860:	a009883a 	mov	r4,r20
   41864:	880b883a 	mov	r5,r17
   41868:	da000615 	stw	r8,24(sp)
   4186c:	db000415 	stw	r12,16(sp)
   41870:	004d1a00 	call	4d1a0 <__unorddf2>
   41874:	db000417 	ldw	r12,16(sp)
   41878:	da000617 	ldw	r8,24(sp)
   4187c:	1004621e 	bne	r2,zero,42a08 <___vfprintf_internal_r+0x17c8>
   41880:	01dffc34 	movhi	r7,32752
   41884:	01bfffc4 	movi	r6,-1
   41888:	39ffffc4 	addi	r7,r7,-1
   4188c:	a009883a 	mov	r4,r20
   41890:	880b883a 	mov	r5,r17
   41894:	004c1900 	call	4c190 <__ledf2>
   41898:	db000417 	ldw	r12,16(sp)
   4189c:	da000617 	ldw	r8,24(sp)
   418a0:	0084590e 	bge	zero,r2,42a08 <___vfprintf_internal_r+0x17c8>
   418a4:	000d883a 	mov	r6,zero
   418a8:	000f883a 	mov	r7,zero
   418ac:	a009883a 	mov	r4,r20
   418b0:	a80b883a 	mov	r5,r21
   418b4:	004c1900 	call	4c190 <__ledf2>
   418b8:	db000417 	ldw	r12,16(sp)
   418bc:	10058f16 	blt	r2,zero,42efc <___vfprintf_internal_r+0x1cbc>
   418c0:	db401343 	ldbu	r13,77(sp)
   418c4:	e0801210 	cmplti	r2,fp,72
   418c8:	1005371e 	bne	r2,zero,42da8 <___vfprintf_internal_r+0x1b68>
   418cc:	04400174 	movhi	r17,5
   418d0:	8c7f7404 	addi	r17,r17,-560
   418d4:	00bfdfc4 	movi	r2,-129
   418d8:	6084703a 	and	r2,r12,r2
   418dc:	d8800415 	stw	r2,16(sp)
   418e0:	d8800e17 	ldw	r2,56(sp)
   418e4:	050000c4 	movi	r20,3
   418e8:	054000c4 	movi	r21,3
   418ec:	d8800615 	stw	r2,24(sp)
   418f0:	0011883a 	mov	r8,zero
   418f4:	d8000715 	stw	zero,28(sp)
   418f8:	00006a06 	br	41aa4 <___vfprintf_internal_r+0x864>
   418fc:	d9000617 	ldw	r4,24(sp)
   41900:	6080040c 	andi	r2,r12,16
   41904:	20c00104 	addi	r3,r4,4
   41908:	1003681e 	bne	r2,zero,426ac <___vfprintf_internal_r+0x146c>
   4190c:	6080100c 	andi	r2,r12,64
   41910:	10051f26 	beq	r2,zero,42d90 <___vfprintf_internal_r+0x1b50>
   41914:	d8800617 	ldw	r2,24(sp)
   41918:	002b883a 	mov	r21,zero
   4191c:	d8c00615 	stw	r3,24(sp)
   41920:	1500000b 	ldhu	r20,0(r2)
   41924:	0005883a 	mov	r2,zero
   41928:	003f8f06 	br	41768 <___vfprintf_internal_r+0x528>
   4192c:	d9000617 	ldw	r4,24(sp)
   41930:	6080040c 	andi	r2,r12,16
   41934:	20c00104 	addi	r3,r4,4
   41938:	10034e1e 	bne	r2,zero,42674 <___vfprintf_internal_r+0x1434>
   4193c:	6080100c 	andi	r2,r12,64
   41940:	10055726 	beq	r2,zero,42ea0 <___vfprintf_internal_r+0x1c60>
   41944:	d8800617 	ldw	r2,24(sp)
   41948:	002b883a 	mov	r21,zero
   4194c:	d8c00615 	stw	r3,24(sp)
   41950:	1500000b 	ldhu	r20,0(r2)
   41954:	00800044 	movi	r2,1
   41958:	003f8306 	br	41768 <___vfprintf_internal_r+0x528>
   4195c:	03000174 	movhi	r12,5
   41960:	89000450 	cmplti	r4,r17,17
   41964:	d8801b17 	ldw	r2,108(sp)
   41968:	633f8804 	addi	r12,r12,-480
   4196c:	20001b1e 	bne	r4,zero,419dc <___vfprintf_internal_r+0x79c>
   41970:	05400404 	movi	r21,16
   41974:	6039883a 	mov	fp,r12
   41978:	00000406 	br	4198c <___vfprintf_internal_r+0x74c>
   4197c:	8c7ffc04 	addi	r17,r17,-16
   41980:	89000448 	cmpgei	r4,r17,17
   41984:	b5800204 	addi	r22,r22,8
   41988:	20001326 	beq	r4,zero,419d8 <___vfprintf_internal_r+0x798>
   4198c:	10800044 	addi	r2,r2,1
   41990:	18c00404 	addi	r3,r3,16
   41994:	b7000015 	stw	fp,0(r22)
   41998:	b5400115 	stw	r21,4(r22)
   4199c:	d8c01c15 	stw	r3,112(sp)
   419a0:	d8801b15 	stw	r2,108(sp)
   419a4:	11000208 	cmpgei	r4,r2,8
   419a8:	203ff426 	beq	r4,zero,4197c <___vfprintf_internal_r+0x73c>
   419ac:	d9801a04 	addi	r6,sp,104
   419b0:	900b883a 	mov	r5,r18
   419b4:	9809883a 	mov	r4,r19
   419b8:	00486f40 	call	486f4 <__sprint_r>
   419bc:	103f2d1e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   419c0:	8c7ffc04 	addi	r17,r17,-16
   419c4:	89000448 	cmpgei	r4,r17,17
   419c8:	d8c01c17 	ldw	r3,112(sp)
   419cc:	d8801b17 	ldw	r2,108(sp)
   419d0:	dd802704 	addi	r22,sp,156
   419d4:	203fed1e 	bne	r4,zero,4198c <___vfprintf_internal_r+0x74c>
   419d8:	e019883a 	mov	r12,fp
   419dc:	10800044 	addi	r2,r2,1
   419e0:	1c47883a 	add	r3,r3,r17
   419e4:	d8801b15 	stw	r2,108(sp)
   419e8:	b3000015 	stw	r12,0(r22)
   419ec:	b4400115 	stw	r17,4(r22)
   419f0:	d8c01c15 	stw	r3,112(sp)
   419f4:	10800210 	cmplti	r2,r2,8
   419f8:	103f121e 	bne	r2,zero,41644 <___vfprintf_internal_r+0x404>
   419fc:	d9801a04 	addi	r6,sp,104
   41a00:	900b883a 	mov	r5,r18
   41a04:	9809883a 	mov	r4,r19
   41a08:	00486f40 	call	486f4 <__sprint_r>
   41a0c:	103f191e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   41a10:	d8c01c17 	ldw	r3,112(sp)
   41a14:	003f0b06 	br	41644 <___vfprintf_internal_r+0x404>
   41a18:	9809883a 	mov	r4,r19
   41a1c:	00455180 	call	45518 <__sinit>
   41a20:	003e1f06 	br	412a0 <___vfprintf_internal_r+0x60>
   41a24:	21003fcc 	andi	r4,r4,255
   41a28:	2005dc1e 	bne	r4,zero,4319c <___vfprintf_internal_r+0x1f5c>
   41a2c:	6080080c 	andi	r2,r12,32
   41a30:	10004926 	beq	r2,zero,41b58 <___vfprintf_internal_r+0x918>
   41a34:	d8c00617 	ldw	r3,24(sp)
   41a38:	18800117 	ldw	r2,4(r3)
   41a3c:	1d000017 	ldw	r20,0(r3)
   41a40:	18c00204 	addi	r3,r3,8
   41a44:	d8c00615 	stw	r3,24(sp)
   41a48:	102b883a 	mov	r21,r2
   41a4c:	10004e16 	blt	r2,zero,41b88 <___vfprintf_internal_r+0x948>
   41a50:	40bfffd8 	cmpnei	r2,r8,-1
   41a54:	db401343 	ldbu	r13,77(sp)
   41a58:	10000626 	beq	r2,zero,41a74 <___vfprintf_internal_r+0x834>
   41a5c:	047fdfc4 	movi	r17,-129
   41a60:	6446703a 	and	r3,r12,r17
   41a64:	a544b03a 	or	r2,r20,r21
   41a68:	d8c00415 	stw	r3,16(sp)
   41a6c:	1002bb26 	beq	r2,zero,4255c <___vfprintf_internal_r+0x131c>
   41a70:	db000417 	ldw	r12,16(sp)
   41a74:	a8036e1e 	bne	r21,zero,42830 <___vfprintf_internal_r+0x15f0>
   41a78:	a08002a8 	cmpgeui	r2,r20,10
   41a7c:	10036c1e 	bne	r2,zero,42830 <___vfprintf_internal_r+0x15f0>
   41a80:	a5000c04 	addi	r20,r20,48
   41a84:	dd0026c5 	stb	r20,155(sp)
   41a88:	db000415 	stw	r12,16(sp)
   41a8c:	05400044 	movi	r21,1
   41a90:	dc4026c4 	addi	r17,sp,155
   41a94:	4029883a 	mov	r20,r8
   41a98:	4540010e 	bge	r8,r21,41aa0 <___vfprintf_internal_r+0x860>
   41a9c:	a829883a 	mov	r20,r21
   41aa0:	d8000715 	stw	zero,28(sp)
   41aa4:	6b403fcc 	andi	r13,r13,255
   41aa8:	6b40201c 	xori	r13,r13,128
   41aac:	6b7fe004 	addi	r13,r13,-128
   41ab0:	683ea926 	beq	r13,zero,41558 <___vfprintf_internal_r+0x318>
   41ab4:	a5000044 	addi	r20,r20,1
   41ab8:	003ea706 	br	41558 <___vfprintf_internal_r+0x318>
   41abc:	bac00007 	ldb	r11,0(r23)
   41ac0:	63001014 	ori	r12,r12,64
   41ac4:	003e2a06 	br	41370 <___vfprintf_internal_r+0x130>
   41ac8:	d8c00617 	ldw	r3,24(sp)
   41acc:	d8001345 	stb	zero,77(sp)
   41ad0:	05000044 	movi	r20,1
   41ad4:	18800017 	ldw	r2,0(r3)
   41ad8:	18c00104 	addi	r3,r3,4
   41adc:	d8c00615 	stw	r3,24(sp)
   41ae0:	d8801d05 	stb	r2,116(sp)
   41ae4:	05400044 	movi	r21,1
   41ae8:	dc401d04 	addi	r17,sp,116
   41aec:	003e9706 	br	4154c <___vfprintf_internal_r+0x30c>
   41af0:	21003fcc 	andi	r4,r4,255
   41af4:	2005a51e 	bne	r4,zero,4318c <___vfprintf_internal_r+0x1f4c>
   41af8:	00800174 	movhi	r2,5
   41afc:	10bf7c04 	addi	r2,r2,-528
   41b00:	d8800c15 	stw	r2,48(sp)
   41b04:	6080080c 	andi	r2,r12,32
   41b08:	10008526 	beq	r2,zero,41d20 <___vfprintf_internal_r+0xae0>
   41b0c:	d8800617 	ldw	r2,24(sp)
   41b10:	15000017 	ldw	r20,0(r2)
   41b14:	15400117 	ldw	r21,4(r2)
   41b18:	10800204 	addi	r2,r2,8
   41b1c:	d8800615 	stw	r2,24(sp)
   41b20:	6080004c 	andi	r2,r12,1
   41b24:	10000226 	beq	r2,zero,41b30 <___vfprintf_internal_r+0x8f0>
   41b28:	a544b03a 	or	r2,r20,r21
   41b2c:	1002cb1e 	bne	r2,zero,4265c <___vfprintf_internal_r+0x141c>
   41b30:	00800084 	movi	r2,2
   41b34:	003f0c06 	br	41768 <___vfprintf_internal_r+0x528>
   41b38:	bac00007 	ldb	r11,0(r23)
   41b3c:	63000214 	ori	r12,r12,8
   41b40:	003e0b06 	br	41370 <___vfprintf_internal_r+0x130>
   41b44:	21003fcc 	andi	r4,r4,255
   41b48:	2005961e 	bne	r4,zero,431a4 <___vfprintf_internal_r+0x1f64>
   41b4c:	63000414 	ori	r12,r12,16
   41b50:	6080080c 	andi	r2,r12,32
   41b54:	103fb71e 	bne	r2,zero,41a34 <___vfprintf_internal_r+0x7f4>
   41b58:	d9000617 	ldw	r4,24(sp)
   41b5c:	6080040c 	andi	r2,r12,16
   41b60:	20c00104 	addi	r3,r4,4
   41b64:	1002db1e 	bne	r2,zero,426d4 <___vfprintf_internal_r+0x1494>
   41b68:	6080100c 	andi	r2,r12,64
   41b6c:	10048226 	beq	r2,zero,42d78 <___vfprintf_internal_r+0x1b38>
   41b70:	d8800617 	ldw	r2,24(sp)
   41b74:	d8c00615 	stw	r3,24(sp)
   41b78:	1500000f 	ldh	r20,0(r2)
   41b7c:	a02bd7fa 	srai	r21,r20,31
   41b80:	a805883a 	mov	r2,r21
   41b84:	103fb20e 	bge	r2,zero,41a50 <___vfprintf_internal_r+0x810>
   41b88:	a004c03a 	cmpne	r2,r20,zero
   41b8c:	056bc83a 	sub	r21,zero,r21
   41b90:	a8abc83a 	sub	r21,r21,r2
   41b94:	00800b44 	movi	r2,45
   41b98:	d8801345 	stb	r2,77(sp)
   41b9c:	40ffffe0 	cmpeqi	r3,r8,-1
   41ba0:	0529c83a 	sub	r20,zero,r20
   41ba4:	03400b44 	movi	r13,45
   41ba8:	00800044 	movi	r2,1
   41bac:	183ef226 	beq	r3,zero,41778 <___vfprintf_internal_r+0x538>
   41bb0:	10c00060 	cmpeqi	r3,r2,1
   41bb4:	183faf1e 	bne	r3,zero,41a74 <___vfprintf_internal_r+0x834>
   41bb8:	108000a0 	cmpeqi	r2,r2,2
   41bbc:	1001561e 	bne	r2,zero,42118 <___vfprintf_internal_r+0xed8>
   41bc0:	dc402704 	addi	r17,sp,156
   41bc4:	a006d0fa 	srli	r3,r20,3
   41bc8:	a808977a 	slli	r4,r21,29
   41bcc:	a82ad0fa 	srli	r21,r21,3
   41bd0:	a50001cc 	andi	r20,r20,7
   41bd4:	a0800c04 	addi	r2,r20,48
   41bd8:	20e8b03a 	or	r20,r4,r3
   41bdc:	88bfffc5 	stb	r2,-1(r17)
   41be0:	a546b03a 	or	r3,r20,r21
   41be4:	880b883a 	mov	r5,r17
   41be8:	8c7fffc4 	addi	r17,r17,-1
   41bec:	183ff51e 	bne	r3,zero,41bc4 <___vfprintf_internal_r+0x984>
   41bf0:	60c0004c 	andi	r3,r12,1
   41bf4:	18015526 	beq	r3,zero,4214c <___vfprintf_internal_r+0xf0c>
   41bf8:	10803fcc 	andi	r2,r2,255
   41bfc:	1080201c 	xori	r2,r2,128
   41c00:	10bfe004 	addi	r2,r2,-128
   41c04:	10800c18 	cmpnei	r2,r2,48
   41c08:	10015026 	beq	r2,zero,4214c <___vfprintf_internal_r+0xf0c>
   41c0c:	00800c04 	movi	r2,48
   41c10:	297fff84 	addi	r5,r5,-2
   41c14:	88bfffc5 	stb	r2,-1(r17)
   41c18:	d8802704 	addi	r2,sp,156
   41c1c:	116bc83a 	sub	r21,r2,r5
   41c20:	db000415 	stw	r12,16(sp)
   41c24:	2823883a 	mov	r17,r5
   41c28:	003f9a06 	br	41a94 <___vfprintf_internal_r+0x854>
   41c2c:	bac00007 	ldb	r11,0(r23)
   41c30:	63002014 	ori	r12,r12,128
   41c34:	003dce06 	br	41370 <___vfprintf_internal_r+0x130>
   41c38:	bf000007 	ldb	fp,0(r23)
   41c3c:	b8c00044 	addi	r3,r23,1
   41c40:	e0800aa0 	cmpeqi	r2,fp,42
   41c44:	1005af1e 	bne	r2,zero,43304 <___vfprintf_internal_r+0x20c4>
   41c48:	e0bff404 	addi	r2,fp,-48
   41c4c:	118002b0 	cmpltui	r6,r2,10
   41c50:	182f883a 	mov	r23,r3
   41c54:	0011883a 	mov	r8,zero
   41c58:	303dc726 	beq	r6,zero,41378 <___vfprintf_internal_r+0x138>
   41c5c:	bf000007 	ldb	fp,0(r23)
   41c60:	420002a4 	muli	r8,r8,10
   41c64:	bdc00044 	addi	r23,r23,1
   41c68:	4091883a 	add	r8,r8,r2
   41c6c:	e0bff404 	addi	r2,fp,-48
   41c70:	10c002b0 	cmpltui	r3,r2,10
   41c74:	183ff91e 	bne	r3,zero,41c5c <___vfprintf_internal_r+0xa1c>
   41c78:	003dbf06 	br	41378 <___vfprintf_internal_r+0x138>
   41c7c:	bf000003 	ldbu	fp,0(r23)
   41c80:	e2c03fcc 	andi	r11,fp,255
   41c84:	5ac0201c 	xori	r11,r11,128
   41c88:	63000114 	ori	r12,r12,4
   41c8c:	5affe004 	addi	r11,r11,-128
   41c90:	003db706 	br	41370 <___vfprintf_internal_r+0x130>
   41c94:	bac00007 	ldb	r11,0(r23)
   41c98:	01000044 	movi	r4,1
   41c9c:	01400ac4 	movi	r5,43
   41ca0:	003db306 	br	41370 <___vfprintf_internal_r+0x130>
   41ca4:	d8800617 	ldw	r2,24(sp)
   41ca8:	bf000003 	ldbu	fp,0(r23)
   41cac:	14000017 	ldw	r16,0(r2)
   41cb0:	10800104 	addi	r2,r2,4
   41cb4:	80028c16 	blt	r16,zero,426e8 <___vfprintf_internal_r+0x14a8>
   41cb8:	d8800615 	stw	r2,24(sp)
   41cbc:	e2c03fcc 	andi	r11,fp,255
   41cc0:	5ac0201c 	xori	r11,r11,128
   41cc4:	5affe004 	addi	r11,r11,-128
   41cc8:	003da906 	br	41370 <___vfprintf_internal_r+0x130>
   41ccc:	bac00007 	ldb	r11,0(r23)
   41cd0:	63000054 	ori	r12,r12,1
   41cd4:	003da606 	br	41370 <___vfprintf_internal_r+0x130>
   41cd8:	28803fcc 	andi	r2,r5,255
   41cdc:	1080201c 	xori	r2,r2,128
   41ce0:	10bfe004 	addi	r2,r2,-128
   41ce4:	bf000003 	ldbu	fp,0(r23)
   41ce8:	103ff41e 	bne	r2,zero,41cbc <___vfprintf_internal_r+0xa7c>
   41cec:	e2c03fcc 	andi	r11,fp,255
   41cf0:	5ac0201c 	xori	r11,r11,128
   41cf4:	01000044 	movi	r4,1
   41cf8:	01400804 	movi	r5,32
   41cfc:	5affe004 	addi	r11,r11,-128
   41d00:	003d9b06 	br	41370 <___vfprintf_internal_r+0x130>
   41d04:	21003fcc 	andi	r4,r4,255
   41d08:	20051e1e 	bne	r4,zero,43184 <___vfprintf_internal_r+0x1f44>
   41d0c:	00800174 	movhi	r2,5
   41d10:	10bf7704 	addi	r2,r2,-548
   41d14:	d8800c15 	stw	r2,48(sp)
   41d18:	6080080c 	andi	r2,r12,32
   41d1c:	103f7b1e 	bne	r2,zero,41b0c <___vfprintf_internal_r+0x8cc>
   41d20:	d9000617 	ldw	r4,24(sp)
   41d24:	6080040c 	andi	r2,r12,16
   41d28:	20c00104 	addi	r3,r4,4
   41d2c:	10025b1e 	bne	r2,zero,4269c <___vfprintf_internal_r+0x145c>
   41d30:	6080100c 	andi	r2,r12,64
   41d34:	10046026 	beq	r2,zero,42eb8 <___vfprintf_internal_r+0x1c78>
   41d38:	d8800617 	ldw	r2,24(sp)
   41d3c:	002b883a 	mov	r21,zero
   41d40:	d8c00615 	stw	r3,24(sp)
   41d44:	1500000b 	ldhu	r20,0(r2)
   41d48:	003f7506 	br	41b20 <___vfprintf_internal_r+0x8e0>
   41d4c:	d8800617 	ldw	r2,24(sp)
   41d50:	d8001345 	stb	zero,77(sp)
   41d54:	14400017 	ldw	r17,0(r2)
   41d58:	10c00104 	addi	r3,r2,4
   41d5c:	88028e26 	beq	r17,zero,42798 <___vfprintf_internal_r+0x1558>
   41d60:	40bfffe0 	cmpeqi	r2,r8,-1
   41d64:	1003c01e 	bne	r2,zero,42c68 <___vfprintf_internal_r+0x1a28>
   41d68:	400d883a 	mov	r6,r8
   41d6c:	000b883a 	mov	r5,zero
   41d70:	8809883a 	mov	r4,r17
   41d74:	d8c00715 	stw	r3,28(sp)
   41d78:	db000615 	stw	r12,24(sp)
   41d7c:	da000415 	stw	r8,16(sp)
   41d80:	00469b80 	call	469b8 <memchr>
   41d84:	da000417 	ldw	r8,16(sp)
   41d88:	db000617 	ldw	r12,24(sp)
   41d8c:	d8c00717 	ldw	r3,28(sp)
   41d90:	1004ec26 	beq	r2,zero,43144 <___vfprintf_internal_r+0x1f04>
   41d94:	146bc83a 	sub	r21,r2,r17
   41d98:	a829883a 	mov	r20,r21
   41d9c:	d8c00615 	stw	r3,24(sp)
   41da0:	003dea06 	br	4154c <___vfprintf_internal_r+0x30c>
   41da4:	bac00007 	ldb	r11,0(r23)
   41da8:	63000814 	ori	r12,r12,32
   41dac:	003d7006 	br	41370 <___vfprintf_internal_r+0x130>
   41db0:	d8c00617 	ldw	r3,24(sp)
   41db4:	00800c04 	movi	r2,48
   41db8:	d8801385 	stb	r2,78(sp)
   41dbc:	00801e04 	movi	r2,120
   41dc0:	01000174 	movhi	r4,5
   41dc4:	d88013c5 	stb	r2,79(sp)
   41dc8:	18800104 	addi	r2,r3,4
   41dcc:	d8800615 	stw	r2,24(sp)
   41dd0:	20bf7704 	addi	r2,r4,-548
   41dd4:	d8800c15 	stw	r2,48(sp)
   41dd8:	1d000017 	ldw	r20,0(r3)
   41ddc:	002b883a 	mov	r21,zero
   41de0:	63000094 	ori	r12,r12,2
   41de4:	00800084 	movi	r2,2
   41de8:	07001e04 	movi	fp,120
   41dec:	003e5e06 	br	41768 <___vfprintf_internal_r+0x528>
   41df0:	21003fcc 	andi	r4,r4,255
   41df4:	2004e71e 	bne	r4,zero,43194 <___vfprintf_internal_r+0x1f54>
   41df8:	d9000617 	ldw	r4,24(sp)
   41dfc:	6080080c 	andi	r2,r12,32
   41e00:	20c00017 	ldw	r3,0(r4)
   41e04:	21000104 	addi	r4,r4,4
   41e08:	d9000615 	stw	r4,24(sp)
   41e0c:	10021e1e 	bne	r2,zero,42688 <___vfprintf_internal_r+0x1448>
   41e10:	6080040c 	andi	r2,r12,16
   41e14:	1002ae1e 	bne	r2,zero,428d0 <___vfprintf_internal_r+0x1690>
   41e18:	6300100c 	andi	r12,r12,64
   41e1c:	6002ac26 	beq	r12,zero,428d0 <___vfprintf_internal_r+0x1690>
   41e20:	d8800517 	ldw	r2,20(sp)
   41e24:	1880000d 	sth	r2,0(r3)
   41e28:	003d3906 	br	41310 <___vfprintf_internal_r+0xd0>
   41e2c:	bac00007 	ldb	r11,0(r23)
   41e30:	58801b18 	cmpnei	r2,r11,108
   41e34:	10024926 	beq	r2,zero,4275c <___vfprintf_internal_r+0x151c>
   41e38:	63000414 	ori	r12,r12,16
   41e3c:	003d4c06 	br	41370 <___vfprintf_internal_r+0x130>
   41e40:	e2c01990 	cmplti	r11,fp,102
   41e44:	5800cb1e 	bne	r11,zero,42174 <___vfprintf_internal_r+0xf34>
   41e48:	d9000917 	ldw	r4,36(sp)
   41e4c:	d9400a17 	ldw	r5,40(sp)
   41e50:	000d883a 	mov	r6,zero
   41e54:	000f883a 	mov	r7,zero
   41e58:	d8c00e15 	stw	r3,56(sp)
   41e5c:	004c0280 	call	4c028 <__eqdf2>
   41e60:	d8c00e17 	ldw	r3,56(sp)
   41e64:	1001641e 	bne	r2,zero,423f8 <___vfprintf_internal_r+0x11b8>
   41e68:	d8801b17 	ldw	r2,108(sp)
   41e6c:	01000174 	movhi	r4,5
   41e70:	213f8304 	addi	r4,r4,-500
   41e74:	10800044 	addi	r2,r2,1
   41e78:	18c00044 	addi	r3,r3,1
   41e7c:	b1000015 	stw	r4,0(r22)
   41e80:	01000044 	movi	r4,1
   41e84:	d8801b15 	stw	r2,108(sp)
   41e88:	b1000115 	stw	r4,4(r22)
   41e8c:	d8c01c15 	stw	r3,112(sp)
   41e90:	10800208 	cmpgei	r2,r2,8
   41e94:	1003621e 	bne	r2,zero,42c20 <___vfprintf_internal_r+0x19e0>
   41e98:	b5800204 	addi	r22,r22,8
   41e9c:	d8801417 	ldw	r2,80(sp)
   41ea0:	d9000817 	ldw	r4,32(sp)
   41ea4:	1101e70e 	bge	r2,r4,42644 <___vfprintf_internal_r+0x1404>
   41ea8:	d8800d17 	ldw	r2,52(sp)
   41eac:	d9000b17 	ldw	r4,44(sp)
   41eb0:	b0800015 	stw	r2,0(r22)
   41eb4:	d8801b17 	ldw	r2,108(sp)
   41eb8:	1907883a 	add	r3,r3,r4
   41ebc:	b1000115 	stw	r4,4(r22)
   41ec0:	10800044 	addi	r2,r2,1
   41ec4:	d8801b15 	stw	r2,108(sp)
   41ec8:	d8c01c15 	stw	r3,112(sp)
   41ecc:	10800208 	cmpgei	r2,r2,8
   41ed0:	1002291e 	bne	r2,zero,42778 <___vfprintf_internal_r+0x1538>
   41ed4:	b5800204 	addi	r22,r22,8
   41ed8:	d8800817 	ldw	r2,32(sp)
   41edc:	157fffc4 	addi	r21,r2,-1
   41ee0:	057dd30e 	bge	zero,r21,41630 <___vfprintf_internal_r+0x3f0>
   41ee4:	01c00174 	movhi	r7,5
   41ee8:	a9000450 	cmplti	r4,r21,17
   41eec:	d8801b17 	ldw	r2,108(sp)
   41ef0:	39ff8404 	addi	r7,r7,-496
   41ef4:	2003461e 	bne	r4,zero,42c10 <___vfprintf_internal_r+0x19d0>
   41ef8:	07000404 	movi	fp,16
   41efc:	3823883a 	mov	r17,r7
   41f00:	00000406 	br	41f14 <___vfprintf_internal_r+0xcd4>
   41f04:	b5800204 	addi	r22,r22,8
   41f08:	ad7ffc04 	addi	r21,r21,-16
   41f0c:	a9000448 	cmpgei	r4,r21,17
   41f10:	20033e26 	beq	r4,zero,42c0c <___vfprintf_internal_r+0x19cc>
   41f14:	10800044 	addi	r2,r2,1
   41f18:	18c00404 	addi	r3,r3,16
   41f1c:	b4400015 	stw	r17,0(r22)
   41f20:	b7000115 	stw	fp,4(r22)
   41f24:	d8c01c15 	stw	r3,112(sp)
   41f28:	d8801b15 	stw	r2,108(sp)
   41f2c:	11000208 	cmpgei	r4,r2,8
   41f30:	203ff426 	beq	r4,zero,41f04 <___vfprintf_internal_r+0xcc4>
   41f34:	d9801a04 	addi	r6,sp,104
   41f38:	900b883a 	mov	r5,r18
   41f3c:	9809883a 	mov	r4,r19
   41f40:	00486f40 	call	486f4 <__sprint_r>
   41f44:	103dcb1e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   41f48:	d8c01c17 	ldw	r3,112(sp)
   41f4c:	d8801b17 	ldw	r2,108(sp)
   41f50:	dd802704 	addi	r22,sp,156
   41f54:	003fec06 	br	41f08 <___vfprintf_internal_r+0xcc8>
   41f58:	8519c83a 	sub	r12,r16,r20
   41f5c:	033da50e 	bge	zero,r12,415f4 <___vfprintf_internal_r+0x3b4>
   41f60:	01c00174 	movhi	r7,5
   41f64:	61000450 	cmplti	r4,r12,17
   41f68:	d8801b17 	ldw	r2,108(sp)
   41f6c:	39ff8404 	addi	r7,r7,-496
   41f70:	2000281e 	bne	r4,zero,42014 <___vfprintf_internal_r+0xdd4>
   41f74:	dc400e15 	stw	r17,56(sp)
   41f78:	dc000f15 	stw	r16,60(sp)
   41f7c:	b009883a 	mov	r4,r22
   41f80:	03400404 	movi	r13,16
   41f84:	a02d883a 	mov	r22,r20
   41f88:	6021883a 	mov	r16,r12
   41f8c:	4029883a 	mov	r20,r8
   41f90:	3823883a 	mov	r17,r7
   41f94:	00000406 	br	41fa8 <___vfprintf_internal_r+0xd68>
   41f98:	843ffc04 	addi	r16,r16,-16
   41f9c:	81400448 	cmpgei	r5,r16,17
   41fa0:	21000204 	addi	r4,r4,8
   41fa4:	28001426 	beq	r5,zero,41ff8 <___vfprintf_internal_r+0xdb8>
   41fa8:	10800044 	addi	r2,r2,1
   41fac:	18c00404 	addi	r3,r3,16
   41fb0:	24400015 	stw	r17,0(r4)
   41fb4:	23400115 	stw	r13,4(r4)
   41fb8:	d8c01c15 	stw	r3,112(sp)
   41fbc:	d8801b15 	stw	r2,108(sp)
   41fc0:	11400208 	cmpgei	r5,r2,8
   41fc4:	283ff426 	beq	r5,zero,41f98 <___vfprintf_internal_r+0xd58>
   41fc8:	d9801a04 	addi	r6,sp,104
   41fcc:	900b883a 	mov	r5,r18
   41fd0:	9809883a 	mov	r4,r19
   41fd4:	00486f40 	call	486f4 <__sprint_r>
   41fd8:	103da61e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   41fdc:	843ffc04 	addi	r16,r16,-16
   41fe0:	81400448 	cmpgei	r5,r16,17
   41fe4:	d8c01c17 	ldw	r3,112(sp)
   41fe8:	d8801b17 	ldw	r2,108(sp)
   41fec:	d9002704 	addi	r4,sp,156
   41ff0:	03400404 	movi	r13,16
   41ff4:	283fec1e 	bne	r5,zero,41fa8 <___vfprintf_internal_r+0xd68>
   41ff8:	8019883a 	mov	r12,r16
   41ffc:	880f883a 	mov	r7,r17
   42000:	dc000f17 	ldw	r16,60(sp)
   42004:	dc400e17 	ldw	r17,56(sp)
   42008:	a011883a 	mov	r8,r20
   4200c:	b029883a 	mov	r20,r22
   42010:	202d883a 	mov	r22,r4
   42014:	10800044 	addi	r2,r2,1
   42018:	1b07883a 	add	r3,r3,r12
   4201c:	d8801b15 	stw	r2,108(sp)
   42020:	b1c00015 	stw	r7,0(r22)
   42024:	b3000115 	stw	r12,4(r22)
   42028:	d8c01c15 	stw	r3,112(sp)
   4202c:	10800208 	cmpgei	r2,r2,8
   42030:	1003031e 	bne	r2,zero,42c40 <___vfprintf_internal_r+0x1a00>
   42034:	4551c83a 	sub	r8,r8,r21
   42038:	b5800204 	addi	r22,r22,8
   4203c:	023d6f0e 	bge	zero,r8,415fc <___vfprintf_internal_r+0x3bc>
   42040:	01c00174 	movhi	r7,5
   42044:	41000450 	cmplti	r4,r8,17
   42048:	d8801b17 	ldw	r2,108(sp)
   4204c:	39ff8404 	addi	r7,r7,-496
   42050:	2000221e 	bne	r4,zero,420dc <___vfprintf_internal_r+0xe9c>
   42054:	dc400e15 	stw	r17,56(sp)
   42058:	dc000f15 	stw	r16,60(sp)
   4205c:	03000404 	movi	r12,16
   42060:	4021883a 	mov	r16,r8
   42064:	3823883a 	mov	r17,r7
   42068:	00000406 	br	4207c <___vfprintf_internal_r+0xe3c>
   4206c:	843ffc04 	addi	r16,r16,-16
   42070:	81000448 	cmpgei	r4,r16,17
   42074:	b5800204 	addi	r22,r22,8
   42078:	20001426 	beq	r4,zero,420cc <___vfprintf_internal_r+0xe8c>
   4207c:	10800044 	addi	r2,r2,1
   42080:	18c00404 	addi	r3,r3,16
   42084:	b4400015 	stw	r17,0(r22)
   42088:	b3000115 	stw	r12,4(r22)
   4208c:	d8c01c15 	stw	r3,112(sp)
   42090:	d8801b15 	stw	r2,108(sp)
   42094:	11000208 	cmpgei	r4,r2,8
   42098:	203ff426 	beq	r4,zero,4206c <___vfprintf_internal_r+0xe2c>
   4209c:	d9801a04 	addi	r6,sp,104
   420a0:	900b883a 	mov	r5,r18
   420a4:	9809883a 	mov	r4,r19
   420a8:	00486f40 	call	486f4 <__sprint_r>
   420ac:	103d711e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   420b0:	843ffc04 	addi	r16,r16,-16
   420b4:	81000448 	cmpgei	r4,r16,17
   420b8:	d8c01c17 	ldw	r3,112(sp)
   420bc:	d8801b17 	ldw	r2,108(sp)
   420c0:	dd802704 	addi	r22,sp,156
   420c4:	03000404 	movi	r12,16
   420c8:	203fec1e 	bne	r4,zero,4207c <___vfprintf_internal_r+0xe3c>
   420cc:	8011883a 	mov	r8,r16
   420d0:	880f883a 	mov	r7,r17
   420d4:	dc000f17 	ldw	r16,60(sp)
   420d8:	dc400e17 	ldw	r17,56(sp)
   420dc:	10800044 	addi	r2,r2,1
   420e0:	1a07883a 	add	r3,r3,r8
   420e4:	d8801b15 	stw	r2,108(sp)
   420e8:	b1c00015 	stw	r7,0(r22)
   420ec:	b2000115 	stw	r8,4(r22)
   420f0:	d8c01c15 	stw	r3,112(sp)
   420f4:	10800208 	cmpgei	r2,r2,8
   420f8:	10014a1e 	bne	r2,zero,42624 <___vfprintf_internal_r+0x13e4>
   420fc:	b5800204 	addi	r22,r22,8
   42100:	003d3e06 	br	415fc <___vfprintf_internal_r+0x3bc>
   42104:	10c00060 	cmpeqi	r3,r2,1
   42108:	1803bc1e 	bne	r3,zero,42ffc <___vfprintf_internal_r+0x1dbc>
   4210c:	108000a0 	cmpeqi	r2,r2,2
   42110:	db000417 	ldw	r12,16(sp)
   42114:	103eaa26 	beq	r2,zero,41bc0 <___vfprintf_internal_r+0x980>
   42118:	d9000c17 	ldw	r4,48(sp)
   4211c:	dc402704 	addi	r17,sp,156
   42120:	a08003cc 	andi	r2,r20,15
   42124:	a806973a 	slli	r3,r21,28
   42128:	a028d13a 	srli	r20,r20,4
   4212c:	2085883a 	add	r2,r4,r2
   42130:	10800003 	ldbu	r2,0(r2)
   42134:	a82ad13a 	srli	r21,r21,4
   42138:	1d28b03a 	or	r20,r3,r20
   4213c:	88bfffc5 	stb	r2,-1(r17)
   42140:	a544b03a 	or	r2,r20,r21
   42144:	8c7fffc4 	addi	r17,r17,-1
   42148:	103ff51e 	bne	r2,zero,42120 <___vfprintf_internal_r+0xee0>
   4214c:	d8802704 	addi	r2,sp,156
   42150:	146bc83a 	sub	r21,r2,r17
   42154:	db000415 	stw	r12,16(sp)
   42158:	003e4e06 	br	41a94 <___vfprintf_internal_r+0x854>
   4215c:	d9801a04 	addi	r6,sp,104
   42160:	900b883a 	mov	r5,r18
   42164:	9809883a 	mov	r4,r19
   42168:	00486f40 	call	486f4 <__sprint_r>
   4216c:	103d3b26 	beq	r2,zero,4165c <___vfprintf_internal_r+0x41c>
   42170:	003d4006 	br	41674 <___vfprintf_internal_r+0x434>
   42174:	d8800817 	ldw	r2,32(sp)
   42178:	da001b17 	ldw	r8,108(sp)
   4217c:	18c00044 	addi	r3,r3,1
   42180:	10800088 	cmpgei	r2,r2,2
   42184:	45400044 	addi	r21,r8,1
   42188:	b7000204 	addi	fp,r22,8
   4218c:	1000f826 	beq	r2,zero,42570 <___vfprintf_internal_r+0x1330>
   42190:	00800044 	movi	r2,1
   42194:	b0800115 	stw	r2,4(r22)
   42198:	b4400015 	stw	r17,0(r22)
   4219c:	d8c01c15 	stw	r3,112(sp)
   421a0:	dd401b15 	stw	r21,108(sp)
   421a4:	a8800210 	cmplti	r2,r21,8
   421a8:	1001cc26 	beq	r2,zero,428dc <___vfprintf_internal_r+0x169c>
   421ac:	d8800b17 	ldw	r2,44(sp)
   421b0:	d9000d17 	ldw	r4,52(sp)
   421b4:	ad400044 	addi	r21,r21,1
   421b8:	1887883a 	add	r3,r3,r2
   421bc:	e0800115 	stw	r2,4(fp)
   421c0:	e1000015 	stw	r4,0(fp)
   421c4:	d8c01c15 	stw	r3,112(sp)
   421c8:	dd401b15 	stw	r21,108(sp)
   421cc:	a8800208 	cmpgei	r2,r21,8
   421d0:	1001cb1e 	bne	r2,zero,42900 <___vfprintf_internal_r+0x16c0>
   421d4:	e7000204 	addi	fp,fp,8
   421d8:	d9000917 	ldw	r4,36(sp)
   421dc:	d9400a17 	ldw	r5,40(sp)
   421e0:	aa000044 	addi	r8,r21,1
   421e4:	000d883a 	mov	r6,zero
   421e8:	000f883a 	mov	r7,zero
   421ec:	d8c00e15 	stw	r3,56(sp)
   421f0:	da000715 	stw	r8,28(sp)
   421f4:	004c0280 	call	4c028 <__eqdf2>
   421f8:	d8c00817 	ldw	r3,32(sp)
   421fc:	da000717 	ldw	r8,28(sp)
   42200:	e5800204 	addi	r22,fp,8
   42204:	1affffc4 	addi	r11,r3,-1
   42208:	d8c00e17 	ldw	r3,56(sp)
   4220c:	1000e526 	beq	r2,zero,425a4 <___vfprintf_internal_r+0x1364>
   42210:	8a400044 	addi	r9,r17,1
   42214:	1ac7883a 	add	r3,r3,r11
   42218:	da001b15 	stw	r8,108(sp)
   4221c:	e2400015 	stw	r9,0(fp)
   42220:	e2c00115 	stw	r11,4(fp)
   42224:	d8c01c15 	stw	r3,112(sp)
   42228:	42000208 	cmpgei	r8,r8,8
   4222c:	40013e1e 	bne	r8,zero,42728 <___vfprintf_internal_r+0x14e8>
   42230:	e0800404 	addi	r2,fp,16
   42234:	aa000084 	addi	r8,r21,2
   42238:	b039883a 	mov	fp,r22
   4223c:	102d883a 	mov	r22,r2
   42240:	d9001017 	ldw	r4,64(sp)
   42244:	d8801644 	addi	r2,sp,89
   42248:	da001b15 	stw	r8,108(sp)
   4224c:	20c7883a 	add	r3,r4,r3
   42250:	e0800015 	stw	r2,0(fp)
   42254:	e1000115 	stw	r4,4(fp)
   42258:	d8c01c15 	stw	r3,112(sp)
   4225c:	42000210 	cmplti	r8,r8,8
   42260:	403cf31e 	bne	r8,zero,41630 <___vfprintf_internal_r+0x3f0>
   42264:	d9801a04 	addi	r6,sp,104
   42268:	900b883a 	mov	r5,r18
   4226c:	9809883a 	mov	r4,r19
   42270:	00486f40 	call	486f4 <__sprint_r>
   42274:	103cff1e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   42278:	d8c01c17 	ldw	r3,112(sp)
   4227c:	dd802704 	addi	r22,sp,156
   42280:	003ceb06 	br	41630 <___vfprintf_internal_r+0x3f0>
   42284:	db000417 	ldw	r12,16(sp)
   42288:	003e4906 	br	41bb0 <___vfprintf_internal_r+0x970>
   4228c:	03000174 	movhi	r12,5
   42290:	39000450 	cmplti	r4,r7,17
   42294:	d8801b17 	ldw	r2,108(sp)
   42298:	633f8804 	addi	r12,r12,-480
   4229c:	2000321e 	bne	r4,zero,42368 <___vfprintf_internal_r+0x1128>
   422a0:	dc401115 	stw	r17,68(sp)
   422a4:	b009883a 	mov	r4,r22
   422a8:	9023883a 	mov	r17,r18
   422ac:	a82d883a 	mov	r22,r21
   422b0:	ddc01215 	stw	r23,72(sp)
   422b4:	03c00404 	movi	r15,16
   422b8:	a02f883a 	mov	r23,r20
   422bc:	db800e15 	stw	r14,56(sp)
   422c0:	8029883a 	mov	r20,r16
   422c4:	db400f15 	stw	r13,60(sp)
   422c8:	402b883a 	mov	r21,r8
   422cc:	3821883a 	mov	r16,r7
   422d0:	6025883a 	mov	r18,r12
   422d4:	00000406 	br	422e8 <___vfprintf_internal_r+0x10a8>
   422d8:	843ffc04 	addi	r16,r16,-16
   422dc:	81800448 	cmpgei	r6,r16,17
   422e0:	21000204 	addi	r4,r4,8
   422e4:	30001426 	beq	r6,zero,42338 <___vfprintf_internal_r+0x10f8>
   422e8:	10800044 	addi	r2,r2,1
   422ec:	18c00404 	addi	r3,r3,16
   422f0:	24800015 	stw	r18,0(r4)
   422f4:	23c00115 	stw	r15,4(r4)
   422f8:	d8c01c15 	stw	r3,112(sp)
   422fc:	d8801b15 	stw	r2,108(sp)
   42300:	11800208 	cmpgei	r6,r2,8
   42304:	303ff426 	beq	r6,zero,422d8 <___vfprintf_internal_r+0x1098>
   42308:	d9801a04 	addi	r6,sp,104
   4230c:	880b883a 	mov	r5,r17
   42310:	9809883a 	mov	r4,r19
   42314:	00486f40 	call	486f4 <__sprint_r>
   42318:	1001b91e 	bne	r2,zero,42a00 <___vfprintf_internal_r+0x17c0>
   4231c:	843ffc04 	addi	r16,r16,-16
   42320:	81800448 	cmpgei	r6,r16,17
   42324:	d8c01c17 	ldw	r3,112(sp)
   42328:	d8801b17 	ldw	r2,108(sp)
   4232c:	d9002704 	addi	r4,sp,156
   42330:	03c00404 	movi	r15,16
   42334:	303fec1e 	bne	r6,zero,422e8 <___vfprintf_internal_r+0x10a8>
   42338:	800f883a 	mov	r7,r16
   4233c:	9019883a 	mov	r12,r18
   42340:	a021883a 	mov	r16,r20
   42344:	8825883a 	mov	r18,r17
   42348:	b829883a 	mov	r20,r23
   4234c:	db800e17 	ldw	r14,56(sp)
   42350:	db400f17 	ldw	r13,60(sp)
   42354:	ddc01217 	ldw	r23,72(sp)
   42358:	dc401117 	ldw	r17,68(sp)
   4235c:	a811883a 	mov	r8,r21
   42360:	b02b883a 	mov	r21,r22
   42364:	202d883a 	mov	r22,r4
   42368:	10800044 	addi	r2,r2,1
   4236c:	19c7883a 	add	r3,r3,r7
   42370:	d8801b15 	stw	r2,108(sp)
   42374:	b3000015 	stw	r12,0(r22)
   42378:	b1c00115 	stw	r7,4(r22)
   4237c:	d8c01c15 	stw	r3,112(sp)
   42380:	10800208 	cmpgei	r2,r2,8
   42384:	1001671e 	bne	r2,zero,42924 <___vfprintf_internal_r+0x16e4>
   42388:	b5800204 	addi	r22,r22,8
   4238c:	003c7c06 	br	41580 <___vfprintf_internal_r+0x340>
   42390:	d9801a04 	addi	r6,sp,104
   42394:	900b883a 	mov	r5,r18
   42398:	9809883a 	mov	r4,r19
   4239c:	da001115 	stw	r8,68(sp)
   423a0:	db400f15 	stw	r13,60(sp)
   423a4:	db800e15 	stw	r14,56(sp)
   423a8:	00486f40 	call	486f4 <__sprint_r>
   423ac:	103cb11e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   423b0:	d8c01c17 	ldw	r3,112(sp)
   423b4:	da001117 	ldw	r8,68(sp)
   423b8:	db400f17 	ldw	r13,60(sp)
   423bc:	db800e17 	ldw	r14,56(sp)
   423c0:	dd802704 	addi	r22,sp,156
   423c4:	003c7c06 	br	415b8 <___vfprintf_internal_r+0x378>
   423c8:	d9801a04 	addi	r6,sp,104
   423cc:	900b883a 	mov	r5,r18
   423d0:	9809883a 	mov	r4,r19
   423d4:	da000f15 	stw	r8,60(sp)
   423d8:	db400e15 	stw	r13,56(sp)
   423dc:	00486f40 	call	486f4 <__sprint_r>
   423e0:	103ca41e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   423e4:	d8c01c17 	ldw	r3,112(sp)
   423e8:	da000f17 	ldw	r8,60(sp)
   423ec:	db400e17 	ldw	r13,56(sp)
   423f0:	dd802704 	addi	r22,sp,156
   423f4:	003c7d06 	br	415ec <___vfprintf_internal_r+0x3ac>
   423f8:	d9401417 	ldw	r5,80(sp)
   423fc:	0141570e 	bge	zero,r5,4295c <___vfprintf_internal_r+0x171c>
   42400:	d8800717 	ldw	r2,28(sp)
   42404:	d9000817 	ldw	r4,32(sp)
   42408:	102b883a 	mov	r21,r2
   4240c:	2080b916 	blt	r4,r2,426f4 <___vfprintf_internal_r+0x14b4>
   42410:	05400a0e 	bge	zero,r21,4243c <___vfprintf_internal_r+0x11fc>
   42414:	d8801b17 	ldw	r2,108(sp)
   42418:	1d47883a 	add	r3,r3,r21
   4241c:	b4400015 	stw	r17,0(r22)
   42420:	10800044 	addi	r2,r2,1
   42424:	d8801b15 	stw	r2,108(sp)
   42428:	b5400115 	stw	r21,4(r22)
   4242c:	d8c01c15 	stw	r3,112(sp)
   42430:	10800208 	cmpgei	r2,r2,8
   42434:	10032d1e 	bne	r2,zero,430ec <___vfprintf_internal_r+0x1eac>
   42438:	b5800204 	addi	r22,r22,8
   4243c:	a800c516 	blt	r21,zero,42754 <___vfprintf_internal_r+0x1514>
   42440:	d8800717 	ldw	r2,28(sp)
   42444:	156bc83a 	sub	r21,r2,r21
   42448:	0540db16 	blt	zero,r21,427b8 <___vfprintf_internal_r+0x1578>
   4244c:	dd401417 	ldw	r21,80(sp)
   42450:	d8800817 	ldw	r2,32(sp)
   42454:	a880aa0e 	bge	r21,r2,42700 <___vfprintf_internal_r+0x14c0>
   42458:	d8800d17 	ldw	r2,52(sp)
   4245c:	d9000b17 	ldw	r4,44(sp)
   42460:	b0800015 	stw	r2,0(r22)
   42464:	d8801b17 	ldw	r2,108(sp)
   42468:	1907883a 	add	r3,r3,r4
   4246c:	b1000115 	stw	r4,4(r22)
   42470:	10800044 	addi	r2,r2,1
   42474:	d8801b15 	stw	r2,108(sp)
   42478:	d8c01c15 	stw	r3,112(sp)
   4247c:	10800208 	cmpgei	r2,r2,8
   42480:	1003111e 	bne	r2,zero,430c8 <___vfprintf_internal_r+0x1e88>
   42484:	b5800204 	addi	r22,r22,8
   42488:	d9000817 	ldw	r4,32(sp)
   4248c:	d9400717 	ldw	r5,28(sp)
   42490:	2545c83a 	sub	r2,r4,r21
   42494:	2149c83a 	sub	r4,r4,r5
   42498:	102b883a 	mov	r21,r2
   4249c:	2080010e 	bge	r4,r2,424a4 <___vfprintf_internal_r+0x1264>
   424a0:	202b883a 	mov	r21,r4
   424a4:	05400c0e 	bge	zero,r21,424d8 <___vfprintf_internal_r+0x1298>
   424a8:	d9000717 	ldw	r4,28(sp)
   424ac:	1d47883a 	add	r3,r3,r21
   424b0:	b5400115 	stw	r21,4(r22)
   424b4:	8913883a 	add	r9,r17,r4
   424b8:	d9001b17 	ldw	r4,108(sp)
   424bc:	b2400015 	stw	r9,0(r22)
   424c0:	d8c01c15 	stw	r3,112(sp)
   424c4:	21000044 	addi	r4,r4,1
   424c8:	d9001b15 	stw	r4,108(sp)
   424cc:	21000208 	cmpgei	r4,r4,8
   424d0:	2003111e 	bne	r4,zero,43118 <___vfprintf_internal_r+0x1ed8>
   424d4:	b5800204 	addi	r22,r22,8
   424d8:	a800010e 	bge	r21,zero,424e0 <___vfprintf_internal_r+0x12a0>
   424dc:	002b883a 	mov	r21,zero
   424e0:	156bc83a 	sub	r21,r2,r21
   424e4:	057c520e 	bge	zero,r21,41630 <___vfprintf_internal_r+0x3f0>
   424e8:	01c00174 	movhi	r7,5
   424ec:	a9000450 	cmplti	r4,r21,17
   424f0:	d8801b17 	ldw	r2,108(sp)
   424f4:	39ff8404 	addi	r7,r7,-496
   424f8:	2001c51e 	bne	r4,zero,42c10 <___vfprintf_internal_r+0x19d0>
   424fc:	07000404 	movi	fp,16
   42500:	3823883a 	mov	r17,r7
   42504:	00000406 	br	42518 <___vfprintf_internal_r+0x12d8>
   42508:	b5800204 	addi	r22,r22,8
   4250c:	ad7ffc04 	addi	r21,r21,-16
   42510:	a9000448 	cmpgei	r4,r21,17
   42514:	2001bd26 	beq	r4,zero,42c0c <___vfprintf_internal_r+0x19cc>
   42518:	10800044 	addi	r2,r2,1
   4251c:	18c00404 	addi	r3,r3,16
   42520:	b4400015 	stw	r17,0(r22)
   42524:	b7000115 	stw	fp,4(r22)
   42528:	d8c01c15 	stw	r3,112(sp)
   4252c:	d8801b15 	stw	r2,108(sp)
   42530:	11000208 	cmpgei	r4,r2,8
   42534:	203ff426 	beq	r4,zero,42508 <___vfprintf_internal_r+0x12c8>
   42538:	d9801a04 	addi	r6,sp,104
   4253c:	900b883a 	mov	r5,r18
   42540:	9809883a 	mov	r4,r19
   42544:	00486f40 	call	486f4 <__sprint_r>
   42548:	103c4a1e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   4254c:	d8c01c17 	ldw	r3,112(sp)
   42550:	d8801b17 	ldw	r2,108(sp)
   42554:	dd802704 	addi	r22,sp,156
   42558:	003fec06 	br	4250c <___vfprintf_internal_r+0x12cc>
   4255c:	4002a71e 	bne	r8,zero,42ffc <___vfprintf_internal_r+0x1dbc>
   42560:	0011883a 	mov	r8,zero
   42564:	002b883a 	mov	r21,zero
   42568:	dc402704 	addi	r17,sp,156
   4256c:	003d4906 	br	41a94 <___vfprintf_internal_r+0x854>
   42570:	d8800417 	ldw	r2,16(sp)
   42574:	1080004c 	andi	r2,r2,1
   42578:	103f051e 	bne	r2,zero,42190 <___vfprintf_internal_r+0xf50>
   4257c:	00800044 	movi	r2,1
   42580:	dd401b15 	stw	r21,108(sp)
   42584:	b4400015 	stw	r17,0(r22)
   42588:	b0800115 	stw	r2,4(r22)
   4258c:	d8c01c15 	stw	r3,112(sp)
   42590:	ad400208 	cmpgei	r21,r21,8
   42594:	a800641e 	bne	r21,zero,42728 <___vfprintf_internal_r+0x14e8>
   42598:	42000084 	addi	r8,r8,2
   4259c:	b5800404 	addi	r22,r22,16
   425a0:	003f2706 	br	42240 <___vfprintf_internal_r+0x1000>
   425a4:	02ff260e 	bge	zero,r11,42240 <___vfprintf_internal_r+0x1000>
   425a8:	58800450 	cmplti	r2,r11,17
   425ac:	01c00174 	movhi	r7,5
   425b0:	10034c1e 	bne	r2,zero,432e4 <___vfprintf_internal_r+0x20a4>
   425b4:	39ff8404 	addi	r7,r7,-496
   425b8:	dc000715 	stw	r16,28(sp)
   425bc:	05800404 	movi	r22,16
   425c0:	5823883a 	mov	r17,r11
   425c4:	3821883a 	mov	r16,r7
   425c8:	402b883a 	mov	r21,r8
   425cc:	00000506 	br	425e4 <___vfprintf_internal_r+0x13a4>
   425d0:	e7000204 	addi	fp,fp,8
   425d4:	8c7ffc04 	addi	r17,r17,-16
   425d8:	88800448 	cmpgei	r2,r17,17
   425dc:	1001d626 	beq	r2,zero,42d38 <___vfprintf_internal_r+0x1af8>
   425e0:	ad400044 	addi	r21,r21,1
   425e4:	18c00404 	addi	r3,r3,16
   425e8:	e4000015 	stw	r16,0(fp)
   425ec:	e5800115 	stw	r22,4(fp)
   425f0:	d8c01c15 	stw	r3,112(sp)
   425f4:	dd401b15 	stw	r21,108(sp)
   425f8:	a8800208 	cmpgei	r2,r21,8
   425fc:	103ff426 	beq	r2,zero,425d0 <___vfprintf_internal_r+0x1390>
   42600:	d9801a04 	addi	r6,sp,104
   42604:	900b883a 	mov	r5,r18
   42608:	9809883a 	mov	r4,r19
   4260c:	00486f40 	call	486f4 <__sprint_r>
   42610:	103c181e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   42614:	dd401b17 	ldw	r21,108(sp)
   42618:	d8c01c17 	ldw	r3,112(sp)
   4261c:	df002704 	addi	fp,sp,156
   42620:	003fec06 	br	425d4 <___vfprintf_internal_r+0x1394>
   42624:	d9801a04 	addi	r6,sp,104
   42628:	900b883a 	mov	r5,r18
   4262c:	9809883a 	mov	r4,r19
   42630:	00486f40 	call	486f4 <__sprint_r>
   42634:	103c0f1e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   42638:	d8c01c17 	ldw	r3,112(sp)
   4263c:	dd802704 	addi	r22,sp,156
   42640:	003bee06 	br	415fc <___vfprintf_internal_r+0x3bc>
   42644:	d8800417 	ldw	r2,16(sp)
   42648:	1080004c 	andi	r2,r2,1
   4264c:	103bf826 	beq	r2,zero,41630 <___vfprintf_internal_r+0x3f0>
   42650:	003e1506 	br	41ea8 <___vfprintf_internal_r+0xc68>
   42654:	dc402704 	addi	r17,sp,156
   42658:	003d0e06 	br	41a94 <___vfprintf_internal_r+0x854>
   4265c:	00800c04 	movi	r2,48
   42660:	d8801385 	stb	r2,78(sp)
   42664:	df0013c5 	stb	fp,79(sp)
   42668:	63000094 	ori	r12,r12,2
   4266c:	00800084 	movi	r2,2
   42670:	003c3d06 	br	41768 <___vfprintf_internal_r+0x528>
   42674:	25000017 	ldw	r20,0(r4)
   42678:	002b883a 	mov	r21,zero
   4267c:	d8c00615 	stw	r3,24(sp)
   42680:	00800044 	movi	r2,1
   42684:	003c3806 	br	41768 <___vfprintf_internal_r+0x528>
   42688:	d9000517 	ldw	r4,20(sp)
   4268c:	2005d7fa 	srai	r2,r4,31
   42690:	19000015 	stw	r4,0(r3)
   42694:	18800115 	stw	r2,4(r3)
   42698:	003b1d06 	br	41310 <___vfprintf_internal_r+0xd0>
   4269c:	25000017 	ldw	r20,0(r4)
   426a0:	002b883a 	mov	r21,zero
   426a4:	d8c00615 	stw	r3,24(sp)
   426a8:	003d1d06 	br	41b20 <___vfprintf_internal_r+0x8e0>
   426ac:	25000017 	ldw	r20,0(r4)
   426b0:	002b883a 	mov	r21,zero
   426b4:	d8c00615 	stw	r3,24(sp)
   426b8:	0005883a 	mov	r2,zero
   426bc:	003c2a06 	br	41768 <___vfprintf_internal_r+0x528>
   426c0:	18800017 	ldw	r2,0(r3)
   426c4:	d8800915 	stw	r2,36(sp)
   426c8:	18800117 	ldw	r2,4(r3)
   426cc:	d8800a15 	stw	r2,40(sp)
   426d0:	003c5b06 	br	41840 <___vfprintf_internal_r+0x600>
   426d4:	25000017 	ldw	r20,0(r4)
   426d8:	d8c00615 	stw	r3,24(sp)
   426dc:	a02bd7fa 	srai	r21,r20,31
   426e0:	a805883a 	mov	r2,r21
   426e4:	003cd906 	br	41a4c <___vfprintf_internal_r+0x80c>
   426e8:	0421c83a 	sub	r16,zero,r16
   426ec:	d8800615 	stw	r2,24(sp)
   426f0:	003d6306 	br	41c80 <___vfprintf_internal_r+0xa40>
   426f4:	202b883a 	mov	r21,r4
   426f8:	057f4616 	blt	zero,r21,42414 <___vfprintf_internal_r+0x11d4>
   426fc:	003f4f06 	br	4243c <___vfprintf_internal_r+0x11fc>
   42700:	d8800417 	ldw	r2,16(sp)
   42704:	1080004c 	andi	r2,r2,1
   42708:	103f531e 	bne	r2,zero,42458 <___vfprintf_internal_r+0x1218>
   4270c:	d9000817 	ldw	r4,32(sp)
   42710:	d9400717 	ldw	r5,28(sp)
   42714:	2545c83a 	sub	r2,r4,r21
   42718:	216bc83a 	sub	r21,r4,r5
   4271c:	157f6e0e 	bge	r2,r21,424d8 <___vfprintf_internal_r+0x1298>
   42720:	102b883a 	mov	r21,r2
   42724:	003f6c06 	br	424d8 <___vfprintf_internal_r+0x1298>
   42728:	d9801a04 	addi	r6,sp,104
   4272c:	900b883a 	mov	r5,r18
   42730:	9809883a 	mov	r4,r19
   42734:	00486f40 	call	486f4 <__sprint_r>
   42738:	103bce1e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   4273c:	da001b17 	ldw	r8,108(sp)
   42740:	d8c01c17 	ldw	r3,112(sp)
   42744:	dd802904 	addi	r22,sp,164
   42748:	42000044 	addi	r8,r8,1
   4274c:	df002704 	addi	fp,sp,156
   42750:	003ebb06 	br	42240 <___vfprintf_internal_r+0x1000>
   42754:	002b883a 	mov	r21,zero
   42758:	003f3906 	br	42440 <___vfprintf_internal_r+0x1200>
   4275c:	bf000043 	ldbu	fp,1(r23)
   42760:	63000814 	ori	r12,r12,32
   42764:	bdc00044 	addi	r23,r23,1
   42768:	e2c03fcc 	andi	r11,fp,255
   4276c:	5ac0201c 	xori	r11,r11,128
   42770:	5affe004 	addi	r11,r11,-128
   42774:	003afe06 	br	41370 <___vfprintf_internal_r+0x130>
   42778:	d9801a04 	addi	r6,sp,104
   4277c:	900b883a 	mov	r5,r18
   42780:	9809883a 	mov	r4,r19
   42784:	00486f40 	call	486f4 <__sprint_r>
   42788:	103bba1e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   4278c:	d8c01c17 	ldw	r3,112(sp)
   42790:	dd802704 	addi	r22,sp,156
   42794:	003dd006 	br	41ed8 <___vfprintf_internal_r+0xc98>
   42798:	408001f0 	cmpltui	r2,r8,7
   4279c:	402b883a 	mov	r21,r8
   427a0:	1001e726 	beq	r2,zero,42f40 <___vfprintf_internal_r+0x1d00>
   427a4:	04400174 	movhi	r17,5
   427a8:	a829883a 	mov	r20,r21
   427ac:	d8c00615 	stw	r3,24(sp)
   427b0:	8c7f8104 	addi	r17,r17,-508
   427b4:	003b6506 	br	4154c <___vfprintf_internal_r+0x30c>
   427b8:	01c00174 	movhi	r7,5
   427bc:	a9000450 	cmplti	r4,r21,17
   427c0:	d8801b17 	ldw	r2,108(sp)
   427c4:	39ff8404 	addi	r7,r7,-496
   427c8:	2001c21e 	bne	r4,zero,42ed4 <___vfprintf_internal_r+0x1c94>
   427cc:	dc000e15 	stw	r16,56(sp)
   427d0:	07000404 	movi	fp,16
   427d4:	3821883a 	mov	r16,r7
   427d8:	00000406 	br	427ec <___vfprintf_internal_r+0x15ac>
   427dc:	b5800204 	addi	r22,r22,8
   427e0:	ad7ffc04 	addi	r21,r21,-16
   427e4:	a9000448 	cmpgei	r4,r21,17
   427e8:	2001b826 	beq	r4,zero,42ecc <___vfprintf_internal_r+0x1c8c>
   427ec:	10800044 	addi	r2,r2,1
   427f0:	18c00404 	addi	r3,r3,16
   427f4:	b4000015 	stw	r16,0(r22)
   427f8:	b7000115 	stw	fp,4(r22)
   427fc:	d8c01c15 	stw	r3,112(sp)
   42800:	d8801b15 	stw	r2,108(sp)
   42804:	11000208 	cmpgei	r4,r2,8
   42808:	203ff426 	beq	r4,zero,427dc <___vfprintf_internal_r+0x159c>
   4280c:	d9801a04 	addi	r6,sp,104
   42810:	900b883a 	mov	r5,r18
   42814:	9809883a 	mov	r4,r19
   42818:	00486f40 	call	486f4 <__sprint_r>
   4281c:	103b951e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   42820:	d8c01c17 	ldw	r3,112(sp)
   42824:	d8801b17 	ldw	r2,108(sp)
   42828:	dd802704 	addi	r22,sp,156
   4282c:	003fec06 	br	427e0 <___vfprintf_internal_r+0x15a0>
   42830:	dc402704 	addi	r17,sp,156
   42834:	a805883a 	mov	r2,r21
   42838:	dc000715 	stw	r16,28(sp)
   4283c:	902b883a 	mov	r21,r18
   42840:	8821883a 	mov	r16,r17
   42844:	db000415 	stw	r12,16(sp)
   42848:	a023883a 	mov	r17,r20
   4284c:	da000e15 	stw	r8,56(sp)
   42850:	9829883a 	mov	r20,r19
   42854:	1025883a 	mov	r18,r2
   42858:	6827883a 	mov	r19,r13
   4285c:	8809883a 	mov	r4,r17
   42860:	900b883a 	mov	r5,r18
   42864:	01800284 	movi	r6,10
   42868:	000f883a 	mov	r7,zero
   4286c:	004b2040 	call	4b204 <__umoddi3>
   42870:	10800c04 	addi	r2,r2,48
   42874:	8809883a 	mov	r4,r17
   42878:	900b883a 	mov	r5,r18
   4287c:	01800284 	movi	r6,10
   42880:	000f883a 	mov	r7,zero
   42884:	80bfffc5 	stb	r2,-1(r16)
   42888:	004ac740 	call	4ac74 <__udivdi3>
   4288c:	900d883a 	mov	r6,r18
   42890:	880f883a 	mov	r7,r17
   42894:	843fffc4 	addi	r16,r16,-1
   42898:	1023883a 	mov	r17,r2
   4289c:	1825883a 	mov	r18,r3
   428a0:	303fee1e 	bne	r6,zero,4285c <___vfprintf_internal_r+0x161c>
   428a4:	39c002a8 	cmpgeui	r7,r7,10
   428a8:	383fec1e 	bne	r7,zero,4285c <___vfprintf_internal_r+0x161c>
   428ac:	8023883a 	mov	r17,r16
   428b0:	d8802704 	addi	r2,sp,156
   428b4:	981b883a 	mov	r13,r19
   428b8:	a825883a 	mov	r18,r21
   428bc:	dc000717 	ldw	r16,28(sp)
   428c0:	da000e17 	ldw	r8,56(sp)
   428c4:	a027883a 	mov	r19,r20
   428c8:	146bc83a 	sub	r21,r2,r17
   428cc:	003c7106 	br	41a94 <___vfprintf_internal_r+0x854>
   428d0:	d8800517 	ldw	r2,20(sp)
   428d4:	18800015 	stw	r2,0(r3)
   428d8:	003a8d06 	br	41310 <___vfprintf_internal_r+0xd0>
   428dc:	d9801a04 	addi	r6,sp,104
   428e0:	900b883a 	mov	r5,r18
   428e4:	9809883a 	mov	r4,r19
   428e8:	00486f40 	call	486f4 <__sprint_r>
   428ec:	103b611e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   428f0:	d8c01c17 	ldw	r3,112(sp)
   428f4:	dd401b17 	ldw	r21,108(sp)
   428f8:	df002704 	addi	fp,sp,156
   428fc:	003e2b06 	br	421ac <___vfprintf_internal_r+0xf6c>
   42900:	d9801a04 	addi	r6,sp,104
   42904:	900b883a 	mov	r5,r18
   42908:	9809883a 	mov	r4,r19
   4290c:	00486f40 	call	486f4 <__sprint_r>
   42910:	103b581e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   42914:	d8c01c17 	ldw	r3,112(sp)
   42918:	dd401b17 	ldw	r21,108(sp)
   4291c:	df002704 	addi	fp,sp,156
   42920:	003e2d06 	br	421d8 <___vfprintf_internal_r+0xf98>
   42924:	d9801a04 	addi	r6,sp,104
   42928:	900b883a 	mov	r5,r18
   4292c:	9809883a 	mov	r4,r19
   42930:	da001115 	stw	r8,68(sp)
   42934:	db400f15 	stw	r13,60(sp)
   42938:	db800e15 	stw	r14,56(sp)
   4293c:	00486f40 	call	486f4 <__sprint_r>
   42940:	103b4c1e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   42944:	d8c01c17 	ldw	r3,112(sp)
   42948:	da001117 	ldw	r8,68(sp)
   4294c:	db400f17 	ldw	r13,60(sp)
   42950:	db800e17 	ldw	r14,56(sp)
   42954:	dd802704 	addi	r22,sp,156
   42958:	003b0906 	br	41580 <___vfprintf_internal_r+0x340>
   4295c:	d8801b17 	ldw	r2,108(sp)
   42960:	01000174 	movhi	r4,5
   42964:	213f8304 	addi	r4,r4,-500
   42968:	10800044 	addi	r2,r2,1
   4296c:	18c00044 	addi	r3,r3,1
   42970:	b1000015 	stw	r4,0(r22)
   42974:	01000044 	movi	r4,1
   42978:	d8801b15 	stw	r2,108(sp)
   4297c:	b1000115 	stw	r4,4(r22)
   42980:	d8c01c15 	stw	r3,112(sp)
   42984:	10800208 	cmpgei	r2,r2,8
   42988:	1001641e 	bne	r2,zero,42f1c <___vfprintf_internal_r+0x1cdc>
   4298c:	b5800204 	addi	r22,r22,8
   42990:	2800bd1e 	bne	r5,zero,42c88 <___vfprintf_internal_r+0x1a48>
   42994:	d8800417 	ldw	r2,16(sp)
   42998:	d9000817 	ldw	r4,32(sp)
   4299c:	1080004c 	andi	r2,r2,1
   429a0:	1104b03a 	or	r2,r2,r4
   429a4:	103b2226 	beq	r2,zero,41630 <___vfprintf_internal_r+0x3f0>
   429a8:	d8800d17 	ldw	r2,52(sp)
   429ac:	d9000b17 	ldw	r4,44(sp)
   429b0:	b0800015 	stw	r2,0(r22)
   429b4:	d8801b17 	ldw	r2,108(sp)
   429b8:	20c7883a 	add	r3,r4,r3
   429bc:	b1000115 	stw	r4,4(r22)
   429c0:	10800044 	addi	r2,r2,1
   429c4:	d8c01c15 	stw	r3,112(sp)
   429c8:	d8801b15 	stw	r2,108(sp)
   429cc:	11000208 	cmpgei	r4,r2,8
   429d0:	2001771e 	bne	r4,zero,42fb0 <___vfprintf_internal_r+0x1d70>
   429d4:	b5800204 	addi	r22,r22,8
   429d8:	d9000817 	ldw	r4,32(sp)
   429dc:	10800044 	addi	r2,r2,1
   429e0:	d8801b15 	stw	r2,108(sp)
   429e4:	20c7883a 	add	r3,r4,r3
   429e8:	b4400015 	stw	r17,0(r22)
   429ec:	b1000115 	stw	r4,4(r22)
   429f0:	d8c01c15 	stw	r3,112(sp)
   429f4:	10800208 	cmpgei	r2,r2,8
   429f8:	103b0c26 	beq	r2,zero,4162c <___vfprintf_internal_r+0x3ec>
   429fc:	003e1906 	br	42264 <___vfprintf_internal_r+0x1024>
   42a00:	8825883a 	mov	r18,r17
   42a04:	003b1b06 	br	41674 <___vfprintf_internal_r+0x434>
   42a08:	d9000917 	ldw	r4,36(sp)
   42a0c:	d9400a17 	ldw	r5,40(sp)
   42a10:	da000615 	stw	r8,24(sp)
   42a14:	200d883a 	mov	r6,r4
   42a18:	280f883a 	mov	r7,r5
   42a1c:	db000415 	stw	r12,16(sp)
   42a20:	004d1a00 	call	4d1a0 <__unorddf2>
   42a24:	db000417 	ldw	r12,16(sp)
   42a28:	da000617 	ldw	r8,24(sp)
   42a2c:	1002061e 	bne	r2,zero,43248 <___vfprintf_internal_r+0x2008>
   42a30:	057ff7c4 	movi	r21,-33
   42a34:	40bfffe0 	cmpeqi	r2,r8,-1
   42a38:	e56a703a 	and	r21,fp,r21
   42a3c:	1001b41e 	bne	r2,zero,43110 <___vfprintf_internal_r+0x1ed0>
   42a40:	a88011d8 	cmpnei	r2,r21,71
   42a44:	10015726 	beq	r2,zero,42fa4 <___vfprintf_internal_r+0x1d64>
   42a48:	60804014 	ori	r2,r12,256
   42a4c:	d8800415 	stw	r2,16(sp)
   42a50:	d8800a17 	ldw	r2,40(sp)
   42a54:	10012d16 	blt	r2,zero,42f0c <___vfprintf_internal_r+0x1ccc>
   42a58:	dd000a17 	ldw	r20,40(sp)
   42a5c:	d8000605 	stb	zero,24(sp)
   42a60:	e08019a0 	cmpeqi	r2,fp,102
   42a64:	d8800f15 	stw	r2,60(sp)
   42a68:	1000d21e 	bne	r2,zero,42db4 <___vfprintf_internal_r+0x1b74>
   42a6c:	e08011a0 	cmpeqi	r2,fp,70
   42a70:	1000d01e 	bne	r2,zero,42db4 <___vfprintf_internal_r+0x1b74>
   42a74:	a8801158 	cmpnei	r2,r21,69
   42a78:	10016226 	beq	r2,zero,43004 <___vfprintf_internal_r+0x1dc4>
   42a7c:	d8801804 	addi	r2,sp,96
   42a80:	d8800315 	stw	r2,12(sp)
   42a84:	d9400917 	ldw	r5,36(sp)
   42a88:	d8801504 	addi	r2,sp,84
   42a8c:	d8800215 	stw	r2,8(sp)
   42a90:	d8801404 	addi	r2,sp,80
   42a94:	da000015 	stw	r8,0(sp)
   42a98:	9809883a 	mov	r4,r19
   42a9c:	d8800115 	stw	r2,4(sp)
   42aa0:	01c00084 	movi	r7,2
   42aa4:	a00d883a 	mov	r6,r20
   42aa8:	db000815 	stw	r12,32(sp)
   42aac:	da000715 	stw	r8,28(sp)
   42ab0:	00437700 	call	43770 <_dtoa_r>
   42ab4:	da000717 	ldw	r8,28(sp)
   42ab8:	e10019d8 	cmpnei	r4,fp,103
   42abc:	db000817 	ldw	r12,32(sp)
   42ac0:	1023883a 	mov	r17,r2
   42ac4:	4007883a 	mov	r3,r8
   42ac8:	2001621e 	bne	r4,zero,43054 <___vfprintf_internal_r+0x1e14>
   42acc:	6080004c 	andi	r2,r12,1
   42ad0:	1001621e 	bne	r2,zero,4305c <___vfprintf_internal_r+0x1e1c>
   42ad4:	d8801417 	ldw	r2,80(sp)
   42ad8:	ad4011e0 	cmpeqi	r21,r21,71
   42adc:	d8800715 	stw	r2,28(sp)
   42ae0:	d8801817 	ldw	r2,96(sp)
   42ae4:	1445c83a 	sub	r2,r2,r17
   42ae8:	d8800815 	stw	r2,32(sp)
   42aec:	a8000526 	beq	r21,zero,42b04 <___vfprintf_internal_r+0x18c4>
   42af0:	d8c00717 	ldw	r3,28(sp)
   42af4:	18bfff50 	cmplti	r2,r3,-3
   42af8:	1000011e 	bne	r2,zero,42b00 <___vfprintf_internal_r+0x18c0>
   42afc:	40c1670e 	bge	r8,r3,4309c <___vfprintf_internal_r+0x1e5c>
   42b00:	e73fff84 	addi	fp,fp,-2
   42b04:	d8800717 	ldw	r2,28(sp)
   42b08:	df001645 	stb	fp,89(sp)
   42b0c:	157fffc4 	addi	r21,r2,-1
   42b10:	dd401415 	stw	r21,80(sp)
   42b14:	a801d416 	blt	r21,zero,43268 <___vfprintf_internal_r+0x2028>
   42b18:	00800ac4 	movi	r2,43
   42b1c:	d8801685 	stb	r2,90(sp)
   42b20:	a8800290 	cmplti	r2,r21,10
   42b24:	1001c11e 	bne	r2,zero,4322c <___vfprintf_internal_r+0x1fec>
   42b28:	d98019c4 	addi	r6,sp,103
   42b2c:	9029883a 	mov	r20,r18
   42b30:	dc400715 	stw	r17,28(sp)
   42b34:	8025883a 	mov	r18,r16
   42b38:	db000f15 	stw	r12,60(sp)
   42b3c:	3021883a 	mov	r16,r6
   42b40:	a809883a 	mov	r4,r21
   42b44:	01400284 	movi	r5,10
   42b48:	0040f300 	call	40f30 <__modsi3>
   42b4c:	10800c04 	addi	r2,r2,48
   42b50:	a809883a 	mov	r4,r21
   42b54:	80bfffc5 	stb	r2,-1(r16)
   42b58:	01400284 	movi	r5,10
   42b5c:	0040eb00 	call	40eb0 <__divsi3>
   42b60:	a9001908 	cmpgei	r4,r21,100
   42b64:	8023883a 	mov	r17,r16
   42b68:	102b883a 	mov	r21,r2
   42b6c:	843fffc4 	addi	r16,r16,-1
   42b70:	203ff31e 	bne	r4,zero,42b40 <___vfprintf_internal_r+0x1900>
   42b74:	800d883a 	mov	r6,r16
   42b78:	11000c04 	addi	r4,r2,48
   42b7c:	9021883a 	mov	r16,r18
   42b80:	a025883a 	mov	r18,r20
   42b84:	8829883a 	mov	r20,r17
   42b88:	a0bfff84 	addi	r2,r20,-2
   42b8c:	313fffc5 	stb	r4,-1(r6)
   42b90:	d8c019c4 	addi	r3,sp,103
   42b94:	db000f17 	ldw	r12,60(sp)
   42b98:	dc400717 	ldw	r17,28(sp)
   42b9c:	10c1d62e 	bgeu	r2,r3,432f8 <___vfprintf_internal_r+0x20b8>
   42ba0:	d8c016c4 	addi	r3,sp,91
   42ba4:	00000106 	br	42bac <___vfprintf_internal_r+0x196c>
   42ba8:	11000003 	ldbu	r4,0(r2)
   42bac:	19000005 	stb	r4,0(r3)
   42bb0:	10800044 	addi	r2,r2,1
   42bb4:	d90019c4 	addi	r4,sp,103
   42bb8:	18c00044 	addi	r3,r3,1
   42bbc:	113ffa1e 	bne	r2,r4,42ba8 <___vfprintf_internal_r+0x1968>
   42bc0:	d8801a44 	addi	r2,sp,105
   42bc4:	d8c016c4 	addi	r3,sp,91
   42bc8:	1505c83a 	sub	r2,r2,r20
   42bcc:	1885883a 	add	r2,r3,r2
   42bd0:	d8c01644 	addi	r3,sp,89
   42bd4:	10c5c83a 	sub	r2,r2,r3
   42bd8:	d8801015 	stw	r2,64(sp)
   42bdc:	d8c00817 	ldw	r3,32(sp)
   42be0:	d9001017 	ldw	r4,64(sp)
   42be4:	18800088 	cmpgei	r2,r3,2
   42be8:	192b883a 	add	r21,r3,r4
   42bec:	1001aa26 	beq	r2,zero,43298 <___vfprintf_internal_r+0x2058>
   42bf0:	d8800b17 	ldw	r2,44(sp)
   42bf4:	a8ab883a 	add	r21,r21,r2
   42bf8:	a829883a 	mov	r20,r21
   42bfc:	a800010e 	bge	r21,zero,42c04 <___vfprintf_internal_r+0x19c4>
   42c00:	0029883a 	mov	r20,zero
   42c04:	d8000715 	stw	zero,28(sp)
   42c08:	00009d06 	br	42e80 <___vfprintf_internal_r+0x1c40>
   42c0c:	880f883a 	mov	r7,r17
   42c10:	10800044 	addi	r2,r2,1
   42c14:	1d47883a 	add	r3,r3,r21
   42c18:	b1c00015 	stw	r7,0(r22)
   42c1c:	003a7e06 	br	41618 <___vfprintf_internal_r+0x3d8>
   42c20:	d9801a04 	addi	r6,sp,104
   42c24:	900b883a 	mov	r5,r18
   42c28:	9809883a 	mov	r4,r19
   42c2c:	00486f40 	call	486f4 <__sprint_r>
   42c30:	103a901e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   42c34:	d8c01c17 	ldw	r3,112(sp)
   42c38:	dd802704 	addi	r22,sp,156
   42c3c:	003c9706 	br	41e9c <___vfprintf_internal_r+0xc5c>
   42c40:	d9801a04 	addi	r6,sp,104
   42c44:	900b883a 	mov	r5,r18
   42c48:	9809883a 	mov	r4,r19
   42c4c:	da000e15 	stw	r8,56(sp)
   42c50:	00486f40 	call	486f4 <__sprint_r>
   42c54:	103a871e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   42c58:	d8c01c17 	ldw	r3,112(sp)
   42c5c:	da000e17 	ldw	r8,56(sp)
   42c60:	dd802704 	addi	r22,sp,156
   42c64:	003a6306 	br	415f4 <___vfprintf_internal_r+0x3b4>
   42c68:	8809883a 	mov	r4,r17
   42c6c:	db000415 	stw	r12,16(sp)
   42c70:	d8c00615 	stw	r3,24(sp)
   42c74:	00411a80 	call	411a8 <strlen>
   42c78:	db000417 	ldw	r12,16(sp)
   42c7c:	102b883a 	mov	r21,r2
   42c80:	1029883a 	mov	r20,r2
   42c84:	003a3106 	br	4154c <___vfprintf_internal_r+0x30c>
   42c88:	d8800d17 	ldw	r2,52(sp)
   42c8c:	d9000b17 	ldw	r4,44(sp)
   42c90:	b0800015 	stw	r2,0(r22)
   42c94:	d8801b17 	ldw	r2,108(sp)
   42c98:	20c7883a 	add	r3,r4,r3
   42c9c:	b1000115 	stw	r4,4(r22)
   42ca0:	10800044 	addi	r2,r2,1
   42ca4:	d8c01c15 	stw	r3,112(sp)
   42ca8:	d8801b15 	stw	r2,108(sp)
   42cac:	11000208 	cmpgei	r4,r2,8
   42cb0:	2000bf1e 	bne	r4,zero,42fb0 <___vfprintf_internal_r+0x1d70>
   42cb4:	b5800204 	addi	r22,r22,8
   42cb8:	283f470e 	bge	r5,zero,429d8 <___vfprintf_internal_r+0x1798>
   42cbc:	01c00174 	movhi	r7,5
   42cc0:	293ffc08 	cmpgei	r4,r5,-16
   42cc4:	39ff8404 	addi	r7,r7,-496
   42cc8:	0179c83a 	sub	fp,zero,r5
   42ccc:	20013f1e 	bne	r4,zero,431cc <___vfprintf_internal_r+0x1f8c>
   42cd0:	dc000715 	stw	r16,28(sp)
   42cd4:	05400404 	movi	r21,16
   42cd8:	9021883a 	mov	r16,r18
   42cdc:	3825883a 	mov	r18,r7
   42ce0:	00000406 	br	42cf4 <___vfprintf_internal_r+0x1ab4>
   42ce4:	b5800204 	addi	r22,r22,8
   42ce8:	e73ffc04 	addi	fp,fp,-16
   42cec:	e1800448 	cmpgei	r6,fp,17
   42cf0:	30013326 	beq	r6,zero,431c0 <___vfprintf_internal_r+0x1f80>
   42cf4:	10800044 	addi	r2,r2,1
   42cf8:	18c00404 	addi	r3,r3,16
   42cfc:	b4800015 	stw	r18,0(r22)
   42d00:	b5400115 	stw	r21,4(r22)
   42d04:	d8c01c15 	stw	r3,112(sp)
   42d08:	d8801b15 	stw	r2,108(sp)
   42d0c:	11800208 	cmpgei	r6,r2,8
   42d10:	303ff426 	beq	r6,zero,42ce4 <___vfprintf_internal_r+0x1aa4>
   42d14:	d9801a04 	addi	r6,sp,104
   42d18:	800b883a 	mov	r5,r16
   42d1c:	9809883a 	mov	r4,r19
   42d20:	00486f40 	call	486f4 <__sprint_r>
   42d24:	1001721e 	bne	r2,zero,432f0 <___vfprintf_internal_r+0x20b0>
   42d28:	d8c01c17 	ldw	r3,112(sp)
   42d2c:	d8801b17 	ldw	r2,108(sp)
   42d30:	dd802704 	addi	r22,sp,156
   42d34:	003fec06 	br	42ce8 <___vfprintf_internal_r+0x1aa8>
   42d38:	800f883a 	mov	r7,r16
   42d3c:	dc000717 	ldw	r16,28(sp)
   42d40:	8817883a 	mov	r11,r17
   42d44:	aa000044 	addi	r8,r21,1
   42d48:	e0800204 	addi	r2,fp,8
   42d4c:	1ac7883a 	add	r3,r3,r11
   42d50:	e1c00015 	stw	r7,0(fp)
   42d54:	e2c00115 	stw	r11,4(fp)
   42d58:	d8c01c15 	stw	r3,112(sp)
   42d5c:	da001b15 	stw	r8,108(sp)
   42d60:	41000208 	cmpgei	r4,r8,8
   42d64:	203e701e 	bne	r4,zero,42728 <___vfprintf_internal_r+0x14e8>
   42d68:	42000044 	addi	r8,r8,1
   42d6c:	15800204 	addi	r22,r2,8
   42d70:	1039883a 	mov	fp,r2
   42d74:	003d3206 	br	42240 <___vfprintf_internal_r+0x1000>
   42d78:	d8800617 	ldw	r2,24(sp)
   42d7c:	d8c00615 	stw	r3,24(sp)
   42d80:	15000017 	ldw	r20,0(r2)
   42d84:	a02bd7fa 	srai	r21,r20,31
   42d88:	a805883a 	mov	r2,r21
   42d8c:	003b2f06 	br	41a4c <___vfprintf_internal_r+0x80c>
   42d90:	d8800617 	ldw	r2,24(sp)
   42d94:	002b883a 	mov	r21,zero
   42d98:	d8c00615 	stw	r3,24(sp)
   42d9c:	15000017 	ldw	r20,0(r2)
   42da0:	0005883a 	mov	r2,zero
   42da4:	003a7006 	br	41768 <___vfprintf_internal_r+0x528>
   42da8:	04400174 	movhi	r17,5
   42dac:	8c7f7304 	addi	r17,r17,-564
   42db0:	003ac806 	br	418d4 <___vfprintf_internal_r+0x694>
   42db4:	d8801804 	addi	r2,sp,96
   42db8:	d8800315 	stw	r2,12(sp)
   42dbc:	d9400917 	ldw	r5,36(sp)
   42dc0:	d8801504 	addi	r2,sp,84
   42dc4:	d8800215 	stw	r2,8(sp)
   42dc8:	d8801404 	addi	r2,sp,80
   42dcc:	da000015 	stw	r8,0(sp)
   42dd0:	d8800115 	stw	r2,4(sp)
   42dd4:	01c000c4 	movi	r7,3
   42dd8:	a00d883a 	mov	r6,r20
   42ddc:	9809883a 	mov	r4,r19
   42de0:	db000815 	stw	r12,32(sp)
   42de4:	da000715 	stw	r8,28(sp)
   42de8:	00437700 	call	43770 <_dtoa_r>
   42dec:	da000717 	ldw	r8,28(sp)
   42df0:	1023883a 	mov	r17,r2
   42df4:	db000817 	ldw	r12,32(sp)
   42df8:	1207883a 	add	r3,r2,r8
   42dfc:	88800007 	ldb	r2,0(r17)
   42e00:	10800c20 	cmpeqi	r2,r2,48
   42e04:	1000571e 	bne	r2,zero,42f64 <___vfprintf_internal_r+0x1d24>
   42e08:	d8801417 	ldw	r2,80(sp)
   42e0c:	1893883a 	add	r9,r3,r2
   42e10:	d9000917 	ldw	r4,36(sp)
   42e14:	000d883a 	mov	r6,zero
   42e18:	000f883a 	mov	r7,zero
   42e1c:	a00b883a 	mov	r5,r20
   42e20:	da401115 	stw	r9,68(sp)
   42e24:	da000815 	stw	r8,32(sp)
   42e28:	db000715 	stw	r12,28(sp)
   42e2c:	004c0280 	call	4c028 <__eqdf2>
   42e30:	db000717 	ldw	r12,28(sp)
   42e34:	da000817 	ldw	r8,32(sp)
   42e38:	da401117 	ldw	r9,68(sp)
   42e3c:	1000891e 	bne	r2,zero,43064 <___vfprintf_internal_r+0x1e24>
   42e40:	4805883a 	mov	r2,r9
   42e44:	d8c01417 	ldw	r3,80(sp)
   42e48:	1445c83a 	sub	r2,r2,r17
   42e4c:	ad4011d8 	cmpnei	r21,r21,71
   42e50:	d8c00715 	stw	r3,28(sp)
   42e54:	d8800815 	stw	r2,32(sp)
   42e58:	a83f2526 	beq	r21,zero,42af0 <___vfprintf_internal_r+0x18b0>
   42e5c:	d8800f17 	ldw	r2,60(sp)
   42e60:	103f2826 	beq	r2,zero,42b04 <___vfprintf_internal_r+0x18c4>
   42e64:	d8c00717 	ldw	r3,28(sp)
   42e68:	6080004c 	andi	r2,r12,1
   42e6c:	1204b03a 	or	r2,r2,r8
   42e70:	00c1140e 	bge	zero,r3,432c4 <___vfprintf_internal_r+0x2084>
   42e74:	1001011e 	bne	r2,zero,4327c <___vfprintf_internal_r+0x203c>
   42e78:	dd400717 	ldw	r21,28(sp)
   42e7c:	a829883a 	mov	r20,r21
   42e80:	d8800607 	ldb	r2,24(sp)
   42e84:	10008026 	beq	r2,zero,43088 <___vfprintf_internal_r+0x1e48>
   42e88:	00800b44 	movi	r2,45
   42e8c:	d8801345 	stb	r2,77(sp)
   42e90:	d8800e17 	ldw	r2,56(sp)
   42e94:	0011883a 	mov	r8,zero
   42e98:	d8800615 	stw	r2,24(sp)
   42e9c:	003b0506 	br	41ab4 <___vfprintf_internal_r+0x874>
   42ea0:	d8800617 	ldw	r2,24(sp)
   42ea4:	002b883a 	mov	r21,zero
   42ea8:	d8c00615 	stw	r3,24(sp)
   42eac:	15000017 	ldw	r20,0(r2)
   42eb0:	00800044 	movi	r2,1
   42eb4:	003a2c06 	br	41768 <___vfprintf_internal_r+0x528>
   42eb8:	d8800617 	ldw	r2,24(sp)
   42ebc:	002b883a 	mov	r21,zero
   42ec0:	d8c00615 	stw	r3,24(sp)
   42ec4:	15000017 	ldw	r20,0(r2)
   42ec8:	003b1506 	br	41b20 <___vfprintf_internal_r+0x8e0>
   42ecc:	800f883a 	mov	r7,r16
   42ed0:	dc000e17 	ldw	r16,56(sp)
   42ed4:	10800044 	addi	r2,r2,1
   42ed8:	1d47883a 	add	r3,r3,r21
   42edc:	d8801b15 	stw	r2,108(sp)
   42ee0:	b1c00015 	stw	r7,0(r22)
   42ee4:	b5400115 	stw	r21,4(r22)
   42ee8:	d8c01c15 	stw	r3,112(sp)
   42eec:	10800208 	cmpgei	r2,r2,8
   42ef0:	10003a1e 	bne	r2,zero,42fdc <___vfprintf_internal_r+0x1d9c>
   42ef4:	b5800204 	addi	r22,r22,8
   42ef8:	003d5406 	br	4244c <___vfprintf_internal_r+0x120c>
   42efc:	00800b44 	movi	r2,45
   42f00:	d8801345 	stb	r2,77(sp)
   42f04:	03400b44 	movi	r13,45
   42f08:	003a6e06 	br	418c4 <___vfprintf_internal_r+0x684>
   42f0c:	1520003c 	xorhi	r20,r2,32768
   42f10:	00800b44 	movi	r2,45
   42f14:	d8800605 	stb	r2,24(sp)
   42f18:	003ed106 	br	42a60 <___vfprintf_internal_r+0x1820>
   42f1c:	d9801a04 	addi	r6,sp,104
   42f20:	900b883a 	mov	r5,r18
   42f24:	9809883a 	mov	r4,r19
   42f28:	00486f40 	call	486f4 <__sprint_r>
   42f2c:	1039d11e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   42f30:	d9401417 	ldw	r5,80(sp)
   42f34:	d8c01c17 	ldw	r3,112(sp)
   42f38:	dd802704 	addi	r22,sp,156
   42f3c:	003e9406 	br	42990 <___vfprintf_internal_r+0x1750>
   42f40:	05400184 	movi	r21,6
   42f44:	003e1706 	br	427a4 <___vfprintf_internal_r+0x1564>
   42f48:	d9401345 	stb	r5,77(sp)
   42f4c:	00397906 	br	41534 <___vfprintf_internal_r+0x2f4>
   42f50:	d9801a04 	addi	r6,sp,104
   42f54:	900b883a 	mov	r5,r18
   42f58:	9809883a 	mov	r4,r19
   42f5c:	00486f40 	call	486f4 <__sprint_r>
   42f60:	0039c406 	br	41674 <___vfprintf_internal_r+0x434>
   42f64:	d9000917 	ldw	r4,36(sp)
   42f68:	000d883a 	mov	r6,zero
   42f6c:	000f883a 	mov	r7,zero
   42f70:	a00b883a 	mov	r5,r20
   42f74:	d8c01115 	stw	r3,68(sp)
   42f78:	da000815 	stw	r8,32(sp)
   42f7c:	db000715 	stw	r12,28(sp)
   42f80:	004c0280 	call	4c028 <__eqdf2>
   42f84:	db000717 	ldw	r12,28(sp)
   42f88:	da000817 	ldw	r8,32(sp)
   42f8c:	d8c01117 	ldw	r3,68(sp)
   42f90:	103f9d26 	beq	r2,zero,42e08 <___vfprintf_internal_r+0x1bc8>
   42f94:	00800044 	movi	r2,1
   42f98:	1205c83a 	sub	r2,r2,r8
   42f9c:	d8801415 	stw	r2,80(sp)
   42fa0:	003f9a06 	br	42e0c <___vfprintf_internal_r+0x1bcc>
   42fa4:	403ea81e 	bne	r8,zero,42a48 <___vfprintf_internal_r+0x1808>
   42fa8:	02000044 	movi	r8,1
   42fac:	003ea606 	br	42a48 <___vfprintf_internal_r+0x1808>
   42fb0:	d9801a04 	addi	r6,sp,104
   42fb4:	900b883a 	mov	r5,r18
   42fb8:	9809883a 	mov	r4,r19
   42fbc:	00486f40 	call	486f4 <__sprint_r>
   42fc0:	1039ac1e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   42fc4:	d9401417 	ldw	r5,80(sp)
   42fc8:	d8c01c17 	ldw	r3,112(sp)
   42fcc:	d8801b17 	ldw	r2,108(sp)
   42fd0:	dd802704 	addi	r22,sp,156
   42fd4:	283e800e 	bge	r5,zero,429d8 <___vfprintf_internal_r+0x1798>
   42fd8:	003f3806 	br	42cbc <___vfprintf_internal_r+0x1a7c>
   42fdc:	d9801a04 	addi	r6,sp,104
   42fe0:	900b883a 	mov	r5,r18
   42fe4:	9809883a 	mov	r4,r19
   42fe8:	00486f40 	call	486f4 <__sprint_r>
   42fec:	1039a11e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   42ff0:	d8c01c17 	ldw	r3,112(sp)
   42ff4:	dd802704 	addi	r22,sp,156
   42ff8:	003d1406 	br	4244c <___vfprintf_internal_r+0x120c>
   42ffc:	db000417 	ldw	r12,16(sp)
   43000:	003a9f06 	br	41a80 <___vfprintf_internal_r+0x840>
   43004:	d8801804 	addi	r2,sp,96
   43008:	d8800315 	stw	r2,12(sp)
   4300c:	d9400917 	ldw	r5,36(sp)
   43010:	d8801504 	addi	r2,sp,84
   43014:	40c00044 	addi	r3,r8,1
   43018:	d8800215 	stw	r2,8(sp)
   4301c:	d8801404 	addi	r2,sp,80
   43020:	d8c00015 	stw	r3,0(sp)
   43024:	d8800115 	stw	r2,4(sp)
   43028:	01c00084 	movi	r7,2
   4302c:	a00d883a 	mov	r6,r20
   43030:	9809883a 	mov	r4,r19
   43034:	db001115 	stw	r12,68(sp)
   43038:	da000815 	stw	r8,32(sp)
   4303c:	d8c00715 	stw	r3,28(sp)
   43040:	00437700 	call	43770 <_dtoa_r>
   43044:	d8c00717 	ldw	r3,28(sp)
   43048:	da000817 	ldw	r8,32(sp)
   4304c:	db001117 	ldw	r12,68(sp)
   43050:	1023883a 	mov	r17,r2
   43054:	e08011d8 	cmpnei	r2,fp,71
   43058:	103e9c26 	beq	r2,zero,42acc <___vfprintf_internal_r+0x188c>
   4305c:	88d3883a 	add	r9,r17,r3
   43060:	003f6b06 	br	42e10 <___vfprintf_internal_r+0x1bd0>
   43064:	d8801817 	ldw	r2,96(sp)
   43068:	127f762e 	bgeu	r2,r9,42e44 <___vfprintf_internal_r+0x1c04>
   4306c:	01000c04 	movi	r4,48
   43070:	10c00044 	addi	r3,r2,1
   43074:	d8c01815 	stw	r3,96(sp)
   43078:	11000005 	stb	r4,0(r2)
   4307c:	d8801817 	ldw	r2,96(sp)
   43080:	127ffb36 	bltu	r2,r9,43070 <___vfprintf_internal_r+0x1e30>
   43084:	003f6f06 	br	42e44 <___vfprintf_internal_r+0x1c04>
   43088:	d8800e17 	ldw	r2,56(sp)
   4308c:	db401343 	ldbu	r13,77(sp)
   43090:	0011883a 	mov	r8,zero
   43094:	d8800615 	stw	r2,24(sp)
   43098:	003a8206 	br	41aa4 <___vfprintf_internal_r+0x864>
   4309c:	d8800717 	ldw	r2,28(sp)
   430a0:	d8c00817 	ldw	r3,32(sp)
   430a4:	10c02b16 	blt	r2,r3,43154 <___vfprintf_internal_r+0x1f14>
   430a8:	6300004c 	andi	r12,r12,1
   430ac:	6000581e 	bne	r12,zero,43210 <___vfprintf_internal_r+0x1fd0>
   430b0:	1029883a 	mov	r20,r2
   430b4:	1000010e 	bge	r2,zero,430bc <___vfprintf_internal_r+0x1e7c>
   430b8:	0029883a 	mov	r20,zero
   430bc:	dd400717 	ldw	r21,28(sp)
   430c0:	070019c4 	movi	fp,103
   430c4:	003f6e06 	br	42e80 <___vfprintf_internal_r+0x1c40>
   430c8:	d9801a04 	addi	r6,sp,104
   430cc:	900b883a 	mov	r5,r18
   430d0:	9809883a 	mov	r4,r19
   430d4:	00486f40 	call	486f4 <__sprint_r>
   430d8:	1039661e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   430dc:	dd401417 	ldw	r21,80(sp)
   430e0:	d8c01c17 	ldw	r3,112(sp)
   430e4:	dd802704 	addi	r22,sp,156
   430e8:	003ce706 	br	42488 <___vfprintf_internal_r+0x1248>
   430ec:	d9801a04 	addi	r6,sp,104
   430f0:	900b883a 	mov	r5,r18
   430f4:	9809883a 	mov	r4,r19
   430f8:	00486f40 	call	486f4 <__sprint_r>
   430fc:	10395d1e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   43100:	d8c01c17 	ldw	r3,112(sp)
   43104:	dd802704 	addi	r22,sp,156
   43108:	a83ccd0e 	bge	r21,zero,42440 <___vfprintf_internal_r+0x1200>
   4310c:	003d9106 	br	42754 <___vfprintf_internal_r+0x1514>
   43110:	02000184 	movi	r8,6
   43114:	003e4c06 	br	42a48 <___vfprintf_internal_r+0x1808>
   43118:	d9801a04 	addi	r6,sp,104
   4311c:	900b883a 	mov	r5,r18
   43120:	9809883a 	mov	r4,r19
   43124:	00486f40 	call	486f4 <__sprint_r>
   43128:	1039521e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   4312c:	d8801417 	ldw	r2,80(sp)
   43130:	d9000817 	ldw	r4,32(sp)
   43134:	d8c01c17 	ldw	r3,112(sp)
   43138:	dd802704 	addi	r22,sp,156
   4313c:	2085c83a 	sub	r2,r4,r2
   43140:	003ce506 	br	424d8 <___vfprintf_internal_r+0x1298>
   43144:	4029883a 	mov	r20,r8
   43148:	d8c00615 	stw	r3,24(sp)
   4314c:	402b883a 	mov	r21,r8
   43150:	0038fe06 	br	4154c <___vfprintf_internal_r+0x30c>
   43154:	d8800817 	ldw	r2,32(sp)
   43158:	d8c00b17 	ldw	r3,44(sp)
   4315c:	10eb883a 	add	r21,r2,r3
   43160:	d8800717 	ldw	r2,28(sp)
   43164:	00800316 	blt	zero,r2,43174 <___vfprintf_internal_r+0x1f34>
   43168:	d8800717 	ldw	r2,28(sp)
   4316c:	a8abc83a 	sub	r21,r21,r2
   43170:	ad400044 	addi	r21,r21,1
   43174:	a829883a 	mov	r20,r21
   43178:	a8002a16 	blt	r21,zero,43224 <___vfprintf_internal_r+0x1fe4>
   4317c:	070019c4 	movi	fp,103
   43180:	003f3f06 	br	42e80 <___vfprintf_internal_r+0x1c40>
   43184:	d9401345 	stb	r5,77(sp)
   43188:	003ae006 	br	41d0c <___vfprintf_internal_r+0xacc>
   4318c:	d9401345 	stb	r5,77(sp)
   43190:	003a5906 	br	41af8 <___vfprintf_internal_r+0x8b8>
   43194:	d9401345 	stb	r5,77(sp)
   43198:	003b1706 	br	41df8 <___vfprintf_internal_r+0xbb8>
   4319c:	d9401345 	stb	r5,77(sp)
   431a0:	003a2206 	br	41a2c <___vfprintf_internal_r+0x7ec>
   431a4:	d9401345 	stb	r5,77(sp)
   431a8:	003a6806 	br	41b4c <___vfprintf_internal_r+0x90c>
   431ac:	d9401345 	stb	r5,77(sp)
   431b0:	00399906 	br	41818 <___vfprintf_internal_r+0x5d8>
   431b4:	00bfffc4 	movi	r2,-1
   431b8:	d8800515 	stw	r2,20(sp)
   431bc:	00393006 	br	41680 <___vfprintf_internal_r+0x440>
   431c0:	900f883a 	mov	r7,r18
   431c4:	8025883a 	mov	r18,r16
   431c8:	dc000717 	ldw	r16,28(sp)
   431cc:	10800044 	addi	r2,r2,1
   431d0:	1f07883a 	add	r3,r3,fp
   431d4:	b1c00015 	stw	r7,0(r22)
   431d8:	b7000115 	stw	fp,4(r22)
   431dc:	d8c01c15 	stw	r3,112(sp)
   431e0:	d8801b15 	stw	r2,108(sp)
   431e4:	11000208 	cmpgei	r4,r2,8
   431e8:	203dfa26 	beq	r4,zero,429d4 <___vfprintf_internal_r+0x1794>
   431ec:	d9801a04 	addi	r6,sp,104
   431f0:	900b883a 	mov	r5,r18
   431f4:	9809883a 	mov	r4,r19
   431f8:	00486f40 	call	486f4 <__sprint_r>
   431fc:	10391d1e 	bne	r2,zero,41674 <___vfprintf_internal_r+0x434>
   43200:	d8c01c17 	ldw	r3,112(sp)
   43204:	d8801b17 	ldw	r2,108(sp)
   43208:	dd802704 	addi	r22,sp,156
   4320c:	003df206 	br	429d8 <___vfprintf_internal_r+0x1798>
   43210:	d8800717 	ldw	r2,28(sp)
   43214:	d8c00b17 	ldw	r3,44(sp)
   43218:	10eb883a 	add	r21,r2,r3
   4321c:	a829883a 	mov	r20,r21
   43220:	a83fd60e 	bge	r21,zero,4317c <___vfprintf_internal_r+0x1f3c>
   43224:	0029883a 	mov	r20,zero
   43228:	003fd406 	br	4317c <___vfprintf_internal_r+0x1f3c>
   4322c:	00800c04 	movi	r2,48
   43230:	ad400c04 	addi	r21,r21,48
   43234:	d88016c5 	stb	r2,91(sp)
   43238:	00800104 	movi	r2,4
   4323c:	dd401705 	stb	r21,92(sp)
   43240:	d8801015 	stw	r2,64(sp)
   43244:	003e6506 	br	42bdc <___vfprintf_internal_r+0x199c>
   43248:	d8800a17 	ldw	r2,40(sp)
   4324c:	10001916 	blt	r2,zero,432b4 <___vfprintf_internal_r+0x2074>
   43250:	db401343 	ldbu	r13,77(sp)
   43254:	e0801210 	cmplti	r2,fp,72
   43258:	1000131e 	bne	r2,zero,432a8 <___vfprintf_internal_r+0x2068>
   4325c:	04400174 	movhi	r17,5
   43260:	8c7f7604 	addi	r17,r17,-552
   43264:	00399b06 	br	418d4 <___vfprintf_internal_r+0x694>
   43268:	05400044 	movi	r21,1
   4326c:	a8abc83a 	sub	r21,r21,r2
   43270:	00800b44 	movi	r2,45
   43274:	d8801685 	stb	r2,90(sp)
   43278:	003e2906 	br	42b20 <___vfprintf_internal_r+0x18e0>
   4327c:	d8800b17 	ldw	r2,44(sp)
   43280:	18ab883a 	add	r21,r3,r2
   43284:	aa2b883a 	add	r21,r21,r8
   43288:	a829883a 	mov	r20,r21
   4328c:	a83efc0e 	bge	r21,zero,42e80 <___vfprintf_internal_r+0x1c40>
   43290:	0029883a 	mov	r20,zero
   43294:	003efa06 	br	42e80 <___vfprintf_internal_r+0x1c40>
   43298:	6080004c 	andi	r2,r12,1
   4329c:	d8800715 	stw	r2,28(sp)
   432a0:	103e531e 	bne	r2,zero,42bf0 <___vfprintf_internal_r+0x19b0>
   432a4:	003ff806 	br	43288 <___vfprintf_internal_r+0x2048>
   432a8:	04400174 	movhi	r17,5
   432ac:	8c7f7504 	addi	r17,r17,-556
   432b0:	00398806 	br	418d4 <___vfprintf_internal_r+0x694>
   432b4:	00800b44 	movi	r2,45
   432b8:	d8801345 	stb	r2,77(sp)
   432bc:	03400b44 	movi	r13,45
   432c0:	003fe406 	br	43254 <___vfprintf_internal_r+0x2014>
   432c4:	1000031e 	bne	r2,zero,432d4 <___vfprintf_internal_r+0x2094>
   432c8:	05000044 	movi	r20,1
   432cc:	05400044 	movi	r21,1
   432d0:	003eeb06 	br	42e80 <___vfprintf_internal_r+0x1c40>
   432d4:	d8800b17 	ldw	r2,44(sp)
   432d8:	15400044 	addi	r21,r2,1
   432dc:	aa2b883a 	add	r21,r21,r8
   432e0:	003fe906 	br	43288 <___vfprintf_internal_r+0x2048>
   432e4:	b005883a 	mov	r2,r22
   432e8:	39ff8404 	addi	r7,r7,-496
   432ec:	003e9706 	br	42d4c <___vfprintf_internal_r+0x1b0c>
   432f0:	8025883a 	mov	r18,r16
   432f4:	0038df06 	br	41674 <___vfprintf_internal_r+0x434>
   432f8:	00800084 	movi	r2,2
   432fc:	d8801015 	stw	r2,64(sp)
   43300:	003e3606 	br	42bdc <___vfprintf_internal_r+0x199c>
   43304:	d8800617 	ldw	r2,24(sp)
   43308:	12000017 	ldw	r8,0(r2)
   4330c:	10800104 	addi	r2,r2,4
   43310:	4000010e 	bge	r8,zero,43318 <___vfprintf_internal_r+0x20d8>
   43314:	023fffc4 	movi	r8,-1
   43318:	bf000043 	ldbu	fp,1(r23)
   4331c:	d8800615 	stw	r2,24(sp)
   43320:	182f883a 	mov	r23,r3
   43324:	e2c03fcc 	andi	r11,fp,255
   43328:	5ac0201c 	xori	r11,r11,128
   4332c:	5affe004 	addi	r11,r11,-128
   43330:	00380f06 	br	41370 <___vfprintf_internal_r+0x130>

00043334 <__vfprintf_internal>:
   43334:	00c00174 	movhi	r3,5
   43338:	2005883a 	mov	r2,r4
   4333c:	1907ad17 	ldw	r4,7860(r3)
   43340:	300f883a 	mov	r7,r6
   43344:	280d883a 	mov	r6,r5
   43348:	100b883a 	mov	r5,r2
   4334c:	00412401 	jmpi	41240 <___vfprintf_internal_r>

00043350 <__sbprintf>:
   43350:	2880030b 	ldhu	r2,12(r5)
   43354:	2b001917 	ldw	r12,100(r5)
   43358:	2ac0038b 	ldhu	r11,14(r5)
   4335c:	2a800717 	ldw	r10,28(r5)
   43360:	2a400917 	ldw	r9,36(r5)
   43364:	defee204 	addi	sp,sp,-1144
   43368:	da001a04 	addi	r8,sp,104
   4336c:	00c10004 	movi	r3,1024
   43370:	dc011a15 	stw	r16,1128(sp)
   43374:	10bfff4c 	andi	r2,r2,65533
   43378:	2821883a 	mov	r16,r5
   4337c:	d80b883a 	mov	r5,sp
   43380:	dc811c15 	stw	r18,1136(sp)
   43384:	dc411b15 	stw	r17,1132(sp)
   43388:	dfc11d15 	stw	ra,1140(sp)
   4338c:	2025883a 	mov	r18,r4
   43390:	d880030d 	sth	r2,12(sp)
   43394:	db001915 	stw	r12,100(sp)
   43398:	dac0038d 	sth	r11,14(sp)
   4339c:	da800715 	stw	r10,28(sp)
   433a0:	da400915 	stw	r9,36(sp)
   433a4:	da000015 	stw	r8,0(sp)
   433a8:	da000415 	stw	r8,16(sp)
   433ac:	d8c00215 	stw	r3,8(sp)
   433b0:	d8c00515 	stw	r3,20(sp)
   433b4:	d8000615 	stw	zero,24(sp)
   433b8:	00412400 	call	41240 <___vfprintf_internal_r>
   433bc:	1023883a 	mov	r17,r2
   433c0:	10000d0e 	bge	r2,zero,433f8 <__sbprintf+0xa8>
   433c4:	d880030b 	ldhu	r2,12(sp)
   433c8:	1080100c 	andi	r2,r2,64
   433cc:	10000326 	beq	r2,zero,433dc <__sbprintf+0x8c>
   433d0:	8080030b 	ldhu	r2,12(r16)
   433d4:	10801014 	ori	r2,r2,64
   433d8:	8080030d 	sth	r2,12(r16)
   433dc:	8805883a 	mov	r2,r17
   433e0:	dfc11d17 	ldw	ra,1140(sp)
   433e4:	dc811c17 	ldw	r18,1136(sp)
   433e8:	dc411b17 	ldw	r17,1132(sp)
   433ec:	dc011a17 	ldw	r16,1128(sp)
   433f0:	dec11e04 	addi	sp,sp,1144
   433f4:	f800283a 	ret
   433f8:	d80b883a 	mov	r5,sp
   433fc:	9009883a 	mov	r4,r18
   43400:	00450e00 	call	450e0 <_fflush_r>
   43404:	103fef26 	beq	r2,zero,433c4 <__sbprintf+0x74>
   43408:	047fffc4 	movi	r17,-1
   4340c:	003fed06 	br	433c4 <__sbprintf+0x74>

00043410 <__swsetup_r>:
   43410:	00800174 	movhi	r2,5
   43414:	1087ad17 	ldw	r2,7860(r2)
   43418:	defffd04 	addi	sp,sp,-12
   4341c:	dc400115 	stw	r17,4(sp)
   43420:	dc000015 	stw	r16,0(sp)
   43424:	dfc00215 	stw	ra,8(sp)
   43428:	2023883a 	mov	r17,r4
   4342c:	2821883a 	mov	r16,r5
   43430:	10000226 	beq	r2,zero,4343c <__swsetup_r+0x2c>
   43434:	10c00e17 	ldw	r3,56(r2)
   43438:	18001f26 	beq	r3,zero,434b8 <__swsetup_r+0xa8>
   4343c:	8180030b 	ldhu	r6,12(r16)
   43440:	30c0020c 	andi	r3,r6,8
   43444:	3005883a 	mov	r2,r6
   43448:	18002126 	beq	r3,zero,434d0 <__swsetup_r+0xc0>
   4344c:	80c00417 	ldw	r3,16(r16)
   43450:	18002826 	beq	r3,zero,434f4 <__swsetup_r+0xe4>
   43454:	1100004c 	andi	r4,r2,1
   43458:	20000b1e 	bne	r4,zero,43488 <__swsetup_r+0x78>
   4345c:	1100008c 	andi	r4,r2,2
   43460:	20002e1e 	bne	r4,zero,4351c <__swsetup_r+0x10c>
   43464:	81000517 	ldw	r4,20(r16)
   43468:	81000215 	stw	r4,8(r16)
   4346c:	18000b26 	beq	r3,zero,4349c <__swsetup_r+0x8c>
   43470:	0005883a 	mov	r2,zero
   43474:	dfc00217 	ldw	ra,8(sp)
   43478:	dc400117 	ldw	r17,4(sp)
   4347c:	dc000017 	ldw	r16,0(sp)
   43480:	dec00304 	addi	sp,sp,12
   43484:	f800283a 	ret
   43488:	81000517 	ldw	r4,20(r16)
   4348c:	80000215 	stw	zero,8(r16)
   43490:	0109c83a 	sub	r4,zero,r4
   43494:	81000615 	stw	r4,24(r16)
   43498:	183ff51e 	bne	r3,zero,43470 <__swsetup_r+0x60>
   4349c:	10c0200c 	andi	r3,r2,128
   434a0:	0005883a 	mov	r2,zero
   434a4:	183ff326 	beq	r3,zero,43474 <__swsetup_r+0x64>
   434a8:	31801014 	ori	r6,r6,64
   434ac:	8180030d 	sth	r6,12(r16)
   434b0:	00bfffc4 	movi	r2,-1
   434b4:	003fef06 	br	43474 <__swsetup_r+0x64>
   434b8:	1009883a 	mov	r4,r2
   434bc:	00455180 	call	45518 <__sinit>
   434c0:	8180030b 	ldhu	r6,12(r16)
   434c4:	30c0020c 	andi	r3,r6,8
   434c8:	3005883a 	mov	r2,r6
   434cc:	183fdf1e 	bne	r3,zero,4344c <__swsetup_r+0x3c>
   434d0:	3080040c 	andi	r2,r6,16
   434d4:	10002126 	beq	r2,zero,4355c <__swsetup_r+0x14c>
   434d8:	3080010c 	andi	r2,r6,4
   434dc:	1000111e 	bne	r2,zero,43524 <__swsetup_r+0x114>
   434e0:	80c00417 	ldw	r3,16(r16)
   434e4:	30800214 	ori	r2,r6,8
   434e8:	8080030d 	sth	r2,12(r16)
   434ec:	100d883a 	mov	r6,r2
   434f0:	183fd81e 	bne	r3,zero,43454 <__swsetup_r+0x44>
   434f4:	1100a00c 	andi	r4,r2,640
   434f8:	21008020 	cmpeqi	r4,r4,512
   434fc:	203fd51e 	bne	r4,zero,43454 <__swsetup_r+0x44>
   43500:	800b883a 	mov	r5,r16
   43504:	8809883a 	mov	r4,r17
   43508:	0045f900 	call	45f90 <__smakebuf_r>
   4350c:	8180030b 	ldhu	r6,12(r16)
   43510:	80c00417 	ldw	r3,16(r16)
   43514:	3005883a 	mov	r2,r6
   43518:	003fce06 	br	43454 <__swsetup_r+0x44>
   4351c:	0009883a 	mov	r4,zero
   43520:	003fd106 	br	43468 <__swsetup_r+0x58>
   43524:	81400c17 	ldw	r5,48(r16)
   43528:	28000626 	beq	r5,zero,43544 <__swsetup_r+0x134>
   4352c:	80801004 	addi	r2,r16,64
   43530:	28800326 	beq	r5,r2,43540 <__swsetup_r+0x130>
   43534:	8809883a 	mov	r4,r17
   43538:	004567c0 	call	4567c <_free_r>
   4353c:	8180030b 	ldhu	r6,12(r16)
   43540:	80000c15 	stw	zero,48(r16)
   43544:	80c00417 	ldw	r3,16(r16)
   43548:	00bff6c4 	movi	r2,-37
   4354c:	118c703a 	and	r6,r2,r6
   43550:	80000115 	stw	zero,4(r16)
   43554:	80c00015 	stw	r3,0(r16)
   43558:	003fe206 	br	434e4 <__swsetup_r+0xd4>
   4355c:	00800244 	movi	r2,9
   43560:	88800015 	stw	r2,0(r17)
   43564:	31801014 	ori	r6,r6,64
   43568:	8180030d 	sth	r6,12(r16)
   4356c:	00bfffc4 	movi	r2,-1
   43570:	003fc006 	br	43474 <__swsetup_r+0x64>

00043574 <quorem>:
   43574:	defff504 	addi	sp,sp,-44
   43578:	dc800315 	stw	r18,12(sp)
   4357c:	20800417 	ldw	r2,16(r4)
   43580:	2c800417 	ldw	r18,16(r5)
   43584:	dfc00a15 	stw	ra,40(sp)
   43588:	df000915 	stw	fp,36(sp)
   4358c:	ddc00815 	stw	r23,32(sp)
   43590:	dd800715 	stw	r22,28(sp)
   43594:	dd400615 	stw	r21,24(sp)
   43598:	dd000515 	stw	r20,20(sp)
   4359c:	dcc00415 	stw	r19,16(sp)
   435a0:	dc400215 	stw	r17,8(sp)
   435a4:	dc000115 	stw	r16,4(sp)
   435a8:	14806f16 	blt	r2,r18,43768 <quorem+0x1f4>
   435ac:	94bfffc4 	addi	r18,r18,-1
   435b0:	902c90ba 	slli	r22,r18,2
   435b4:	2c000504 	addi	r16,r5,20
   435b8:	25000504 	addi	r20,r4,20
   435bc:	85a7883a 	add	r19,r16,r22
   435c0:	9f000017 	ldw	fp,0(r19)
   435c4:	a5ad883a 	add	r22,r20,r22
   435c8:	202b883a 	mov	r21,r4
   435cc:	b1000017 	ldw	r4,0(r22)
   435d0:	e7000044 	addi	fp,fp,1
   435d4:	282f883a 	mov	r23,r5
   435d8:	e00b883a 	mov	r5,fp
   435dc:	d9000015 	stw	r4,0(sp)
   435e0:	0040fa40 	call	40fa4 <__udivsi3>
   435e4:	d9000017 	ldw	r4,0(sp)
   435e8:	1023883a 	mov	r17,r2
   435ec:	27002a36 	bltu	r4,fp,43698 <quorem+0x124>
   435f0:	800b883a 	mov	r5,r16
   435f4:	a009883a 	mov	r4,r20
   435f8:	0013883a 	mov	r9,zero
   435fc:	0007883a 	mov	r3,zero
   43600:	2a000017 	ldw	r8,0(r5)
   43604:	21800017 	ldw	r6,0(r4)
   43608:	21000104 	addi	r4,r4,4
   4360c:	40bfffcc 	andi	r2,r8,65535
   43610:	1445383a 	mul	r2,r2,r17
   43614:	400ed43a 	srli	r7,r8,16
   43618:	32bfffcc 	andi	r10,r6,65535
   4361c:	1245883a 	add	r2,r2,r9
   43620:	1012d43a 	srli	r9,r2,16
   43624:	123fffcc 	andi	r8,r2,65535
   43628:	3c4f383a 	mul	r7,r7,r17
   4362c:	1a07c83a 	sub	r3,r3,r8
   43630:	1a91883a 	add	r8,r3,r10
   43634:	3006d43a 	srli	r3,r6,16
   43638:	4005d43a 	srai	r2,r8,16
   4363c:	3a4f883a 	add	r7,r7,r9
   43640:	39bfffcc 	andi	r6,r7,65535
   43644:	1987c83a 	sub	r3,r3,r6
   43648:	1887883a 	add	r3,r3,r2
   4364c:	1804943a 	slli	r2,r3,16
   43650:	423fffcc 	andi	r8,r8,65535
   43654:	29400104 	addi	r5,r5,4
   43658:	1210b03a 	or	r8,r2,r8
   4365c:	223fff15 	stw	r8,-4(r4)
   43660:	3812d43a 	srli	r9,r7,16
   43664:	1807d43a 	srai	r3,r3,16
   43668:	997fe52e 	bgeu	r19,r5,43600 <quorem+0x8c>
   4366c:	b0800017 	ldw	r2,0(r22)
   43670:	1000091e 	bne	r2,zero,43698 <quorem+0x124>
   43674:	b5bfff04 	addi	r22,r22,-4
   43678:	a5800336 	bltu	r20,r22,43688 <quorem+0x114>
   4367c:	00000506 	br	43694 <quorem+0x120>
   43680:	94bfffc4 	addi	r18,r18,-1
   43684:	a580032e 	bgeu	r20,r22,43694 <quorem+0x120>
   43688:	b0800017 	ldw	r2,0(r22)
   4368c:	b5bfff04 	addi	r22,r22,-4
   43690:	103ffb26 	beq	r2,zero,43680 <quorem+0x10c>
   43694:	ac800415 	stw	r18,16(r21)
   43698:	b80b883a 	mov	r5,r23
   4369c:	a809883a 	mov	r4,r21
   436a0:	00477c40 	call	477c4 <__mcmp>
   436a4:	10002316 	blt	r2,zero,43734 <quorem+0x1c0>
   436a8:	8c400044 	addi	r17,r17,1
   436ac:	a00d883a 	mov	r6,r20
   436b0:	0007883a 	mov	r3,zero
   436b4:	81000017 	ldw	r4,0(r16)
   436b8:	31400017 	ldw	r5,0(r6)
   436bc:	31800104 	addi	r6,r6,4
   436c0:	20bfffcc 	andi	r2,r4,65535
   436c4:	1887c83a 	sub	r3,r3,r2
   436c8:	28bfffcc 	andi	r2,r5,65535
   436cc:	1885883a 	add	r2,r3,r2
   436d0:	2008d43a 	srli	r4,r4,16
   436d4:	2806d43a 	srli	r3,r5,16
   436d8:	100fd43a 	srai	r7,r2,16
   436dc:	117fffcc 	andi	r5,r2,65535
   436e0:	1907c83a 	sub	r3,r3,r4
   436e4:	19c7883a 	add	r3,r3,r7
   436e8:	1804943a 	slli	r2,r3,16
   436ec:	84000104 	addi	r16,r16,4
   436f0:	1807d43a 	srai	r3,r3,16
   436f4:	1144b03a 	or	r2,r2,r5
   436f8:	30bfff15 	stw	r2,-4(r6)
   436fc:	9c3fed2e 	bgeu	r19,r16,436b4 <quorem+0x140>
   43700:	900490ba 	slli	r2,r18,2
   43704:	a085883a 	add	r2,r20,r2
   43708:	10c00017 	ldw	r3,0(r2)
   4370c:	1800091e 	bne	r3,zero,43734 <quorem+0x1c0>
   43710:	10bfff04 	addi	r2,r2,-4
   43714:	a0800336 	bltu	r20,r2,43724 <quorem+0x1b0>
   43718:	00000506 	br	43730 <quorem+0x1bc>
   4371c:	94bfffc4 	addi	r18,r18,-1
   43720:	a080032e 	bgeu	r20,r2,43730 <quorem+0x1bc>
   43724:	10c00017 	ldw	r3,0(r2)
   43728:	10bfff04 	addi	r2,r2,-4
   4372c:	183ffb26 	beq	r3,zero,4371c <quorem+0x1a8>
   43730:	ac800415 	stw	r18,16(r21)
   43734:	8805883a 	mov	r2,r17
   43738:	dfc00a17 	ldw	ra,40(sp)
   4373c:	df000917 	ldw	fp,36(sp)
   43740:	ddc00817 	ldw	r23,32(sp)
   43744:	dd800717 	ldw	r22,28(sp)
   43748:	dd400617 	ldw	r21,24(sp)
   4374c:	dd000517 	ldw	r20,20(sp)
   43750:	dcc00417 	ldw	r19,16(sp)
   43754:	dc800317 	ldw	r18,12(sp)
   43758:	dc400217 	ldw	r17,8(sp)
   4375c:	dc000117 	ldw	r16,4(sp)
   43760:	dec00b04 	addi	sp,sp,44
   43764:	f800283a 	ret
   43768:	0005883a 	mov	r2,zero
   4376c:	003ff206 	br	43738 <quorem+0x1c4>

00043770 <_dtoa_r>:
   43770:	20801017 	ldw	r2,64(r4)
   43774:	deffe204 	addi	sp,sp,-120
   43778:	ddc01b15 	stw	r23,108(sp)
   4377c:	dcc01715 	stw	r19,92(sp)
   43780:	dc801615 	stw	r18,88(sp)
   43784:	dc401515 	stw	r17,84(sp)
   43788:	dc001415 	stw	r16,80(sp)
   4378c:	dfc01d15 	stw	ra,116(sp)
   43790:	df001c15 	stw	fp,112(sp)
   43794:	dd801a15 	stw	r22,104(sp)
   43798:	dd401915 	stw	r21,100(sp)
   4379c:	dd001815 	stw	r20,96(sp)
   437a0:	d9c00215 	stw	r7,8(sp)
   437a4:	dc002017 	ldw	r16,128(sp)
   437a8:	202f883a 	mov	r23,r4
   437ac:	3025883a 	mov	r18,r6
   437b0:	2827883a 	mov	r19,r5
   437b4:	3023883a 	mov	r17,r6
   437b8:	10000826 	beq	r2,zero,437dc <_dtoa_r+0x6c>
   437bc:	21801117 	ldw	r6,68(r4)
   437c0:	00c00044 	movi	r3,1
   437c4:	100b883a 	mov	r5,r2
   437c8:	1986983a 	sll	r3,r3,r6
   437cc:	11800115 	stw	r6,4(r2)
   437d0:	10c00215 	stw	r3,8(r2)
   437d4:	0046e480 	call	46e48 <_Bfree>
   437d8:	b8001015 	stw	zero,64(r23)
   437dc:	90018816 	blt	r18,zero,43e00 <_dtoa_r+0x690>
   437e0:	80000015 	stw	zero,0(r16)
   437e4:	909ffc2c 	andhi	r2,r18,32752
   437e8:	00dffc34 	movhi	r3,32752
   437ec:	10c18d26 	beq	r2,r3,43e24 <_dtoa_r+0x6b4>
   437f0:	000d883a 	mov	r6,zero
   437f4:	000f883a 	mov	r7,zero
   437f8:	9809883a 	mov	r4,r19
   437fc:	880b883a 	mov	r5,r17
   43800:	004c0280 	call	4c028 <__eqdf2>
   43804:	1000191e 	bne	r2,zero,4386c <_dtoa_r+0xfc>
   43808:	d8c01f17 	ldw	r3,124(sp)
   4380c:	00800044 	movi	r2,1
   43810:	18800015 	stw	r2,0(r3)
   43814:	d8802117 	ldw	r2,132(sp)
   43818:	1002f926 	beq	r2,zero,44400 <_dtoa_r+0xc90>
   4381c:	d9002117 	ldw	r4,132(sp)
   43820:	00800174 	movhi	r2,5
   43824:	10bf8344 	addi	r2,r2,-499
   43828:	00c00174 	movhi	r3,5
   4382c:	20800015 	stw	r2,0(r4)
   43830:	18bf8304 	addi	r2,r3,-500
   43834:	d8800115 	stw	r2,4(sp)
   43838:	d8800117 	ldw	r2,4(sp)
   4383c:	dfc01d17 	ldw	ra,116(sp)
   43840:	df001c17 	ldw	fp,112(sp)
   43844:	ddc01b17 	ldw	r23,108(sp)
   43848:	dd801a17 	ldw	r22,104(sp)
   4384c:	dd401917 	ldw	r21,100(sp)
   43850:	dd001817 	ldw	r20,96(sp)
   43854:	dcc01717 	ldw	r19,92(sp)
   43858:	dc801617 	ldw	r18,88(sp)
   4385c:	dc401517 	ldw	r17,84(sp)
   43860:	dc001417 	ldw	r16,80(sp)
   43864:	dec01e04 	addi	sp,sp,120
   43868:	f800283a 	ret
   4386c:	d8801204 	addi	r2,sp,72
   43870:	9020d53a 	srli	r16,r18,20
   43874:	d8800015 	stw	r2,0(sp)
   43878:	d9c01304 	addi	r7,sp,76
   4387c:	980b883a 	mov	r5,r19
   43880:	880d883a 	mov	r6,r17
   43884:	b809883a 	mov	r4,r23
   43888:	0047bac0 	call	47bac <__d2b>
   4388c:	1039883a 	mov	fp,r2
   43890:	8001771e 	bne	r16,zero,43e70 <_dtoa_r+0x700>
   43894:	dd001217 	ldw	r20,72(sp)
   43898:	dc001317 	ldw	r16,76(sp)
   4389c:	a421883a 	add	r16,r20,r16
   438a0:	80810c84 	addi	r2,r16,1074
   438a4:	10c00850 	cmplti	r3,r2,33
   438a8:	1802e51e 	bne	r3,zero,44440 <_dtoa_r+0xcd0>
   438ac:	01001004 	movi	r4,64
   438b0:	2085c83a 	sub	r2,r4,r2
   438b4:	81010484 	addi	r4,r16,1042
   438b8:	90a4983a 	sll	r18,r18,r2
   438bc:	9908d83a 	srl	r4,r19,r4
   438c0:	9108b03a 	or	r4,r18,r4
   438c4:	004d32c0 	call	4d32c <__floatunsidf>
   438c8:	1009883a 	mov	r4,r2
   438cc:	017f8434 	movhi	r5,65040
   438d0:	00800044 	movi	r2,1
   438d4:	194b883a 	add	r5,r3,r5
   438d8:	843fffc4 	addi	r16,r16,-1
   438dc:	d8800a15 	stw	r2,40(sp)
   438e0:	000d883a 	mov	r6,zero
   438e4:	01cffe34 	movhi	r7,16376
   438e8:	004c8ec0 	call	4c8ec <__subdf3>
   438ec:	0198dbf4 	movhi	r6,25455
   438f0:	01cff4f4 	movhi	r7,16339
   438f4:	3190d844 	addi	r6,r6,17249
   438f8:	39e1e9c4 	addi	r7,r7,-30809
   438fc:	1009883a 	mov	r4,r2
   43900:	180b883a 	mov	r5,r3
   43904:	004c2780 	call	4c278 <__muldf3>
   43908:	01a2d874 	movhi	r6,35681
   4390c:	01cff1f4 	movhi	r7,16327
   43910:	31b22cc4 	addi	r6,r6,-14157
   43914:	39e28a04 	addi	r7,r7,-30168
   43918:	180b883a 	mov	r5,r3
   4391c:	1009883a 	mov	r4,r2
   43920:	004b7380 	call	4b738 <__adddf3>
   43924:	8009883a 	mov	r4,r16
   43928:	102b883a 	mov	r21,r2
   4392c:	1825883a 	mov	r18,r3
   43930:	004d2740 	call	4d274 <__floatsidf>
   43934:	019427f4 	movhi	r6,20639
   43938:	01cff4f4 	movhi	r7,16339
   4393c:	319e7ec4 	addi	r6,r6,31227
   43940:	39d104c4 	addi	r7,r7,17427
   43944:	1009883a 	mov	r4,r2
   43948:	180b883a 	mov	r5,r3
   4394c:	004c2780 	call	4c278 <__muldf3>
   43950:	100d883a 	mov	r6,r2
   43954:	180f883a 	mov	r7,r3
   43958:	a809883a 	mov	r4,r21
   4395c:	900b883a 	mov	r5,r18
   43960:	004b7380 	call	4b738 <__adddf3>
   43964:	1009883a 	mov	r4,r2
   43968:	180b883a 	mov	r5,r3
   4396c:	1025883a 	mov	r18,r2
   43970:	182d883a 	mov	r22,r3
   43974:	004d1f40 	call	4d1f4 <__fixdfsi>
   43978:	000d883a 	mov	r6,zero
   4397c:	000f883a 	mov	r7,zero
   43980:	9009883a 	mov	r4,r18
   43984:	b00b883a 	mov	r5,r22
   43988:	102b883a 	mov	r21,r2
   4398c:	d8800315 	stw	r2,12(sp)
   43990:	004c1900 	call	4c190 <__ledf2>
   43994:	10028f16 	blt	r2,zero,443d4 <_dtoa_r+0xc64>
   43998:	dc800317 	ldw	r18,12(sp)
   4399c:	a421c83a 	sub	r16,r20,r16
   439a0:	85bfffc4 	addi	r22,r16,-1
   439a4:	908005e8 	cmpgeui	r2,r18,23
   439a8:	1002821e 	bne	r2,zero,443b4 <_dtoa_r+0xc44>
   439ac:	900690fa 	slli	r3,r18,3
   439b0:	00800174 	movhi	r2,5
   439b4:	10bfca04 	addi	r2,r2,-216
   439b8:	10c5883a 	add	r2,r2,r3
   439bc:	11800017 	ldw	r6,0(r2)
   439c0:	11c00117 	ldw	r7,4(r2)
   439c4:	9809883a 	mov	r4,r19
   439c8:	880b883a 	mov	r5,r17
   439cc:	004c1900 	call	4c190 <__ledf2>
   439d0:	1002550e 	bge	r2,zero,44328 <_dtoa_r+0xbb8>
   439d4:	90bfffc4 	addi	r2,r18,-1
   439d8:	d8800315 	stw	r2,12(sp)
   439dc:	d8000915 	stw	zero,36(sp)
   439e0:	b0027716 	blt	r22,zero,443c0 <_dtoa_r+0xc50>
   439e4:	d8000615 	stw	zero,24(sp)
   439e8:	d8800317 	ldw	r2,12(sp)
   439ec:	1002510e 	bge	r2,zero,44334 <_dtoa_r+0xbc4>
   439f0:	d8800317 	ldw	r2,12(sp)
   439f4:	d8c00617 	ldw	r3,24(sp)
   439f8:	d8000315 	stw	zero,12(sp)
   439fc:	d8800415 	stw	r2,16(sp)
   43a00:	1887c83a 	sub	r3,r3,r2
   43a04:	d8c00615 	stw	r3,24(sp)
   43a08:	0087c83a 	sub	r3,zero,r2
   43a0c:	d8c00815 	stw	r3,32(sp)
   43a10:	d8c00217 	ldw	r3,8(sp)
   43a14:	188002a8 	cmpgeui	r2,r3,10
   43a18:	10024d1e 	bne	r2,zero,44350 <_dtoa_r+0xbe0>
   43a1c:	18800190 	cmplti	r2,r3,6
   43a20:	10028b1e 	bne	r2,zero,44450 <_dtoa_r+0xce0>
   43a24:	18bfff04 	addi	r2,r3,-4
   43a28:	d8800215 	stw	r2,8(sp)
   43a2c:	0021883a 	mov	r16,zero
   43a30:	d8c00217 	ldw	r3,8(sp)
   43a34:	18800120 	cmpeqi	r2,r3,4
   43a38:	10035d1e 	bne	r2,zero,447b0 <_dtoa_r+0x1040>
   43a3c:	18800160 	cmpeqi	r2,r3,5
   43a40:	10031b1e 	bne	r2,zero,446b0 <_dtoa_r+0xf40>
   43a44:	188000a0 	cmpeqi	r2,r3,2
   43a48:	10024d26 	beq	r2,zero,44380 <_dtoa_r+0xc10>
   43a4c:	d8000715 	stw	zero,28(sp)
   43a50:	d8801e17 	ldw	r2,120(sp)
   43a54:	0083260e 	bge	zero,r2,446f0 <_dtoa_r+0xf80>
   43a58:	d8800b15 	stw	r2,44(sp)
   43a5c:	d8800515 	stw	r2,20(sp)
   43a60:	100d883a 	mov	r6,r2
   43a64:	b8001115 	stw	zero,68(r23)
   43a68:	30800610 	cmplti	r2,r6,24
   43a6c:	1004f11e 	bne	r2,zero,44e34 <_dtoa_r+0x16c4>
   43a70:	00c00044 	movi	r3,1
   43a74:	00800104 	movi	r2,4
   43a78:	1085883a 	add	r2,r2,r2
   43a7c:	11000504 	addi	r4,r2,20
   43a80:	180b883a 	mov	r5,r3
   43a84:	18c00044 	addi	r3,r3,1
   43a88:	313ffb2e 	bgeu	r6,r4,43a78 <_dtoa_r+0x308>
   43a8c:	b9401115 	stw	r5,68(r23)
   43a90:	b809883a 	mov	r4,r23
   43a94:	0046da40 	call	46da4 <_Balloc>
   43a98:	d8800115 	stw	r2,4(sp)
   43a9c:	1004de26 	beq	r2,zero,44e18 <_dtoa_r+0x16a8>
   43aa0:	d8800117 	ldw	r2,4(sp)
   43aa4:	b8801015 	stw	r2,64(r23)
   43aa8:	d8800517 	ldw	r2,20(sp)
   43aac:	108003e8 	cmpgeui	r2,r2,15
   43ab0:	1001021e 	bne	r2,zero,43ebc <_dtoa_r+0x74c>
   43ab4:	80010126 	beq	r16,zero,43ebc <_dtoa_r+0x74c>
   43ab8:	d9000417 	ldw	r4,16(sp)
   43abc:	01038b0e 	bge	zero,r4,448ec <_dtoa_r+0x117c>
   43ac0:	208003cc 	andi	r2,r4,15
   43ac4:	100690fa 	slli	r3,r2,3
   43ac8:	2029d13a 	srai	r20,r4,4
   43acc:	00800174 	movhi	r2,5
   43ad0:	10bfca04 	addi	r2,r2,-216
   43ad4:	10c5883a 	add	r2,r2,r3
   43ad8:	a0c0040c 	andi	r3,r20,16
   43adc:	12800017 	ldw	r10,0(r2)
   43ae0:	12400117 	ldw	r9,4(r2)
   43ae4:	18032c26 	beq	r3,zero,44798 <_dtoa_r+0x1028>
   43ae8:	00800174 	movhi	r2,5
   43aec:	10bfc004 	addi	r2,r2,-256
   43af0:	11800817 	ldw	r6,32(r2)
   43af4:	11c00917 	ldw	r7,36(r2)
   43af8:	9809883a 	mov	r4,r19
   43afc:	880b883a 	mov	r5,r17
   43b00:	da400e15 	stw	r9,56(sp)
   43b04:	da800d15 	stw	r10,52(sp)
   43b08:	00405040 	call	40504 <__divdf3>
   43b0c:	da800d17 	ldw	r10,52(sp)
   43b10:	da400e17 	ldw	r9,56(sp)
   43b14:	a50003cc 	andi	r20,r20,15
   43b18:	d8800c15 	stw	r2,48(sp)
   43b1c:	1825883a 	mov	r18,r3
   43b20:	054000c4 	movi	r21,3
   43b24:	a0001126 	beq	r20,zero,43b6c <_dtoa_r+0x3fc>
   43b28:	04000174 	movhi	r16,5
   43b2c:	843fc004 	addi	r16,r16,-256
   43b30:	5009883a 	mov	r4,r10
   43b34:	480b883a 	mov	r5,r9
   43b38:	a180004c 	andi	r6,r20,1
   43b3c:	30000626 	beq	r6,zero,43b58 <_dtoa_r+0x3e8>
   43b40:	81800017 	ldw	r6,0(r16)
   43b44:	81c00117 	ldw	r7,4(r16)
   43b48:	ad400044 	addi	r21,r21,1
   43b4c:	004c2780 	call	4c278 <__muldf3>
   43b50:	1009883a 	mov	r4,r2
   43b54:	180b883a 	mov	r5,r3
   43b58:	a029d07a 	srai	r20,r20,1
   43b5c:	84000204 	addi	r16,r16,8
   43b60:	a03ff51e 	bne	r20,zero,43b38 <_dtoa_r+0x3c8>
   43b64:	2015883a 	mov	r10,r4
   43b68:	2813883a 	mov	r9,r5
   43b6c:	d9000c17 	ldw	r4,48(sp)
   43b70:	900b883a 	mov	r5,r18
   43b74:	500d883a 	mov	r6,r10
   43b78:	480f883a 	mov	r7,r9
   43b7c:	00405040 	call	40504 <__divdf3>
   43b80:	1021883a 	mov	r16,r2
   43b84:	1825883a 	mov	r18,r3
   43b88:	d8800917 	ldw	r2,36(sp)
   43b8c:	10000626 	beq	r2,zero,43ba8 <_dtoa_r+0x438>
   43b90:	000d883a 	mov	r6,zero
   43b94:	01cffc34 	movhi	r7,16368
   43b98:	8009883a 	mov	r4,r16
   43b9c:	900b883a 	mov	r5,r18
   43ba0:	004c1900 	call	4c190 <__ledf2>
   43ba4:	10044416 	blt	r2,zero,44cb8 <_dtoa_r+0x1548>
   43ba8:	a809883a 	mov	r4,r21
   43bac:	004d2740 	call	4d274 <__floatsidf>
   43bb0:	800d883a 	mov	r6,r16
   43bb4:	900f883a 	mov	r7,r18
   43bb8:	1009883a 	mov	r4,r2
   43bbc:	180b883a 	mov	r5,r3
   43bc0:	004c2780 	call	4c278 <__muldf3>
   43bc4:	000d883a 	mov	r6,zero
   43bc8:	01d00734 	movhi	r7,16412
   43bcc:	1009883a 	mov	r4,r2
   43bd0:	180b883a 	mov	r5,r3
   43bd4:	004b7380 	call	4b738 <__adddf3>
   43bd8:	1029883a 	mov	r20,r2
   43bdc:	00bf3034 	movhi	r2,64704
   43be0:	1885883a 	add	r2,r3,r2
   43be4:	d8800c15 	stw	r2,48(sp)
   43be8:	d8800517 	ldw	r2,20(sp)
   43bec:	10032226 	beq	r2,zero,44878 <_dtoa_r+0x1108>
   43bf0:	d8800417 	ldw	r2,16(sp)
   43bf4:	d8801115 	stw	r2,68(sp)
   43bf8:	d8800517 	ldw	r2,20(sp)
   43bfc:	d8800d15 	stw	r2,52(sp)
   43c00:	d8800d17 	ldw	r2,52(sp)
   43c04:	900b883a 	mov	r5,r18
   43c08:	8009883a 	mov	r4,r16
   43c0c:	10bfffc4 	addi	r2,r2,-1
   43c10:	100690fa 	slli	r3,r2,3
   43c14:	00800174 	movhi	r2,5
   43c18:	10bfca04 	addi	r2,r2,-216
   43c1c:	10c5883a 	add	r2,r2,r3
   43c20:	12800017 	ldw	r10,0(r2)
   43c24:	12c00117 	ldw	r11,4(r2)
   43c28:	da800f15 	stw	r10,60(sp)
   43c2c:	dac00e15 	stw	r11,56(sp)
   43c30:	004d1f40 	call	4d1f4 <__fixdfsi>
   43c34:	1009883a 	mov	r4,r2
   43c38:	10800c04 	addi	r2,r2,48
   43c3c:	d8801015 	stw	r2,64(sp)
   43c40:	004d2740 	call	4d274 <__floatsidf>
   43c44:	8009883a 	mov	r4,r16
   43c48:	100d883a 	mov	r6,r2
   43c4c:	180f883a 	mov	r7,r3
   43c50:	900b883a 	mov	r5,r18
   43c54:	004c8ec0 	call	4c8ec <__subdf3>
   43c58:	d9000117 	ldw	r4,4(sp)
   43c5c:	dac00e17 	ldw	r11,56(sp)
   43c60:	da800f17 	ldw	r10,60(sp)
   43c64:	1825883a 	mov	r18,r3
   43c68:	d8c00717 	ldw	r3,28(sp)
   43c6c:	25400044 	addi	r21,r4,1
   43c70:	1021883a 	mov	r16,r2
   43c74:	500d883a 	mov	r6,r10
   43c78:	580f883a 	mov	r7,r11
   43c7c:	1803b626 	beq	r3,zero,44b58 <_dtoa_r+0x13e8>
   43c80:	0009883a 	mov	r4,zero
   43c84:	014ff834 	movhi	r5,16352
   43c88:	00405040 	call	40504 <__divdf3>
   43c8c:	d9c00c17 	ldw	r7,48(sp)
   43c90:	a00d883a 	mov	r6,r20
   43c94:	1009883a 	mov	r4,r2
   43c98:	180b883a 	mov	r5,r3
   43c9c:	004c8ec0 	call	4c8ec <__subdf3>
   43ca0:	d9000117 	ldw	r4,4(sp)
   43ca4:	1029883a 	mov	r20,r2
   43ca8:	d8801017 	ldw	r2,64(sp)
   43cac:	800d883a 	mov	r6,r16
   43cb0:	900f883a 	mov	r7,r18
   43cb4:	20800005 	stb	r2,0(r4)
   43cb8:	180b883a 	mov	r5,r3
   43cbc:	a009883a 	mov	r4,r20
   43cc0:	d8c00c15 	stw	r3,48(sp)
   43cc4:	004c0a80 	call	4c0a8 <__gedf2>
   43cc8:	0083e716 	blt	zero,r2,44c68 <_dtoa_r+0x14f8>
   43ccc:	0005883a 	mov	r2,zero
   43cd0:	dd800e15 	stw	r22,56(sp)
   43cd4:	dc400f15 	stw	r17,60(sp)
   43cd8:	dd800d17 	ldw	r22,52(sp)
   43cdc:	dc400c17 	ldw	r17,48(sp)
   43ce0:	ddc00d15 	stw	r23,52(sp)
   43ce4:	dcc00c15 	stw	r19,48(sp)
   43ce8:	1027883a 	mov	r19,r2
   43cec:	00002606 	br	43d88 <_dtoa_r+0x618>
   43cf0:	9cc00044 	addi	r19,r19,1
   43cf4:	9d806d0e 	bge	r19,r22,43eac <_dtoa_r+0x73c>
   43cf8:	a009883a 	mov	r4,r20
   43cfc:	880b883a 	mov	r5,r17
   43d00:	000d883a 	mov	r6,zero
   43d04:	01d00934 	movhi	r7,16420
   43d08:	004c2780 	call	4c278 <__muldf3>
   43d0c:	000d883a 	mov	r6,zero
   43d10:	01d00934 	movhi	r7,16420
   43d14:	8009883a 	mov	r4,r16
   43d18:	900b883a 	mov	r5,r18
   43d1c:	1029883a 	mov	r20,r2
   43d20:	1823883a 	mov	r17,r3
   43d24:	004c2780 	call	4c278 <__muldf3>
   43d28:	180b883a 	mov	r5,r3
   43d2c:	1009883a 	mov	r4,r2
   43d30:	1821883a 	mov	r16,r3
   43d34:	1025883a 	mov	r18,r2
   43d38:	004d1f40 	call	4d1f4 <__fixdfsi>
   43d3c:	1009883a 	mov	r4,r2
   43d40:	102f883a 	mov	r23,r2
   43d44:	004d2740 	call	4d274 <__floatsidf>
   43d48:	9009883a 	mov	r4,r18
   43d4c:	800b883a 	mov	r5,r16
   43d50:	100d883a 	mov	r6,r2
   43d54:	180f883a 	mov	r7,r3
   43d58:	004c8ec0 	call	4c8ec <__subdf3>
   43d5c:	ad400044 	addi	r21,r21,1
   43d60:	ba000c04 	addi	r8,r23,48
   43d64:	aa3fffc5 	stb	r8,-1(r21)
   43d68:	a00d883a 	mov	r6,r20
   43d6c:	880f883a 	mov	r7,r17
   43d70:	1009883a 	mov	r4,r2
   43d74:	180b883a 	mov	r5,r3
   43d78:	1021883a 	mov	r16,r2
   43d7c:	1825883a 	mov	r18,r3
   43d80:	004c1900 	call	4c190 <__ledf2>
   43d84:	10040516 	blt	r2,zero,44d9c <_dtoa_r+0x162c>
   43d88:	800d883a 	mov	r6,r16
   43d8c:	900f883a 	mov	r7,r18
   43d90:	0009883a 	mov	r4,zero
   43d94:	014ffc34 	movhi	r5,16368
   43d98:	004c8ec0 	call	4c8ec <__subdf3>
   43d9c:	a00d883a 	mov	r6,r20
   43da0:	880f883a 	mov	r7,r17
   43da4:	1009883a 	mov	r4,r2
   43da8:	180b883a 	mov	r5,r3
   43dac:	004c1900 	call	4c190 <__ledf2>
   43db0:	103fcf0e 	bge	r2,zero,43cf0 <_dtoa_r+0x580>
   43db4:	d8801117 	ldw	r2,68(sp)
   43db8:	ddc00d17 	ldw	r23,52(sp)
   43dbc:	d9000117 	ldw	r4,4(sp)
   43dc0:	10800044 	addi	r2,r2,1
   43dc4:	d8800415 	stw	r2,16(sp)
   43dc8:	a829883a 	mov	r20,r21
   43dcc:	00000106 	br	43dd4 <_dtoa_r+0x664>
   43dd0:	a103da26 	beq	r20,r4,44d3c <_dtoa_r+0x15cc>
   43dd4:	a0ffffc3 	ldbu	r3,-1(r20)
   43dd8:	a02b883a 	mov	r21,r20
   43ddc:	a53fffc4 	addi	r20,r20,-1
   43de0:	18803fcc 	andi	r2,r3,255
   43de4:	1080201c 	xori	r2,r2,128
   43de8:	10bfe004 	addi	r2,r2,-128
   43dec:	10800e60 	cmpeqi	r2,r2,57
   43df0:	103ff71e 	bne	r2,zero,43dd0 <_dtoa_r+0x660>
   43df4:	18c00044 	addi	r3,r3,1
   43df8:	a0c00005 	stb	r3,0(r20)
   43dfc:	00013f06 	br	442fc <_dtoa_r+0xb8c>
   43e00:	04600034 	movhi	r17,32768
   43e04:	8c7fffc4 	addi	r17,r17,-1
   43e08:	9462703a 	and	r17,r18,r17
   43e0c:	00800044 	movi	r2,1
   43e10:	8825883a 	mov	r18,r17
   43e14:	80800015 	stw	r2,0(r16)
   43e18:	00dffc34 	movhi	r3,32752
   43e1c:	909ffc2c 	andhi	r2,r18,32752
   43e20:	10fe731e 	bne	r2,r3,437f0 <_dtoa_r+0x80>
   43e24:	d9001f17 	ldw	r4,124(sp)
   43e28:	00800434 	movhi	r2,16
   43e2c:	10bfffc4 	addi	r2,r2,-1
   43e30:	9084703a 	and	r2,r18,r2
   43e34:	00c9c3c4 	movi	r3,9999
   43e38:	20c00015 	stw	r3,0(r4)
   43e3c:	14e6b03a 	or	r19,r2,r19
   43e40:	9800141e 	bne	r19,zero,43e94 <_dtoa_r+0x724>
   43e44:	d8802117 	ldw	r2,132(sp)
   43e48:	10041226 	beq	r2,zero,44e94 <_dtoa_r+0x1724>
   43e4c:	00800174 	movhi	r2,5
   43e50:	1007883a 	mov	r3,r2
   43e54:	18ff8d04 	addi	r3,r3,-460
   43e58:	00800174 	movhi	r2,5
   43e5c:	d8c00115 	stw	r3,4(sp)
   43e60:	10bf8f04 	addi	r2,r2,-452
   43e64:	d8c02117 	ldw	r3,132(sp)
   43e68:	18800015 	stw	r2,0(r3)
   43e6c:	003e7206 	br	43838 <_dtoa_r+0xc8>
   43e70:	01400434 	movhi	r5,16
   43e74:	297fffc4 	addi	r5,r5,-1
   43e78:	894a703a 	and	r5,r17,r5
   43e7c:	dd001217 	ldw	r20,72(sp)
   43e80:	9809883a 	mov	r4,r19
   43e84:	294ffc34 	orhi	r5,r5,16368
   43e88:	843f0044 	addi	r16,r16,-1023
   43e8c:	d8000a15 	stw	zero,40(sp)
   43e90:	003e9306 	br	438e0 <_dtoa_r+0x170>
   43e94:	d8802117 	ldw	r2,132(sp)
   43e98:	1001fe1e 	bne	r2,zero,44694 <_dtoa_r+0xf24>
   43e9c:	00800174 	movhi	r2,5
   43ea0:	10bf8c04 	addi	r2,r2,-464
   43ea4:	d8800115 	stw	r2,4(sp)
   43ea8:	003e6306 	br	43838 <_dtoa_r+0xc8>
   43eac:	dd800e17 	ldw	r22,56(sp)
   43eb0:	ddc00d17 	ldw	r23,52(sp)
   43eb4:	dc400f17 	ldw	r17,60(sp)
   43eb8:	dcc00c17 	ldw	r19,48(sp)
   43ebc:	d8801317 	ldw	r2,76(sp)
   43ec0:	10006e16 	blt	r2,zero,4407c <_dtoa_r+0x90c>
   43ec4:	d9000417 	ldw	r4,16(sp)
   43ec8:	20c003c8 	cmpgei	r3,r4,15
   43ecc:	18006b1e 	bne	r3,zero,4407c <_dtoa_r+0x90c>
   43ed0:	200690fa 	slli	r3,r4,3
   43ed4:	00800174 	movhi	r2,5
   43ed8:	10bfca04 	addi	r2,r2,-216
   43edc:	10c5883a 	add	r2,r2,r3
   43ee0:	14000017 	ldw	r16,0(r2)
   43ee4:	14800117 	ldw	r18,4(r2)
   43ee8:	d8801e17 	ldw	r2,120(sp)
   43eec:	1000150e 	bge	r2,zero,43f44 <_dtoa_r+0x7d4>
   43ef0:	d8800517 	ldw	r2,20(sp)
   43ef4:	00801316 	blt	zero,r2,43f44 <_dtoa_r+0x7d4>
   43ef8:	d8800517 	ldw	r2,20(sp)
   43efc:	1002721e 	bne	r2,zero,448c8 <_dtoa_r+0x1158>
   43f00:	8009883a 	mov	r4,r16
   43f04:	000d883a 	mov	r6,zero
   43f08:	01d00534 	movhi	r7,16404
   43f0c:	900b883a 	mov	r5,r18
   43f10:	004c2780 	call	4c278 <__muldf3>
   43f14:	100d883a 	mov	r6,r2
   43f18:	180f883a 	mov	r7,r3
   43f1c:	9809883a 	mov	r4,r19
   43f20:	880b883a 	mov	r5,r17
   43f24:	004c1900 	call	4c190 <__ledf2>
   43f28:	0029883a 	mov	r20,zero
   43f2c:	0021883a 	mov	r16,zero
   43f30:	00820216 	blt	zero,r2,4473c <_dtoa_r+0xfcc>
   43f34:	d8801e17 	ldw	r2,120(sp)
   43f38:	dd400117 	ldw	r21,4(sp)
   43f3c:	00a2303a 	nor	r17,zero,r2
   43f40:	00020406 	br	44754 <_dtoa_r+0xfe4>
   43f44:	800d883a 	mov	r6,r16
   43f48:	900f883a 	mov	r7,r18
   43f4c:	9809883a 	mov	r4,r19
   43f50:	880b883a 	mov	r5,r17
   43f54:	00405040 	call	40504 <__divdf3>
   43f58:	180b883a 	mov	r5,r3
   43f5c:	1009883a 	mov	r4,r2
   43f60:	004d1f40 	call	4d1f4 <__fixdfsi>
   43f64:	1009883a 	mov	r4,r2
   43f68:	102b883a 	mov	r21,r2
   43f6c:	004d2740 	call	4d274 <__floatsidf>
   43f70:	800d883a 	mov	r6,r16
   43f74:	900f883a 	mov	r7,r18
   43f78:	1009883a 	mov	r4,r2
   43f7c:	180b883a 	mov	r5,r3
   43f80:	004c2780 	call	4c278 <__muldf3>
   43f84:	100d883a 	mov	r6,r2
   43f88:	9809883a 	mov	r4,r19
   43f8c:	880b883a 	mov	r5,r17
   43f90:	180f883a 	mov	r7,r3
   43f94:	004c8ec0 	call	4c8ec <__subdf3>
   43f98:	d9800117 	ldw	r6,4(sp)
   43f9c:	dd800517 	ldw	r22,20(sp)
   43fa0:	1009883a 	mov	r4,r2
   43fa4:	a8800c04 	addi	r2,r21,48
   43fa8:	30800005 	stb	r2,0(r6)
   43fac:	b0800060 	cmpeqi	r2,r22,1
   43fb0:	180b883a 	mov	r5,r3
   43fb4:	35000044 	addi	r20,r6,1
   43fb8:	10029f1e 	bne	r2,zero,44a38 <_dtoa_r+0x12c8>
   43fbc:	04400044 	movi	r17,1
   43fc0:	ddc00215 	stw	r23,8(sp)
   43fc4:	00001c06 	br	44038 <_dtoa_r+0x8c8>
   43fc8:	800d883a 	mov	r6,r16
   43fcc:	900f883a 	mov	r7,r18
   43fd0:	a809883a 	mov	r4,r21
   43fd4:	980b883a 	mov	r5,r19
   43fd8:	00405040 	call	40504 <__divdf3>
   43fdc:	180b883a 	mov	r5,r3
   43fe0:	1009883a 	mov	r4,r2
   43fe4:	004d1f40 	call	4d1f4 <__fixdfsi>
   43fe8:	1009883a 	mov	r4,r2
   43fec:	102f883a 	mov	r23,r2
   43ff0:	004d2740 	call	4d274 <__floatsidf>
   43ff4:	800d883a 	mov	r6,r16
   43ff8:	900f883a 	mov	r7,r18
   43ffc:	1009883a 	mov	r4,r2
   44000:	180b883a 	mov	r5,r3
   44004:	004c2780 	call	4c278 <__muldf3>
   44008:	a809883a 	mov	r4,r21
   4400c:	980b883a 	mov	r5,r19
   44010:	100d883a 	mov	r6,r2
   44014:	180f883a 	mov	r7,r3
   44018:	004c8ec0 	call	4c8ec <__subdf3>
   4401c:	b9000c04 	addi	r4,r23,48
   44020:	a1000005 	stb	r4,0(r20)
   44024:	8c400044 	addi	r17,r17,1
   44028:	a5000044 	addi	r20,r20,1
   4402c:	1009883a 	mov	r4,r2
   44030:	180b883a 	mov	r5,r3
   44034:	8d827e26 	beq	r17,r22,44a30 <_dtoa_r+0x12c0>
   44038:	000d883a 	mov	r6,zero
   4403c:	01d00934 	movhi	r7,16420
   44040:	004c2780 	call	4c278 <__muldf3>
   44044:	000d883a 	mov	r6,zero
   44048:	000f883a 	mov	r7,zero
   4404c:	1009883a 	mov	r4,r2
   44050:	180b883a 	mov	r5,r3
   44054:	102b883a 	mov	r21,r2
   44058:	1827883a 	mov	r19,r3
   4405c:	004c0280 	call	4c028 <__eqdf2>
   44060:	103fd91e 	bne	r2,zero,43fc8 <_dtoa_r+0x858>
   44064:	d8800417 	ldw	r2,16(sp)
   44068:	ddc00217 	ldw	r23,8(sp)
   4406c:	a02b883a 	mov	r21,r20
   44070:	10800044 	addi	r2,r2,1
   44074:	d8800415 	stw	r2,16(sp)
   44078:	0000a006 	br	442fc <_dtoa_r+0xb8c>
   4407c:	d8c00717 	ldw	r3,28(sp)
   44080:	1800e326 	beq	r3,zero,44410 <_dtoa_r+0xca0>
   44084:	d8c00217 	ldw	r3,8(sp)
   44088:	18c00088 	cmpgei	r3,r3,2
   4408c:	1801e026 	beq	r3,zero,44810 <_dtoa_r+0x10a0>
   44090:	d8800517 	ldw	r2,20(sp)
   44094:	153fffc4 	addi	r20,r2,-1
   44098:	d8800817 	ldw	r2,32(sp)
   4409c:	1501bc0e 	bge	r2,r20,44790 <_dtoa_r+0x1020>
   440a0:	d8800817 	ldw	r2,32(sp)
   440a4:	d8c00317 	ldw	r3,12(sp)
   440a8:	dd000815 	stw	r20,32(sp)
   440ac:	a085c83a 	sub	r2,r20,r2
   440b0:	1885883a 	add	r2,r3,r2
   440b4:	d8800315 	stw	r2,12(sp)
   440b8:	0029883a 	mov	r20,zero
   440bc:	d8800517 	ldw	r2,20(sp)
   440c0:	10028b16 	blt	r2,zero,44af0 <_dtoa_r+0x1380>
   440c4:	d8c00617 	ldw	r3,24(sp)
   440c8:	b0ad883a 	add	r22,r22,r2
   440cc:	1885883a 	add	r2,r3,r2
   440d0:	1825883a 	mov	r18,r3
   440d4:	d8800615 	stw	r2,24(sp)
   440d8:	01400044 	movi	r5,1
   440dc:	b809883a 	mov	r4,r23
   440e0:	00471f00 	call	471f0 <__i2b>
   440e4:	1021883a 	mov	r16,r2
   440e8:	0480080e 	bge	zero,r18,4410c <_dtoa_r+0x99c>
   440ec:	0580070e 	bge	zero,r22,4410c <_dtoa_r+0x99c>
   440f0:	9005883a 	mov	r2,r18
   440f4:	b4819e16 	blt	r22,r18,44770 <_dtoa_r+0x1000>
   440f8:	d8c00617 	ldw	r3,24(sp)
   440fc:	90a5c83a 	sub	r18,r18,r2
   44100:	b0adc83a 	sub	r22,r22,r2
   44104:	1887c83a 	sub	r3,r3,r2
   44108:	d8c00615 	stw	r3,24(sp)
   4410c:	d8800817 	ldw	r2,32(sp)
   44110:	10001426 	beq	r2,zero,44164 <_dtoa_r+0x9f4>
   44114:	d8800717 	ldw	r2,28(sp)
   44118:	1001ee26 	beq	r2,zero,448d4 <_dtoa_r+0x1164>
   4411c:	05000e0e 	bge	zero,r20,44158 <_dtoa_r+0x9e8>
   44120:	800b883a 	mov	r5,r16
   44124:	a00d883a 	mov	r6,r20
   44128:	b809883a 	mov	r4,r23
   4412c:	00474f40 	call	474f4 <__pow5mult>
   44130:	e00d883a 	mov	r6,fp
   44134:	100b883a 	mov	r5,r2
   44138:	b809883a 	mov	r4,r23
   4413c:	1021883a 	mov	r16,r2
   44140:	00472a00 	call	472a0 <__multiply>
   44144:	102b883a 	mov	r21,r2
   44148:	e00b883a 	mov	r5,fp
   4414c:	b809883a 	mov	r4,r23
   44150:	0046e480 	call	46e48 <_Bfree>
   44154:	a839883a 	mov	fp,r21
   44158:	d8800817 	ldw	r2,32(sp)
   4415c:	150dc83a 	sub	r6,r2,r20
   44160:	15025e1e 	bne	r2,r20,44adc <_dtoa_r+0x136c>
   44164:	01400044 	movi	r5,1
   44168:	b809883a 	mov	r4,r23
   4416c:	00471f00 	call	471f0 <__i2b>
   44170:	d9800317 	ldw	r6,12(sp)
   44174:	1029883a 	mov	r20,r2
   44178:	0180b716 	blt	zero,r6,44458 <_dtoa_r+0xce8>
   4417c:	d8800217 	ldw	r2,8(sp)
   44180:	10800088 	cmpgei	r2,r2,2
   44184:	10014d26 	beq	r2,zero,446bc <_dtoa_r+0xf4c>
   44188:	0023883a 	mov	r17,zero
   4418c:	d8c00317 	ldw	r3,12(sp)
   44190:	00800044 	movi	r2,1
   44194:	1800b81e 	bne	r3,zero,44478 <_dtoa_r+0xd08>
   44198:	1585883a 	add	r2,r2,r22
   4419c:	108007cc 	andi	r2,r2,31
   441a0:	1000a526 	beq	r2,zero,44438 <_dtoa_r+0xcc8>
   441a4:	00c00804 	movi	r3,32
   441a8:	1887c83a 	sub	r3,r3,r2
   441ac:	19000150 	cmplti	r4,r3,5
   441b0:	20033c1e 	bne	r4,zero,44ea4 <_dtoa_r+0x1734>
   441b4:	00c00704 	movi	r3,28
   441b8:	1885c83a 	sub	r2,r3,r2
   441bc:	d8c00617 	ldw	r3,24(sp)
   441c0:	90a5883a 	add	r18,r18,r2
   441c4:	b0ad883a 	add	r22,r22,r2
   441c8:	1887883a 	add	r3,r3,r2
   441cc:	d8c00615 	stw	r3,24(sp)
   441d0:	d8800617 	ldw	r2,24(sp)
   441d4:	00809216 	blt	zero,r2,44420 <_dtoa_r+0xcb0>
   441d8:	0580050e 	bge	zero,r22,441f0 <_dtoa_r+0xa80>
   441dc:	a00b883a 	mov	r5,r20
   441e0:	b00d883a 	mov	r6,r22
   441e4:	b809883a 	mov	r4,r23
   441e8:	004763c0 	call	4763c <__lshift>
   441ec:	1029883a 	mov	r20,r2
   441f0:	d8800917 	ldw	r2,36(sp)
   441f4:	1001151e 	bne	r2,zero,4464c <_dtoa_r+0xedc>
   441f8:	d8800517 	ldw	r2,20(sp)
   441fc:	0081020e 	bge	zero,r2,44608 <_dtoa_r+0xe98>
   44200:	d8800717 	ldw	r2,28(sp)
   44204:	1000af1e 	bne	r2,zero,444c4 <_dtoa_r+0xd54>
   44208:	d8800417 	ldw	r2,16(sp)
   4420c:	10800044 	addi	r2,r2,1
   44210:	d8800415 	stw	r2,16(sp)
   44214:	dc800517 	ldw	r18,20(sp)
   44218:	dd400117 	ldw	r21,4(sp)
   4421c:	04400044 	movi	r17,1
   44220:	00000706 	br	44240 <_dtoa_r+0xad0>
   44224:	e00b883a 	mov	r5,fp
   44228:	000f883a 	mov	r7,zero
   4422c:	01800284 	movi	r6,10
   44230:	b809883a 	mov	r4,r23
   44234:	0046e6c0 	call	46e6c <__multadd>
   44238:	1039883a 	mov	fp,r2
   4423c:	8c400044 	addi	r17,r17,1
   44240:	a00b883a 	mov	r5,r20
   44244:	e009883a 	mov	r4,fp
   44248:	00435740 	call	43574 <quorem>
   4424c:	14c00c04 	addi	r19,r2,48
   44250:	ac45883a 	add	r2,r21,r17
   44254:	14ffffc5 	stb	r19,-1(r2)
   44258:	8cbff216 	blt	r17,r18,44224 <_dtoa_r+0xab4>
   4425c:	d8800517 	ldw	r2,20(sp)
   44260:	0081510e 	bge	zero,r2,447a8 <_dtoa_r+0x1038>
   44264:	d8c00117 	ldw	r3,4(sp)
   44268:	0023883a 	mov	r17,zero
   4426c:	18ab883a 	add	r21,r3,r2
   44270:	e00b883a 	mov	r5,fp
   44274:	01800044 	movi	r6,1
   44278:	b809883a 	mov	r4,r23
   4427c:	004763c0 	call	4763c <__lshift>
   44280:	1009883a 	mov	r4,r2
   44284:	a00b883a 	mov	r5,r20
   44288:	1039883a 	mov	fp,r2
   4428c:	00477c40 	call	477c4 <__mcmp>
   44290:	a93fffc3 	ldbu	r4,-1(r21)
   44294:	0081490e 	bge	zero,r2,447bc <_dtoa_r+0x104c>
   44298:	d9400117 	ldw	r5,4(sp)
   4429c:	00000306 	br	442ac <_dtoa_r+0xb3c>
   442a0:	19415426 	beq	r3,r5,447f4 <_dtoa_r+0x1084>
   442a4:	193fffc3 	ldbu	r4,-1(r3)
   442a8:	182b883a 	mov	r21,r3
   442ac:	20803fcc 	andi	r2,r4,255
   442b0:	1080201c 	xori	r2,r2,128
   442b4:	10bfe004 	addi	r2,r2,-128
   442b8:	10800e60 	cmpeqi	r2,r2,57
   442bc:	a8ffffc4 	addi	r3,r21,-1
   442c0:	103ff71e 	bne	r2,zero,442a0 <_dtoa_r+0xb30>
   442c4:	21000044 	addi	r4,r4,1
   442c8:	19000005 	stb	r4,0(r3)
   442cc:	a00b883a 	mov	r5,r20
   442d0:	b809883a 	mov	r4,r23
   442d4:	0046e480 	call	46e48 <_Bfree>
   442d8:	80000826 	beq	r16,zero,442fc <_dtoa_r+0xb8c>
   442dc:	88000426 	beq	r17,zero,442f0 <_dtoa_r+0xb80>
   442e0:	8c000326 	beq	r17,r16,442f0 <_dtoa_r+0xb80>
   442e4:	880b883a 	mov	r5,r17
   442e8:	b809883a 	mov	r4,r23
   442ec:	0046e480 	call	46e48 <_Bfree>
   442f0:	800b883a 	mov	r5,r16
   442f4:	b809883a 	mov	r4,r23
   442f8:	0046e480 	call	46e48 <_Bfree>
   442fc:	e00b883a 	mov	r5,fp
   44300:	b809883a 	mov	r4,r23
   44304:	0046e480 	call	46e48 <_Bfree>
   44308:	d8801f17 	ldw	r2,124(sp)
   4430c:	d8c00417 	ldw	r3,16(sp)
   44310:	a8000005 	stb	zero,0(r21)
   44314:	10c00015 	stw	r3,0(r2)
   44318:	d8802117 	ldw	r2,132(sp)
   4431c:	103d4626 	beq	r2,zero,43838 <_dtoa_r+0xc8>
   44320:	15400015 	stw	r21,0(r2)
   44324:	003d4406 	br	43838 <_dtoa_r+0xc8>
   44328:	d8000915 	stw	zero,36(sp)
   4432c:	b0002416 	blt	r22,zero,443c0 <_dtoa_r+0xc50>
   44330:	d8000615 	stw	zero,24(sp)
   44334:	d8800317 	ldw	r2,12(sp)
   44338:	d8c00217 	ldw	r3,8(sp)
   4433c:	d8000815 	stw	zero,32(sp)
   44340:	b0ad883a 	add	r22,r22,r2
   44344:	d8800415 	stw	r2,16(sp)
   44348:	188002a8 	cmpgeui	r2,r3,10
   4434c:	103db326 	beq	r2,zero,43a1c <_dtoa_r+0x2ac>
   44350:	00800044 	movi	r2,1
   44354:	d8800715 	stw	r2,28(sp)
   44358:	00bfffc4 	movi	r2,-1
   4435c:	04000044 	movi	r16,1
   44360:	d8000215 	stw	zero,8(sp)
   44364:	d8800515 	stw	r2,20(sp)
   44368:	d8001e15 	stw	zero,120(sp)
   4436c:	d8800517 	ldw	r2,20(sp)
   44370:	b8001115 	stw	zero,68(r23)
   44374:	000b883a 	mov	r5,zero
   44378:	d8800b15 	stw	r2,44(sp)
   4437c:	003dc406 	br	43a90 <_dtoa_r+0x320>
   44380:	188000e0 	cmpeqi	r2,r3,3
   44384:	d8000715 	stw	zero,28(sp)
   44388:	1002ac26 	beq	r2,zero,44e3c <_dtoa_r+0x16cc>
   4438c:	d8801e17 	ldw	r2,120(sp)
   44390:	d8c00417 	ldw	r3,16(sp)
   44394:	10c5883a 	add	r2,r2,r3
   44398:	d8800b15 	stw	r2,44(sp)
   4439c:	10800044 	addi	r2,r2,1
   443a0:	d8800515 	stw	r2,20(sp)
   443a4:	100d883a 	mov	r6,r2
   443a8:	00bdae16 	blt	zero,r2,43a64 <_dtoa_r+0x2f4>
   443ac:	01800044 	movi	r6,1
   443b0:	003dac06 	br	43a64 <_dtoa_r+0x2f4>
   443b4:	00800044 	movi	r2,1
   443b8:	d8800915 	stw	r2,36(sp)
   443bc:	b03d890e 	bge	r22,zero,439e4 <_dtoa_r+0x274>
   443c0:	00800044 	movi	r2,1
   443c4:	1405c83a 	sub	r2,r2,r16
   443c8:	d8800615 	stw	r2,24(sp)
   443cc:	002d883a 	mov	r22,zero
   443d0:	003d8506 	br	439e8 <_dtoa_r+0x278>
   443d4:	a809883a 	mov	r4,r21
   443d8:	004d2740 	call	4d274 <__floatsidf>
   443dc:	900d883a 	mov	r6,r18
   443e0:	b00f883a 	mov	r7,r22
   443e4:	1009883a 	mov	r4,r2
   443e8:	180b883a 	mov	r5,r3
   443ec:	004c0280 	call	4c028 <__eqdf2>
   443f0:	103d6926 	beq	r2,zero,43998 <_dtoa_r+0x228>
   443f4:	a8bfffc4 	addi	r2,r21,-1
   443f8:	d8800315 	stw	r2,12(sp)
   443fc:	003d6606 	br	43998 <_dtoa_r+0x228>
   44400:	00800174 	movhi	r2,5
   44404:	10bf8304 	addi	r2,r2,-500
   44408:	d8800115 	stw	r2,4(sp)
   4440c:	003d0a06 	br	43838 <_dtoa_r+0xc8>
   44410:	dd000817 	ldw	r20,32(sp)
   44414:	dc800617 	ldw	r18,24(sp)
   44418:	0021883a 	mov	r16,zero
   4441c:	003f3206 	br	440e8 <_dtoa_r+0x978>
   44420:	e00b883a 	mov	r5,fp
   44424:	100d883a 	mov	r6,r2
   44428:	b809883a 	mov	r4,r23
   4442c:	004763c0 	call	4763c <__lshift>
   44430:	1039883a 	mov	fp,r2
   44434:	003f6806 	br	441d8 <_dtoa_r+0xa68>
   44438:	00800704 	movi	r2,28
   4443c:	003f5f06 	br	441bc <_dtoa_r+0xa4c>
   44440:	01000804 	movi	r4,32
   44444:	2089c83a 	sub	r4,r4,r2
   44448:	9908983a 	sll	r4,r19,r4
   4444c:	003d1d06 	br	438c4 <_dtoa_r+0x154>
   44450:	04000044 	movi	r16,1
   44454:	003d7606 	br	43a30 <_dtoa_r+0x2c0>
   44458:	100b883a 	mov	r5,r2
   4445c:	b809883a 	mov	r4,r23
   44460:	00474f40 	call	474f4 <__pow5mult>
   44464:	d8c00217 	ldw	r3,8(sp)
   44468:	1029883a 	mov	r20,r2
   4446c:	18c00090 	cmplti	r3,r3,2
   44470:	1801511e 	bne	r3,zero,449b8 <_dtoa_r+0x1248>
   44474:	0023883a 	mov	r17,zero
   44478:	a0800417 	ldw	r2,16(r20)
   4447c:	10800104 	addi	r2,r2,4
   44480:	100490ba 	slli	r2,r2,2
   44484:	a085883a 	add	r2,r20,r2
   44488:	11000017 	ldw	r4,0(r2)
   4448c:	00470dc0 	call	470dc <__hi0bits>
   44490:	00c00804 	movi	r3,32
   44494:	1885c83a 	sub	r2,r3,r2
   44498:	003f3f06 	br	44198 <_dtoa_r+0xa28>
   4449c:	800b883a 	mov	r5,r16
   444a0:	000f883a 	mov	r7,zero
   444a4:	01800284 	movi	r6,10
   444a8:	b809883a 	mov	r4,r23
   444ac:	0046e6c0 	call	46e6c <__multadd>
   444b0:	1021883a 	mov	r16,r2
   444b4:	d8800b17 	ldw	r2,44(sp)
   444b8:	00824b0e 	bge	zero,r2,44de8 <_dtoa_r+0x1678>
   444bc:	dd400415 	stw	r21,16(sp)
   444c0:	d8800515 	stw	r2,20(sp)
   444c4:	0480ac16 	blt	zero,r18,44778 <_dtoa_r+0x1008>
   444c8:	8801731e 	bne	r17,zero,44a98 <_dtoa_r+0x1328>
   444cc:	8025883a 	mov	r18,r16
   444d0:	dd800117 	ldw	r22,4(sp)
   444d4:	d9000517 	ldw	r4,20(sp)
   444d8:	98c0004c 	andi	r3,r19,1
   444dc:	b0bfffc4 	addi	r2,r22,-1
   444e0:	1105883a 	add	r2,r2,r4
   444e4:	d8800515 	stw	r2,20(sp)
   444e8:	d8800217 	ldw	r2,8(sp)
   444ec:	d8c00815 	stw	r3,32(sp)
   444f0:	1884b03a 	or	r2,r3,r2
   444f4:	d8800715 	stw	r2,28(sp)
   444f8:	00002906 	br	445a0 <_dtoa_r+0xe30>
   444fc:	e009883a 	mov	r4,fp
   44500:	00477c40 	call	477c4 <__mcmp>
   44504:	980b883a 	mov	r5,r19
   44508:	b809883a 	mov	r4,r23
   4450c:	d8800315 	stw	r2,12(sp)
   44510:	0046e480 	call	46e48 <_Bfree>
   44514:	d8800317 	ldw	r2,12(sp)
   44518:	1000021e 	bne	r2,zero,44524 <_dtoa_r+0xdb4>
   4451c:	d8c00717 	ldw	r3,28(sp)
   44520:	18022326 	beq	r3,zero,44db0 <_dtoa_r+0x1640>
   44524:	b4c00044 	addi	r19,r22,1
   44528:	88012916 	blt	r17,zero,449d0 <_dtoa_r+0x1260>
   4452c:	d8c00217 	ldw	r3,8(sp)
   44530:	88e2b03a 	or	r17,r17,r3
   44534:	d8c00817 	ldw	r3,32(sp)
   44538:	1c62b03a 	or	r17,r3,r17
   4453c:	88012426 	beq	r17,zero,449d0 <_dtoa_r+0x1260>
   44540:	00816f16 	blt	zero,r2,44b00 <_dtoa_r+0x1390>
   44544:	d8800517 	ldw	r2,20(sp)
   44548:	b5400005 	stb	r21,0(r22)
   4454c:	15817926 	beq	r2,r22,44b34 <_dtoa_r+0x13c4>
   44550:	e00b883a 	mov	r5,fp
   44554:	000f883a 	mov	r7,zero
   44558:	01800284 	movi	r6,10
   4455c:	b809883a 	mov	r4,r23
   44560:	0046e6c0 	call	46e6c <__multadd>
   44564:	1039883a 	mov	fp,r2
   44568:	800b883a 	mov	r5,r16
   4456c:	000f883a 	mov	r7,zero
   44570:	01800284 	movi	r6,10
   44574:	b809883a 	mov	r4,r23
   44578:	84801f26 	beq	r16,r18,445f8 <_dtoa_r+0xe88>
   4457c:	0046e6c0 	call	46e6c <__multadd>
   44580:	900b883a 	mov	r5,r18
   44584:	000f883a 	mov	r7,zero
   44588:	01800284 	movi	r6,10
   4458c:	b809883a 	mov	r4,r23
   44590:	1021883a 	mov	r16,r2
   44594:	0046e6c0 	call	46e6c <__multadd>
   44598:	1025883a 	mov	r18,r2
   4459c:	982d883a 	mov	r22,r19
   445a0:	a00b883a 	mov	r5,r20
   445a4:	e009883a 	mov	r4,fp
   445a8:	00435740 	call	43574 <quorem>
   445ac:	800b883a 	mov	r5,r16
   445b0:	e009883a 	mov	r4,fp
   445b4:	102b883a 	mov	r21,r2
   445b8:	d8800615 	stw	r2,24(sp)
   445bc:	00477c40 	call	477c4 <__mcmp>
   445c0:	a00b883a 	mov	r5,r20
   445c4:	900d883a 	mov	r6,r18
   445c8:	b809883a 	mov	r4,r23
   445cc:	1023883a 	mov	r17,r2
   445d0:	004781c0 	call	4781c <__mdiff>
   445d4:	1027883a 	mov	r19,r2
   445d8:	10800317 	ldw	r2,12(r2)
   445dc:	ad400c04 	addi	r21,r21,48
   445e0:	980b883a 	mov	r5,r19
   445e4:	103fc526 	beq	r2,zero,444fc <_dtoa_r+0xd8c>
   445e8:	b809883a 	mov	r4,r23
   445ec:	0046e480 	call	46e48 <_Bfree>
   445f0:	00800044 	movi	r2,1
   445f4:	003fcb06 	br	44524 <_dtoa_r+0xdb4>
   445f8:	0046e6c0 	call	46e6c <__multadd>
   445fc:	1021883a 	mov	r16,r2
   44600:	1025883a 	mov	r18,r2
   44604:	003fe506 	br	4459c <_dtoa_r+0xe2c>
   44608:	d8800217 	ldw	r2,8(sp)
   4460c:	108000d0 	cmplti	r2,r2,3
   44610:	10003e26 	beq	r2,zero,4470c <_dtoa_r+0xf9c>
   44614:	d8800717 	ldw	r2,28(sp)
   44618:	103faa1e 	bne	r2,zero,444c4 <_dtoa_r+0xd54>
   4461c:	a00b883a 	mov	r5,r20
   44620:	e009883a 	mov	r4,fp
   44624:	00435740 	call	43574 <quorem>
   44628:	14c00c04 	addi	r19,r2,48
   4462c:	d8800117 	ldw	r2,4(sp)
   44630:	0023883a 	mov	r17,zero
   44634:	15400044 	addi	r21,r2,1
   44638:	14c00005 	stb	r19,0(r2)
   4463c:	d8800417 	ldw	r2,16(sp)
   44640:	10800044 	addi	r2,r2,1
   44644:	d8800415 	stw	r2,16(sp)
   44648:	003f0906 	br	44270 <_dtoa_r+0xb00>
   4464c:	a00b883a 	mov	r5,r20
   44650:	e009883a 	mov	r4,fp
   44654:	00477c40 	call	477c4 <__mcmp>
   44658:	103ee70e 	bge	r2,zero,441f8 <_dtoa_r+0xa88>
   4465c:	e00b883a 	mov	r5,fp
   44660:	000f883a 	mov	r7,zero
   44664:	01800284 	movi	r6,10
   44668:	b809883a 	mov	r4,r23
   4466c:	0046e6c0 	call	46e6c <__multadd>
   44670:	d8c00417 	ldw	r3,16(sp)
   44674:	1039883a 	mov	fp,r2
   44678:	d8800717 	ldw	r2,28(sp)
   4467c:	1d7fffc4 	addi	r21,r3,-1
   44680:	103f861e 	bne	r2,zero,4449c <_dtoa_r+0xd2c>
   44684:	d8800b17 	ldw	r2,44(sp)
   44688:	0081d20e 	bge	zero,r2,44dd4 <_dtoa_r+0x1664>
   4468c:	d8800515 	stw	r2,20(sp)
   44690:	003ee006 	br	44214 <_dtoa_r+0xaa4>
   44694:	00800174 	movhi	r2,5
   44698:	1007883a 	mov	r3,r2
   4469c:	18ff8c04 	addi	r3,r3,-464
   446a0:	00800174 	movhi	r2,5
   446a4:	d8c00115 	stw	r3,4(sp)
   446a8:	10bf8cc4 	addi	r2,r2,-461
   446ac:	003ded06 	br	43e64 <_dtoa_r+0x6f4>
   446b0:	00800044 	movi	r2,1
   446b4:	d8800715 	stw	r2,28(sp)
   446b8:	003f3406 	br	4438c <_dtoa_r+0xc1c>
   446bc:	983eb21e 	bne	r19,zero,44188 <_dtoa_r+0xa18>
   446c0:	00800434 	movhi	r2,16
   446c4:	10bfffc4 	addi	r2,r2,-1
   446c8:	8884703a 	and	r2,r17,r2
   446cc:	103eae1e 	bne	r2,zero,44188 <_dtoa_r+0xa18>
   446d0:	8c5ffc2c 	andhi	r17,r17,32752
   446d4:	883eac26 	beq	r17,zero,44188 <_dtoa_r+0xa18>
   446d8:	d8800617 	ldw	r2,24(sp)
   446dc:	b5800044 	addi	r22,r22,1
   446e0:	04400044 	movi	r17,1
   446e4:	10800044 	addi	r2,r2,1
   446e8:	d8800615 	stw	r2,24(sp)
   446ec:	003ea706 	br	4418c <_dtoa_r+0xa1c>
   446f0:	00800044 	movi	r2,1
   446f4:	d8800515 	stw	r2,20(sp)
   446f8:	d8801e15 	stw	r2,120(sp)
   446fc:	003f1b06 	br	4436c <_dtoa_r+0xbfc>
   44700:	d8800b17 	ldw	r2,44(sp)
   44704:	dd400415 	stw	r21,16(sp)
   44708:	d8800515 	stw	r2,20(sp)
   4470c:	d8800517 	ldw	r2,20(sp)
   44710:	103e081e 	bne	r2,zero,43f34 <_dtoa_r+0x7c4>
   44714:	a00b883a 	mov	r5,r20
   44718:	b809883a 	mov	r4,r23
   4471c:	000f883a 	mov	r7,zero
   44720:	01800144 	movi	r6,5
   44724:	0046e6c0 	call	46e6c <__multadd>
   44728:	100b883a 	mov	r5,r2
   4472c:	e009883a 	mov	r4,fp
   44730:	1029883a 	mov	r20,r2
   44734:	00477c40 	call	477c4 <__mcmp>
   44738:	00bdfe0e 	bge	zero,r2,43f34 <_dtoa_r+0x7c4>
   4473c:	d8c00117 	ldw	r3,4(sp)
   44740:	00800c44 	movi	r2,49
   44744:	18800005 	stb	r2,0(r3)
   44748:	d8800417 	ldw	r2,16(sp)
   4474c:	1d400044 	addi	r21,r3,1
   44750:	14400044 	addi	r17,r2,1
   44754:	a00b883a 	mov	r5,r20
   44758:	b809883a 	mov	r4,r23
   4475c:	0046e480 	call	46e48 <_Bfree>
   44760:	88800044 	addi	r2,r17,1
   44764:	d8800415 	stw	r2,16(sp)
   44768:	803ee11e 	bne	r16,zero,442f0 <_dtoa_r+0xb80>
   4476c:	003ee306 	br	442fc <_dtoa_r+0xb8c>
   44770:	b005883a 	mov	r2,r22
   44774:	003e6006 	br	440f8 <_dtoa_r+0x988>
   44778:	800b883a 	mov	r5,r16
   4477c:	900d883a 	mov	r6,r18
   44780:	b809883a 	mov	r4,r23
   44784:	004763c0 	call	4763c <__lshift>
   44788:	1021883a 	mov	r16,r2
   4478c:	003f4e06 	br	444c8 <_dtoa_r+0xd58>
   44790:	1529c83a 	sub	r20,r2,r20
   44794:	003e4906 	br	440bc <_dtoa_r+0x94c>
   44798:	dcc00c15 	stw	r19,48(sp)
   4479c:	8825883a 	mov	r18,r17
   447a0:	05400084 	movi	r21,2
   447a4:	003cdf06 	br	43b24 <_dtoa_r+0x3b4>
   447a8:	00800044 	movi	r2,1
   447ac:	003ead06 	br	44264 <_dtoa_r+0xaf4>
   447b0:	00800044 	movi	r2,1
   447b4:	d8800715 	stw	r2,28(sp)
   447b8:	003ca506 	br	43a50 <_dtoa_r+0x2e0>
   447bc:	1000021e 	bne	r2,zero,447c8 <_dtoa_r+0x1058>
   447c0:	98c0004c 	andi	r3,r19,1
   447c4:	183eb41e 	bne	r3,zero,44298 <_dtoa_r+0xb28>
   447c8:	2005883a 	mov	r2,r4
   447cc:	00000206 	br	447d8 <_dtoa_r+0x1068>
   447d0:	a8bfff83 	ldbu	r2,-2(r21)
   447d4:	182b883a 	mov	r21,r3
   447d8:	10803fcc 	andi	r2,r2,255
   447dc:	1080201c 	xori	r2,r2,128
   447e0:	10bfe004 	addi	r2,r2,-128
   447e4:	10800c18 	cmpnei	r2,r2,48
   447e8:	a8ffffc4 	addi	r3,r21,-1
   447ec:	103ff826 	beq	r2,zero,447d0 <_dtoa_r+0x1060>
   447f0:	003eb606 	br	442cc <_dtoa_r+0xb5c>
   447f4:	d8c00117 	ldw	r3,4(sp)
   447f8:	00800c44 	movi	r2,49
   447fc:	18800005 	stb	r2,0(r3)
   44800:	d8800417 	ldw	r2,16(sp)
   44804:	10800044 	addi	r2,r2,1
   44808:	d8800415 	stw	r2,16(sp)
   4480c:	003eaf06 	br	442cc <_dtoa_r+0xb5c>
   44810:	d8c00a17 	ldw	r3,40(sp)
   44814:	18011826 	beq	r3,zero,44c78 <_dtoa_r+0x1508>
   44818:	d8c00617 	ldw	r3,24(sp)
   4481c:	10810cc4 	addi	r2,r2,1075
   44820:	b0ad883a 	add	r22,r22,r2
   44824:	1885883a 	add	r2,r3,r2
   44828:	dd000817 	ldw	r20,32(sp)
   4482c:	1825883a 	mov	r18,r3
   44830:	d8800615 	stw	r2,24(sp)
   44834:	003e2806 	br	440d8 <_dtoa_r+0x968>
   44838:	a809883a 	mov	r4,r21
   4483c:	004d2740 	call	4d274 <__floatsidf>
   44840:	800d883a 	mov	r6,r16
   44844:	900f883a 	mov	r7,r18
   44848:	1009883a 	mov	r4,r2
   4484c:	180b883a 	mov	r5,r3
   44850:	004c2780 	call	4c278 <__muldf3>
   44854:	000d883a 	mov	r6,zero
   44858:	01d00734 	movhi	r7,16412
   4485c:	1009883a 	mov	r4,r2
   44860:	180b883a 	mov	r5,r3
   44864:	004b7380 	call	4b738 <__adddf3>
   44868:	1029883a 	mov	r20,r2
   4486c:	00bf3034 	movhi	r2,64704
   44870:	1885883a 	add	r2,r3,r2
   44874:	d8800c15 	stw	r2,48(sp)
   44878:	8009883a 	mov	r4,r16
   4487c:	900b883a 	mov	r5,r18
   44880:	000d883a 	mov	r6,zero
   44884:	01d00534 	movhi	r7,16404
   44888:	004c8ec0 	call	4c8ec <__subdf3>
   4488c:	dd400c17 	ldw	r21,48(sp)
   44890:	a00d883a 	mov	r6,r20
   44894:	1009883a 	mov	r4,r2
   44898:	a80f883a 	mov	r7,r21
   4489c:	180b883a 	mov	r5,r3
   448a0:	1025883a 	mov	r18,r2
   448a4:	1821883a 	mov	r16,r3
   448a8:	004c0a80 	call	4c0a8 <__gedf2>
   448ac:	00812f16 	blt	zero,r2,44d6c <_dtoa_r+0x15fc>
   448b0:	a9e0003c 	xorhi	r7,r21,32768
   448b4:	a00d883a 	mov	r6,r20
   448b8:	9009883a 	mov	r4,r18
   448bc:	800b883a 	mov	r5,r16
   448c0:	004c1900 	call	4c190 <__ledf2>
   448c4:	103d7d0e 	bge	r2,zero,43ebc <_dtoa_r+0x74c>
   448c8:	0029883a 	mov	r20,zero
   448cc:	0021883a 	mov	r16,zero
   448d0:	003d9806 	br	43f34 <_dtoa_r+0x7c4>
   448d4:	d9800817 	ldw	r6,32(sp)
   448d8:	e00b883a 	mov	r5,fp
   448dc:	b809883a 	mov	r4,r23
   448e0:	00474f40 	call	474f4 <__pow5mult>
   448e4:	1039883a 	mov	fp,r2
   448e8:	003e1e06 	br	44164 <_dtoa_r+0x9f4>
   448ec:	d8800417 	ldw	r2,16(sp)
   448f0:	1000ed26 	beq	r2,zero,44ca8 <_dtoa_r+0x1538>
   448f4:	00a9c83a 	sub	r20,zero,r2
   448f8:	a08003cc 	andi	r2,r20,15
   448fc:	100690fa 	slli	r3,r2,3
   44900:	00800174 	movhi	r2,5
   44904:	10bfca04 	addi	r2,r2,-216
   44908:	10c5883a 	add	r2,r2,r3
   4490c:	11800017 	ldw	r6,0(r2)
   44910:	11c00117 	ldw	r7,4(r2)
   44914:	a029d13a 	srai	r20,r20,4
   44918:	9809883a 	mov	r4,r19
   4491c:	880b883a 	mov	r5,r17
   44920:	004c2780 	call	4c278 <__muldf3>
   44924:	1021883a 	mov	r16,r2
   44928:	1825883a 	mov	r18,r3
   4492c:	a0013826 	beq	r20,zero,44e10 <_dtoa_r+0x16a0>
   44930:	02000174 	movhi	r8,5
   44934:	05400084 	movi	r21,2
   44938:	423fc004 	addi	r8,r8,-256
   4493c:	1009883a 	mov	r4,r2
   44940:	9805883a 	mov	r2,r19
   44944:	180b883a 	mov	r5,r3
   44948:	dc000c15 	stw	r16,48(sp)
   4494c:	8827883a 	mov	r19,r17
   44950:	0007883a 	mov	r3,zero
   44954:	a823883a 	mov	r17,r21
   44958:	4021883a 	mov	r16,r8
   4495c:	102b883a 	mov	r21,r2
   44960:	a180004c 	andi	r6,r20,1
   44964:	30000726 	beq	r6,zero,44984 <_dtoa_r+0x1214>
   44968:	81800017 	ldw	r6,0(r16)
   4496c:	81c00117 	ldw	r7,4(r16)
   44970:	8c400044 	addi	r17,r17,1
   44974:	004c2780 	call	4c278 <__muldf3>
   44978:	180b883a 	mov	r5,r3
   4497c:	1009883a 	mov	r4,r2
   44980:	00c00044 	movi	r3,1
   44984:	a029d07a 	srai	r20,r20,1
   44988:	84000204 	addi	r16,r16,8
   4498c:	a03ff41e 	bne	r20,zero,44960 <_dtoa_r+0x11f0>
   44990:	a805883a 	mov	r2,r21
   44994:	18c03fcc 	andi	r3,r3,255
   44998:	882b883a 	mov	r21,r17
   4499c:	dc000c17 	ldw	r16,48(sp)
   449a0:	9823883a 	mov	r17,r19
   449a4:	1027883a 	mov	r19,r2
   449a8:	183c7726 	beq	r3,zero,43b88 <_dtoa_r+0x418>
   449ac:	2021883a 	mov	r16,r4
   449b0:	2825883a 	mov	r18,r5
   449b4:	003c7406 	br	43b88 <_dtoa_r+0x418>
   449b8:	983eae1e 	bne	r19,zero,44474 <_dtoa_r+0xd04>
   449bc:	00800434 	movhi	r2,16
   449c0:	10bfffc4 	addi	r2,r2,-1
   449c4:	8884703a 	and	r2,r17,r2
   449c8:	103f4126 	beq	r2,zero,446d0 <_dtoa_r+0xf60>
   449cc:	003ea906 	br	44474 <_dtoa_r+0xd04>
   449d0:	9807883a 	mov	r3,r19
   449d4:	a827883a 	mov	r19,r21
   449d8:	182b883a 	mov	r21,r3
   449dc:	d8c00417 	ldw	r3,16(sp)
   449e0:	18c00044 	addi	r3,r3,1
   449e4:	d8c00415 	stw	r3,16(sp)
   449e8:	00800d0e 	bge	zero,r2,44a20 <_dtoa_r+0x12b0>
   449ec:	e00b883a 	mov	r5,fp
   449f0:	b809883a 	mov	r4,r23
   449f4:	01800044 	movi	r6,1
   449f8:	004763c0 	call	4763c <__lshift>
   449fc:	a00b883a 	mov	r5,r20
   44a00:	1009883a 	mov	r4,r2
   44a04:	1039883a 	mov	fp,r2
   44a08:	00477c40 	call	477c4 <__mcmp>
   44a0c:	0080df0e 	bge	zero,r2,44d8c <_dtoa_r+0x161c>
   44a10:	98c00e60 	cmpeqi	r3,r19,57
   44a14:	1800ce1e 	bne	r3,zero,44d50 <_dtoa_r+0x15e0>
   44a18:	d8800617 	ldw	r2,24(sp)
   44a1c:	14c00c44 	addi	r19,r2,49
   44a20:	8023883a 	mov	r17,r16
   44a24:	b4c00005 	stb	r19,0(r22)
   44a28:	9021883a 	mov	r16,r18
   44a2c:	003e2706 	br	442cc <_dtoa_r+0xb5c>
   44a30:	b82b883a 	mov	r21,r23
   44a34:	ddc00217 	ldw	r23,8(sp)
   44a38:	200d883a 	mov	r6,r4
   44a3c:	280f883a 	mov	r7,r5
   44a40:	004b7380 	call	4b738 <__adddf3>
   44a44:	180b883a 	mov	r5,r3
   44a48:	800d883a 	mov	r6,r16
   44a4c:	900f883a 	mov	r7,r18
   44a50:	1009883a 	mov	r4,r2
   44a54:	1823883a 	mov	r17,r3
   44a58:	1027883a 	mov	r19,r2
   44a5c:	004c0a80 	call	4c0a8 <__gedf2>
   44a60:	d8c00417 	ldw	r3,16(sp)
   44a64:	18c00044 	addi	r3,r3,1
   44a68:	d8c00415 	stw	r3,16(sp)
   44a6c:	00808c16 	blt	zero,r2,44ca0 <_dtoa_r+0x1530>
   44a70:	800d883a 	mov	r6,r16
   44a74:	900f883a 	mov	r7,r18
   44a78:	9809883a 	mov	r4,r19
   44a7c:	880b883a 	mov	r5,r17
   44a80:	004c0280 	call	4c028 <__eqdf2>
   44a84:	1000021e 	bne	r2,zero,44a90 <_dtoa_r+0x1320>
   44a88:	ad40004c 	andi	r21,r21,1
   44a8c:	a800841e 	bne	r21,zero,44ca0 <_dtoa_r+0x1530>
   44a90:	a02b883a 	mov	r21,r20
   44a94:	003e1906 	br	442fc <_dtoa_r+0xb8c>
   44a98:	81400117 	ldw	r5,4(r16)
   44a9c:	b809883a 	mov	r4,r23
   44aa0:	0046da40 	call	46da4 <_Balloc>
   44aa4:	1023883a 	mov	r17,r2
   44aa8:	1000f326 	beq	r2,zero,44e78 <_dtoa_r+0x1708>
   44aac:	81800417 	ldw	r6,16(r16)
   44ab0:	81400304 	addi	r5,r16,12
   44ab4:	11000304 	addi	r4,r2,12
   44ab8:	31800084 	addi	r6,r6,2
   44abc:	300c90ba 	slli	r6,r6,2
   44ac0:	0046a880 	call	46a88 <memcpy>
   44ac4:	01800044 	movi	r6,1
   44ac8:	880b883a 	mov	r5,r17
   44acc:	b809883a 	mov	r4,r23
   44ad0:	004763c0 	call	4763c <__lshift>
   44ad4:	1025883a 	mov	r18,r2
   44ad8:	003e7d06 	br	444d0 <_dtoa_r+0xd60>
   44adc:	e00b883a 	mov	r5,fp
   44ae0:	b809883a 	mov	r4,r23
   44ae4:	00474f40 	call	474f4 <__pow5mult>
   44ae8:	1039883a 	mov	fp,r2
   44aec:	003d9d06 	br	44164 <_dtoa_r+0x9f4>
   44af0:	d8800617 	ldw	r2,24(sp)
   44af4:	d8c00517 	ldw	r3,20(sp)
   44af8:	10e5c83a 	sub	r18,r2,r3
   44afc:	003d7606 	br	440d8 <_dtoa_r+0x968>
   44b00:	d8c00417 	ldw	r3,16(sp)
   44b04:	9805883a 	mov	r2,r19
   44b08:	a827883a 	mov	r19,r21
   44b0c:	18c00044 	addi	r3,r3,1
   44b10:	102b883a 	mov	r21,r2
   44b14:	d8c00415 	stw	r3,16(sp)
   44b18:	98800e58 	cmpnei	r2,r19,57
   44b1c:	10008c26 	beq	r2,zero,44d50 <_dtoa_r+0x15e0>
   44b20:	98c00044 	addi	r3,r19,1
   44b24:	8023883a 	mov	r17,r16
   44b28:	b0c00005 	stb	r3,0(r22)
   44b2c:	9021883a 	mov	r16,r18
   44b30:	003de606 	br	442cc <_dtoa_r+0xb5c>
   44b34:	9805883a 	mov	r2,r19
   44b38:	a827883a 	mov	r19,r21
   44b3c:	102b883a 	mov	r21,r2
   44b40:	d8800417 	ldw	r2,16(sp)
   44b44:	8023883a 	mov	r17,r16
   44b48:	9021883a 	mov	r16,r18
   44b4c:	10800044 	addi	r2,r2,1
   44b50:	d8800415 	stw	r2,16(sp)
   44b54:	003dc606 	br	44270 <_dtoa_r+0xb00>
   44b58:	d9400c17 	ldw	r5,48(sp)
   44b5c:	a009883a 	mov	r4,r20
   44b60:	004c2780 	call	4c278 <__muldf3>
   44b64:	d9800d17 	ldw	r6,52(sp)
   44b68:	d9400117 	ldw	r5,4(sp)
   44b6c:	d9001017 	ldw	r4,64(sp)
   44b70:	d8800c15 	stw	r2,48(sp)
   44b74:	d8c00d15 	stw	r3,52(sp)
   44b78:	29000005 	stb	r4,0(r5)
   44b7c:	31000058 	cmpnei	r4,r6,1
   44b80:	29a9883a 	add	r20,r5,r6
   44b84:	2000a026 	beq	r4,zero,44e08 <_dtoa_r+0x1698>
   44b88:	dc400e15 	stw	r17,56(sp)
   44b8c:	8009883a 	mov	r4,r16
   44b90:	900b883a 	mov	r5,r18
   44b94:	a823883a 	mov	r17,r21
   44b98:	000d883a 	mov	r6,zero
   44b9c:	01d00934 	movhi	r7,16420
   44ba0:	004c2780 	call	4c278 <__muldf3>
   44ba4:	180b883a 	mov	r5,r3
   44ba8:	1009883a 	mov	r4,r2
   44bac:	1825883a 	mov	r18,r3
   44bb0:	102b883a 	mov	r21,r2
   44bb4:	004d1f40 	call	4d1f4 <__fixdfsi>
   44bb8:	1009883a 	mov	r4,r2
   44bbc:	1021883a 	mov	r16,r2
   44bc0:	004d2740 	call	4d274 <__floatsidf>
   44bc4:	a809883a 	mov	r4,r21
   44bc8:	900b883a 	mov	r5,r18
   44bcc:	100d883a 	mov	r6,r2
   44bd0:	180f883a 	mov	r7,r3
   44bd4:	8c400044 	addi	r17,r17,1
   44bd8:	84000c04 	addi	r16,r16,48
   44bdc:	004c8ec0 	call	4c8ec <__subdf3>
   44be0:	8c3fffc5 	stb	r16,-1(r17)
   44be4:	1009883a 	mov	r4,r2
   44be8:	180b883a 	mov	r5,r3
   44bec:	a47fea1e 	bne	r20,r17,44b98 <_dtoa_r+0x1428>
   44bf0:	dc400e17 	ldw	r17,56(sp)
   44bf4:	1021883a 	mov	r16,r2
   44bf8:	1825883a 	mov	r18,r3
   44bfc:	d9000c17 	ldw	r4,48(sp)
   44c00:	d9400d17 	ldw	r5,52(sp)
   44c04:	000d883a 	mov	r6,zero
   44c08:	01cff834 	movhi	r7,16352
   44c0c:	004b7380 	call	4b738 <__adddf3>
   44c10:	800d883a 	mov	r6,r16
   44c14:	900f883a 	mov	r7,r18
   44c18:	1009883a 	mov	r4,r2
   44c1c:	180b883a 	mov	r5,r3
   44c20:	004c1900 	call	4c190 <__ledf2>
   44c24:	10005416 	blt	r2,zero,44d78 <_dtoa_r+0x1608>
   44c28:	d9800c17 	ldw	r6,48(sp)
   44c2c:	d9c00d17 	ldw	r7,52(sp)
   44c30:	0009883a 	mov	r4,zero
   44c34:	014ff834 	movhi	r5,16352
   44c38:	004c8ec0 	call	4c8ec <__subdf3>
   44c3c:	800d883a 	mov	r6,r16
   44c40:	900f883a 	mov	r7,r18
   44c44:	1009883a 	mov	r4,r2
   44c48:	180b883a 	mov	r5,r3
   44c4c:	004c0a80 	call	4c0a8 <__gedf2>
   44c50:	00bc9a0e 	bge	zero,r2,43ebc <_dtoa_r+0x74c>
   44c54:	a0bfffc7 	ldb	r2,-1(r20)
   44c58:	a02b883a 	mov	r21,r20
   44c5c:	a53fffc4 	addi	r20,r20,-1
   44c60:	10800c20 	cmpeqi	r2,r2,48
   44c64:	103ffb1e 	bne	r2,zero,44c54 <_dtoa_r+0x14e4>
   44c68:	d8801117 	ldw	r2,68(sp)
   44c6c:	10800044 	addi	r2,r2,1
   44c70:	d8800415 	stw	r2,16(sp)
   44c74:	003da106 	br	442fc <_dtoa_r+0xb8c>
   44c78:	d8c01217 	ldw	r3,72(sp)
   44c7c:	d9000617 	ldw	r4,24(sp)
   44c80:	00800d84 	movi	r2,54
   44c84:	10c5c83a 	sub	r2,r2,r3
   44c88:	b0ad883a 	add	r22,r22,r2
   44c8c:	2085883a 	add	r2,r4,r2
   44c90:	dd000817 	ldw	r20,32(sp)
   44c94:	2025883a 	mov	r18,r4
   44c98:	d8800615 	stw	r2,24(sp)
   44c9c:	003d0e06 	br	440d8 <_dtoa_r+0x968>
   44ca0:	d9000117 	ldw	r4,4(sp)
   44ca4:	003c4b06 	br	43dd4 <_dtoa_r+0x664>
   44ca8:	9821883a 	mov	r16,r19
   44cac:	8825883a 	mov	r18,r17
   44cb0:	05400084 	movi	r21,2
   44cb4:	003bb406 	br	43b88 <_dtoa_r+0x418>
   44cb8:	d8800517 	ldw	r2,20(sp)
   44cbc:	103ede26 	beq	r2,zero,44838 <_dtoa_r+0x10c8>
   44cc0:	d8800b17 	ldw	r2,44(sp)
   44cc4:	00bc7d0e 	bge	zero,r2,43ebc <_dtoa_r+0x74c>
   44cc8:	900b883a 	mov	r5,r18
   44ccc:	8009883a 	mov	r4,r16
   44cd0:	000d883a 	mov	r6,zero
   44cd4:	01d00934 	movhi	r7,16420
   44cd8:	004c2780 	call	4c278 <__muldf3>
   44cdc:	a9000044 	addi	r4,r21,1
   44ce0:	1021883a 	mov	r16,r2
   44ce4:	1825883a 	mov	r18,r3
   44ce8:	004d2740 	call	4d274 <__floatsidf>
   44cec:	800d883a 	mov	r6,r16
   44cf0:	900f883a 	mov	r7,r18
   44cf4:	1009883a 	mov	r4,r2
   44cf8:	180b883a 	mov	r5,r3
   44cfc:	004c2780 	call	4c278 <__muldf3>
   44d00:	1009883a 	mov	r4,r2
   44d04:	000d883a 	mov	r6,zero
   44d08:	01d00734 	movhi	r7,16412
   44d0c:	180b883a 	mov	r5,r3
   44d10:	004b7380 	call	4b738 <__adddf3>
   44d14:	d9000417 	ldw	r4,16(sp)
   44d18:	1029883a 	mov	r20,r2
   44d1c:	00bf3034 	movhi	r2,64704
   44d20:	1887883a 	add	r3,r3,r2
   44d24:	d8800b17 	ldw	r2,44(sp)
   44d28:	213fffc4 	addi	r4,r4,-1
   44d2c:	d9001115 	stw	r4,68(sp)
   44d30:	d8c00c15 	stw	r3,48(sp)
   44d34:	d8800d15 	stw	r2,52(sp)
   44d38:	003bb106 	br	43c00 <_dtoa_r+0x490>
   44d3c:	d8800417 	ldw	r2,16(sp)
   44d40:	00c00c44 	movi	r3,49
   44d44:	10800044 	addi	r2,r2,1
   44d48:	d8800415 	stw	r2,16(sp)
   44d4c:	003c2a06 	br	43df8 <_dtoa_r+0x688>
   44d50:	00800e44 	movi	r2,57
   44d54:	8023883a 	mov	r17,r16
   44d58:	d9400117 	ldw	r5,4(sp)
   44d5c:	b0800005 	stb	r2,0(r22)
   44d60:	9021883a 	mov	r16,r18
   44d64:	01000e44 	movi	r4,57
   44d68:	003d5006 	br	442ac <_dtoa_r+0xb3c>
   44d6c:	0029883a 	mov	r20,zero
   44d70:	0021883a 	mov	r16,zero
   44d74:	003e7106 	br	4473c <_dtoa_r+0xfcc>
   44d78:	d8801117 	ldw	r2,68(sp)
   44d7c:	d9000117 	ldw	r4,4(sp)
   44d80:	10800044 	addi	r2,r2,1
   44d84:	d8800415 	stw	r2,16(sp)
   44d88:	003c1206 	br	43dd4 <_dtoa_r+0x664>
   44d8c:	103f241e 	bne	r2,zero,44a20 <_dtoa_r+0x12b0>
   44d90:	9880004c 	andi	r2,r19,1
   44d94:	103f1e1e 	bne	r2,zero,44a10 <_dtoa_r+0x12a0>
   44d98:	003f2106 	br	44a20 <_dtoa_r+0x12b0>
   44d9c:	d8801117 	ldw	r2,68(sp)
   44da0:	ddc00d17 	ldw	r23,52(sp)
   44da4:	10800044 	addi	r2,r2,1
   44da8:	d8800415 	stw	r2,16(sp)
   44dac:	003d5306 	br	442fc <_dtoa_r+0xb8c>
   44db0:	d8c00417 	ldw	r3,16(sp)
   44db4:	a8800e60 	cmpeqi	r2,r21,57
   44db8:	a827883a 	mov	r19,r21
   44dbc:	18c00044 	addi	r3,r3,1
   44dc0:	d8c00415 	stw	r3,16(sp)
   44dc4:	b5400044 	addi	r21,r22,1
   44dc8:	103fe11e 	bne	r2,zero,44d50 <_dtoa_r+0x15e0>
   44dcc:	047f1216 	blt	zero,r17,44a18 <_dtoa_r+0x12a8>
   44dd0:	003f1306 	br	44a20 <_dtoa_r+0x12b0>
   44dd4:	d8800217 	ldw	r2,8(sp)
   44dd8:	108000c8 	cmpgei	r2,r2,3
   44ddc:	103e481e 	bne	r2,zero,44700 <_dtoa_r+0xf90>
   44de0:	dd400415 	stw	r21,16(sp)
   44de4:	003e0d06 	br	4461c <_dtoa_r+0xeac>
   44de8:	d8800217 	ldw	r2,8(sp)
   44dec:	108000c8 	cmpgei	r2,r2,3
   44df0:	103e431e 	bne	r2,zero,44700 <_dtoa_r+0xf90>
   44df4:	d8800b17 	ldw	r2,44(sp)
   44df8:	dd400415 	stw	r21,16(sp)
   44dfc:	d8800515 	stw	r2,20(sp)
   44e00:	04bdb10e 	bge	zero,r18,444c8 <_dtoa_r+0xd58>
   44e04:	003e5c06 	br	44778 <_dtoa_r+0x1008>
   44e08:	a829883a 	mov	r20,r21
   44e0c:	003f7b06 	br	44bfc <_dtoa_r+0x148c>
   44e10:	05400084 	movi	r21,2
   44e14:	003b5c06 	br	43b88 <_dtoa_r+0x418>
   44e18:	01c00174 	movhi	r7,5
   44e1c:	01000174 	movhi	r4,5
   44e20:	39ff9004 	addi	r7,r7,-448
   44e24:	000d883a 	mov	r6,zero
   44e28:	01406a84 	movi	r5,426
   44e2c:	213f9504 	addi	r4,r4,-428
   44e30:	0049bd80 	call	49bd8 <__assert_func>
   44e34:	000b883a 	mov	r5,zero
   44e38:	003b1506 	br	43a90 <_dtoa_r+0x320>
   44e3c:	b8001115 	stw	zero,68(r23)
   44e40:	000b883a 	mov	r5,zero
   44e44:	b809883a 	mov	r4,r23
   44e48:	0046da40 	call	46da4 <_Balloc>
   44e4c:	d8800115 	stw	r2,4(sp)
   44e50:	103ff126 	beq	r2,zero,44e18 <_dtoa_r+0x16a8>
   44e54:	d8800117 	ldw	r2,4(sp)
   44e58:	d8001e15 	stw	zero,120(sp)
   44e5c:	b8801015 	stw	r2,64(r23)
   44e60:	00bfffc4 	movi	r2,-1
   44e64:	d8800515 	stw	r2,20(sp)
   44e68:	d8800b15 	stw	r2,44(sp)
   44e6c:	00800044 	movi	r2,1
   44e70:	d8800715 	stw	r2,28(sp)
   44e74:	003c1106 	br	43ebc <_dtoa_r+0x74c>
   44e78:	01c00174 	movhi	r7,5
   44e7c:	01000174 	movhi	r4,5
   44e80:	39ff9004 	addi	r7,r7,-448
   44e84:	000d883a 	mov	r6,zero
   44e88:	0140ba84 	movi	r5,746
   44e8c:	213f9504 	addi	r4,r4,-428
   44e90:	0049bd80 	call	49bd8 <__assert_func>
   44e94:	00800174 	movhi	r2,5
   44e98:	10bf8d04 	addi	r2,r2,-460
   44e9c:	d8800115 	stw	r2,4(sp)
   44ea0:	003a6506 	br	43838 <_dtoa_r+0xc8>
   44ea4:	18c00120 	cmpeqi	r3,r3,4
   44ea8:	183cc91e 	bne	r3,zero,441d0 <_dtoa_r+0xa60>
   44eac:	00c00f04 	movi	r3,60
   44eb0:	1885c83a 	sub	r2,r3,r2
   44eb4:	003cc106 	br	441bc <_dtoa_r+0xa4c>

00044eb8 <__sflush_r>:
   44eb8:	2880030b 	ldhu	r2,12(r5)
   44ebc:	defffb04 	addi	sp,sp,-20
   44ec0:	dcc00315 	stw	r19,12(sp)
   44ec4:	dc000015 	stw	r16,0(sp)
   44ec8:	dfc00415 	stw	ra,16(sp)
   44ecc:	dc800215 	stw	r18,8(sp)
   44ed0:	dc400115 	stw	r17,4(sp)
   44ed4:	10c0020c 	andi	r3,r2,8
   44ed8:	2821883a 	mov	r16,r5
   44edc:	2027883a 	mov	r19,r4
   44ee0:	18003f1e 	bne	r3,zero,44fe0 <__sflush_r+0x128>
   44ee4:	28c00117 	ldw	r3,4(r5)
   44ee8:	10820014 	ori	r2,r2,2048
   44eec:	2880030d 	sth	r2,12(r5)
   44ef0:	00c0550e 	bge	zero,r3,45048 <__sflush_r+0x190>
   44ef4:	82000a17 	ldw	r8,40(r16)
   44ef8:	40003126 	beq	r8,zero,44fc0 <__sflush_r+0x108>
   44efc:	9c400017 	ldw	r17,0(r19)
   44f00:	1104000c 	andi	r4,r2,4096
   44f04:	98000015 	stw	zero,0(r19)
   44f08:	81400717 	ldw	r5,28(r16)
   44f0c:	1007883a 	mov	r3,r2
   44f10:	2000521e 	bne	r4,zero,4505c <__sflush_r+0x1a4>
   44f14:	01c00044 	movi	r7,1
   44f18:	000d883a 	mov	r6,zero
   44f1c:	9809883a 	mov	r4,r19
   44f20:	403ee83a 	callr	r8
   44f24:	10ffffd8 	cmpnei	r3,r2,-1
   44f28:	18005826 	beq	r3,zero,4508c <__sflush_r+0x1d4>
   44f2c:	80c0030b 	ldhu	r3,12(r16)
   44f30:	82000a17 	ldw	r8,40(r16)
   44f34:	81400717 	ldw	r5,28(r16)
   44f38:	18c0010c 	andi	r3,r3,4
   44f3c:	18000626 	beq	r3,zero,44f58 <__sflush_r+0xa0>
   44f40:	81000117 	ldw	r4,4(r16)
   44f44:	80c00c17 	ldw	r3,48(r16)
   44f48:	1105c83a 	sub	r2,r2,r4
   44f4c:	18000226 	beq	r3,zero,44f58 <__sflush_r+0xa0>
   44f50:	80c00f17 	ldw	r3,60(r16)
   44f54:	10c5c83a 	sub	r2,r2,r3
   44f58:	100d883a 	mov	r6,r2
   44f5c:	000f883a 	mov	r7,zero
   44f60:	9809883a 	mov	r4,r19
   44f64:	403ee83a 	callr	r8
   44f68:	10ffffd8 	cmpnei	r3,r2,-1
   44f6c:	18003d1e 	bne	r3,zero,45064 <__sflush_r+0x1ac>
   44f70:	99000017 	ldw	r4,0(r19)
   44f74:	80c0030b 	ldhu	r3,12(r16)
   44f78:	20004e26 	beq	r4,zero,450b4 <__sflush_r+0x1fc>
   44f7c:	21400760 	cmpeqi	r5,r4,29
   44f80:	2800021e 	bne	r5,zero,44f8c <__sflush_r+0xd4>
   44f84:	210005a0 	cmpeqi	r4,r4,22
   44f88:	20002c26 	beq	r4,zero,4503c <__sflush_r+0x184>
   44f8c:	80800417 	ldw	r2,16(r16)
   44f90:	18fdffcc 	andi	r3,r3,63487
   44f94:	80c0030d 	sth	r3,12(r16)
   44f98:	80000115 	stw	zero,4(r16)
   44f9c:	80800015 	stw	r2,0(r16)
   44fa0:	81400c17 	ldw	r5,48(r16)
   44fa4:	9c400015 	stw	r17,0(r19)
   44fa8:	28000526 	beq	r5,zero,44fc0 <__sflush_r+0x108>
   44fac:	80801004 	addi	r2,r16,64
   44fb0:	28800226 	beq	r5,r2,44fbc <__sflush_r+0x104>
   44fb4:	9809883a 	mov	r4,r19
   44fb8:	004567c0 	call	4567c <_free_r>
   44fbc:	80000c15 	stw	zero,48(r16)
   44fc0:	0005883a 	mov	r2,zero
   44fc4:	dfc00417 	ldw	ra,16(sp)
   44fc8:	dcc00317 	ldw	r19,12(sp)
   44fcc:	dc800217 	ldw	r18,8(sp)
   44fd0:	dc400117 	ldw	r17,4(sp)
   44fd4:	dc000017 	ldw	r16,0(sp)
   44fd8:	dec00504 	addi	sp,sp,20
   44fdc:	f800283a 	ret
   44fe0:	2c800417 	ldw	r18,16(r5)
   44fe4:	903ff626 	beq	r18,zero,44fc0 <__sflush_r+0x108>
   44fe8:	2c400017 	ldw	r17,0(r5)
   44fec:	108000cc 	andi	r2,r2,3
   44ff0:	2c800015 	stw	r18,0(r5)
   44ff4:	8ca3c83a 	sub	r17,r17,r18
   44ff8:	1000161e 	bne	r2,zero,45054 <__sflush_r+0x19c>
   44ffc:	28800517 	ldw	r2,20(r5)
   45000:	80800215 	stw	r2,8(r16)
   45004:	04400316 	blt	zero,r17,45014 <__sflush_r+0x15c>
   45008:	003fed06 	br	44fc0 <__sflush_r+0x108>
   4500c:	90a5883a 	add	r18,r18,r2
   45010:	047feb0e 	bge	zero,r17,44fc0 <__sflush_r+0x108>
   45014:	80800917 	ldw	r2,36(r16)
   45018:	81400717 	ldw	r5,28(r16)
   4501c:	880f883a 	mov	r7,r17
   45020:	900d883a 	mov	r6,r18
   45024:	9809883a 	mov	r4,r19
   45028:	103ee83a 	callr	r2
   4502c:	88a3c83a 	sub	r17,r17,r2
   45030:	00bff616 	blt	zero,r2,4500c <__sflush_r+0x154>
   45034:	80c0030b 	ldhu	r3,12(r16)
   45038:	00bfffc4 	movi	r2,-1
   4503c:	18c01014 	ori	r3,r3,64
   45040:	80c0030d 	sth	r3,12(r16)
   45044:	003fdf06 	br	44fc4 <__sflush_r+0x10c>
   45048:	28c00f17 	ldw	r3,60(r5)
   4504c:	00ffa916 	blt	zero,r3,44ef4 <__sflush_r+0x3c>
   45050:	003fdb06 	br	44fc0 <__sflush_r+0x108>
   45054:	0005883a 	mov	r2,zero
   45058:	003fe906 	br	45000 <__sflush_r+0x148>
   4505c:	80801417 	ldw	r2,80(r16)
   45060:	003fb506 	br	44f38 <__sflush_r+0x80>
   45064:	80c0030b 	ldhu	r3,12(r16)
   45068:	81000417 	ldw	r4,16(r16)
   4506c:	80000115 	stw	zero,4(r16)
   45070:	197dffcc 	andi	r5,r3,63487
   45074:	8140030d 	sth	r5,12(r16)
   45078:	81000015 	stw	r4,0(r16)
   4507c:	18c4000c 	andi	r3,r3,4096
   45080:	183fc726 	beq	r3,zero,44fa0 <__sflush_r+0xe8>
   45084:	80801415 	stw	r2,80(r16)
   45088:	003fc506 	br	44fa0 <__sflush_r+0xe8>
   4508c:	98c00017 	ldw	r3,0(r19)
   45090:	183fa626 	beq	r3,zero,44f2c <__sflush_r+0x74>
   45094:	19000760 	cmpeqi	r4,r3,29
   45098:	20000e1e 	bne	r4,zero,450d4 <__sflush_r+0x21c>
   4509c:	18c00598 	cmpnei	r3,r3,22
   450a0:	18000c26 	beq	r3,zero,450d4 <__sflush_r+0x21c>
   450a4:	80c0030b 	ldhu	r3,12(r16)
   450a8:	18c01014 	ori	r3,r3,64
   450ac:	80c0030d 	sth	r3,12(r16)
   450b0:	003fc406 	br	44fc4 <__sflush_r+0x10c>
   450b4:	81000417 	ldw	r4,16(r16)
   450b8:	197dffcc 	andi	r5,r3,63487
   450bc:	8140030d 	sth	r5,12(r16)
   450c0:	80000115 	stw	zero,4(r16)
   450c4:	81000015 	stw	r4,0(r16)
   450c8:	18c4000c 	andi	r3,r3,4096
   450cc:	183fb426 	beq	r3,zero,44fa0 <__sflush_r+0xe8>
   450d0:	003fec06 	br	45084 <__sflush_r+0x1cc>
   450d4:	9c400015 	stw	r17,0(r19)
   450d8:	0005883a 	mov	r2,zero
   450dc:	003fb906 	br	44fc4 <__sflush_r+0x10c>

000450e0 <_fflush_r>:
   450e0:	defffd04 	addi	sp,sp,-12
   450e4:	dc000115 	stw	r16,4(sp)
   450e8:	dfc00215 	stw	ra,8(sp)
   450ec:	2021883a 	mov	r16,r4
   450f0:	20000226 	beq	r4,zero,450fc <_fflush_r+0x1c>
   450f4:	20800e17 	ldw	r2,56(r4)
   450f8:	10000726 	beq	r2,zero,45118 <_fflush_r+0x38>
   450fc:	2880030f 	ldh	r2,12(r5)
   45100:	10000a1e 	bne	r2,zero,4512c <_fflush_r+0x4c>
   45104:	0005883a 	mov	r2,zero
   45108:	dfc00217 	ldw	ra,8(sp)
   4510c:	dc000117 	ldw	r16,4(sp)
   45110:	dec00304 	addi	sp,sp,12
   45114:	f800283a 	ret
   45118:	d9400015 	stw	r5,0(sp)
   4511c:	00455180 	call	45518 <__sinit>
   45120:	d9400017 	ldw	r5,0(sp)
   45124:	2880030f 	ldh	r2,12(r5)
   45128:	103ff626 	beq	r2,zero,45104 <_fflush_r+0x24>
   4512c:	8009883a 	mov	r4,r16
   45130:	dfc00217 	ldw	ra,8(sp)
   45134:	dc000117 	ldw	r16,4(sp)
   45138:	dec00304 	addi	sp,sp,12
   4513c:	0044eb81 	jmpi	44eb8 <__sflush_r>

00045140 <fflush>:
   45140:	20001726 	beq	r4,zero,451a0 <fflush+0x60>
   45144:	00800174 	movhi	r2,5
   45148:	200b883a 	mov	r5,r4
   4514c:	1107ad17 	ldw	r4,7860(r2)
   45150:	20000226 	beq	r4,zero,4515c <fflush+0x1c>
   45154:	20800e17 	ldw	r2,56(r4)
   45158:	10000526 	beq	r2,zero,45170 <fflush+0x30>
   4515c:	2880030f 	ldh	r2,12(r5)
   45160:	1000021e 	bne	r2,zero,4516c <fflush+0x2c>
   45164:	0005883a 	mov	r2,zero
   45168:	f800283a 	ret
   4516c:	0044eb81 	jmpi	44eb8 <__sflush_r>
   45170:	defffd04 	addi	sp,sp,-12
   45174:	d9400115 	stw	r5,4(sp)
   45178:	d9000015 	stw	r4,0(sp)
   4517c:	dfc00215 	stw	ra,8(sp)
   45180:	00455180 	call	45518 <__sinit>
   45184:	d9400117 	ldw	r5,4(sp)
   45188:	d9000017 	ldw	r4,0(sp)
   4518c:	2880030f 	ldh	r2,12(r5)
   45190:	10000826 	beq	r2,zero,451b4 <fflush+0x74>
   45194:	dfc00217 	ldw	ra,8(sp)
   45198:	dec00304 	addi	sp,sp,12
   4519c:	0044eb81 	jmpi	44eb8 <__sflush_r>
   451a0:	00800174 	movhi	r2,5
   451a4:	1107ac17 	ldw	r4,7856(r2)
   451a8:	01400134 	movhi	r5,4
   451ac:	29543804 	addi	r5,r5,20704
   451b0:	0045ec81 	jmpi	45ec8 <_fwalk_reent>
   451b4:	0005883a 	mov	r2,zero
   451b8:	dfc00217 	ldw	ra,8(sp)
   451bc:	dec00304 	addi	sp,sp,12
   451c0:	f800283a 	ret

000451c4 <__fp_lock>:
   451c4:	0005883a 	mov	r2,zero
   451c8:	f800283a 	ret

000451cc <_cleanup_r>:
   451cc:	01400174 	movhi	r5,5
   451d0:	29677104 	addi	r5,r5,-25148
   451d4:	0045ec81 	jmpi	45ec8 <_fwalk_reent>

000451d8 <__fp_unlock>:
   451d8:	0005883a 	mov	r2,zero
   451dc:	f800283a 	ret

000451e0 <__sinit.part.0>:
   451e0:	00c00134 	movhi	r3,4
   451e4:	20800117 	ldw	r2,4(r4)
   451e8:	18d47304 	addi	r3,r3,20940
   451ec:	20c00f15 	stw	r3,60(r4)
   451f0:	2140bb04 	addi	r5,r4,748
   451f4:	00c000c4 	movi	r3,3
   451f8:	20c0b915 	stw	r3,740(r4)
   451fc:	2140ba15 	stw	r5,744(r4)
   45200:	2000b815 	stw	zero,736(r4)
   45204:	10001705 	stb	zero,92(r2)
   45208:	10001745 	stb	zero,93(r2)
   4520c:	10001785 	stb	zero,94(r2)
   45210:	100017c5 	stb	zero,95(r2)
   45214:	10001805 	stb	zero,96(r2)
   45218:	10001845 	stb	zero,97(r2)
   4521c:	10001885 	stb	zero,98(r2)
   45220:	100018c5 	stb	zero,99(r2)
   45224:	00c00104 	movi	r3,4
   45228:	10c00315 	stw	r3,12(r2)
   4522c:	02000174 	movhi	r8,5
   45230:	20c00217 	ldw	r3,8(r4)
   45234:	01c00174 	movhi	r7,5
   45238:	01800174 	movhi	r6,5
   4523c:	01400174 	movhi	r5,5
   45240:	42213004 	addi	r8,r8,-31552
   45244:	39e14704 	addi	r7,r7,-31460
   45248:	31a16704 	addi	r6,r6,-31332
   4524c:	29617e04 	addi	r5,r5,-31240
   45250:	02400074 	movhi	r9,1
   45254:	10001915 	stw	zero,100(r2)
   45258:	10000015 	stw	zero,0(r2)
   4525c:	10000115 	stw	zero,4(r2)
   45260:	10000215 	stw	zero,8(r2)
   45264:	10000415 	stw	zero,16(r2)
   45268:	10000515 	stw	zero,20(r2)
   4526c:	10000615 	stw	zero,24(r2)
   45270:	10800715 	stw	r2,28(r2)
   45274:	12000815 	stw	r8,32(r2)
   45278:	11c00915 	stw	r7,36(r2)
   4527c:	11800a15 	stw	r6,40(r2)
   45280:	11400b15 	stw	r5,44(r2)
   45284:	4a400284 	addi	r9,r9,10
   45288:	1a400315 	stw	r9,12(r3)
   4528c:	18001915 	stw	zero,100(r3)
   45290:	18000015 	stw	zero,0(r3)
   45294:	18000115 	stw	zero,4(r3)
   45298:	18000215 	stw	zero,8(r3)
   4529c:	18000415 	stw	zero,16(r3)
   452a0:	18001705 	stb	zero,92(r3)
   452a4:	18001745 	stb	zero,93(r3)
   452a8:	18001785 	stb	zero,94(r3)
   452ac:	180017c5 	stb	zero,95(r3)
   452b0:	18001805 	stb	zero,96(r3)
   452b4:	18001845 	stb	zero,97(r3)
   452b8:	18001885 	stb	zero,98(r3)
   452bc:	180018c5 	stb	zero,99(r3)
   452c0:	20800317 	ldw	r2,12(r4)
   452c4:	024000b4 	movhi	r9,2
   452c8:	18000515 	stw	zero,20(r3)
   452cc:	18000615 	stw	zero,24(r3)
   452d0:	18c00715 	stw	r3,28(r3)
   452d4:	1a000815 	stw	r8,32(r3)
   452d8:	19c00915 	stw	r7,36(r3)
   452dc:	19800a15 	stw	r6,40(r3)
   452e0:	19400b15 	stw	r5,44(r3)
   452e4:	4a400484 	addi	r9,r9,18
   452e8:	10001915 	stw	zero,100(r2)
   452ec:	10000015 	stw	zero,0(r2)
   452f0:	10000115 	stw	zero,4(r2)
   452f4:	10000215 	stw	zero,8(r2)
   452f8:	12400315 	stw	r9,12(r2)
   452fc:	10000415 	stw	zero,16(r2)
   45300:	10000515 	stw	zero,20(r2)
   45304:	10000615 	stw	zero,24(r2)
   45308:	10001705 	stb	zero,92(r2)
   4530c:	10001745 	stb	zero,93(r2)
   45310:	10001785 	stb	zero,94(r2)
   45314:	100017c5 	stb	zero,95(r2)
   45318:	10001805 	stb	zero,96(r2)
   4531c:	10001845 	stb	zero,97(r2)
   45320:	10001885 	stb	zero,98(r2)
   45324:	100018c5 	stb	zero,99(r2)
   45328:	10800715 	stw	r2,28(r2)
   4532c:	12000815 	stw	r8,32(r2)
   45330:	11c00915 	stw	r7,36(r2)
   45334:	11800a15 	stw	r6,40(r2)
   45338:	11400b15 	stw	r5,44(r2)
   4533c:	00800044 	movi	r2,1
   45340:	20800e15 	stw	r2,56(r4)
   45344:	f800283a 	ret

00045348 <__sfmoreglue>:
   45348:	defffc04 	addi	sp,sp,-16
   4534c:	dc400115 	stw	r17,4(sp)
   45350:	2c7fffc4 	addi	r17,r5,-1
   45354:	8c401a24 	muli	r17,r17,104
   45358:	dc800215 	stw	r18,8(sp)
   4535c:	2825883a 	mov	r18,r5
   45360:	89401d04 	addi	r5,r17,116
   45364:	dc000015 	stw	r16,0(sp)
   45368:	dfc00315 	stw	ra,12(sp)
   4536c:	00461d80 	call	461d8 <_malloc_r>
   45370:	1021883a 	mov	r16,r2
   45374:	10000726 	beq	r2,zero,45394 <__sfmoreglue+0x4c>
   45378:	11000304 	addi	r4,r2,12
   4537c:	10000015 	stw	zero,0(r2)
   45380:	14800115 	stw	r18,4(r2)
   45384:	11000215 	stw	r4,8(r2)
   45388:	89801a04 	addi	r6,r17,104
   4538c:	000b883a 	mov	r5,zero
   45390:	0046cb40 	call	46cb4 <memset>
   45394:	8005883a 	mov	r2,r16
   45398:	dfc00317 	ldw	ra,12(sp)
   4539c:	dc800217 	ldw	r18,8(sp)
   453a0:	dc400117 	ldw	r17,4(sp)
   453a4:	dc000017 	ldw	r16,0(sp)
   453a8:	dec00404 	addi	sp,sp,16
   453ac:	f800283a 	ret

000453b0 <__sfp>:
   453b0:	defffb04 	addi	sp,sp,-20
   453b4:	00800174 	movhi	r2,5
   453b8:	dc000015 	stw	r16,0(sp)
   453bc:	1407ac17 	ldw	r16,7856(r2)
   453c0:	dc400115 	stw	r17,4(sp)
   453c4:	dfc00415 	stw	ra,16(sp)
   453c8:	80800e17 	ldw	r2,56(r16)
   453cc:	dcc00315 	stw	r19,12(sp)
   453d0:	dc800215 	stw	r18,8(sp)
   453d4:	2023883a 	mov	r17,r4
   453d8:	10003126 	beq	r2,zero,454a0 <__sfp+0xf0>
   453dc:	8100ba17 	ldw	r4,744(r16)
   453e0:	8140b917 	ldw	r5,740(r16)
   453e4:	04c00104 	movi	r19,4
   453e8:	8400b804 	addi	r16,r16,736
   453ec:	297fffc4 	addi	r5,r5,-1
   453f0:	2800050e 	bge	r5,zero,45408 <__sfp+0x58>
   453f4:	00002406 	br	45488 <__sfp+0xd8>
   453f8:	297fffc4 	addi	r5,r5,-1
   453fc:	28bfffd8 	cmpnei	r2,r5,-1
   45400:	21001a04 	addi	r4,r4,104
   45404:	10002026 	beq	r2,zero,45488 <__sfp+0xd8>
   45408:	2080030f 	ldh	r2,12(r4)
   4540c:	103ffa1e 	bne	r2,zero,453f8 <__sfp+0x48>
   45410:	00bffff4 	movhi	r2,65535
   45414:	10800044 	addi	r2,r2,1
   45418:	20001915 	stw	zero,100(r4)
   4541c:	20000015 	stw	zero,0(r4)
   45420:	20000115 	stw	zero,4(r4)
   45424:	20000215 	stw	zero,8(r4)
   45428:	20800315 	stw	r2,12(r4)
   4542c:	20000415 	stw	zero,16(r4)
   45430:	20000515 	stw	zero,20(r4)
   45434:	20000615 	stw	zero,24(r4)
   45438:	20001705 	stb	zero,92(r4)
   4543c:	20001745 	stb	zero,93(r4)
   45440:	20001785 	stb	zero,94(r4)
   45444:	200017c5 	stb	zero,95(r4)
   45448:	20001805 	stb	zero,96(r4)
   4544c:	20001845 	stb	zero,97(r4)
   45450:	20001885 	stb	zero,98(r4)
   45454:	200018c5 	stb	zero,99(r4)
   45458:	20000c15 	stw	zero,48(r4)
   4545c:	20000d15 	stw	zero,52(r4)
   45460:	20001115 	stw	zero,68(r4)
   45464:	20001215 	stw	zero,72(r4)
   45468:	2005883a 	mov	r2,r4
   4546c:	dfc00417 	ldw	ra,16(sp)
   45470:	dcc00317 	ldw	r19,12(sp)
   45474:	dc800217 	ldw	r18,8(sp)
   45478:	dc400117 	ldw	r17,4(sp)
   4547c:	dc000017 	ldw	r16,0(sp)
   45480:	dec00504 	addi	sp,sp,20
   45484:	f800283a 	ret
   45488:	80800017 	ldw	r2,0(r16)
   4548c:	10000726 	beq	r2,zero,454ac <__sfp+0xfc>
   45490:	11000217 	ldw	r4,8(r2)
   45494:	11400117 	ldw	r5,4(r2)
   45498:	1021883a 	mov	r16,r2
   4549c:	003fd306 	br	453ec <__sfp+0x3c>
   454a0:	8009883a 	mov	r4,r16
   454a4:	00451e00 	call	451e0 <__sinit.part.0>
   454a8:	003fcc06 	br	453dc <__sfp+0x2c>
   454ac:	01406b04 	movi	r5,428
   454b0:	8809883a 	mov	r4,r17
   454b4:	00461d80 	call	461d8 <_malloc_r>
   454b8:	1025883a 	mov	r18,r2
   454bc:	10000c26 	beq	r2,zero,454f0 <__sfp+0x140>
   454c0:	11000304 	addi	r4,r2,12
   454c4:	11000215 	stw	r4,8(r2)
   454c8:	000b883a 	mov	r5,zero
   454cc:	10000015 	stw	zero,0(r2)
   454d0:	14c00115 	stw	r19,4(r2)
   454d4:	01806804 	movi	r6,416
   454d8:	0046cb40 	call	46cb4 <memset>
   454dc:	1009883a 	mov	r4,r2
   454e0:	84800015 	stw	r18,0(r16)
   454e4:	014000c4 	movi	r5,3
   454e8:	9021883a 	mov	r16,r18
   454ec:	003fc606 	br	45408 <__sfp+0x58>
   454f0:	80000015 	stw	zero,0(r16)
   454f4:	00800304 	movi	r2,12
   454f8:	88800015 	stw	r2,0(r17)
   454fc:	0009883a 	mov	r4,zero
   45500:	003fd906 	br	45468 <__sfp+0xb8>

00045504 <_cleanup>:
   45504:	00800174 	movhi	r2,5
   45508:	1107ac17 	ldw	r4,7856(r2)
   4550c:	01400174 	movhi	r5,5
   45510:	29677104 	addi	r5,r5,-25148
   45514:	0045ec81 	jmpi	45ec8 <_fwalk_reent>

00045518 <__sinit>:
   45518:	20800e17 	ldw	r2,56(r4)
   4551c:	10000126 	beq	r2,zero,45524 <__sinit+0xc>
   45520:	f800283a 	ret
   45524:	00451e01 	jmpi	451e0 <__sinit.part.0>

00045528 <__sfp_lock_acquire>:
   45528:	f800283a 	ret

0004552c <__sfp_lock_release>:
   4552c:	f800283a 	ret

00045530 <__sinit_lock_acquire>:
   45530:	f800283a 	ret

00045534 <__sinit_lock_release>:
   45534:	f800283a 	ret

00045538 <__fp_lock_all>:
   45538:	00800174 	movhi	r2,5
   4553c:	1107ad17 	ldw	r4,7860(r2)
   45540:	01400134 	movhi	r5,4
   45544:	29547104 	addi	r5,r5,20932
   45548:	0045e301 	jmpi	45e30 <_fwalk>

0004554c <__fp_unlock_all>:
   4554c:	00800174 	movhi	r2,5
   45550:	1107ad17 	ldw	r4,7860(r2)
   45554:	01400134 	movhi	r5,4
   45558:	29547604 	addi	r5,r5,20952
   4555c:	0045e301 	jmpi	45e30 <_fwalk>

00045560 <_malloc_trim_r>:
   45560:	defffb04 	addi	sp,sp,-20
   45564:	dcc00315 	stw	r19,12(sp)
   45568:	04c00174 	movhi	r19,5
   4556c:	dc800215 	stw	r18,8(sp)
   45570:	dc400115 	stw	r17,4(sp)
   45574:	dc000015 	stw	r16,0(sp)
   45578:	dfc00415 	stw	ra,16(sp)
   4557c:	2821883a 	mov	r16,r5
   45580:	9cc1cd04 	addi	r19,r19,1844
   45584:	2025883a 	mov	r18,r4
   45588:	004daf80 	call	4daf8 <__malloc_lock>
   4558c:	98800217 	ldw	r2,8(r19)
   45590:	14400117 	ldw	r17,4(r2)
   45594:	00bfff04 	movi	r2,-4
   45598:	88a2703a 	and	r17,r17,r2
   4559c:	8c21c83a 	sub	r16,r17,r16
   455a0:	8403fbc4 	addi	r16,r16,4079
   455a4:	8020d33a 	srli	r16,r16,12
   455a8:	843fffc4 	addi	r16,r16,-1
   455ac:	8020933a 	slli	r16,r16,12
   455b0:	80840008 	cmpgei	r2,r16,4096
   455b4:	10000626 	beq	r2,zero,455d0 <_malloc_trim_r+0x70>
   455b8:	000b883a 	mov	r5,zero
   455bc:	9009883a 	mov	r4,r18
   455c0:	00484680 	call	48468 <_sbrk_r>
   455c4:	98c00217 	ldw	r3,8(r19)
   455c8:	1c47883a 	add	r3,r3,r17
   455cc:	10c00a26 	beq	r2,r3,455f8 <_malloc_trim_r+0x98>
   455d0:	9009883a 	mov	r4,r18
   455d4:	004db1c0 	call	4db1c <__malloc_unlock>
   455d8:	0005883a 	mov	r2,zero
   455dc:	dfc00417 	ldw	ra,16(sp)
   455e0:	dcc00317 	ldw	r19,12(sp)
   455e4:	dc800217 	ldw	r18,8(sp)
   455e8:	dc400117 	ldw	r17,4(sp)
   455ec:	dc000017 	ldw	r16,0(sp)
   455f0:	dec00504 	addi	sp,sp,20
   455f4:	f800283a 	ret
   455f8:	040bc83a 	sub	r5,zero,r16
   455fc:	9009883a 	mov	r4,r18
   45600:	00484680 	call	48468 <_sbrk_r>
   45604:	10bfffd8 	cmpnei	r2,r2,-1
   45608:	10000d26 	beq	r2,zero,45640 <_malloc_trim_r+0xe0>
   4560c:	00800174 	movhi	r2,5
   45610:	108ebc17 	ldw	r2,15088(r2)
   45614:	98c00217 	ldw	r3,8(r19)
   45618:	8c23c83a 	sub	r17,r17,r16
   4561c:	8c400054 	ori	r17,r17,1
   45620:	1421c83a 	sub	r16,r2,r16
   45624:	1c400115 	stw	r17,4(r3)
   45628:	00800174 	movhi	r2,5
   4562c:	9009883a 	mov	r4,r18
   45630:	140ebc15 	stw	r16,15088(r2)
   45634:	004db1c0 	call	4db1c <__malloc_unlock>
   45638:	00800044 	movi	r2,1
   4563c:	003fe706 	br	455dc <_malloc_trim_r+0x7c>
   45640:	000b883a 	mov	r5,zero
   45644:	9009883a 	mov	r4,r18
   45648:	00484680 	call	48468 <_sbrk_r>
   4564c:	99000217 	ldw	r4,8(r19)
   45650:	1107c83a 	sub	r3,r2,r4
   45654:	19400410 	cmplti	r5,r3,16
   45658:	283fdd1e 	bne	r5,zero,455d0 <_malloc_trim_r+0x70>
   4565c:	01400174 	movhi	r5,5
   45660:	2947ae17 	ldw	r5,7864(r5)
   45664:	18c00054 	ori	r3,r3,1
   45668:	20c00115 	stw	r3,4(r4)
   4566c:	1145c83a 	sub	r2,r2,r5
   45670:	01400174 	movhi	r5,5
   45674:	288ebc15 	stw	r2,15088(r5)
   45678:	003fd506 	br	455d0 <_malloc_trim_r+0x70>

0004567c <_free_r>:
   4567c:	28004f26 	beq	r5,zero,457bc <_free_r+0x140>
   45680:	defffd04 	addi	sp,sp,-12
   45684:	dc400115 	stw	r17,4(sp)
   45688:	dc000015 	stw	r16,0(sp)
   4568c:	2023883a 	mov	r17,r4
   45690:	2821883a 	mov	r16,r5
   45694:	dfc00215 	stw	ra,8(sp)
   45698:	004daf80 	call	4daf8 <__malloc_lock>
   4569c:	81ffff17 	ldw	r7,-4(r16)
   456a0:	00bfff84 	movi	r2,-2
   456a4:	80fffe04 	addi	r3,r16,-8
   456a8:	3884703a 	and	r2,r7,r2
   456ac:	01000174 	movhi	r4,5
   456b0:	188d883a 	add	r6,r3,r2
   456b4:	2101cd04 	addi	r4,r4,1844
   456b8:	31400117 	ldw	r5,4(r6)
   456bc:	22000217 	ldw	r8,8(r4)
   456c0:	027fff04 	movi	r9,-4
   456c4:	2a4a703a 	and	r5,r5,r9
   456c8:	41806426 	beq	r8,r6,4585c <_free_r+0x1e0>
   456cc:	31400115 	stw	r5,4(r6)
   456d0:	39c0004c 	andi	r7,r7,1
   456d4:	3151883a 	add	r8,r6,r5
   456d8:	3800281e 	bne	r7,zero,4577c <_free_r+0x100>
   456dc:	82bffe17 	ldw	r10,-8(r16)
   456e0:	42000117 	ldw	r8,4(r8)
   456e4:	01c00174 	movhi	r7,5
   456e8:	1a87c83a 	sub	r3,r3,r10
   456ec:	1a400217 	ldw	r9,8(r3)
   456f0:	39c1cf04 	addi	r7,r7,1852
   456f4:	1285883a 	add	r2,r2,r10
   456f8:	4200004c 	andi	r8,r8,1
   456fc:	49c04c26 	beq	r9,r7,45830 <_free_r+0x1b4>
   45700:	1a800317 	ldw	r10,12(r3)
   45704:	4a800315 	stw	r10,12(r9)
   45708:	52400215 	stw	r9,8(r10)
   4570c:	40007126 	beq	r8,zero,458d4 <_free_r+0x258>
   45710:	11400054 	ori	r5,r2,1
   45714:	19400115 	stw	r5,4(r3)
   45718:	30800015 	stw	r2,0(r6)
   4571c:	11408028 	cmpgeui	r5,r2,512
   45720:	28002c1e 	bne	r5,zero,457d4 <_free_r+0x158>
   45724:	100ad0fa 	srli	r5,r2,3
   45728:	100cd17a 	srli	r6,r2,5
   4572c:	00800044 	movi	r2,1
   45730:	29400044 	addi	r5,r5,1
   45734:	280a90fa 	slli	r5,r5,3
   45738:	21c00117 	ldw	r7,4(r4)
   4573c:	1184983a 	sll	r2,r2,r6
   45740:	214b883a 	add	r5,r4,r5
   45744:	29800017 	ldw	r6,0(r5)
   45748:	11c4b03a 	or	r2,r2,r7
   4574c:	29fffe04 	addi	r7,r5,-8
   45750:	19c00315 	stw	r7,12(r3)
   45754:	19800215 	stw	r6,8(r3)
   45758:	20800115 	stw	r2,4(r4)
   4575c:	28c00015 	stw	r3,0(r5)
   45760:	30c00315 	stw	r3,12(r6)
   45764:	8809883a 	mov	r4,r17
   45768:	dfc00217 	ldw	ra,8(sp)
   4576c:	dc400117 	ldw	r17,4(sp)
   45770:	dc000017 	ldw	r16,0(sp)
   45774:	dec00304 	addi	sp,sp,12
   45778:	004db1c1 	jmpi	4db1c <__malloc_unlock>
   4577c:	41c00117 	ldw	r7,4(r8)
   45780:	39c0004c 	andi	r7,r7,1
   45784:	38000e1e 	bne	r7,zero,457c0 <_free_r+0x144>
   45788:	01c00174 	movhi	r7,5
   4578c:	1145883a 	add	r2,r2,r5
   45790:	39c1cf04 	addi	r7,r7,1852
   45794:	31400217 	ldw	r5,8(r6)
   45798:	12400054 	ori	r9,r2,1
   4579c:	1891883a 	add	r8,r3,r2
   457a0:	29c05226 	beq	r5,r7,458ec <_free_r+0x270>
   457a4:	31800317 	ldw	r6,12(r6)
   457a8:	29800315 	stw	r6,12(r5)
   457ac:	31400215 	stw	r5,8(r6)
   457b0:	1a400115 	stw	r9,4(r3)
   457b4:	40800015 	stw	r2,0(r8)
   457b8:	003fd806 	br	4571c <_free_r+0xa0>
   457bc:	f800283a 	ret
   457c0:	11400054 	ori	r5,r2,1
   457c4:	817fff15 	stw	r5,-4(r16)
   457c8:	30800015 	stw	r2,0(r6)
   457cc:	11408028 	cmpgeui	r5,r2,512
   457d0:	283fd426 	beq	r5,zero,45724 <_free_r+0xa8>
   457d4:	100ad27a 	srli	r5,r2,9
   457d8:	29800168 	cmpgeui	r6,r5,5
   457dc:	3000341e 	bne	r6,zero,458b0 <_free_r+0x234>
   457e0:	100ad1ba 	srli	r5,r2,6
   457e4:	29800e44 	addi	r6,r5,57
   457e8:	300c90fa 	slli	r6,r6,3
   457ec:	29c00e04 	addi	r7,r5,56
   457f0:	218d883a 	add	r6,r4,r6
   457f4:	31400017 	ldw	r5,0(r6)
   457f8:	31bffe04 	addi	r6,r6,-8
   457fc:	31404226 	beq	r6,r5,45908 <_free_r+0x28c>
   45800:	01ffff04 	movi	r7,-4
   45804:	29000117 	ldw	r4,4(r5)
   45808:	21c8703a 	and	r4,r4,r7
   4580c:	1100022e 	bgeu	r2,r4,45818 <_free_r+0x19c>
   45810:	29400217 	ldw	r5,8(r5)
   45814:	317ffb1e 	bne	r6,r5,45804 <_free_r+0x188>
   45818:	29800317 	ldw	r6,12(r5)
   4581c:	19800315 	stw	r6,12(r3)
   45820:	19400215 	stw	r5,8(r3)
   45824:	30c00215 	stw	r3,8(r6)
   45828:	28c00315 	stw	r3,12(r5)
   4582c:	003fcd06 	br	45764 <_free_r+0xe8>
   45830:	40004d1e 	bne	r8,zero,45968 <_free_r+0x2ec>
   45834:	31000317 	ldw	r4,12(r6)
   45838:	31800217 	ldw	r6,8(r6)
   4583c:	2885883a 	add	r2,r5,r2
   45840:	11400054 	ori	r5,r2,1
   45844:	31000315 	stw	r4,12(r6)
   45848:	21800215 	stw	r6,8(r4)
   4584c:	19400115 	stw	r5,4(r3)
   45850:	1887883a 	add	r3,r3,r2
   45854:	18800015 	stw	r2,0(r3)
   45858:	003fc206 	br	45764 <_free_r+0xe8>
   4585c:	39c0004c 	andi	r7,r7,1
   45860:	1145883a 	add	r2,r2,r5
   45864:	3800071e 	bne	r7,zero,45884 <_free_r+0x208>
   45868:	81fffe17 	ldw	r7,-8(r16)
   4586c:	19c7c83a 	sub	r3,r3,r7
   45870:	19400317 	ldw	r5,12(r3)
   45874:	19800217 	ldw	r6,8(r3)
   45878:	11c5883a 	add	r2,r2,r7
   4587c:	31400315 	stw	r5,12(r6)
   45880:	29800215 	stw	r6,8(r5)
   45884:	01400174 	movhi	r5,5
   45888:	11800054 	ori	r6,r2,1
   4588c:	2947af17 	ldw	r5,7868(r5)
   45890:	19800115 	stw	r6,4(r3)
   45894:	20c00215 	stw	r3,8(r4)
   45898:	117fb236 	bltu	r2,r5,45764 <_free_r+0xe8>
   4589c:	00800174 	movhi	r2,5
   458a0:	114eb217 	ldw	r5,15048(r2)
   458a4:	8809883a 	mov	r4,r17
   458a8:	00455600 	call	45560 <_malloc_trim_r>
   458ac:	003fad06 	br	45764 <_free_r+0xe8>
   458b0:	29800568 	cmpgeui	r6,r5,21
   458b4:	30000926 	beq	r6,zero,458dc <_free_r+0x260>
   458b8:	29801568 	cmpgeui	r6,r5,85
   458bc:	3000191e 	bne	r6,zero,45924 <_free_r+0x2a8>
   458c0:	100ad33a 	srli	r5,r2,12
   458c4:	29801bc4 	addi	r6,r5,111
   458c8:	300c90fa 	slli	r6,r6,3
   458cc:	29c01b84 	addi	r7,r5,110
   458d0:	003fc706 	br	457f0 <_free_r+0x174>
   458d4:	1145883a 	add	r2,r2,r5
   458d8:	003fae06 	br	45794 <_free_r+0x118>
   458dc:	29801704 	addi	r6,r5,92
   458e0:	300c90fa 	slli	r6,r6,3
   458e4:	29c016c4 	addi	r7,r5,91
   458e8:	003fc106 	br	457f0 <_free_r+0x174>
   458ec:	20c00515 	stw	r3,20(r4)
   458f0:	20c00415 	stw	r3,16(r4)
   458f4:	19c00315 	stw	r7,12(r3)
   458f8:	19c00215 	stw	r7,8(r3)
   458fc:	1a400115 	stw	r9,4(r3)
   45900:	40800015 	stw	r2,0(r8)
   45904:	003f9706 	br	45764 <_free_r+0xe8>
   45908:	380fd0ba 	srai	r7,r7,2
   4590c:	00800044 	movi	r2,1
   45910:	22000117 	ldw	r8,4(r4)
   45914:	11ce983a 	sll	r7,r2,r7
   45918:	3a0eb03a 	or	r7,r7,r8
   4591c:	21c00115 	stw	r7,4(r4)
   45920:	003fbe06 	br	4581c <_free_r+0x1a0>
   45924:	29805568 	cmpgeui	r6,r5,341
   45928:	3000051e 	bne	r6,zero,45940 <_free_r+0x2c4>
   4592c:	100ad3fa 	srli	r5,r2,15
   45930:	29801e04 	addi	r6,r5,120
   45934:	300c90fa 	slli	r6,r6,3
   45938:	29c01dc4 	addi	r7,r5,119
   4593c:	003fac06 	br	457f0 <_free_r+0x174>
   45940:	29415568 	cmpgeui	r5,r5,1365
   45944:	2800051e 	bne	r5,zero,4595c <_free_r+0x2e0>
   45948:	100ad4ba 	srli	r5,r2,18
   4594c:	29801f44 	addi	r6,r5,125
   45950:	300c90fa 	slli	r6,r6,3
   45954:	29c01f04 	addi	r7,r5,124
   45958:	003fa506 	br	457f0 <_free_r+0x174>
   4595c:	0180fe04 	movi	r6,1016
   45960:	01c01f84 	movi	r7,126
   45964:	003fa206 	br	457f0 <_free_r+0x174>
   45968:	11000054 	ori	r4,r2,1
   4596c:	19000115 	stw	r4,4(r3)
   45970:	30800015 	stw	r2,0(r6)
   45974:	003f7b06 	br	45764 <_free_r+0xe8>

00045978 <__sfvwrite_r>:
   45978:	30800217 	ldw	r2,8(r6)
   4597c:	1000a226 	beq	r2,zero,45c08 <__sfvwrite_r+0x290>
   45980:	29c0030b 	ldhu	r7,12(r5)
   45984:	defff404 	addi	sp,sp,-48
   45988:	ddc00915 	stw	r23,36(sp)
   4598c:	dd400715 	stw	r21,28(sp)
   45990:	dc000215 	stw	r16,8(sp)
   45994:	dfc00b15 	stw	ra,44(sp)
   45998:	df000a15 	stw	fp,40(sp)
   4599c:	dd800815 	stw	r22,32(sp)
   459a0:	dd000615 	stw	r20,24(sp)
   459a4:	dcc00515 	stw	r19,20(sp)
   459a8:	dc800415 	stw	r18,16(sp)
   459ac:	dc400315 	stw	r17,12(sp)
   459b0:	3880020c 	andi	r2,r7,8
   459b4:	302f883a 	mov	r23,r6
   459b8:	202b883a 	mov	r21,r4
   459bc:	2821883a 	mov	r16,r5
   459c0:	10002226 	beq	r2,zero,45a4c <__sfvwrite_r+0xd4>
   459c4:	28800417 	ldw	r2,16(r5)
   459c8:	10002026 	beq	r2,zero,45a4c <__sfvwrite_r+0xd4>
   459cc:	3880008c 	andi	r2,r7,2
   459d0:	bc400017 	ldw	r17,0(r23)
   459d4:	10002526 	beq	r2,zero,45a6c <__sfvwrite_r+0xf4>
   459d8:	80800917 	ldw	r2,36(r16)
   459dc:	81400717 	ldw	r5,28(r16)
   459e0:	05200034 	movhi	r20,32768
   459e4:	0027883a 	mov	r19,zero
   459e8:	0025883a 	mov	r18,zero
   459ec:	a53f0004 	addi	r20,r20,-1024
   459f0:	980d883a 	mov	r6,r19
   459f4:	a809883a 	mov	r4,r21
   459f8:	90001026 	beq	r18,zero,45a3c <__sfvwrite_r+0xc4>
   459fc:	900f883a 	mov	r7,r18
   45a00:	a480012e 	bgeu	r20,r18,45a08 <__sfvwrite_r+0x90>
   45a04:	a00f883a 	mov	r7,r20
   45a08:	103ee83a 	callr	r2
   45a0c:	0080790e 	bge	zero,r2,45bf4 <__sfvwrite_r+0x27c>
   45a10:	b9000217 	ldw	r4,8(r23)
   45a14:	98a7883a 	add	r19,r19,r2
   45a18:	90a5c83a 	sub	r18,r18,r2
   45a1c:	2085c83a 	sub	r2,r4,r2
   45a20:	b8800215 	stw	r2,8(r23)
   45a24:	10006226 	beq	r2,zero,45bb0 <__sfvwrite_r+0x238>
   45a28:	80800917 	ldw	r2,36(r16)
   45a2c:	81400717 	ldw	r5,28(r16)
   45a30:	980d883a 	mov	r6,r19
   45a34:	a809883a 	mov	r4,r21
   45a38:	903ff01e 	bne	r18,zero,459fc <__sfvwrite_r+0x84>
   45a3c:	8cc00017 	ldw	r19,0(r17)
   45a40:	8c800117 	ldw	r18,4(r17)
   45a44:	8c400204 	addi	r17,r17,8
   45a48:	003fe906 	br	459f0 <__sfvwrite_r+0x78>
   45a4c:	800b883a 	mov	r5,r16
   45a50:	a809883a 	mov	r4,r21
   45a54:	00434100 	call	43410 <__swsetup_r>
   45a58:	1000f31e 	bne	r2,zero,45e28 <__sfvwrite_r+0x4b0>
   45a5c:	81c0030b 	ldhu	r7,12(r16)
   45a60:	bc400017 	ldw	r17,0(r23)
   45a64:	3880008c 	andi	r2,r7,2
   45a68:	103fdb1e 	bne	r2,zero,459d8 <__sfvwrite_r+0x60>
   45a6c:	3880004c 	andi	r2,r7,1
   45a70:	84800217 	ldw	r18,8(r16)
   45a74:	82000017 	ldw	r8,0(r16)
   45a78:	1000651e 	bne	r2,zero,45c10 <__sfvwrite_r+0x298>
   45a7c:	00a00034 	movhi	r2,32768
   45a80:	10bfff84 	addi	r2,r2,-2
   45a84:	00e00034 	movhi	r3,32768
   45a88:	d8800015 	stw	r2,0(sp)
   45a8c:	18bfffc4 	addi	r2,r3,-1
   45a90:	0039883a 	mov	fp,zero
   45a94:	0027883a 	mov	r19,zero
   45a98:	d8800115 	stw	r2,4(sp)
   45a9c:	98004026 	beq	r19,zero,45ba0 <__sfvwrite_r+0x228>
   45aa0:	3880800c 	andi	r2,r7,512
   45aa4:	10009626 	beq	r2,zero,45d00 <__sfvwrite_r+0x388>
   45aa8:	902d883a 	mov	r22,r18
   45aac:	9c80ba36 	bltu	r19,r18,45d98 <__sfvwrite_r+0x420>
   45ab0:	3881200c 	andi	r2,r7,1152
   45ab4:	10002526 	beq	r2,zero,45b4c <__sfvwrite_r+0x1d4>
   45ab8:	81000517 	ldw	r4,20(r16)
   45abc:	81400417 	ldw	r5,16(r16)
   45ac0:	98800044 	addi	r2,r19,1
   45ac4:	210000e4 	muli	r4,r4,3
   45ac8:	4165c83a 	sub	r18,r8,r5
   45acc:	1485883a 	add	r2,r2,r18
   45ad0:	2028d7fa 	srli	r20,r4,31
   45ad4:	a109883a 	add	r4,r20,r4
   45ad8:	2029d07a 	srai	r20,r4,1
   45adc:	a00d883a 	mov	r6,r20
   45ae0:	a080022e 	bgeu	r20,r2,45aec <__sfvwrite_r+0x174>
   45ae4:	1029883a 	mov	r20,r2
   45ae8:	100d883a 	mov	r6,r2
   45aec:	39c1000c 	andi	r7,r7,1024
   45af0:	3800bd26 	beq	r7,zero,45de8 <__sfvwrite_r+0x470>
   45af4:	a809883a 	mov	r4,r21
   45af8:	300b883a 	mov	r5,r6
   45afc:	00461d80 	call	461d8 <_malloc_r>
   45b00:	1009883a 	mov	r4,r2
   45b04:	1000c426 	beq	r2,zero,45e18 <__sfvwrite_r+0x4a0>
   45b08:	81400417 	ldw	r5,16(r16)
   45b0c:	900d883a 	mov	r6,r18
   45b10:	0046a880 	call	46a88 <memcpy>
   45b14:	1009883a 	mov	r4,r2
   45b18:	8080030b 	ldhu	r2,12(r16)
   45b1c:	00fedfc4 	movi	r3,-1153
   45b20:	10c4703a 	and	r2,r2,r3
   45b24:	10802014 	ori	r2,r2,128
   45b28:	8080030d 	sth	r2,12(r16)
   45b2c:	2491883a 	add	r8,r4,r18
   45b30:	a485c83a 	sub	r2,r20,r18
   45b34:	81000415 	stw	r4,16(r16)
   45b38:	82000015 	stw	r8,0(r16)
   45b3c:	85000515 	stw	r20,20(r16)
   45b40:	9825883a 	mov	r18,r19
   45b44:	80800215 	stw	r2,8(r16)
   45b48:	982d883a 	mov	r22,r19
   45b4c:	4009883a 	mov	r4,r8
   45b50:	b00d883a 	mov	r6,r22
   45b54:	e00b883a 	mov	r5,fp
   45b58:	0046b880 	call	46b88 <memmove>
   45b5c:	81000217 	ldw	r4,8(r16)
   45b60:	80800017 	ldw	r2,0(r16)
   45b64:	9829883a 	mov	r20,r19
   45b68:	24a5c83a 	sub	r18,r4,r18
   45b6c:	1585883a 	add	r2,r2,r22
   45b70:	84800215 	stw	r18,8(r16)
   45b74:	80800015 	stw	r2,0(r16)
   45b78:	0027883a 	mov	r19,zero
   45b7c:	b8800217 	ldw	r2,8(r23)
   45b80:	e539883a 	add	fp,fp,r20
   45b84:	1529c83a 	sub	r20,r2,r20
   45b88:	bd000215 	stw	r20,8(r23)
   45b8c:	a0000826 	beq	r20,zero,45bb0 <__sfvwrite_r+0x238>
   45b90:	81c0030b 	ldhu	r7,12(r16)
   45b94:	84800217 	ldw	r18,8(r16)
   45b98:	82000017 	ldw	r8,0(r16)
   45b9c:	983fc01e 	bne	r19,zero,45aa0 <__sfvwrite_r+0x128>
   45ba0:	8f000017 	ldw	fp,0(r17)
   45ba4:	8cc00117 	ldw	r19,4(r17)
   45ba8:	8c400204 	addi	r17,r17,8
   45bac:	003fbb06 	br	45a9c <__sfvwrite_r+0x124>
   45bb0:	0005883a 	mov	r2,zero
   45bb4:	dfc00b17 	ldw	ra,44(sp)
   45bb8:	df000a17 	ldw	fp,40(sp)
   45bbc:	ddc00917 	ldw	r23,36(sp)
   45bc0:	dd800817 	ldw	r22,32(sp)
   45bc4:	dd400717 	ldw	r21,28(sp)
   45bc8:	dd000617 	ldw	r20,24(sp)
   45bcc:	dcc00517 	ldw	r19,20(sp)
   45bd0:	dc800417 	ldw	r18,16(sp)
   45bd4:	dc400317 	ldw	r17,12(sp)
   45bd8:	dc000217 	ldw	r16,8(sp)
   45bdc:	dec00c04 	addi	sp,sp,48
   45be0:	f800283a 	ret
   45be4:	800b883a 	mov	r5,r16
   45be8:	a809883a 	mov	r4,r21
   45bec:	00450e00 	call	450e0 <_fflush_r>
   45bf0:	10002026 	beq	r2,zero,45c74 <__sfvwrite_r+0x2fc>
   45bf4:	8080030b 	ldhu	r2,12(r16)
   45bf8:	10801014 	ori	r2,r2,64
   45bfc:	8080030d 	sth	r2,12(r16)
   45c00:	00bfffc4 	movi	r2,-1
   45c04:	003feb06 	br	45bb4 <__sfvwrite_r+0x23c>
   45c08:	0005883a 	mov	r2,zero
   45c0c:	f800283a 	ret
   45c10:	002d883a 	mov	r22,zero
   45c14:	0027883a 	mov	r19,zero
   45c18:	0005883a 	mov	r2,zero
   45c1c:	0039883a 	mov	fp,zero
   45c20:	b0001d26 	beq	r22,zero,45c98 <__sfvwrite_r+0x320>
   45c24:	10002026 	beq	r2,zero,45ca8 <__sfvwrite_r+0x330>
   45c28:	9829883a 	mov	r20,r19
   45c2c:	b500012e 	bgeu	r22,r20,45c34 <__sfvwrite_r+0x2bc>
   45c30:	b029883a 	mov	r20,r22
   45c34:	80800417 	ldw	r2,16(r16)
   45c38:	81c00517 	ldw	r7,20(r16)
   45c3c:	1200022e 	bgeu	r2,r8,45c48 <__sfvwrite_r+0x2d0>
   45c40:	3ca5883a 	add	r18,r7,r18
   45c44:	95002216 	blt	r18,r20,45cd0 <__sfvwrite_r+0x358>
   45c48:	a1c05616 	blt	r20,r7,45da4 <__sfvwrite_r+0x42c>
   45c4c:	80800917 	ldw	r2,36(r16)
   45c50:	81400717 	ldw	r5,28(r16)
   45c54:	e00d883a 	mov	r6,fp
   45c58:	a809883a 	mov	r4,r21
   45c5c:	103ee83a 	callr	r2
   45c60:	1025883a 	mov	r18,r2
   45c64:	00bfe30e 	bge	zero,r2,45bf4 <__sfvwrite_r+0x27c>
   45c68:	9ca7c83a 	sub	r19,r19,r18
   45c6c:	983fdd26 	beq	r19,zero,45be4 <__sfvwrite_r+0x26c>
   45c70:	00800044 	movi	r2,1
   45c74:	b9800217 	ldw	r6,8(r23)
   45c78:	e4b9883a 	add	fp,fp,r18
   45c7c:	b4adc83a 	sub	r22,r22,r18
   45c80:	34a5c83a 	sub	r18,r6,r18
   45c84:	bc800215 	stw	r18,8(r23)
   45c88:	903fc926 	beq	r18,zero,45bb0 <__sfvwrite_r+0x238>
   45c8c:	84800217 	ldw	r18,8(r16)
   45c90:	82000017 	ldw	r8,0(r16)
   45c94:	b03fe31e 	bne	r22,zero,45c24 <__sfvwrite_r+0x2ac>
   45c98:	8d800117 	ldw	r22,4(r17)
   45c9c:	8f000017 	ldw	fp,0(r17)
   45ca0:	8c400204 	addi	r17,r17,8
   45ca4:	b03ffc26 	beq	r22,zero,45c98 <__sfvwrite_r+0x320>
   45ca8:	b00d883a 	mov	r6,r22
   45cac:	01400284 	movi	r5,10
   45cb0:	e009883a 	mov	r4,fp
   45cb4:	da000015 	stw	r8,0(sp)
   45cb8:	00469b80 	call	469b8 <memchr>
   45cbc:	da000017 	ldw	r8,0(sp)
   45cc0:	10004626 	beq	r2,zero,45ddc <__sfvwrite_r+0x464>
   45cc4:	10800044 	addi	r2,r2,1
   45cc8:	1727c83a 	sub	r19,r2,fp
   45ccc:	003fd606 	br	45c28 <__sfvwrite_r+0x2b0>
   45cd0:	e00b883a 	mov	r5,fp
   45cd4:	4009883a 	mov	r4,r8
   45cd8:	900d883a 	mov	r6,r18
   45cdc:	0046b880 	call	46b88 <memmove>
   45ce0:	80800017 	ldw	r2,0(r16)
   45ce4:	800b883a 	mov	r5,r16
   45ce8:	a809883a 	mov	r4,r21
   45cec:	1485883a 	add	r2,r2,r18
   45cf0:	80800015 	stw	r2,0(r16)
   45cf4:	00450e00 	call	450e0 <_fflush_r>
   45cf8:	103fdb26 	beq	r2,zero,45c68 <__sfvwrite_r+0x2f0>
   45cfc:	003fbd06 	br	45bf4 <__sfvwrite_r+0x27c>
   45d00:	80800417 	ldw	r2,16(r16)
   45d04:	12001136 	bltu	r2,r8,45d4c <__sfvwrite_r+0x3d4>
   45d08:	85000517 	ldw	r20,20(r16)
   45d0c:	9d000f36 	bltu	r19,r20,45d4c <__sfvwrite_r+0x3d4>
   45d10:	d8800017 	ldw	r2,0(sp)
   45d14:	14c02f2e 	bgeu	r2,r19,45dd4 <__sfvwrite_r+0x45c>
   45d18:	d9000117 	ldw	r4,4(sp)
   45d1c:	a00b883a 	mov	r5,r20
   45d20:	0040eb00 	call	40eb0 <__divsi3>
   45d24:	150f383a 	mul	r7,r2,r20
   45d28:	82000917 	ldw	r8,36(r16)
   45d2c:	81400717 	ldw	r5,28(r16)
   45d30:	e00d883a 	mov	r6,fp
   45d34:	a809883a 	mov	r4,r21
   45d38:	403ee83a 	callr	r8
   45d3c:	1029883a 	mov	r20,r2
   45d40:	00bfac0e 	bge	zero,r2,45bf4 <__sfvwrite_r+0x27c>
   45d44:	9d27c83a 	sub	r19,r19,r20
   45d48:	003f8c06 	br	45b7c <__sfvwrite_r+0x204>
   45d4c:	9029883a 	mov	r20,r18
   45d50:	9c80012e 	bgeu	r19,r18,45d58 <__sfvwrite_r+0x3e0>
   45d54:	9829883a 	mov	r20,r19
   45d58:	4009883a 	mov	r4,r8
   45d5c:	a00d883a 	mov	r6,r20
   45d60:	e00b883a 	mov	r5,fp
   45d64:	0046b880 	call	46b88 <memmove>
   45d68:	80800217 	ldw	r2,8(r16)
   45d6c:	81000017 	ldw	r4,0(r16)
   45d70:	1505c83a 	sub	r2,r2,r20
   45d74:	2509883a 	add	r4,r4,r20
   45d78:	80800215 	stw	r2,8(r16)
   45d7c:	81000015 	stw	r4,0(r16)
   45d80:	103ff01e 	bne	r2,zero,45d44 <__sfvwrite_r+0x3cc>
   45d84:	800b883a 	mov	r5,r16
   45d88:	a809883a 	mov	r4,r21
   45d8c:	00450e00 	call	450e0 <_fflush_r>
   45d90:	103fec26 	beq	r2,zero,45d44 <__sfvwrite_r+0x3cc>
   45d94:	003f9706 	br	45bf4 <__sfvwrite_r+0x27c>
   45d98:	9825883a 	mov	r18,r19
   45d9c:	982d883a 	mov	r22,r19
   45da0:	003f6a06 	br	45b4c <__sfvwrite_r+0x1d4>
   45da4:	4009883a 	mov	r4,r8
   45da8:	a00d883a 	mov	r6,r20
   45dac:	e00b883a 	mov	r5,fp
   45db0:	0046b880 	call	46b88 <memmove>
   45db4:	81000217 	ldw	r4,8(r16)
   45db8:	80800017 	ldw	r2,0(r16)
   45dbc:	a025883a 	mov	r18,r20
   45dc0:	2509c83a 	sub	r4,r4,r20
   45dc4:	1505883a 	add	r2,r2,r20
   45dc8:	81000215 	stw	r4,8(r16)
   45dcc:	80800015 	stw	r2,0(r16)
   45dd0:	003fa506 	br	45c68 <__sfvwrite_r+0x2f0>
   45dd4:	9809883a 	mov	r4,r19
   45dd8:	003fd006 	br	45d1c <__sfvwrite_r+0x3a4>
   45ddc:	b5000044 	addi	r20,r22,1
   45de0:	a027883a 	mov	r19,r20
   45de4:	003f9106 	br	45c2c <__sfvwrite_r+0x2b4>
   45de8:	a809883a 	mov	r4,r21
   45dec:	0047f040 	call	47f04 <_realloc_r>
   45df0:	1009883a 	mov	r4,r2
   45df4:	103f4d1e 	bne	r2,zero,45b2c <__sfvwrite_r+0x1b4>
   45df8:	81400417 	ldw	r5,16(r16)
   45dfc:	a809883a 	mov	r4,r21
   45e00:	004567c0 	call	4567c <_free_r>
   45e04:	8080030b 	ldhu	r2,12(r16)
   45e08:	00c00304 	movi	r3,12
   45e0c:	a8c00015 	stw	r3,0(r21)
   45e10:	10bfdfcc 	andi	r2,r2,65407
   45e14:	003f7806 	br	45bf8 <__sfvwrite_r+0x280>
   45e18:	00c00304 	movi	r3,12
   45e1c:	8080030b 	ldhu	r2,12(r16)
   45e20:	a8c00015 	stw	r3,0(r21)
   45e24:	003f7406 	br	45bf8 <__sfvwrite_r+0x280>
   45e28:	00bfffc4 	movi	r2,-1
   45e2c:	003f6106 	br	45bb4 <__sfvwrite_r+0x23c>

00045e30 <_fwalk>:
   45e30:	defffa04 	addi	sp,sp,-24
   45e34:	dd000415 	stw	r20,16(sp)
   45e38:	dcc00315 	stw	r19,12(sp)
   45e3c:	dc800215 	stw	r18,8(sp)
   45e40:	dfc00515 	stw	ra,20(sp)
   45e44:	dc400115 	stw	r17,4(sp)
   45e48:	dc000015 	stw	r16,0(sp)
   45e4c:	2827883a 	mov	r19,r5
   45e50:	2480b804 	addi	r18,r4,736
   45e54:	0029883a 	mov	r20,zero
   45e58:	94400117 	ldw	r17,4(r18)
   45e5c:	94000217 	ldw	r16,8(r18)
   45e60:	8c7fffc4 	addi	r17,r17,-1
   45e64:	88000d16 	blt	r17,zero,45e9c <_fwalk+0x6c>
   45e68:	8080030b 	ldhu	r2,12(r16)
   45e6c:	8c7fffc4 	addi	r17,r17,-1
   45e70:	108000b0 	cmpltui	r2,r2,2
   45e74:	1000061e 	bne	r2,zero,45e90 <_fwalk+0x60>
   45e78:	8080038f 	ldh	r2,14(r16)
   45e7c:	8009883a 	mov	r4,r16
   45e80:	10bfffe0 	cmpeqi	r2,r2,-1
   45e84:	1000021e 	bne	r2,zero,45e90 <_fwalk+0x60>
   45e88:	983ee83a 	callr	r19
   45e8c:	a0a8b03a 	or	r20,r20,r2
   45e90:	88bfffd8 	cmpnei	r2,r17,-1
   45e94:	84001a04 	addi	r16,r16,104
   45e98:	103ff31e 	bne	r2,zero,45e68 <_fwalk+0x38>
   45e9c:	94800017 	ldw	r18,0(r18)
   45ea0:	903fed1e 	bne	r18,zero,45e58 <_fwalk+0x28>
   45ea4:	a005883a 	mov	r2,r20
   45ea8:	dfc00517 	ldw	ra,20(sp)
   45eac:	dd000417 	ldw	r20,16(sp)
   45eb0:	dcc00317 	ldw	r19,12(sp)
   45eb4:	dc800217 	ldw	r18,8(sp)
   45eb8:	dc400117 	ldw	r17,4(sp)
   45ebc:	dc000017 	ldw	r16,0(sp)
   45ec0:	dec00604 	addi	sp,sp,24
   45ec4:	f800283a 	ret

00045ec8 <_fwalk_reent>:
   45ec8:	defff904 	addi	sp,sp,-28
   45ecc:	dd400515 	stw	r21,20(sp)
   45ed0:	dd000415 	stw	r20,16(sp)
   45ed4:	dcc00315 	stw	r19,12(sp)
   45ed8:	dc800215 	stw	r18,8(sp)
   45edc:	dfc00615 	stw	ra,24(sp)
   45ee0:	dc400115 	stw	r17,4(sp)
   45ee4:	dc000015 	stw	r16,0(sp)
   45ee8:	202b883a 	mov	r21,r4
   45eec:	2827883a 	mov	r19,r5
   45ef0:	2480b804 	addi	r18,r4,736
   45ef4:	0029883a 	mov	r20,zero
   45ef8:	94400117 	ldw	r17,4(r18)
   45efc:	94000217 	ldw	r16,8(r18)
   45f00:	8c7fffc4 	addi	r17,r17,-1
   45f04:	88000e16 	blt	r17,zero,45f40 <_fwalk_reent+0x78>
   45f08:	8080030b 	ldhu	r2,12(r16)
   45f0c:	8c7fffc4 	addi	r17,r17,-1
   45f10:	108000b0 	cmpltui	r2,r2,2
   45f14:	1000071e 	bne	r2,zero,45f34 <_fwalk_reent+0x6c>
   45f18:	8080038f 	ldh	r2,14(r16)
   45f1c:	800b883a 	mov	r5,r16
   45f20:	a809883a 	mov	r4,r21
   45f24:	10bfffe0 	cmpeqi	r2,r2,-1
   45f28:	1000021e 	bne	r2,zero,45f34 <_fwalk_reent+0x6c>
   45f2c:	983ee83a 	callr	r19
   45f30:	a0a8b03a 	or	r20,r20,r2
   45f34:	88bfffd8 	cmpnei	r2,r17,-1
   45f38:	84001a04 	addi	r16,r16,104
   45f3c:	103ff21e 	bne	r2,zero,45f08 <_fwalk_reent+0x40>
   45f40:	94800017 	ldw	r18,0(r18)
   45f44:	903fec1e 	bne	r18,zero,45ef8 <_fwalk_reent+0x30>
   45f48:	a005883a 	mov	r2,r20
   45f4c:	dfc00617 	ldw	ra,24(sp)
   45f50:	dd400517 	ldw	r21,20(sp)
   45f54:	dd000417 	ldw	r20,16(sp)
   45f58:	dcc00317 	ldw	r19,12(sp)
   45f5c:	dc800217 	ldw	r18,8(sp)
   45f60:	dc400117 	ldw	r17,4(sp)
   45f64:	dc000017 	ldw	r16,0(sp)
   45f68:	dec00704 	addi	sp,sp,28
   45f6c:	f800283a 	ret

00045f70 <__localeconv_l>:
   45f70:	20803c04 	addi	r2,r4,240
   45f74:	f800283a 	ret

00045f78 <_localeconv_r>:
   45f78:	00800174 	movhi	r2,5
   45f7c:	10830b04 	addi	r2,r2,3116
   45f80:	f800283a 	ret

00045f84 <localeconv>:
   45f84:	00800174 	movhi	r2,5
   45f88:	10830b04 	addi	r2,r2,3116
   45f8c:	f800283a 	ret

00045f90 <__smakebuf_r>:
   45f90:	2880030b 	ldhu	r2,12(r5)
   45f94:	deffe804 	addi	sp,sp,-96
   45f98:	dc001215 	stw	r16,72(sp)
   45f9c:	dfc01715 	stw	ra,92(sp)
   45fa0:	dd001615 	stw	r20,88(sp)
   45fa4:	dcc01515 	stw	r19,84(sp)
   45fa8:	dc801415 	stw	r18,80(sp)
   45fac:	dc401315 	stw	r17,76(sp)
   45fb0:	10c0008c 	andi	r3,r2,2
   45fb4:	2821883a 	mov	r16,r5
   45fb8:	18000d26 	beq	r3,zero,45ff0 <__smakebuf_r+0x60>
   45fbc:	288010c4 	addi	r2,r5,67
   45fc0:	28800015 	stw	r2,0(r5)
   45fc4:	28800415 	stw	r2,16(r5)
   45fc8:	00800044 	movi	r2,1
   45fcc:	28800515 	stw	r2,20(r5)
   45fd0:	dfc01717 	ldw	ra,92(sp)
   45fd4:	dd001617 	ldw	r20,88(sp)
   45fd8:	dcc01517 	ldw	r19,84(sp)
   45fdc:	dc801417 	ldw	r18,80(sp)
   45fe0:	dc401317 	ldw	r17,76(sp)
   45fe4:	dc001217 	ldw	r16,72(sp)
   45fe8:	dec01804 	addi	sp,sp,96
   45fec:	f800283a 	ret
   45ff0:	2940038f 	ldh	r5,14(r5)
   45ff4:	2023883a 	mov	r17,r4
   45ff8:	28002816 	blt	r5,zero,4609c <__smakebuf_r+0x10c>
   45ffc:	d80d883a 	mov	r6,sp
   46000:	004a0fc0 	call	4a0fc <_fstat_r>
   46004:	10002416 	blt	r2,zero,46098 <__smakebuf_r+0x108>
   46008:	d8800117 	ldw	r2,4(sp)
   4600c:	10bc000c 	andi	r2,r2,61440
   46010:	10880018 	cmpnei	r2,r2,8192
   46014:	1000461e 	bne	r2,zero,46130 <__smakebuf_r+0x1a0>
   46018:	8140038f 	ldh	r5,14(r16)
   4601c:	8809883a 	mov	r4,r17
   46020:	004a15c0 	call	4a15c <_isatty_r>
   46024:	10003e26 	beq	r2,zero,46120 <__smakebuf_r+0x190>
   46028:	8080030b 	ldhu	r2,12(r16)
   4602c:	80c010c4 	addi	r3,r16,67
   46030:	80c00015 	stw	r3,0(r16)
   46034:	10800054 	ori	r2,r2,1
   46038:	8080030d 	sth	r2,12(r16)
   4603c:	00800044 	movi	r2,1
   46040:	80c00415 	stw	r3,16(r16)
   46044:	80800515 	stw	r2,20(r16)
   46048:	04c00044 	movi	r19,1
   4604c:	05010004 	movi	r20,1024
   46050:	04820004 	movi	r18,2048
   46054:	a00b883a 	mov	r5,r20
   46058:	8809883a 	mov	r4,r17
   4605c:	00461d80 	call	461d8 <_malloc_r>
   46060:	10001726 	beq	r2,zero,460c0 <__smakebuf_r+0x130>
   46064:	80c0030b 	ldhu	r3,12(r16)
   46068:	01000134 	movhi	r4,4
   4606c:	21147304 	addi	r4,r4,20940
   46070:	89000f15 	stw	r4,60(r17)
   46074:	18c02014 	ori	r3,r3,128
   46078:	80c0030d 	sth	r3,12(r16)
   4607c:	80800015 	stw	r2,0(r16)
   46080:	80800415 	stw	r2,16(r16)
   46084:	85000515 	stw	r20,20(r16)
   46088:	98001d1e 	bne	r19,zero,46100 <__smakebuf_r+0x170>
   4608c:	90c6b03a 	or	r3,r18,r3
   46090:	80c0030d 	sth	r3,12(r16)
   46094:	003fce06 	br	45fd0 <__smakebuf_r+0x40>
   46098:	8080030b 	ldhu	r2,12(r16)
   4609c:	1080200c 	andi	r2,r2,128
   460a0:	0027883a 	mov	r19,zero
   460a4:	10001326 	beq	r2,zero,460f4 <__smakebuf_r+0x164>
   460a8:	05001004 	movi	r20,64
   460ac:	a00b883a 	mov	r5,r20
   460b0:	8809883a 	mov	r4,r17
   460b4:	0025883a 	mov	r18,zero
   460b8:	00461d80 	call	461d8 <_malloc_r>
   460bc:	103fe91e 	bne	r2,zero,46064 <__smakebuf_r+0xd4>
   460c0:	8080030b 	ldhu	r2,12(r16)
   460c4:	10c0800c 	andi	r3,r2,512
   460c8:	183fc11e 	bne	r3,zero,45fd0 <__smakebuf_r+0x40>
   460cc:	00ffff04 	movi	r3,-4
   460d0:	10c4703a 	and	r2,r2,r3
   460d4:	10800094 	ori	r2,r2,2
   460d8:	80c010c4 	addi	r3,r16,67
   460dc:	8080030d 	sth	r2,12(r16)
   460e0:	00800044 	movi	r2,1
   460e4:	80c00015 	stw	r3,0(r16)
   460e8:	80c00415 	stw	r3,16(r16)
   460ec:	80800515 	stw	r2,20(r16)
   460f0:	003fb706 	br	45fd0 <__smakebuf_r+0x40>
   460f4:	05010004 	movi	r20,1024
   460f8:	0025883a 	mov	r18,zero
   460fc:	003fd506 	br	46054 <__smakebuf_r+0xc4>
   46100:	8140038f 	ldh	r5,14(r16)
   46104:	8809883a 	mov	r4,r17
   46108:	004a15c0 	call	4a15c <_isatty_r>
   4610c:	80c0030b 	ldhu	r3,12(r16)
   46110:	103fde26 	beq	r2,zero,4608c <__smakebuf_r+0xfc>
   46114:	18ffff0c 	andi	r3,r3,65532
   46118:	18c00054 	ori	r3,r3,1
   4611c:	003fdb06 	br	4608c <__smakebuf_r+0xfc>
   46120:	04c00044 	movi	r19,1
   46124:	05010004 	movi	r20,1024
   46128:	04820004 	movi	r18,2048
   4612c:	003fc906 	br	46054 <__smakebuf_r+0xc4>
   46130:	0027883a 	mov	r19,zero
   46134:	05010004 	movi	r20,1024
   46138:	04820004 	movi	r18,2048
   4613c:	003fc506 	br	46054 <__smakebuf_r+0xc4>

00046140 <__swhatbuf_r>:
   46140:	deffea04 	addi	sp,sp,-88
   46144:	dc001215 	stw	r16,72(sp)
   46148:	2821883a 	mov	r16,r5
   4614c:	2940038f 	ldh	r5,14(r5)
   46150:	dc801415 	stw	r18,80(sp)
   46154:	dc401315 	stw	r17,76(sp)
   46158:	dfc01515 	stw	ra,84(sp)
   4615c:	3023883a 	mov	r17,r6
   46160:	3825883a 	mov	r18,r7
   46164:	28001016 	blt	r5,zero,461a8 <__swhatbuf_r+0x68>
   46168:	d80d883a 	mov	r6,sp
   4616c:	004a0fc0 	call	4a0fc <_fstat_r>
   46170:	10000d16 	blt	r2,zero,461a8 <__swhatbuf_r+0x68>
   46174:	d8c00117 	ldw	r3,4(sp)
   46178:	00820004 	movi	r2,2048
   4617c:	18fc000c 	andi	r3,r3,61440
   46180:	18c80020 	cmpeqi	r3,r3,8192
   46184:	90c00015 	stw	r3,0(r18)
   46188:	00c10004 	movi	r3,1024
   4618c:	88c00015 	stw	r3,0(r17)
   46190:	dfc01517 	ldw	ra,84(sp)
   46194:	dc801417 	ldw	r18,80(sp)
   46198:	dc401317 	ldw	r17,76(sp)
   4619c:	dc001217 	ldw	r16,72(sp)
   461a0:	dec01604 	addi	sp,sp,88
   461a4:	f800283a 	ret
   461a8:	8080030b 	ldhu	r2,12(r16)
   461ac:	90000015 	stw	zero,0(r18)
   461b0:	1080200c 	andi	r2,r2,128
   461b4:	10000426 	beq	r2,zero,461c8 <__swhatbuf_r+0x88>
   461b8:	00801004 	movi	r2,64
   461bc:	88800015 	stw	r2,0(r17)
   461c0:	0005883a 	mov	r2,zero
   461c4:	003ff206 	br	46190 <__swhatbuf_r+0x50>
   461c8:	00810004 	movi	r2,1024
   461cc:	88800015 	stw	r2,0(r17)
   461d0:	0005883a 	mov	r2,zero
   461d4:	003fee06 	br	46190 <__swhatbuf_r+0x50>

000461d8 <_malloc_r>:
   461d8:	defff604 	addi	sp,sp,-40
   461dc:	dc400115 	stw	r17,4(sp)
   461e0:	2c4002c4 	addi	r17,r5,11
   461e4:	dc800215 	stw	r18,8(sp)
   461e8:	dfc00915 	stw	ra,36(sp)
   461ec:	df000815 	stw	fp,32(sp)
   461f0:	ddc00715 	stw	r23,28(sp)
   461f4:	dd800615 	stw	r22,24(sp)
   461f8:	dd400515 	stw	r21,20(sp)
   461fc:	dd000415 	stw	r20,16(sp)
   46200:	dcc00315 	stw	r19,12(sp)
   46204:	dc000015 	stw	r16,0(sp)
   46208:	888005e8 	cmpgeui	r2,r17,23
   4620c:	2025883a 	mov	r18,r4
   46210:	10001b1e 	bne	r2,zero,46280 <_malloc_r+0xa8>
   46214:	29400468 	cmpgeui	r5,r5,17
   46218:	2800821e 	bne	r5,zero,46424 <_malloc_r+0x24c>
   4621c:	004daf80 	call	4daf8 <__malloc_lock>
   46220:	04400404 	movi	r17,16
   46224:	00800604 	movi	r2,24
   46228:	01c00084 	movi	r7,2
   4622c:	04c00174 	movhi	r19,5
   46230:	9cc1cd04 	addi	r19,r19,1844
   46234:	9885883a 	add	r2,r19,r2
   46238:	14000117 	ldw	r16,4(r2)
   4623c:	10fffe04 	addi	r3,r2,-8
   46240:	80c08b26 	beq	r16,r3,46470 <_malloc_r+0x298>
   46244:	80800117 	ldw	r2,4(r16)
   46248:	81000317 	ldw	r4,12(r16)
   4624c:	00ffff04 	movi	r3,-4
   46250:	10c4703a 	and	r2,r2,r3
   46254:	81400217 	ldw	r5,8(r16)
   46258:	8085883a 	add	r2,r16,r2
   4625c:	10c00117 	ldw	r3,4(r2)
   46260:	29000315 	stw	r4,12(r5)
   46264:	21400215 	stw	r5,8(r4)
   46268:	18c00054 	ori	r3,r3,1
   4626c:	10c00115 	stw	r3,4(r2)
   46270:	9009883a 	mov	r4,r18
   46274:	004db1c0 	call	4db1c <__malloc_unlock>
   46278:	80800204 	addi	r2,r16,8
   4627c:	00006c06 	br	46430 <_malloc_r+0x258>
   46280:	00bffe04 	movi	r2,-8
   46284:	88a2703a 	and	r17,r17,r2
   46288:	88006616 	blt	r17,zero,46424 <_malloc_r+0x24c>
   4628c:	89406536 	bltu	r17,r5,46424 <_malloc_r+0x24c>
   46290:	004daf80 	call	4daf8 <__malloc_lock>
   46294:	88807e28 	cmpgeui	r2,r17,504
   46298:	10012226 	beq	r2,zero,46724 <_malloc_r+0x54c>
   4629c:	8804d27a 	srli	r2,r17,9
   462a0:	10006f26 	beq	r2,zero,46460 <_malloc_r+0x288>
   462a4:	10c00168 	cmpgeui	r3,r2,5
   462a8:	1800fe1e 	bne	r3,zero,466a4 <_malloc_r+0x4cc>
   462ac:	8804d1ba 	srli	r2,r17,6
   462b0:	11c00e44 	addi	r7,r2,57
   462b4:	380890fa 	slli	r4,r7,3
   462b8:	12000e04 	addi	r8,r2,56
   462bc:	04c00174 	movhi	r19,5
   462c0:	9cc1cd04 	addi	r19,r19,1844
   462c4:	9909883a 	add	r4,r19,r4
   462c8:	24000117 	ldw	r16,4(r4)
   462cc:	213ffe04 	addi	r4,r4,-8
   462d0:	24000b26 	beq	r4,r16,46300 <_malloc_r+0x128>
   462d4:	01bfff04 	movi	r6,-4
   462d8:	00000306 	br	462e8 <_malloc_r+0x110>
   462dc:	1800d60e 	bge	r3,zero,46638 <_malloc_r+0x460>
   462e0:	84000317 	ldw	r16,12(r16)
   462e4:	24000626 	beq	r4,r16,46300 <_malloc_r+0x128>
   462e8:	80800117 	ldw	r2,4(r16)
   462ec:	1184703a 	and	r2,r2,r6
   462f0:	1447c83a 	sub	r3,r2,r17
   462f4:	19400408 	cmpgei	r5,r3,16
   462f8:	283ff826 	beq	r5,zero,462dc <_malloc_r+0x104>
   462fc:	400f883a 	mov	r7,r8
   46300:	9c000417 	ldw	r16,16(r19)
   46304:	02400174 	movhi	r9,5
   46308:	4a41cf04 	addi	r9,r9,1852
   4630c:	82405f26 	beq	r16,r9,4648c <_malloc_r+0x2b4>
   46310:	80c00117 	ldw	r3,4(r16)
   46314:	00bfff04 	movi	r2,-4
   46318:	1884703a 	and	r2,r3,r2
   4631c:	1447c83a 	sub	r3,r2,r17
   46320:	19000410 	cmplti	r4,r3,16
   46324:	20010a26 	beq	r4,zero,46750 <_malloc_r+0x578>
   46328:	9a400515 	stw	r9,20(r19)
   4632c:	9a400415 	stw	r9,16(r19)
   46330:	1800ff0e 	bge	r3,zero,46730 <_malloc_r+0x558>
   46334:	10c08028 	cmpgeui	r3,r2,512
   46338:	1800c11e 	bne	r3,zero,46640 <_malloc_r+0x468>
   4633c:	1006d0fa 	srli	r3,r2,3
   46340:	1008d17a 	srli	r4,r2,5
   46344:	00800044 	movi	r2,1
   46348:	18c00044 	addi	r3,r3,1
   4634c:	180690fa 	slli	r3,r3,3
   46350:	99400117 	ldw	r5,4(r19)
   46354:	1104983a 	sll	r2,r2,r4
   46358:	98c7883a 	add	r3,r19,r3
   4635c:	19000017 	ldw	r4,0(r3)
   46360:	1144b03a 	or	r2,r2,r5
   46364:	197ffe04 	addi	r5,r3,-8
   46368:	81400315 	stw	r5,12(r16)
   4636c:	81000215 	stw	r4,8(r16)
   46370:	98800115 	stw	r2,4(r19)
   46374:	1c000015 	stw	r16,0(r3)
   46378:	24000315 	stw	r16,12(r4)
   4637c:	3807d0ba 	srai	r3,r7,2
   46380:	01000044 	movi	r4,1
   46384:	20c8983a 	sll	r4,r4,r3
   46388:	11004536 	bltu	r2,r4,464a0 <_malloc_r+0x2c8>
   4638c:	2086703a 	and	r3,r4,r2
   46390:	18000a1e 	bne	r3,zero,463bc <_malloc_r+0x1e4>
   46394:	00ffff04 	movi	r3,-4
   46398:	2109883a 	add	r4,r4,r4
   4639c:	38ce703a 	and	r7,r7,r3
   463a0:	2086703a 	and	r3,r4,r2
   463a4:	39c00104 	addi	r7,r7,4
   463a8:	1800041e 	bne	r3,zero,463bc <_malloc_r+0x1e4>
   463ac:	2109883a 	add	r4,r4,r4
   463b0:	2086703a 	and	r3,r4,r2
   463b4:	39c00104 	addi	r7,r7,4
   463b8:	183ffc26 	beq	r3,zero,463ac <_malloc_r+0x1d4>
   463bc:	02bfff04 	movi	r10,-4
   463c0:	381690fa 	slli	r11,r7,3
   463c4:	3819883a 	mov	r12,r7
   463c8:	9ad7883a 	add	r11,r19,r11
   463cc:	5811883a 	mov	r8,r11
   463d0:	40800317 	ldw	r2,12(r8)
   463d4:	4080bc26 	beq	r8,r2,466c8 <_malloc_r+0x4f0>
   463d8:	10c00117 	ldw	r3,4(r2)
   463dc:	1021883a 	mov	r16,r2
   463e0:	10800317 	ldw	r2,12(r2)
   463e4:	1a86703a 	and	r3,r3,r10
   463e8:	1c4bc83a 	sub	r5,r3,r17
   463ec:	29800410 	cmplti	r6,r5,16
   463f0:	3000ba26 	beq	r6,zero,466dc <_malloc_r+0x504>
   463f4:	283ff716 	blt	r5,zero,463d4 <_malloc_r+0x1fc>
   463f8:	80c7883a 	add	r3,r16,r3
   463fc:	19400117 	ldw	r5,4(r3)
   46400:	81800217 	ldw	r6,8(r16)
   46404:	9009883a 	mov	r4,r18
   46408:	29400054 	ori	r5,r5,1
   4640c:	19400115 	stw	r5,4(r3)
   46410:	30800315 	stw	r2,12(r6)
   46414:	11800215 	stw	r6,8(r2)
   46418:	004db1c0 	call	4db1c <__malloc_unlock>
   4641c:	80800204 	addi	r2,r16,8
   46420:	00000306 	br	46430 <_malloc_r+0x258>
   46424:	00800304 	movi	r2,12
   46428:	90800015 	stw	r2,0(r18)
   4642c:	0005883a 	mov	r2,zero
   46430:	dfc00917 	ldw	ra,36(sp)
   46434:	df000817 	ldw	fp,32(sp)
   46438:	ddc00717 	ldw	r23,28(sp)
   4643c:	dd800617 	ldw	r22,24(sp)
   46440:	dd400517 	ldw	r21,20(sp)
   46444:	dd000417 	ldw	r20,16(sp)
   46448:	dcc00317 	ldw	r19,12(sp)
   4644c:	dc800217 	ldw	r18,8(sp)
   46450:	dc400117 	ldw	r17,4(sp)
   46454:	dc000017 	ldw	r16,0(sp)
   46458:	dec00a04 	addi	sp,sp,40
   4645c:	f800283a 	ret
   46460:	01008004 	movi	r4,512
   46464:	01c01004 	movi	r7,64
   46468:	02000fc4 	movi	r8,63
   4646c:	003f9306 	br	462bc <_malloc_r+0xe4>
   46470:	14000317 	ldw	r16,12(r2)
   46474:	39c00084 	addi	r7,r7,2
   46478:	143f721e 	bne	r2,r16,46244 <_malloc_r+0x6c>
   4647c:	9c000417 	ldw	r16,16(r19)
   46480:	02400174 	movhi	r9,5
   46484:	4a41cf04 	addi	r9,r9,1852
   46488:	827fa11e 	bne	r16,r9,46310 <_malloc_r+0x138>
   4648c:	3807d0ba 	srai	r3,r7,2
   46490:	01000044 	movi	r4,1
   46494:	98800117 	ldw	r2,4(r19)
   46498:	20c8983a 	sll	r4,r4,r3
   4649c:	113fbb2e 	bgeu	r2,r4,4638c <_malloc_r+0x1b4>
   464a0:	9c000217 	ldw	r16,8(r19)
   464a4:	00bfff04 	movi	r2,-4
   464a8:	85400117 	ldw	r21,4(r16)
   464ac:	a8ac703a 	and	r22,r21,r2
   464b0:	b4400336 	bltu	r22,r17,464c0 <_malloc_r+0x2e8>
   464b4:	b445c83a 	sub	r2,r22,r17
   464b8:	10c00408 	cmpgei	r3,r2,16
   464bc:	1800541e 	bne	r3,zero,46610 <_malloc_r+0x438>
   464c0:	00800174 	movhi	r2,5
   464c4:	1087ae17 	ldw	r2,7864(r2)
   464c8:	00c00174 	movhi	r3,5
   464cc:	1d4eb217 	ldw	r21,15048(r3)
   464d0:	10bfffd8 	cmpnei	r2,r2,-1
   464d4:	85b9883a 	add	fp,r16,r22
   464d8:	8d6b883a 	add	r21,r17,r21
   464dc:	1000d626 	beq	r2,zero,46838 <_malloc_r+0x660>
   464e0:	ad4403c4 	addi	r21,r21,4111
   464e4:	00bc0004 	movi	r2,-4096
   464e8:	a8aa703a 	and	r21,r21,r2
   464ec:	a80b883a 	mov	r5,r21
   464f0:	9009883a 	mov	r4,r18
   464f4:	00484680 	call	48468 <_sbrk_r>
   464f8:	102f883a 	mov	r23,r2
   464fc:	10bfffd8 	cmpnei	r2,r2,-1
   46500:	1000a826 	beq	r2,zero,467a4 <_malloc_r+0x5cc>
   46504:	bf00a636 	bltu	r23,fp,467a0 <_malloc_r+0x5c8>
   46508:	00800174 	movhi	r2,5
   4650c:	150ebc17 	ldw	r20,15088(r2)
   46510:	ad29883a 	add	r20,r21,r20
   46514:	150ebc15 	stw	r20,15088(r2)
   46518:	a007883a 	mov	r3,r20
   4651c:	e5c0ec26 	beq	fp,r23,468d0 <_malloc_r+0x6f8>
   46520:	00800174 	movhi	r2,5
   46524:	1087ae17 	ldw	r2,7864(r2)
   46528:	10bfffd8 	cmpnei	r2,r2,-1
   4652c:	1000ef26 	beq	r2,zero,468ec <_malloc_r+0x714>
   46530:	bf39c83a 	sub	fp,r23,fp
   46534:	e0c7883a 	add	r3,fp,r3
   46538:	00800174 	movhi	r2,5
   4653c:	10cebc15 	stw	r3,15088(r2)
   46540:	bf0001cc 	andi	fp,r23,7
   46544:	e000c526 	beq	fp,zero,4685c <_malloc_r+0x684>
   46548:	bf2fc83a 	sub	r23,r23,fp
   4654c:	bdc00204 	addi	r23,r23,8
   46550:	05040204 	movi	r20,4104
   46554:	a729c83a 	sub	r20,r20,fp
   46558:	bd6b883a 	add	r21,r23,r21
   4655c:	a569c83a 	sub	r20,r20,r21
   46560:	a503ffcc 	andi	r20,r20,4095
   46564:	a00b883a 	mov	r5,r20
   46568:	9009883a 	mov	r4,r18
   4656c:	00484680 	call	48468 <_sbrk_r>
   46570:	10ffffe0 	cmpeqi	r3,r2,-1
   46574:	1800f31e 	bne	r3,zero,46944 <_malloc_r+0x76c>
   46578:	15c5c83a 	sub	r2,r2,r23
   4657c:	152b883a 	add	r21,r2,r20
   46580:	00800174 	movhi	r2,5
   46584:	114ebc17 	ldw	r5,15088(r2)
   46588:	9dc00215 	stw	r23,8(r19)
   4658c:	ad400054 	ori	r21,r21,1
   46590:	a169883a 	add	r20,r20,r5
   46594:	150ebc15 	stw	r20,15088(r2)
   46598:	bd400115 	stw	r21,4(r23)
   4659c:	84c0d626 	beq	r16,r19,468f8 <_malloc_r+0x720>
   465a0:	b0800428 	cmpgeui	r2,r22,16
   465a4:	1000d626 	beq	r2,zero,46900 <_malloc_r+0x728>
   465a8:	80c00117 	ldw	r3,4(r16)
   465ac:	013ffe04 	movi	r4,-8
   465b0:	b0bffd04 	addi	r2,r22,-12
   465b4:	1104703a 	and	r2,r2,r4
   465b8:	18c0004c 	andi	r3,r3,1
   465bc:	1886b03a 	or	r3,r3,r2
   465c0:	80c00115 	stw	r3,4(r16)
   465c4:	01000144 	movi	r4,5
   465c8:	8087883a 	add	r3,r16,r2
   465cc:	19000115 	stw	r4,4(r3)
   465d0:	19000215 	stw	r4,8(r3)
   465d4:	10800428 	cmpgeui	r2,r2,16
   465d8:	1000df1e 	bne	r2,zero,46958 <_malloc_r+0x780>
   465dc:	bd400117 	ldw	r21,4(r23)
   465e0:	b821883a 	mov	r16,r23
   465e4:	00800174 	movhi	r2,5
   465e8:	108eb117 	ldw	r2,15044(r2)
   465ec:	1500022e 	bgeu	r2,r20,465f8 <_malloc_r+0x420>
   465f0:	00800174 	movhi	r2,5
   465f4:	150eb115 	stw	r20,15044(r2)
   465f8:	00800174 	movhi	r2,5
   465fc:	108eb017 	ldw	r2,15040(r2)
   46600:	15006a2e 	bgeu	r2,r20,467ac <_malloc_r+0x5d4>
   46604:	00800174 	movhi	r2,5
   46608:	150eb015 	stw	r20,15040(r2)
   4660c:	00006706 	br	467ac <_malloc_r+0x5d4>
   46610:	88c00054 	ori	r3,r17,1
   46614:	80c00115 	stw	r3,4(r16)
   46618:	8463883a 	add	r17,r16,r17
   4661c:	10800054 	ori	r2,r2,1
   46620:	9c400215 	stw	r17,8(r19)
   46624:	88800115 	stw	r2,4(r17)
   46628:	9009883a 	mov	r4,r18
   4662c:	004db1c0 	call	4db1c <__malloc_unlock>
   46630:	80800204 	addi	r2,r16,8
   46634:	003f7e06 	br	46430 <_malloc_r+0x258>
   46638:	81000317 	ldw	r4,12(r16)
   4663c:	003f0506 	br	46254 <_malloc_r+0x7c>
   46640:	1006d27a 	srli	r3,r2,9
   46644:	19000168 	cmpgeui	r4,r3,5
   46648:	20005026 	beq	r4,zero,4678c <_malloc_r+0x5b4>
   4664c:	19000568 	cmpgeui	r4,r3,21
   46650:	20008c1e 	bne	r4,zero,46884 <_malloc_r+0x6ac>
   46654:	19401704 	addi	r5,r3,92
   46658:	280a90fa 	slli	r5,r5,3
   4665c:	190016c4 	addi	r4,r3,91
   46660:	994b883a 	add	r5,r19,r5
   46664:	28c00017 	ldw	r3,0(r5)
   46668:	297ffe04 	addi	r5,r5,-8
   4666c:	28c07426 	beq	r5,r3,46840 <_malloc_r+0x668>
   46670:	01bfff04 	movi	r6,-4
   46674:	19000117 	ldw	r4,4(r3)
   46678:	2188703a 	and	r4,r4,r6
   4667c:	1100022e 	bgeu	r2,r4,46688 <_malloc_r+0x4b0>
   46680:	18c00217 	ldw	r3,8(r3)
   46684:	28fffb1e 	bne	r5,r3,46674 <_malloc_r+0x49c>
   46688:	19400317 	ldw	r5,12(r3)
   4668c:	98800117 	ldw	r2,4(r19)
   46690:	81400315 	stw	r5,12(r16)
   46694:	80c00215 	stw	r3,8(r16)
   46698:	2c000215 	stw	r16,8(r5)
   4669c:	1c000315 	stw	r16,12(r3)
   466a0:	003f3606 	br	4637c <_malloc_r+0x1a4>
   466a4:	10c00568 	cmpgeui	r3,r2,21
   466a8:	18004a26 	beq	r3,zero,467d4 <_malloc_r+0x5fc>
   466ac:	10c01568 	cmpgeui	r3,r2,85
   466b0:	18007b1e 	bne	r3,zero,468a0 <_malloc_r+0x6c8>
   466b4:	8804d33a 	srli	r2,r17,12
   466b8:	11c01bc4 	addi	r7,r2,111
   466bc:	380890fa 	slli	r4,r7,3
   466c0:	12001b84 	addi	r8,r2,110
   466c4:	003efd06 	br	462bc <_malloc_r+0xe4>
   466c8:	63000044 	addi	r12,r12,1
   466cc:	608000cc 	andi	r2,r12,3
   466d0:	42000204 	addi	r8,r8,8
   466d4:	103f3e1e 	bne	r2,zero,463d0 <_malloc_r+0x1f8>
   466d8:	00004506 	br	467f0 <_malloc_r+0x618>
   466dc:	81000217 	ldw	r4,8(r16)
   466e0:	89800054 	ori	r6,r17,1
   466e4:	81800115 	stw	r6,4(r16)
   466e8:	20800315 	stw	r2,12(r4)
   466ec:	11000215 	stw	r4,8(r2)
   466f0:	8463883a 	add	r17,r16,r17
   466f4:	9c400515 	stw	r17,20(r19)
   466f8:	9c400415 	stw	r17,16(r19)
   466fc:	28800054 	ori	r2,r5,1
   46700:	88800115 	stw	r2,4(r17)
   46704:	8a400315 	stw	r9,12(r17)
   46708:	8a400215 	stw	r9,8(r17)
   4670c:	80c7883a 	add	r3,r16,r3
   46710:	19400015 	stw	r5,0(r3)
   46714:	9009883a 	mov	r4,r18
   46718:	004db1c0 	call	4db1c <__malloc_unlock>
   4671c:	80800204 	addi	r2,r16,8
   46720:	003f4306 	br	46430 <_malloc_r+0x258>
   46724:	880ed0fa 	srli	r7,r17,3
   46728:	88800204 	addi	r2,r17,8
   4672c:	003ebf06 	br	4622c <_malloc_r+0x54>
   46730:	8085883a 	add	r2,r16,r2
   46734:	10c00117 	ldw	r3,4(r2)
   46738:	9009883a 	mov	r4,r18
   4673c:	18c00054 	ori	r3,r3,1
   46740:	10c00115 	stw	r3,4(r2)
   46744:	004db1c0 	call	4db1c <__malloc_unlock>
   46748:	80800204 	addi	r2,r16,8
   4674c:	003f3806 	br	46430 <_malloc_r+0x258>
   46750:	89000054 	ori	r4,r17,1
   46754:	81000115 	stw	r4,4(r16)
   46758:	8463883a 	add	r17,r16,r17
   4675c:	9c400515 	stw	r17,20(r19)
   46760:	9c400415 	stw	r17,16(r19)
   46764:	19000054 	ori	r4,r3,1
   46768:	89000115 	stw	r4,4(r17)
   4676c:	8085883a 	add	r2,r16,r2
   46770:	8a400315 	stw	r9,12(r17)
   46774:	8a400215 	stw	r9,8(r17)
   46778:	10c00015 	stw	r3,0(r2)
   4677c:	9009883a 	mov	r4,r18
   46780:	004db1c0 	call	4db1c <__malloc_unlock>
   46784:	80800204 	addi	r2,r16,8
   46788:	003f2906 	br	46430 <_malloc_r+0x258>
   4678c:	1006d1ba 	srli	r3,r2,6
   46790:	19400e44 	addi	r5,r3,57
   46794:	280a90fa 	slli	r5,r5,3
   46798:	19000e04 	addi	r4,r3,56
   4679c:	003fb006 	br	46660 <_malloc_r+0x488>
   467a0:	84c04626 	beq	r16,r19,468bc <_malloc_r+0x6e4>
   467a4:	9c000217 	ldw	r16,8(r19)
   467a8:	85400117 	ldw	r21,4(r16)
   467ac:	00bfff04 	movi	r2,-4
   467b0:	a8aa703a 	and	r21,r21,r2
   467b4:	ac45c83a 	sub	r2,r21,r17
   467b8:	ac400236 	bltu	r21,r17,467c4 <_malloc_r+0x5ec>
   467bc:	10c00408 	cmpgei	r3,r2,16
   467c0:	183f931e 	bne	r3,zero,46610 <_malloc_r+0x438>
   467c4:	9009883a 	mov	r4,r18
   467c8:	004db1c0 	call	4db1c <__malloc_unlock>
   467cc:	0005883a 	mov	r2,zero
   467d0:	003f1706 	br	46430 <_malloc_r+0x258>
   467d4:	11c01704 	addi	r7,r2,92
   467d8:	380890fa 	slli	r4,r7,3
   467dc:	120016c4 	addi	r8,r2,91
   467e0:	003eb606 	br	462bc <_malloc_r+0xe4>
   467e4:	58800217 	ldw	r2,8(r11)
   467e8:	39ffffc4 	addi	r7,r7,-1
   467ec:	12c0701e 	bne	r2,r11,469b0 <_malloc_r+0x7d8>
   467f0:	388000cc 	andi	r2,r7,3
   467f4:	5afffe04 	addi	r11,r11,-8
   467f8:	103ffa1e 	bne	r2,zero,467e4 <_malloc_r+0x60c>
   467fc:	98c00117 	ldw	r3,4(r19)
   46800:	0104303a 	nor	r2,zero,r4
   46804:	10c4703a 	and	r2,r2,r3
   46808:	98800115 	stw	r2,4(r19)
   4680c:	2109883a 	add	r4,r4,r4
   46810:	113f2336 	bltu	r2,r4,464a0 <_malloc_r+0x2c8>
   46814:	203f2226 	beq	r4,zero,464a0 <_malloc_r+0x2c8>
   46818:	2086703a 	and	r3,r4,r2
   4681c:	1800041e 	bne	r3,zero,46830 <_malloc_r+0x658>
   46820:	2109883a 	add	r4,r4,r4
   46824:	2086703a 	and	r3,r4,r2
   46828:	63000104 	addi	r12,r12,4
   4682c:	183ffc26 	beq	r3,zero,46820 <_malloc_r+0x648>
   46830:	600f883a 	mov	r7,r12
   46834:	003ee206 	br	463c0 <_malloc_r+0x1e8>
   46838:	ad400404 	addi	r21,r21,16
   4683c:	003f2b06 	br	464ec <_malloc_r+0x314>
   46840:	2009d0ba 	srai	r4,r4,2
   46844:	00800044 	movi	r2,1
   46848:	99800117 	ldw	r6,4(r19)
   4684c:	1104983a 	sll	r2,r2,r4
   46850:	1184b03a 	or	r2,r2,r6
   46854:	98800115 	stw	r2,4(r19)
   46858:	003f8d06 	br	46690 <_malloc_r+0x4b8>
   4685c:	bd69883a 	add	r20,r23,r21
   46860:	0529c83a 	sub	r20,zero,r20
   46864:	a503ffcc 	andi	r20,r20,4095
   46868:	a00b883a 	mov	r5,r20
   4686c:	9009883a 	mov	r4,r18
   46870:	00484680 	call	48468 <_sbrk_r>
   46874:	10ffffe0 	cmpeqi	r3,r2,-1
   46878:	183f3f26 	beq	r3,zero,46578 <_malloc_r+0x3a0>
   4687c:	0029883a 	mov	r20,zero
   46880:	003f3f06 	br	46580 <_malloc_r+0x3a8>
   46884:	19001568 	cmpgeui	r4,r3,85
   46888:	2000201e 	bne	r4,zero,4690c <_malloc_r+0x734>
   4688c:	1006d33a 	srli	r3,r2,12
   46890:	19401bc4 	addi	r5,r3,111
   46894:	280a90fa 	slli	r5,r5,3
   46898:	19001b84 	addi	r4,r3,110
   4689c:	003f7006 	br	46660 <_malloc_r+0x488>
   468a0:	10c05568 	cmpgeui	r3,r2,341
   468a4:	1800201e 	bne	r3,zero,46928 <_malloc_r+0x750>
   468a8:	8804d3fa 	srli	r2,r17,15
   468ac:	11c01e04 	addi	r7,r2,120
   468b0:	380890fa 	slli	r4,r7,3
   468b4:	12001dc4 	addi	r8,r2,119
   468b8:	003e8006 	br	462bc <_malloc_r+0xe4>
   468bc:	00800174 	movhi	r2,5
   468c0:	10cebc17 	ldw	r3,15088(r2)
   468c4:	a8c7883a 	add	r3,r21,r3
   468c8:	10cebc15 	stw	r3,15088(r2)
   468cc:	003f1406 	br	46520 <_malloc_r+0x348>
   468d0:	e083ffcc 	andi	r2,fp,4095
   468d4:	103f121e 	bne	r2,zero,46520 <_malloc_r+0x348>
   468d8:	9c000217 	ldw	r16,8(r19)
   468dc:	b56b883a 	add	r21,r22,r21
   468e0:	ad400054 	ori	r21,r21,1
   468e4:	85400115 	stw	r21,4(r16)
   468e8:	003f3e06 	br	465e4 <_malloc_r+0x40c>
   468ec:	00800174 	movhi	r2,5
   468f0:	15c7ae15 	stw	r23,7864(r2)
   468f4:	003f1206 	br	46540 <_malloc_r+0x368>
   468f8:	b821883a 	mov	r16,r23
   468fc:	003f3906 	br	465e4 <_malloc_r+0x40c>
   46900:	00800044 	movi	r2,1
   46904:	b8800115 	stw	r2,4(r23)
   46908:	003fae06 	br	467c4 <_malloc_r+0x5ec>
   4690c:	19005568 	cmpgeui	r4,r3,341
   46910:	2000191e 	bne	r4,zero,46978 <_malloc_r+0x7a0>
   46914:	1006d3fa 	srli	r3,r2,15
   46918:	19401e04 	addi	r5,r3,120
   4691c:	280a90fa 	slli	r5,r5,3
   46920:	19001dc4 	addi	r4,r3,119
   46924:	003f4e06 	br	46660 <_malloc_r+0x488>
   46928:	10815568 	cmpgeui	r2,r2,1365
   4692c:	1000191e 	bne	r2,zero,46994 <_malloc_r+0x7bc>
   46930:	8804d4ba 	srli	r2,r17,18
   46934:	11c01f44 	addi	r7,r2,125
   46938:	380890fa 	slli	r4,r7,3
   4693c:	12001f04 	addi	r8,r2,124
   46940:	003e5e06 	br	462bc <_malloc_r+0xe4>
   46944:	e73ffe04 	addi	fp,fp,-8
   46948:	af2b883a 	add	r21,r21,fp
   4694c:	adebc83a 	sub	r21,r21,r23
   46950:	0029883a 	mov	r20,zero
   46954:	003f0a06 	br	46580 <_malloc_r+0x3a8>
   46958:	81400204 	addi	r5,r16,8
   4695c:	9009883a 	mov	r4,r18
   46960:	004567c0 	call	4567c <_free_r>
   46964:	9c000217 	ldw	r16,8(r19)
   46968:	00800174 	movhi	r2,5
   4696c:	150ebc17 	ldw	r20,15088(r2)
   46970:	85400117 	ldw	r21,4(r16)
   46974:	003f1b06 	br	465e4 <_malloc_r+0x40c>
   46978:	18c15568 	cmpgeui	r3,r3,1365
   4697c:	1800091e 	bne	r3,zero,469a4 <_malloc_r+0x7cc>
   46980:	1006d4ba 	srli	r3,r2,18
   46984:	19401f44 	addi	r5,r3,125
   46988:	280a90fa 	slli	r5,r5,3
   4698c:	19001f04 	addi	r4,r3,124
   46990:	003f3306 	br	46660 <_malloc_r+0x488>
   46994:	0100fe04 	movi	r4,1016
   46998:	01c01fc4 	movi	r7,127
   4699c:	02001f84 	movi	r8,126
   469a0:	003e4606 	br	462bc <_malloc_r+0xe4>
   469a4:	0140fe04 	movi	r5,1016
   469a8:	01001f84 	movi	r4,126
   469ac:	003f2c06 	br	46660 <_malloc_r+0x488>
   469b0:	98800117 	ldw	r2,4(r19)
   469b4:	003f9506 	br	4680c <_malloc_r+0x634>

000469b8 <memchr>:
   469b8:	208000cc 	andi	r2,r4,3
   469bc:	280f883a 	mov	r7,r5
   469c0:	10000e26 	beq	r2,zero,469fc <memchr+0x44>
   469c4:	30bfffc4 	addi	r2,r6,-1
   469c8:	30001726 	beq	r6,zero,46a28 <memchr+0x70>
   469cc:	29803fcc 	andi	r6,r5,255
   469d0:	00000606 	br	469ec <memchr+0x34>
   469d4:	21000044 	addi	r4,r4,1
   469d8:	20c000cc 	andi	r3,r4,3
   469dc:	18000826 	beq	r3,zero,46a00 <memchr+0x48>
   469e0:	10bfffc4 	addi	r2,r2,-1
   469e4:	10ffffe0 	cmpeqi	r3,r2,-1
   469e8:	18000f1e 	bne	r3,zero,46a28 <memchr+0x70>
   469ec:	20c00003 	ldbu	r3,0(r4)
   469f0:	19bff81e 	bne	r3,r6,469d4 <memchr+0x1c>
   469f4:	2005883a 	mov	r2,r4
   469f8:	f800283a 	ret
   469fc:	3005883a 	mov	r2,r6
   46a00:	10c00128 	cmpgeui	r3,r2,4
   46a04:	18000a1e 	bne	r3,zero,46a30 <memchr+0x78>
   46a08:	10001e26 	beq	r2,zero,46a84 <memchr+0xcc>
   46a0c:	2087883a 	add	r3,r4,r2
   46a10:	39803fcc 	andi	r6,r7,255
   46a14:	2005883a 	mov	r2,r4
   46a18:	11000003 	ldbu	r4,0(r2)
   46a1c:	21bff626 	beq	r4,r6,469f8 <memchr+0x40>
   46a20:	10800044 	addi	r2,r2,1
   46a24:	18bffc1e 	bne	r3,r2,46a18 <memchr+0x60>
   46a28:	0005883a 	mov	r2,zero
   46a2c:	f800283a 	ret
   46a30:	29403fcc 	andi	r5,r5,255
   46a34:	280c923a 	slli	r6,r5,8
   46a38:	027fbff4 	movhi	r9,65279
   46a3c:	02202074 	movhi	r8,32897
   46a40:	314ab03a 	or	r5,r6,r5
   46a44:	280c943a 	slli	r6,r5,16
   46a48:	4a7fbfc4 	addi	r9,r9,-257
   46a4c:	42202004 	addi	r8,r8,-32640
   46a50:	314cb03a 	or	r6,r6,r5
   46a54:	20c00017 	ldw	r3,0(r4)
   46a58:	30c6f03a 	xor	r3,r6,r3
   46a5c:	1a4b883a 	add	r5,r3,r9
   46a60:	00c6303a 	nor	r3,zero,r3
   46a64:	28c6703a 	and	r3,r5,r3
   46a68:	1a06703a 	and	r3,r3,r8
   46a6c:	183fe71e 	bne	r3,zero,46a0c <memchr+0x54>
   46a70:	10bfff04 	addi	r2,r2,-4
   46a74:	10c00128 	cmpgeui	r3,r2,4
   46a78:	21000104 	addi	r4,r4,4
   46a7c:	183ff51e 	bne	r3,zero,46a54 <memchr+0x9c>
   46a80:	003fe106 	br	46a08 <memchr+0x50>
   46a84:	f800283a 	ret

00046a88 <memcpy>:
   46a88:	30c00430 	cmpltui	r3,r6,16
   46a8c:	2005883a 	mov	r2,r4
   46a90:	18002d1e 	bne	r3,zero,46b48 <memcpy+0xc0>
   46a94:	2906b03a 	or	r3,r5,r4
   46a98:	18c000cc 	andi	r3,r3,3
   46a9c:	1800351e 	bne	r3,zero,46b74 <memcpy+0xec>
   46aa0:	32fffc04 	addi	r11,r6,-16
   46aa4:	5816d13a 	srli	r11,r11,4
   46aa8:	280f883a 	mov	r7,r5
   46aac:	2007883a 	mov	r3,r4
   46ab0:	5ac00044 	addi	r11,r11,1
   46ab4:	5816913a 	slli	r11,r11,4
   46ab8:	22d5883a 	add	r10,r4,r11
   46abc:	39000117 	ldw	r4,4(r7)
   46ac0:	3a400017 	ldw	r9,0(r7)
   46ac4:	3a000217 	ldw	r8,8(r7)
   46ac8:	19000115 	stw	r4,4(r3)
   46acc:	39000317 	ldw	r4,12(r7)
   46ad0:	1a400015 	stw	r9,0(r3)
   46ad4:	1a000215 	stw	r8,8(r3)
   46ad8:	19000315 	stw	r4,12(r3)
   46adc:	18c00404 	addi	r3,r3,16
   46ae0:	39c00404 	addi	r7,r7,16
   46ae4:	50fff51e 	bne	r10,r3,46abc <memcpy+0x34>
   46ae8:	3100030c 	andi	r4,r6,12
   46aec:	2acb883a 	add	r5,r5,r11
   46af0:	320003cc 	andi	r8,r6,15
   46af4:	20002226 	beq	r4,zero,46b80 <memcpy+0xf8>
   46af8:	280f883a 	mov	r7,r5
   46afc:	1813883a 	mov	r9,r3
   46b00:	39c00104 	addi	r7,r7,4
   46b04:	3abfff17 	ldw	r10,-4(r7)
   46b08:	41c9c83a 	sub	r4,r8,r7
   46b0c:	2909883a 	add	r4,r5,r4
   46b10:	4a800015 	stw	r10,0(r9)
   46b14:	21000128 	cmpgeui	r4,r4,4
   46b18:	4a400104 	addi	r9,r9,4
   46b1c:	203ff81e 	bne	r4,zero,46b00 <memcpy+0x78>
   46b20:	413fff04 	addi	r4,r8,-4
   46b24:	2008d0ba 	srli	r4,r4,2
   46b28:	318000cc 	andi	r6,r6,3
   46b2c:	31ffffc4 	addi	r7,r6,-1
   46b30:	21000044 	addi	r4,r4,1
   46b34:	200890ba 	slli	r4,r4,2
   46b38:	1907883a 	add	r3,r3,r4
   46b3c:	290b883a 	add	r5,r5,r4
   46b40:	3000041e 	bne	r6,zero,46b54 <memcpy+0xcc>
   46b44:	f800283a 	ret
   46b48:	2007883a 	mov	r3,r4
   46b4c:	31ffffc4 	addi	r7,r6,-1
   46b50:	303ffc26 	beq	r6,zero,46b44 <memcpy+0xbc>
   46b54:	39c00044 	addi	r7,r7,1
   46b58:	19cf883a 	add	r7,r3,r7
   46b5c:	29800003 	ldbu	r6,0(r5)
   46b60:	18c00044 	addi	r3,r3,1
   46b64:	29400044 	addi	r5,r5,1
   46b68:	19bfffc5 	stb	r6,-1(r3)
   46b6c:	38fffb1e 	bne	r7,r3,46b5c <memcpy+0xd4>
   46b70:	f800283a 	ret
   46b74:	31ffffc4 	addi	r7,r6,-1
   46b78:	2007883a 	mov	r3,r4
   46b7c:	003ff506 	br	46b54 <memcpy+0xcc>
   46b80:	400d883a 	mov	r6,r8
   46b84:	003ff106 	br	46b4c <memcpy+0xc4>

00046b88 <memmove>:
   46b88:	2005883a 	mov	r2,r4
   46b8c:	29000a2e 	bgeu	r5,r4,46bb8 <memmove+0x30>
   46b90:	2989883a 	add	r4,r5,r6
   46b94:	1100082e 	bgeu	r2,r4,46bb8 <memmove+0x30>
   46b98:	1187883a 	add	r3,r2,r6
   46b9c:	30003e26 	beq	r6,zero,46c98 <memmove+0x110>
   46ba0:	217fffc3 	ldbu	r5,-1(r4)
   46ba4:	18ffffc4 	addi	r3,r3,-1
   46ba8:	213fffc4 	addi	r4,r4,-1
   46bac:	19400005 	stb	r5,0(r3)
   46bb0:	10fffb1e 	bne	r2,r3,46ba0 <memmove+0x18>
   46bb4:	f800283a 	ret
   46bb8:	30c00430 	cmpltui	r3,r6,16
   46bbc:	18000b26 	beq	r3,zero,46bec <memmove+0x64>
   46bc0:	1007883a 	mov	r3,r2
   46bc4:	31ffffc4 	addi	r7,r6,-1
   46bc8:	30003726 	beq	r6,zero,46ca8 <memmove+0x120>
   46bcc:	39c00044 	addi	r7,r7,1
   46bd0:	29cf883a 	add	r7,r5,r7
   46bd4:	29800003 	ldbu	r6,0(r5)
   46bd8:	29400044 	addi	r5,r5,1
   46bdc:	18c00044 	addi	r3,r3,1
   46be0:	19bfffc5 	stb	r6,-1(r3)
   46be4:	29fffb1e 	bne	r5,r7,46bd4 <memmove+0x4c>
   46be8:	f800283a 	ret
   46bec:	2886b03a 	or	r3,r5,r2
   46bf0:	18c000cc 	andi	r3,r3,3
   46bf4:	1800291e 	bne	r3,zero,46c9c <memmove+0x114>
   46bf8:	327ffc04 	addi	r9,r6,-16
   46bfc:	4812d13a 	srli	r9,r9,4
   46c00:	280f883a 	mov	r7,r5
   46c04:	1007883a 	mov	r3,r2
   46c08:	4a400044 	addi	r9,r9,1
   46c0c:	4812913a 	slli	r9,r9,4
   46c10:	1251883a 	add	r8,r2,r9
   46c14:	39000017 	ldw	r4,0(r7)
   46c18:	39c00404 	addi	r7,r7,16
   46c1c:	18c00404 	addi	r3,r3,16
   46c20:	193ffc15 	stw	r4,-16(r3)
   46c24:	393ffd17 	ldw	r4,-12(r7)
   46c28:	193ffd15 	stw	r4,-12(r3)
   46c2c:	393ffe17 	ldw	r4,-8(r7)
   46c30:	193ffe15 	stw	r4,-8(r3)
   46c34:	393fff17 	ldw	r4,-4(r7)
   46c38:	193fff15 	stw	r4,-4(r3)
   46c3c:	40fff51e 	bne	r8,r3,46c14 <memmove+0x8c>
   46c40:	3100030c 	andi	r4,r6,12
   46c44:	2a4b883a 	add	r5,r5,r9
   46c48:	320003cc 	andi	r8,r6,15
   46c4c:	20001726 	beq	r4,zero,46cac <memmove+0x124>
   46c50:	2813883a 	mov	r9,r5
   46c54:	180f883a 	mov	r7,r3
   46c58:	4a800017 	ldw	r10,0(r9)
   46c5c:	39c00104 	addi	r7,r7,4
   46c60:	41c9c83a 	sub	r4,r8,r7
   46c64:	1909883a 	add	r4,r3,r4
   46c68:	21000128 	cmpgeui	r4,r4,4
   46c6c:	3abfff15 	stw	r10,-4(r7)
   46c70:	4a400104 	addi	r9,r9,4
   46c74:	203ff81e 	bne	r4,zero,46c58 <memmove+0xd0>
   46c78:	413fff04 	addi	r4,r8,-4
   46c7c:	2008d0ba 	srli	r4,r4,2
   46c80:	318000cc 	andi	r6,r6,3
   46c84:	21000044 	addi	r4,r4,1
   46c88:	200890ba 	slli	r4,r4,2
   46c8c:	1907883a 	add	r3,r3,r4
   46c90:	290b883a 	add	r5,r5,r4
   46c94:	003fcb06 	br	46bc4 <memmove+0x3c>
   46c98:	f800283a 	ret
   46c9c:	31ffffc4 	addi	r7,r6,-1
   46ca0:	1007883a 	mov	r3,r2
   46ca4:	003fc906 	br	46bcc <memmove+0x44>
   46ca8:	f800283a 	ret
   46cac:	400d883a 	mov	r6,r8
   46cb0:	003fc406 	br	46bc4 <memmove+0x3c>

00046cb4 <memset>:
   46cb4:	20c000cc 	andi	r3,r4,3
   46cb8:	2005883a 	mov	r2,r4
   46cbc:	18003626 	beq	r3,zero,46d98 <memset+0xe4>
   46cc0:	31ffffc4 	addi	r7,r6,-1
   46cc4:	30003326 	beq	r6,zero,46d94 <memset+0xe0>
   46cc8:	2811883a 	mov	r8,r5
   46ccc:	2007883a 	mov	r3,r4
   46cd0:	00000306 	br	46ce0 <memset+0x2c>
   46cd4:	39ffffc4 	addi	r7,r7,-1
   46cd8:	39bfffe0 	cmpeqi	r6,r7,-1
   46cdc:	30002d1e 	bne	r6,zero,46d94 <memset+0xe0>
   46ce0:	18c00044 	addi	r3,r3,1
   46ce4:	198000cc 	andi	r6,r3,3
   46ce8:	1a3fffc5 	stb	r8,-1(r3)
   46cec:	303ff91e 	bne	r6,zero,46cd4 <memset+0x20>
   46cf0:	39000130 	cmpltui	r4,r7,4
   46cf4:	2000221e 	bne	r4,zero,46d80 <memset+0xcc>
   46cf8:	29003fcc 	andi	r4,r5,255
   46cfc:	200c923a 	slli	r6,r4,8
   46d00:	3a000430 	cmpltui	r8,r7,16
   46d04:	3108b03a 	or	r4,r6,r4
   46d08:	200c943a 	slli	r6,r4,16
   46d0c:	310cb03a 	or	r6,r6,r4
   46d10:	40000e1e 	bne	r8,zero,46d4c <memset+0x98>
   46d14:	393ffc04 	addi	r4,r7,-16
   46d18:	2008d13a 	srli	r4,r4,4
   46d1c:	21000044 	addi	r4,r4,1
   46d20:	2008913a 	slli	r4,r4,4
   46d24:	1909883a 	add	r4,r3,r4
   46d28:	19800015 	stw	r6,0(r3)
   46d2c:	19800115 	stw	r6,4(r3)
   46d30:	19800215 	stw	r6,8(r3)
   46d34:	19800315 	stw	r6,12(r3)
   46d38:	18c00404 	addi	r3,r3,16
   46d3c:	20fffa1e 	bne	r4,r3,46d28 <memset+0x74>
   46d40:	3900030c 	andi	r4,r7,12
   46d44:	39c003cc 	andi	r7,r7,15
   46d48:	20000d26 	beq	r4,zero,46d80 <memset+0xcc>
   46d4c:	1811883a 	mov	r8,r3
   46d50:	42000104 	addi	r8,r8,4
   46d54:	3a09c83a 	sub	r4,r7,r8
   46d58:	1909883a 	add	r4,r3,r4
   46d5c:	21000128 	cmpgeui	r4,r4,4
   46d60:	41bfff15 	stw	r6,-4(r8)
   46d64:	203ffa1e 	bne	r4,zero,46d50 <memset+0x9c>
   46d68:	393fff04 	addi	r4,r7,-4
   46d6c:	2008d0ba 	srli	r4,r4,2
   46d70:	39c000cc 	andi	r7,r7,3
   46d74:	21000044 	addi	r4,r4,1
   46d78:	200890ba 	slli	r4,r4,2
   46d7c:	1907883a 	add	r3,r3,r4
   46d80:	38000426 	beq	r7,zero,46d94 <memset+0xe0>
   46d84:	19cf883a 	add	r7,r3,r7
   46d88:	18c00044 	addi	r3,r3,1
   46d8c:	197fffc5 	stb	r5,-1(r3)
   46d90:	38fffd1e 	bne	r7,r3,46d88 <memset+0xd4>
   46d94:	f800283a 	ret
   46d98:	2007883a 	mov	r3,r4
   46d9c:	300f883a 	mov	r7,r6
   46da0:	003fd306 	br	46cf0 <memset+0x3c>

00046da4 <_Balloc>:
   46da4:	20801317 	ldw	r2,76(r4)
   46da8:	defffc04 	addi	sp,sp,-16
   46dac:	dc400115 	stw	r17,4(sp)
   46db0:	dc000015 	stw	r16,0(sp)
   46db4:	dfc00315 	stw	ra,12(sp)
   46db8:	dc800215 	stw	r18,8(sp)
   46dbc:	2021883a 	mov	r16,r4
   46dc0:	2823883a 	mov	r17,r5
   46dc4:	10000e26 	beq	r2,zero,46e00 <_Balloc+0x5c>
   46dc8:	880690ba 	slli	r3,r17,2
   46dcc:	10c7883a 	add	r3,r2,r3
   46dd0:	18800017 	ldw	r2,0(r3)
   46dd4:	10001126 	beq	r2,zero,46e1c <_Balloc+0x78>
   46dd8:	11000017 	ldw	r4,0(r2)
   46ddc:	19000015 	stw	r4,0(r3)
   46de0:	10000415 	stw	zero,16(r2)
   46de4:	10000315 	stw	zero,12(r2)
   46de8:	dfc00317 	ldw	ra,12(sp)
   46dec:	dc800217 	ldw	r18,8(sp)
   46df0:	dc400117 	ldw	r17,4(sp)
   46df4:	dc000017 	ldw	r16,0(sp)
   46df8:	dec00404 	addi	sp,sp,16
   46dfc:	f800283a 	ret
   46e00:	01800844 	movi	r6,33
   46e04:	01400104 	movi	r5,4
   46e08:	0049c500 	call	49c50 <_calloc_r>
   46e0c:	80801315 	stw	r2,76(r16)
   46e10:	103fed1e 	bne	r2,zero,46dc8 <_Balloc+0x24>
   46e14:	0005883a 	mov	r2,zero
   46e18:	003ff306 	br	46de8 <_Balloc+0x44>
   46e1c:	04800044 	movi	r18,1
   46e20:	9464983a 	sll	r18,r18,r17
   46e24:	01400044 	movi	r5,1
   46e28:	8009883a 	mov	r4,r16
   46e2c:	91800144 	addi	r6,r18,5
   46e30:	300c90ba 	slli	r6,r6,2
   46e34:	0049c500 	call	49c50 <_calloc_r>
   46e38:	103ff626 	beq	r2,zero,46e14 <_Balloc+0x70>
   46e3c:	14400115 	stw	r17,4(r2)
   46e40:	14800215 	stw	r18,8(r2)
   46e44:	003fe606 	br	46de0 <_Balloc+0x3c>

00046e48 <_Bfree>:
   46e48:	28000726 	beq	r5,zero,46e68 <_Bfree+0x20>
   46e4c:	28c00117 	ldw	r3,4(r5)
   46e50:	20801317 	ldw	r2,76(r4)
   46e54:	180690ba 	slli	r3,r3,2
   46e58:	10c5883a 	add	r2,r2,r3
   46e5c:	10c00017 	ldw	r3,0(r2)
   46e60:	28c00015 	stw	r3,0(r5)
   46e64:	11400015 	stw	r5,0(r2)
   46e68:	f800283a 	ret

00046e6c <__multadd>:
   46e6c:	defffa04 	addi	sp,sp,-24
   46e70:	dc400115 	stw	r17,4(sp)
   46e74:	2c400417 	ldw	r17,16(r5)
   46e78:	dcc00315 	stw	r19,12(sp)
   46e7c:	dc800215 	stw	r18,8(sp)
   46e80:	dc000015 	stw	r16,0(sp)
   46e84:	dfc00515 	stw	ra,20(sp)
   46e88:	dd000415 	stw	r20,16(sp)
   46e8c:	2825883a 	mov	r18,r5
   46e90:	2027883a 	mov	r19,r4
   46e94:	3821883a 	mov	r16,r7
   46e98:	2a400504 	addi	r9,r5,20
   46e9c:	0015883a 	mov	r10,zero
   46ea0:	48c00017 	ldw	r3,0(r9)
   46ea4:	4a400104 	addi	r9,r9,4
   46ea8:	52800044 	addi	r10,r10,1
   46eac:	1a3fffcc 	andi	r8,r3,65535
   46eb0:	4191383a 	mul	r8,r8,r6
   46eb4:	180ed43a 	srli	r7,r3,16
   46eb8:	4407883a 	add	r3,r8,r16
   46ebc:	1810d43a 	srli	r8,r3,16
   46ec0:	398f383a 	mul	r7,r7,r6
   46ec4:	18ffffcc 	andi	r3,r3,65535
   46ec8:	3a0f883a 	add	r7,r7,r8
   46ecc:	3810943a 	slli	r8,r7,16
   46ed0:	3820d43a 	srli	r16,r7,16
   46ed4:	40c7883a 	add	r3,r8,r3
   46ed8:	48ffff15 	stw	r3,-4(r9)
   46edc:	547ff016 	blt	r10,r17,46ea0 <__multadd+0x34>
   46ee0:	80000826 	beq	r16,zero,46f04 <__multadd+0x98>
   46ee4:	90800217 	ldw	r2,8(r18)
   46ee8:	88800f0e 	bge	r17,r2,46f28 <__multadd+0xbc>
   46eec:	88800144 	addi	r2,r17,5
   46ef0:	100490ba 	slli	r2,r2,2
   46ef4:	8c400044 	addi	r17,r17,1
   46ef8:	9085883a 	add	r2,r18,r2
   46efc:	14000015 	stw	r16,0(r2)
   46f00:	94400415 	stw	r17,16(r18)
   46f04:	9005883a 	mov	r2,r18
   46f08:	dfc00517 	ldw	ra,20(sp)
   46f0c:	dd000417 	ldw	r20,16(sp)
   46f10:	dcc00317 	ldw	r19,12(sp)
   46f14:	dc800217 	ldw	r18,8(sp)
   46f18:	dc400117 	ldw	r17,4(sp)
   46f1c:	dc000017 	ldw	r16,0(sp)
   46f20:	dec00604 	addi	sp,sp,24
   46f24:	f800283a 	ret
   46f28:	91400117 	ldw	r5,4(r18)
   46f2c:	9809883a 	mov	r4,r19
   46f30:	29400044 	addi	r5,r5,1
   46f34:	0046da40 	call	46da4 <_Balloc>
   46f38:	1029883a 	mov	r20,r2
   46f3c:	10001226 	beq	r2,zero,46f88 <__multadd+0x11c>
   46f40:	91800417 	ldw	r6,16(r18)
   46f44:	91400304 	addi	r5,r18,12
   46f48:	11000304 	addi	r4,r2,12
   46f4c:	31800084 	addi	r6,r6,2
   46f50:	300c90ba 	slli	r6,r6,2
   46f54:	0046a880 	call	46a88 <memcpy>
   46f58:	90000926 	beq	r18,zero,46f80 <__multadd+0x114>
   46f5c:	90c00117 	ldw	r3,4(r18)
   46f60:	98801317 	ldw	r2,76(r19)
   46f64:	180690ba 	slli	r3,r3,2
   46f68:	10c5883a 	add	r2,r2,r3
   46f6c:	10c00017 	ldw	r3,0(r2)
   46f70:	90c00015 	stw	r3,0(r18)
   46f74:	14800015 	stw	r18,0(r2)
   46f78:	a025883a 	mov	r18,r20
   46f7c:	003fdb06 	br	46eec <__multadd+0x80>
   46f80:	a025883a 	mov	r18,r20
   46f84:	003fd906 	br	46eec <__multadd+0x80>
   46f88:	01c00174 	movhi	r7,5
   46f8c:	01000174 	movhi	r4,5
   46f90:	39ff9004 	addi	r7,r7,-448
   46f94:	000d883a 	mov	r6,zero
   46f98:	01402d44 	movi	r5,181
   46f9c:	213fa404 	addi	r4,r4,-368
   46fa0:	0049bd80 	call	49bd8 <__assert_func>

00046fa4 <__s2b>:
   46fa4:	defff904 	addi	sp,sp,-28
   46fa8:	dc800215 	stw	r18,8(sp)
   46fac:	dc000015 	stw	r16,0(sp)
   46fb0:	2025883a 	mov	r18,r4
   46fb4:	2821883a 	mov	r16,r5
   46fb8:	39000204 	addi	r4,r7,8
   46fbc:	01400244 	movi	r5,9
   46fc0:	dcc00315 	stw	r19,12(sp)
   46fc4:	dc400115 	stw	r17,4(sp)
   46fc8:	dfc00615 	stw	ra,24(sp)
   46fcc:	3823883a 	mov	r17,r7
   46fd0:	dd400515 	stw	r21,20(sp)
   46fd4:	dd000415 	stw	r20,16(sp)
   46fd8:	3027883a 	mov	r19,r6
   46fdc:	0040eb00 	call	40eb0 <__divsi3>
   46fe0:	88c00290 	cmplti	r3,r17,10
   46fe4:	1800341e 	bne	r3,zero,470b8 <__s2b+0x114>
   46fe8:	00c00044 	movi	r3,1
   46fec:	000b883a 	mov	r5,zero
   46ff0:	18c7883a 	add	r3,r3,r3
   46ff4:	29400044 	addi	r5,r5,1
   46ff8:	18bffd16 	blt	r3,r2,46ff0 <__s2b+0x4c>
   46ffc:	9009883a 	mov	r4,r18
   47000:	0046da40 	call	46da4 <_Balloc>
   47004:	100b883a 	mov	r5,r2
   47008:	10002d26 	beq	r2,zero,470c0 <__s2b+0x11c>
   4700c:	d8800717 	ldw	r2,28(sp)
   47010:	28800515 	stw	r2,20(r5)
   47014:	00800044 	movi	r2,1
   47018:	28800415 	stw	r2,16(r5)
   4701c:	98800290 	cmplti	r2,r19,10
   47020:	1000221e 	bne	r2,zero,470ac <__s2b+0x108>
   47024:	85400244 	addi	r21,r16,9
   47028:	a829883a 	mov	r20,r21
   4702c:	84e1883a 	add	r16,r16,r19
   47030:	a1c00007 	ldb	r7,0(r20)
   47034:	01800284 	movi	r6,10
   47038:	9009883a 	mov	r4,r18
   4703c:	39fff404 	addi	r7,r7,-48
   47040:	0046e6c0 	call	46e6c <__multadd>
   47044:	a5000044 	addi	r20,r20,1
   47048:	100b883a 	mov	r5,r2
   4704c:	a43ff81e 	bne	r20,r16,47030 <__s2b+0x8c>
   47050:	9c3ffe04 	addi	r16,r19,-8
   47054:	ac21883a 	add	r16,r21,r16
   47058:	9c400a0e 	bge	r19,r17,47084 <__s2b+0xe0>
   4705c:	8ce3c83a 	sub	r17,r17,r19
   47060:	8463883a 	add	r17,r16,r17
   47064:	81c00007 	ldb	r7,0(r16)
   47068:	01800284 	movi	r6,10
   4706c:	9009883a 	mov	r4,r18
   47070:	39fff404 	addi	r7,r7,-48
   47074:	0046e6c0 	call	46e6c <__multadd>
   47078:	84000044 	addi	r16,r16,1
   4707c:	100b883a 	mov	r5,r2
   47080:	8c3ff81e 	bne	r17,r16,47064 <__s2b+0xc0>
   47084:	2805883a 	mov	r2,r5
   47088:	dfc00617 	ldw	ra,24(sp)
   4708c:	dd400517 	ldw	r21,20(sp)
   47090:	dd000417 	ldw	r20,16(sp)
   47094:	dcc00317 	ldw	r19,12(sp)
   47098:	dc800217 	ldw	r18,8(sp)
   4709c:	dc400117 	ldw	r17,4(sp)
   470a0:	dc000017 	ldw	r16,0(sp)
   470a4:	dec00704 	addi	sp,sp,28
   470a8:	f800283a 	ret
   470ac:	84000284 	addi	r16,r16,10
   470b0:	04c00244 	movi	r19,9
   470b4:	003fe806 	br	47058 <__s2b+0xb4>
   470b8:	000b883a 	mov	r5,zero
   470bc:	003fcf06 	br	46ffc <__s2b+0x58>
   470c0:	01c00174 	movhi	r7,5
   470c4:	01000174 	movhi	r4,5
   470c8:	39ff9004 	addi	r7,r7,-448
   470cc:	000d883a 	mov	r6,zero
   470d0:	01403384 	movi	r5,206
   470d4:	213fa404 	addi	r4,r4,-368
   470d8:	0049bd80 	call	49bd8 <__assert_func>

000470dc <__hi0bits>:
   470dc:	20bfffec 	andhi	r2,r4,65535
   470e0:	1000131e 	bne	r2,zero,47130 <__hi0bits+0x54>
   470e4:	2008943a 	slli	r4,r4,16
   470e8:	00800404 	movi	r2,16
   470ec:	20ffc02c 	andhi	r3,r4,65280
   470f0:	1800021e 	bne	r3,zero,470fc <__hi0bits+0x20>
   470f4:	2008923a 	slli	r4,r4,8
   470f8:	10800204 	addi	r2,r2,8
   470fc:	20fc002c 	andhi	r3,r4,61440
   47100:	1800021e 	bne	r3,zero,4710c <__hi0bits+0x30>
   47104:	2008913a 	slli	r4,r4,4
   47108:	10800104 	addi	r2,r2,4
   4710c:	20f0002c 	andhi	r3,r4,49152
   47110:	1800021e 	bne	r3,zero,4711c <__hi0bits+0x40>
   47114:	200890ba 	slli	r4,r4,2
   47118:	10800084 	addi	r2,r2,2
   4711c:	20000316 	blt	r4,zero,4712c <__hi0bits+0x50>
   47120:	2110002c 	andhi	r4,r4,16384
   47124:	10800044 	addi	r2,r2,1
   47128:	20000326 	beq	r4,zero,47138 <__hi0bits+0x5c>
   4712c:	f800283a 	ret
   47130:	0005883a 	mov	r2,zero
   47134:	003fed06 	br	470ec <__hi0bits+0x10>
   47138:	00800804 	movi	r2,32
   4713c:	f800283a 	ret

00047140 <__lo0bits>:
   47140:	20c00017 	ldw	r3,0(r4)
   47144:	188001cc 	andi	r2,r3,7
   47148:	10000826 	beq	r2,zero,4716c <__lo0bits+0x2c>
   4714c:	1880004c 	andi	r2,r3,1
   47150:	10001f1e 	bne	r2,zero,471d0 <__lo0bits+0x90>
   47154:	1880008c 	andi	r2,r3,2
   47158:	10002126 	beq	r2,zero,471e0 <__lo0bits+0xa0>
   4715c:	1806d07a 	srli	r3,r3,1
   47160:	00800044 	movi	r2,1
   47164:	20c00015 	stw	r3,0(r4)
   47168:	f800283a 	ret
   4716c:	18bfffcc 	andi	r2,r3,65535
   47170:	10001426 	beq	r2,zero,471c4 <__lo0bits+0x84>
   47174:	0005883a 	mov	r2,zero
   47178:	19403fcc 	andi	r5,r3,255
   4717c:	2800021e 	bne	r5,zero,47188 <__lo0bits+0x48>
   47180:	1806d23a 	srli	r3,r3,8
   47184:	10800204 	addi	r2,r2,8
   47188:	194003cc 	andi	r5,r3,15
   4718c:	2800021e 	bne	r5,zero,47198 <__lo0bits+0x58>
   47190:	1806d13a 	srli	r3,r3,4
   47194:	10800104 	addi	r2,r2,4
   47198:	194000cc 	andi	r5,r3,3
   4719c:	2800021e 	bne	r5,zero,471a8 <__lo0bits+0x68>
   471a0:	1806d0ba 	srli	r3,r3,2
   471a4:	10800084 	addi	r2,r2,2
   471a8:	1940004c 	andi	r5,r3,1
   471ac:	2800031e 	bne	r5,zero,471bc <__lo0bits+0x7c>
   471b0:	1806d07a 	srli	r3,r3,1
   471b4:	10800044 	addi	r2,r2,1
   471b8:	18000726 	beq	r3,zero,471d8 <__lo0bits+0x98>
   471bc:	20c00015 	stw	r3,0(r4)
   471c0:	f800283a 	ret
   471c4:	1806d43a 	srli	r3,r3,16
   471c8:	00800404 	movi	r2,16
   471cc:	003fea06 	br	47178 <__lo0bits+0x38>
   471d0:	0005883a 	mov	r2,zero
   471d4:	f800283a 	ret
   471d8:	00800804 	movi	r2,32
   471dc:	f800283a 	ret
   471e0:	1806d0ba 	srli	r3,r3,2
   471e4:	00800084 	movi	r2,2
   471e8:	20c00015 	stw	r3,0(r4)
   471ec:	f800283a 	ret

000471f0 <__i2b>:
   471f0:	20c01317 	ldw	r3,76(r4)
   471f4:	defffd04 	addi	sp,sp,-12
   471f8:	dc400115 	stw	r17,4(sp)
   471fc:	dc000015 	stw	r16,0(sp)
   47200:	dfc00215 	stw	ra,8(sp)
   47204:	2021883a 	mov	r16,r4
   47208:	2823883a 	mov	r17,r5
   4720c:	18000d26 	beq	r3,zero,47244 <__i2b+0x54>
   47210:	18800117 	ldw	r2,4(r3)
   47214:	10001826 	beq	r2,zero,47278 <__i2b+0x88>
   47218:	11000017 	ldw	r4,0(r2)
   4721c:	19000115 	stw	r4,4(r3)
   47220:	00c00044 	movi	r3,1
   47224:	10000315 	stw	zero,12(r2)
   47228:	14400515 	stw	r17,20(r2)
   4722c:	10c00415 	stw	r3,16(r2)
   47230:	dfc00217 	ldw	ra,8(sp)
   47234:	dc400117 	ldw	r17,4(sp)
   47238:	dc000017 	ldw	r16,0(sp)
   4723c:	dec00304 	addi	sp,sp,12
   47240:	f800283a 	ret
   47244:	01800844 	movi	r6,33
   47248:	01400104 	movi	r5,4
   4724c:	0049c500 	call	49c50 <_calloc_r>
   47250:	80801315 	stw	r2,76(r16)
   47254:	1007883a 	mov	r3,r2
   47258:	103fed1e 	bne	r2,zero,47210 <__i2b+0x20>
   4725c:	01c00174 	movhi	r7,5
   47260:	01000174 	movhi	r4,5
   47264:	39ff9004 	addi	r7,r7,-448
   47268:	000d883a 	mov	r6,zero
   4726c:	01405004 	movi	r5,320
   47270:	213fa404 	addi	r4,r4,-368
   47274:	0049bd80 	call	49bd8 <__assert_func>
   47278:	01800704 	movi	r6,28
   4727c:	01400044 	movi	r5,1
   47280:	8009883a 	mov	r4,r16
   47284:	0049c500 	call	49c50 <_calloc_r>
   47288:	103ff426 	beq	r2,zero,4725c <__i2b+0x6c>
   4728c:	00c00044 	movi	r3,1
   47290:	10c00115 	stw	r3,4(r2)
   47294:	00c00084 	movi	r3,2
   47298:	10c00215 	stw	r3,8(r2)
   4729c:	003fe006 	br	47220 <__i2b+0x30>

000472a0 <__multiply>:
   472a0:	defff804 	addi	sp,sp,-32
   472a4:	dd400515 	stw	r21,20(sp)
   472a8:	dd000415 	stw	r20,16(sp)
   472ac:	35400417 	ldw	r21,16(r6)
   472b0:	2d000417 	ldw	r20,16(r5)
   472b4:	dd800615 	stw	r22,24(sp)
   472b8:	dcc00315 	stw	r19,12(sp)
   472bc:	dfc00715 	stw	ra,28(sp)
   472c0:	dc800215 	stw	r18,8(sp)
   472c4:	dc400115 	stw	r17,4(sp)
   472c8:	dc000015 	stw	r16,0(sp)
   472cc:	282d883a 	mov	r22,r5
   472d0:	3027883a 	mov	r19,r6
   472d4:	a5400516 	blt	r20,r21,472ec <__multiply+0x4c>
   472d8:	a807883a 	mov	r3,r21
   472dc:	2827883a 	mov	r19,r5
   472e0:	a02b883a 	mov	r21,r20
   472e4:	302d883a 	mov	r22,r6
   472e8:	1829883a 	mov	r20,r3
   472ec:	98800217 	ldw	r2,8(r19)
   472f0:	ad23883a 	add	r17,r21,r20
   472f4:	99400117 	ldw	r5,4(r19)
   472f8:	1440010e 	bge	r2,r17,47300 <__multiply+0x60>
   472fc:	29400044 	addi	r5,r5,1
   47300:	0046da40 	call	46da4 <_Balloc>
   47304:	1025883a 	mov	r18,r2
   47308:	10007326 	beq	r2,zero,474d8 <__multiply+0x238>
   4730c:	882090ba 	slli	r16,r17,2
   47310:	11000504 	addi	r4,r2,20
   47314:	2421883a 	add	r16,r4,r16
   47318:	2400082e 	bgeu	r4,r16,4733c <__multiply+0x9c>
   4731c:	808dc83a 	sub	r6,r16,r2
   47320:	31bffac4 	addi	r6,r6,-21
   47324:	300cd0ba 	srli	r6,r6,2
   47328:	000b883a 	mov	r5,zero
   4732c:	31800044 	addi	r6,r6,1
   47330:	300c90ba 	slli	r6,r6,2
   47334:	0046cb40 	call	46cb4 <memset>
   47338:	1009883a 	mov	r4,r2
   4733c:	a01290ba 	slli	r9,r20,2
   47340:	a80e90ba 	slli	r7,r21,2
   47344:	b0800504 	addi	r2,r22,20
   47348:	9a800504 	addi	r10,r19,20
   4734c:	1253883a 	add	r9,r2,r9
   47350:	51cf883a 	add	r7,r10,r7
   47354:	12404b2e 	bgeu	r2,r9,47484 <__multiply+0x1e4>
   47358:	98c00544 	addi	r3,r19,21
   4735c:	38c05c36 	bltu	r7,r3,474d0 <__multiply+0x230>
   47360:	3cd1c83a 	sub	r8,r7,r19
   47364:	423ffac4 	addi	r8,r8,-21
   47368:	4010d0ba 	srli	r8,r8,2
   4736c:	42000044 	addi	r8,r8,1
   47370:	401090ba 	slli	r8,r8,2
   47374:	00000506 	br	4738c <__multiply+0xec>
   47378:	6018d43a 	srli	r12,r12,16
   4737c:	6000231e 	bne	r12,zero,4740c <__multiply+0x16c>
   47380:	10800104 	addi	r2,r2,4
   47384:	21000104 	addi	r4,r4,4
   47388:	12403e2e 	bgeu	r2,r9,47484 <__multiply+0x1e4>
   4738c:	13000017 	ldw	r12,0(r2)
   47390:	63bfffcc 	andi	r14,r12,65535
   47394:	703ff826 	beq	r14,zero,47378 <__multiply+0xd8>
   47398:	201b883a 	mov	r13,r4
   4739c:	5019883a 	mov	r12,r10
   473a0:	001f883a 	mov	r15,zero
   473a4:	61400017 	ldw	r5,0(r12)
   473a8:	6ac00017 	ldw	r11,0(r13)
   473ac:	6b400104 	addi	r13,r13,4
   473b0:	29bfffcc 	andi	r6,r5,65535
   473b4:	338d383a 	mul	r6,r6,r14
   473b8:	2806d43a 	srli	r3,r5,16
   473bc:	597fffcc 	andi	r5,r11,65535
   473c0:	314d883a 	add	r6,r6,r5
   473c4:	33cd883a 	add	r6,r6,r15
   473c8:	1b87383a 	mul	r3,r3,r14
   473cc:	5816d43a 	srli	r11,r11,16
   473d0:	300ad43a 	srli	r5,r6,16
   473d4:	31bfffcc 	andi	r6,r6,65535
   473d8:	1ac7883a 	add	r3,r3,r11
   473dc:	1947883a 	add	r3,r3,r5
   473e0:	180a943a 	slli	r5,r3,16
   473e4:	63000104 	addi	r12,r12,4
   473e8:	181ed43a 	srli	r15,r3,16
   473ec:	298cb03a 	or	r6,r5,r6
   473f0:	69bfff15 	stw	r6,-4(r13)
   473f4:	61ffeb36 	bltu	r12,r7,473a4 <__multiply+0x104>
   473f8:	2207883a 	add	r3,r4,r8
   473fc:	1bc00015 	stw	r15,0(r3)
   47400:	13000017 	ldw	r12,0(r2)
   47404:	6018d43a 	srli	r12,r12,16
   47408:	603fdd26 	beq	r12,zero,47380 <__multiply+0xe0>
   4740c:	20c00017 	ldw	r3,0(r4)
   47410:	201b883a 	mov	r13,r4
   47414:	5017883a 	mov	r11,r10
   47418:	181d883a 	mov	r14,r3
   4741c:	001f883a 	mov	r15,zero
   47420:	5980000b 	ldhu	r6,0(r11)
   47424:	703ed43a 	srli	ra,r14,16
   47428:	197fffcc 	andi	r5,r3,65535
   4742c:	3307383a 	mul	r3,r6,r12
   47430:	5ac00104 	addi	r11,r11,4
   47434:	6b800117 	ldw	r14,4(r13)
   47438:	1fc7883a 	add	r3,r3,ra
   4743c:	1bc7883a 	add	r3,r3,r15
   47440:	181e943a 	slli	r15,r3,16
   47444:	180cd43a 	srli	r6,r3,16
   47448:	77ffffcc 	andi	ra,r14,65535
   4744c:	794ab03a 	or	r5,r15,r5
   47450:	69400015 	stw	r5,0(r13)
   47454:	58ffff8b 	ldhu	r3,-2(r11)
   47458:	6b400104 	addi	r13,r13,4
   4745c:	1b07383a 	mul	r3,r3,r12
   47460:	1fc7883a 	add	r3,r3,ra
   47464:	1987883a 	add	r3,r3,r6
   47468:	181ed43a 	srli	r15,r3,16
   4746c:	59ffec36 	bltu	r11,r7,47420 <__multiply+0x180>
   47470:	220b883a 	add	r5,r4,r8
   47474:	28c00015 	stw	r3,0(r5)
   47478:	10800104 	addi	r2,r2,4
   4747c:	21000104 	addi	r4,r4,4
   47480:	127fc236 	bltu	r2,r9,4738c <__multiply+0xec>
   47484:	04400316 	blt	zero,r17,47494 <__multiply+0x1f4>
   47488:	00000506 	br	474a0 <__multiply+0x200>
   4748c:	8c7fffc4 	addi	r17,r17,-1
   47490:	88000326 	beq	r17,zero,474a0 <__multiply+0x200>
   47494:	80bfff17 	ldw	r2,-4(r16)
   47498:	843fff04 	addi	r16,r16,-4
   4749c:	103ffb26 	beq	r2,zero,4748c <__multiply+0x1ec>
   474a0:	9005883a 	mov	r2,r18
   474a4:	94400415 	stw	r17,16(r18)
   474a8:	dfc00717 	ldw	ra,28(sp)
   474ac:	dd800617 	ldw	r22,24(sp)
   474b0:	dd400517 	ldw	r21,20(sp)
   474b4:	dd000417 	ldw	r20,16(sp)
   474b8:	dcc00317 	ldw	r19,12(sp)
   474bc:	dc800217 	ldw	r18,8(sp)
   474c0:	dc400117 	ldw	r17,4(sp)
   474c4:	dc000017 	ldw	r16,0(sp)
   474c8:	dec00804 	addi	sp,sp,32
   474cc:	f800283a 	ret
   474d0:	02000104 	movi	r8,4
   474d4:	003fad06 	br	4738c <__multiply+0xec>
   474d8:	01c00174 	movhi	r7,5
   474dc:	01000174 	movhi	r4,5
   474e0:	39ff9004 	addi	r7,r7,-448
   474e4:	000d883a 	mov	r6,zero
   474e8:	01405744 	movi	r5,349
   474ec:	213fa404 	addi	r4,r4,-368
   474f0:	0049bd80 	call	49bd8 <__assert_func>

000474f4 <__pow5mult>:
   474f4:	defffb04 	addi	sp,sp,-20
   474f8:	dcc00315 	stw	r19,12(sp)
   474fc:	dc000015 	stw	r16,0(sp)
   47500:	dfc00415 	stw	ra,16(sp)
   47504:	dc800215 	stw	r18,8(sp)
   47508:	dc400115 	stw	r17,4(sp)
   4750c:	308000cc 	andi	r2,r6,3
   47510:	3021883a 	mov	r16,r6
   47514:	2027883a 	mov	r19,r4
   47518:	10002d1e 	bne	r2,zero,475d0 <__pow5mult+0xdc>
   4751c:	2825883a 	mov	r18,r5
   47520:	8021d0ba 	srai	r16,r16,2
   47524:	80001926 	beq	r16,zero,4758c <__pow5mult+0x98>
   47528:	9c401217 	ldw	r17,72(r19)
   4752c:	8800061e 	bne	r17,zero,47548 <__pow5mult+0x54>
   47530:	00002f06 	br	475f0 <__pow5mult+0xfc>
   47534:	8021d07a 	srai	r16,r16,1
   47538:	80001426 	beq	r16,zero,4758c <__pow5mult+0x98>
   4753c:	88800017 	ldw	r2,0(r17)
   47540:	10001a26 	beq	r2,zero,475ac <__pow5mult+0xb8>
   47544:	1023883a 	mov	r17,r2
   47548:	8080004c 	andi	r2,r16,1
   4754c:	103ff926 	beq	r2,zero,47534 <__pow5mult+0x40>
   47550:	880d883a 	mov	r6,r17
   47554:	900b883a 	mov	r5,r18
   47558:	9809883a 	mov	r4,r19
   4755c:	00472a00 	call	472a0 <__multiply>
   47560:	90001926 	beq	r18,zero,475c8 <__pow5mult+0xd4>
   47564:	91000117 	ldw	r4,4(r18)
   47568:	98c01317 	ldw	r3,76(r19)
   4756c:	8021d07a 	srai	r16,r16,1
   47570:	200890ba 	slli	r4,r4,2
   47574:	1907883a 	add	r3,r3,r4
   47578:	19000017 	ldw	r4,0(r3)
   4757c:	91000015 	stw	r4,0(r18)
   47580:	1c800015 	stw	r18,0(r3)
   47584:	1025883a 	mov	r18,r2
   47588:	803fec1e 	bne	r16,zero,4753c <__pow5mult+0x48>
   4758c:	9005883a 	mov	r2,r18
   47590:	dfc00417 	ldw	ra,16(sp)
   47594:	dcc00317 	ldw	r19,12(sp)
   47598:	dc800217 	ldw	r18,8(sp)
   4759c:	dc400117 	ldw	r17,4(sp)
   475a0:	dc000017 	ldw	r16,0(sp)
   475a4:	dec00504 	addi	sp,sp,20
   475a8:	f800283a 	ret
   475ac:	880d883a 	mov	r6,r17
   475b0:	880b883a 	mov	r5,r17
   475b4:	9809883a 	mov	r4,r19
   475b8:	00472a00 	call	472a0 <__multiply>
   475bc:	88800015 	stw	r2,0(r17)
   475c0:	10000015 	stw	zero,0(r2)
   475c4:	003fdf06 	br	47544 <__pow5mult+0x50>
   475c8:	1025883a 	mov	r18,r2
   475cc:	003fd906 	br	47534 <__pow5mult+0x40>
   475d0:	100490ba 	slli	r2,r2,2
   475d4:	00c00174 	movhi	r3,5
   475d8:	000f883a 	mov	r7,zero
   475dc:	10c7883a 	add	r3,r2,r3
   475e0:	19bfb217 	ldw	r6,-312(r3)
   475e4:	0046e6c0 	call	46e6c <__multadd>
   475e8:	1025883a 	mov	r18,r2
   475ec:	003fcc06 	br	47520 <__pow5mult+0x2c>
   475f0:	01400044 	movi	r5,1
   475f4:	9809883a 	mov	r4,r19
   475f8:	0046da40 	call	46da4 <_Balloc>
   475fc:	1023883a 	mov	r17,r2
   47600:	10000726 	beq	r2,zero,47620 <__pow5mult+0x12c>
   47604:	00809c44 	movi	r2,625
   47608:	88800515 	stw	r2,20(r17)
   4760c:	00800044 	movi	r2,1
   47610:	88800415 	stw	r2,16(r17)
   47614:	9c401215 	stw	r17,72(r19)
   47618:	88000015 	stw	zero,0(r17)
   4761c:	003fca06 	br	47548 <__pow5mult+0x54>
   47620:	01c00174 	movhi	r7,5
   47624:	01000174 	movhi	r4,5
   47628:	39ff9004 	addi	r7,r7,-448
   4762c:	000d883a 	mov	r6,zero
   47630:	01405004 	movi	r5,320
   47634:	213fa404 	addi	r4,r4,-368
   47638:	0049bd80 	call	49bd8 <__assert_func>

0004763c <__lshift>:
   4763c:	defff804 	addi	sp,sp,-32
   47640:	dd800615 	stw	r22,24(sp)
   47644:	dc000015 	stw	r16,0(sp)
   47648:	302dd17a 	srai	r22,r6,5
   4764c:	2c000417 	ldw	r16,16(r5)
   47650:	28800217 	ldw	r2,8(r5)
   47654:	dd000415 	stw	r20,16(sp)
   47658:	b421883a 	add	r16,r22,r16
   4765c:	dcc00315 	stw	r19,12(sp)
   47660:	dc800215 	stw	r18,8(sp)
   47664:	dc400115 	stw	r17,4(sp)
   47668:	dfc00715 	stw	ra,28(sp)
   4766c:	dd400515 	stw	r21,20(sp)
   47670:	85000044 	addi	r20,r16,1
   47674:	2827883a 	mov	r19,r5
   47678:	3025883a 	mov	r18,r6
   4767c:	29400117 	ldw	r5,4(r5)
   47680:	2023883a 	mov	r17,r4
   47684:	1500030e 	bge	r2,r20,47694 <__lshift+0x58>
   47688:	1085883a 	add	r2,r2,r2
   4768c:	29400044 	addi	r5,r5,1
   47690:	153ffd16 	blt	r2,r20,47688 <__lshift+0x4c>
   47694:	8809883a 	mov	r4,r17
   47698:	0046da40 	call	46da4 <_Balloc>
   4769c:	102b883a 	mov	r21,r2
   476a0:	10004126 	beq	r2,zero,477a8 <__lshift+0x16c>
   476a4:	11000504 	addi	r4,r2,20
   476a8:	0580050e 	bge	zero,r22,476c0 <__lshift+0x84>
   476ac:	b02c90ba 	slli	r22,r22,2
   476b0:	000b883a 	mov	r5,zero
   476b4:	b00d883a 	mov	r6,r22
   476b8:	0046cb40 	call	46cb4 <memset>
   476bc:	1589883a 	add	r4,r2,r22
   476c0:	9a000417 	ldw	r8,16(r19)
   476c4:	98c00504 	addi	r3,r19,20
   476c8:	948007cc 	andi	r18,r18,31
   476cc:	401090ba 	slli	r8,r8,2
   476d0:	1a11883a 	add	r8,r3,r8
   476d4:	90002c26 	beq	r18,zero,47788 <__lshift+0x14c>
   476d8:	01400804 	movi	r5,32
   476dc:	2c8bc83a 	sub	r5,r5,r18
   476e0:	2005883a 	mov	r2,r4
   476e4:	000f883a 	mov	r7,zero
   476e8:	19800017 	ldw	r6,0(r3)
   476ec:	10800104 	addi	r2,r2,4
   476f0:	18c00104 	addi	r3,r3,4
   476f4:	348c983a 	sll	r6,r6,r18
   476f8:	31ccb03a 	or	r6,r6,r7
   476fc:	11bfff15 	stw	r6,-4(r2)
   47700:	19bfff17 	ldw	r6,-4(r3)
   47704:	314ed83a 	srl	r7,r6,r5
   47708:	1a3ff736 	bltu	r3,r8,476e8 <__lshift+0xac>
   4770c:	98800544 	addi	r2,r19,21
   47710:	40802336 	bltu	r8,r2,477a0 <__lshift+0x164>
   47714:	44c7c83a 	sub	r3,r8,r19
   47718:	18fffac4 	addi	r3,r3,-21
   4771c:	1806d0ba 	srli	r3,r3,2
   47720:	18c00044 	addi	r3,r3,1
   47724:	180690ba 	slli	r3,r3,2
   47728:	20c9883a 	add	r4,r4,r3
   4772c:	21c00015 	stw	r7,0(r4)
   47730:	38000126 	beq	r7,zero,47738 <__lshift+0xfc>
   47734:	a021883a 	mov	r16,r20
   47738:	ac000415 	stw	r16,16(r21)
   4773c:	98000726 	beq	r19,zero,4775c <__lshift+0x120>
   47740:	98c00117 	ldw	r3,4(r19)
   47744:	88801317 	ldw	r2,76(r17)
   47748:	180690ba 	slli	r3,r3,2
   4774c:	10c5883a 	add	r2,r2,r3
   47750:	10c00017 	ldw	r3,0(r2)
   47754:	98c00015 	stw	r3,0(r19)
   47758:	14c00015 	stw	r19,0(r2)
   4775c:	a805883a 	mov	r2,r21
   47760:	dfc00717 	ldw	ra,28(sp)
   47764:	dd800617 	ldw	r22,24(sp)
   47768:	dd400517 	ldw	r21,20(sp)
   4776c:	dd000417 	ldw	r20,16(sp)
   47770:	dcc00317 	ldw	r19,12(sp)
   47774:	dc800217 	ldw	r18,8(sp)
   47778:	dc400117 	ldw	r17,4(sp)
   4777c:	dc000017 	ldw	r16,0(sp)
   47780:	dec00804 	addi	sp,sp,32
   47784:	f800283a 	ret
   47788:	18800017 	ldw	r2,0(r3)
   4778c:	18c00104 	addi	r3,r3,4
   47790:	21000104 	addi	r4,r4,4
   47794:	20bfff15 	stw	r2,-4(r4)
   47798:	1a3ffb36 	bltu	r3,r8,47788 <__lshift+0x14c>
   4779c:	003fe606 	br	47738 <__lshift+0xfc>
   477a0:	00c00104 	movi	r3,4
   477a4:	003fe006 	br	47728 <__lshift+0xec>
   477a8:	01c00174 	movhi	r7,5
   477ac:	01000174 	movhi	r4,5
   477b0:	39ff9004 	addi	r7,r7,-448
   477b4:	000d883a 	mov	r6,zero
   477b8:	01407644 	movi	r5,473
   477bc:	213fa404 	addi	r4,r4,-368
   477c0:	0049bd80 	call	49bd8 <__assert_func>

000477c4 <__mcmp>:
   477c4:	21800417 	ldw	r6,16(r4)
   477c8:	28c00417 	ldw	r3,16(r5)
   477cc:	30c5c83a 	sub	r2,r6,r3
   477d0:	30c00e1e 	bne	r6,r3,4780c <__mcmp+0x48>
   477d4:	180690ba 	slli	r3,r3,2
   477d8:	21c00504 	addi	r7,r4,20
   477dc:	29400504 	addi	r5,r5,20
   477e0:	38c9883a 	add	r4,r7,r3
   477e4:	28c7883a 	add	r3,r5,r3
   477e8:	00000106 	br	477f0 <__mcmp+0x2c>
   477ec:	3900082e 	bgeu	r7,r4,47810 <__mcmp+0x4c>
   477f0:	21bfff17 	ldw	r6,-4(r4)
   477f4:	197fff17 	ldw	r5,-4(r3)
   477f8:	213fff04 	addi	r4,r4,-4
   477fc:	18ffff04 	addi	r3,r3,-4
   47800:	317ffa26 	beq	r6,r5,477ec <__mcmp+0x28>
   47804:	3140032e 	bgeu	r6,r5,47814 <__mcmp+0x50>
   47808:	00bfffc4 	movi	r2,-1
   4780c:	f800283a 	ret
   47810:	f800283a 	ret
   47814:	00800044 	movi	r2,1
   47818:	f800283a 	ret

0004781c <__mdiff>:
   4781c:	28800417 	ldw	r2,16(r5)
   47820:	30c00417 	ldw	r3,16(r6)
   47824:	defffc04 	addi	sp,sp,-16
   47828:	dc800215 	stw	r18,8(sp)
   4782c:	dc400115 	stw	r17,4(sp)
   47830:	dc000015 	stw	r16,0(sp)
   47834:	dfc00315 	stw	ra,12(sp)
   47838:	2823883a 	mov	r17,r5
   4783c:	3021883a 	mov	r16,r6
   47840:	10e5c83a 	sub	r18,r2,r3
   47844:	10c0641e 	bne	r2,r3,479d8 <__mdiff+0x1bc>
   47848:	180c90ba 	slli	r6,r3,2
   4784c:	29400504 	addi	r5,r5,20
   47850:	80c00504 	addi	r3,r16,20
   47854:	2985883a 	add	r2,r5,r6
   47858:	1987883a 	add	r3,r3,r6
   4785c:	00000106 	br	47864 <__mdiff+0x48>
   47860:	2880642e 	bgeu	r5,r2,479f4 <__mdiff+0x1d8>
   47864:	11bfff17 	ldw	r6,-4(r2)
   47868:	19ffff17 	ldw	r7,-4(r3)
   4786c:	10bfff04 	addi	r2,r2,-4
   47870:	18ffff04 	addi	r3,r3,-4
   47874:	31fffa26 	beq	r6,r7,47860 <__mdiff+0x44>
   47878:	31c05236 	bltu	r6,r7,479c4 <__mdiff+0x1a8>
   4787c:	89400117 	ldw	r5,4(r17)
   47880:	0046da40 	call	46da4 <_Balloc>
   47884:	10006226 	beq	r2,zero,47a10 <__mdiff+0x1f4>
   47888:	8a400417 	ldw	r9,16(r17)
   4788c:	83000417 	ldw	r12,16(r16)
   47890:	8ac00504 	addi	r11,r17,20
   47894:	481090ba 	slli	r8,r9,2
   47898:	601890ba 	slli	r12,r12,2
   4789c:	81800504 	addi	r6,r16,20
   478a0:	13400504 	addi	r13,r2,20
   478a4:	14800315 	stw	r18,12(r2)
   478a8:	5a11883a 	add	r8,r11,r8
   478ac:	3319883a 	add	r12,r6,r12
   478b0:	681d883a 	mov	r14,r13
   478b4:	5815883a 	mov	r10,r11
   478b8:	0007883a 	mov	r3,zero
   478bc:	51000017 	ldw	r4,0(r10)
   478c0:	31c00017 	ldw	r7,0(r6)
   478c4:	73800104 	addi	r14,r14,4
   478c8:	217fffcc 	andi	r5,r4,65535
   478cc:	28cb883a 	add	r5,r5,r3
   478d0:	38ffffcc 	andi	r3,r7,65535
   478d4:	28cbc83a 	sub	r5,r5,r3
   478d8:	380ed43a 	srli	r7,r7,16
   478dc:	2006d43a 	srli	r3,r4,16
   478e0:	2809d43a 	srai	r4,r5,16
   478e4:	297fffcc 	andi	r5,r5,65535
   478e8:	19c7c83a 	sub	r3,r3,r7
   478ec:	1907883a 	add	r3,r3,r4
   478f0:	1808943a 	slli	r4,r3,16
   478f4:	31800104 	addi	r6,r6,4
   478f8:	1807d43a 	srai	r3,r3,16
   478fc:	214ab03a 	or	r5,r4,r5
   47900:	717fff15 	stw	r5,-4(r14)
   47904:	52800104 	addi	r10,r10,4
   47908:	333fec36 	bltu	r6,r12,478bc <__mdiff+0xa0>
   4790c:	640fc83a 	sub	r7,r12,r16
   47910:	39fffac4 	addi	r7,r7,-21
   47914:	84000544 	addi	r16,r16,21
   47918:	380ed0ba 	srli	r7,r7,2
   4791c:	64003336 	bltu	r12,r16,479ec <__mdiff+0x1d0>
   47920:	380890ba 	slli	r4,r7,2
   47924:	6909883a 	add	r4,r13,r4
   47928:	64002e36 	bltu	r12,r16,479e4 <__mdiff+0x1c8>
   4792c:	39800044 	addi	r6,r7,1
   47930:	300c90ba 	slli	r6,r6,2
   47934:	5997883a 	add	r11,r11,r6
   47938:	699b883a 	add	r13,r13,r6
   4793c:	5a00152e 	bgeu	r11,r8,47994 <__mdiff+0x178>
   47940:	680f883a 	mov	r7,r13
   47944:	580d883a 	mov	r6,r11
   47948:	31000017 	ldw	r4,0(r6)
   4794c:	39c00104 	addi	r7,r7,4
   47950:	31800104 	addi	r6,r6,4
   47954:	217fffcc 	andi	r5,r4,65535
   47958:	28cb883a 	add	r5,r5,r3
   4795c:	2815d43a 	srai	r10,r5,16
   47960:	2006d43a 	srli	r3,r4,16
   47964:	297fffcc 	andi	r5,r5,65535
   47968:	1a87883a 	add	r3,r3,r10
   4796c:	1814943a 	slli	r10,r3,16
   47970:	1807d43a 	srai	r3,r3,16
   47974:	514ab03a 	or	r5,r10,r5
   47978:	397fff15 	stw	r5,-4(r7)
   4797c:	323ff236 	bltu	r6,r8,47948 <__mdiff+0x12c>
   47980:	413fffc4 	addi	r4,r8,-1
   47984:	22c9c83a 	sub	r4,r4,r11
   47988:	2008d0ba 	srli	r4,r4,2
   4798c:	200890ba 	slli	r4,r4,2
   47990:	6909883a 	add	r4,r13,r4
   47994:	2800041e 	bne	r5,zero,479a8 <__mdiff+0x18c>
   47998:	20ffff17 	ldw	r3,-4(r4)
   4799c:	4a7fffc4 	addi	r9,r9,-1
   479a0:	213fff04 	addi	r4,r4,-4
   479a4:	183ffc26 	beq	r3,zero,47998 <__mdiff+0x17c>
   479a8:	12400415 	stw	r9,16(r2)
   479ac:	dfc00317 	ldw	ra,12(sp)
   479b0:	dc800217 	ldw	r18,8(sp)
   479b4:	dc400117 	ldw	r17,4(sp)
   479b8:	dc000017 	ldw	r16,0(sp)
   479bc:	dec00404 	addi	sp,sp,16
   479c0:	f800283a 	ret
   479c4:	8805883a 	mov	r2,r17
   479c8:	04800044 	movi	r18,1
   479cc:	8023883a 	mov	r17,r16
   479d0:	1021883a 	mov	r16,r2
   479d4:	003fa906 	br	4787c <__mdiff+0x60>
   479d8:	903ffa16 	blt	r18,zero,479c4 <__mdiff+0x1a8>
   479dc:	0025883a 	mov	r18,zero
   479e0:	003fa606 	br	4787c <__mdiff+0x60>
   479e4:	01800104 	movi	r6,4
   479e8:	003fd206 	br	47934 <__mdiff+0x118>
   479ec:	0009883a 	mov	r4,zero
   479f0:	003fcc06 	br	47924 <__mdiff+0x108>
   479f4:	000b883a 	mov	r5,zero
   479f8:	0046da40 	call	46da4 <_Balloc>
   479fc:	10000b26 	beq	r2,zero,47a2c <__mdiff+0x210>
   47a00:	00c00044 	movi	r3,1
   47a04:	10c00415 	stw	r3,16(r2)
   47a08:	10000515 	stw	zero,20(r2)
   47a0c:	003fe706 	br	479ac <__mdiff+0x190>
   47a10:	01c00174 	movhi	r7,5
   47a14:	01000174 	movhi	r4,5
   47a18:	39ff9004 	addi	r7,r7,-448
   47a1c:	000d883a 	mov	r6,zero
   47a20:	01409004 	movi	r5,576
   47a24:	213fa404 	addi	r4,r4,-368
   47a28:	0049bd80 	call	49bd8 <__assert_func>
   47a2c:	01c00174 	movhi	r7,5
   47a30:	01000174 	movhi	r4,5
   47a34:	39ff9004 	addi	r7,r7,-448
   47a38:	000d883a 	mov	r6,zero
   47a3c:	01408c84 	movi	r5,562
   47a40:	213fa404 	addi	r4,r4,-368
   47a44:	0049bd80 	call	49bd8 <__assert_func>

00047a48 <__ulp>:
   47a48:	28dffc2c 	andhi	r3,r5,32752
   47a4c:	017f3034 	movhi	r5,64704
   47a50:	1947883a 	add	r3,r3,r5
   47a54:	00c0020e 	bge	zero,r3,47a60 <__ulp+0x18>
   47a58:	0005883a 	mov	r2,zero
   47a5c:	f800283a 	ret
   47a60:	00c7c83a 	sub	r3,zero,r3
   47a64:	1807d53a 	srai	r3,r3,20
   47a68:	18800508 	cmpgei	r2,r3,20
   47a6c:	1000041e 	bne	r2,zero,47a80 <__ulp+0x38>
   47a70:	00800234 	movhi	r2,8
   47a74:	10c7d83a 	sra	r3,r2,r3
   47a78:	0005883a 	mov	r2,zero
   47a7c:	f800283a 	ret
   47a80:	193ffb04 	addi	r4,r3,-20
   47a84:	208007c8 	cmpgei	r2,r4,31
   47a88:	0007883a 	mov	r3,zero
   47a8c:	1000031e 	bne	r2,zero,47a9c <__ulp+0x54>
   47a90:	00a00034 	movhi	r2,32768
   47a94:	1104d83a 	srl	r2,r2,r4
   47a98:	f800283a 	ret
   47a9c:	00800044 	movi	r2,1
   47aa0:	f800283a 	ret

00047aa4 <__b2d>:
   47aa4:	defffa04 	addi	sp,sp,-24
   47aa8:	dc400115 	stw	r17,4(sp)
   47aac:	24400417 	ldw	r17,16(r4)
   47ab0:	dc000015 	stw	r16,0(sp)
   47ab4:	24000504 	addi	r16,r4,20
   47ab8:	882290ba 	slli	r17,r17,2
   47abc:	dc800215 	stw	r18,8(sp)
   47ac0:	dd000415 	stw	r20,16(sp)
   47ac4:	8463883a 	add	r17,r16,r17
   47ac8:	8cbfff17 	ldw	r18,-4(r17)
   47acc:	dcc00315 	stw	r19,12(sp)
   47ad0:	dfc00515 	stw	ra,20(sp)
   47ad4:	9009883a 	mov	r4,r18
   47ad8:	2827883a 	mov	r19,r5
   47adc:	00470dc0 	call	470dc <__hi0bits>
   47ae0:	00c00804 	movi	r3,32
   47ae4:	1889c83a 	sub	r4,r3,r2
   47ae8:	99000015 	stw	r4,0(r19)
   47aec:	110002c8 	cmpgei	r4,r2,11
   47af0:	8d3fff04 	addi	r20,r17,-4
   47af4:	20002026 	beq	r4,zero,47b78 <__b2d+0xd4>
   47af8:	10bffd44 	addi	r2,r2,-11
   47afc:	85000e2e 	bgeu	r16,r20,47b38 <__b2d+0x94>
   47b00:	897ffe17 	ldw	r5,-8(r17)
   47b04:	10001226 	beq	r2,zero,47b50 <__b2d+0xac>
   47b08:	1889c83a 	sub	r4,r3,r2
   47b0c:	90a4983a 	sll	r18,r18,r2
   47b10:	2906d83a 	srl	r3,r5,r4
   47b14:	89bffe04 	addi	r6,r17,-8
   47b18:	2884983a 	sll	r2,r5,r2
   47b1c:	90e4b03a 	or	r18,r18,r3
   47b20:	90cffc34 	orhi	r3,r18,16368
   47b24:	81800c2e 	bgeu	r16,r6,47b58 <__b2d+0xb4>
   47b28:	897ffd17 	ldw	r5,-12(r17)
   47b2c:	2908d83a 	srl	r4,r5,r4
   47b30:	1104b03a 	or	r2,r2,r4
   47b34:	00000806 	br	47b58 <__b2d+0xb4>
   47b38:	10000426 	beq	r2,zero,47b4c <__b2d+0xa8>
   47b3c:	90a4983a 	sll	r18,r18,r2
   47b40:	0005883a 	mov	r2,zero
   47b44:	90cffc34 	orhi	r3,r18,16368
   47b48:	00000306 	br	47b58 <__b2d+0xb4>
   47b4c:	000b883a 	mov	r5,zero
   47b50:	90cffc34 	orhi	r3,r18,16368
   47b54:	2805883a 	mov	r2,r5
   47b58:	dfc00517 	ldw	ra,20(sp)
   47b5c:	dd000417 	ldw	r20,16(sp)
   47b60:	dcc00317 	ldw	r19,12(sp)
   47b64:	dc800217 	ldw	r18,8(sp)
   47b68:	dc400117 	ldw	r17,4(sp)
   47b6c:	dc000017 	ldw	r16,0(sp)
   47b70:	dec00604 	addi	sp,sp,24
   47b74:	f800283a 	ret
   47b78:	014002c4 	movi	r5,11
   47b7c:	2889c83a 	sub	r4,r5,r2
   47b80:	9106d83a 	srl	r3,r18,r4
   47b84:	18cffc34 	orhi	r3,r3,16368
   47b88:	85000536 	bltu	r16,r20,47ba0 <__b2d+0xfc>
   47b8c:	000b883a 	mov	r5,zero
   47b90:	10800544 	addi	r2,r2,21
   47b94:	9084983a 	sll	r2,r18,r2
   47b98:	1144b03a 	or	r2,r2,r5
   47b9c:	003fee06 	br	47b58 <__b2d+0xb4>
   47ba0:	897ffe17 	ldw	r5,-8(r17)
   47ba4:	290ad83a 	srl	r5,r5,r4
   47ba8:	003ff906 	br	47b90 <__b2d+0xec>

00047bac <__d2b>:
   47bac:	defff804 	addi	sp,sp,-32
   47bb0:	dd000615 	stw	r20,24(sp)
   47bb4:	2829883a 	mov	r20,r5
   47bb8:	01400044 	movi	r5,1
   47bbc:	dcc00515 	stw	r19,20(sp)
   47bc0:	dc000215 	stw	r16,8(sp)
   47bc4:	dfc00715 	stw	ra,28(sp)
   47bc8:	dc800415 	stw	r18,16(sp)
   47bcc:	dc400315 	stw	r17,12(sp)
   47bd0:	3021883a 	mov	r16,r6
   47bd4:	3827883a 	mov	r19,r7
   47bd8:	0046da40 	call	46da4 <_Balloc>
   47bdc:	10004526 	beq	r2,zero,47cf4 <__d2b+0x148>
   47be0:	8024d53a 	srli	r18,r16,20
   47be4:	01800434 	movhi	r6,16
   47be8:	31bfffc4 	addi	r6,r6,-1
   47bec:	9481ffcc 	andi	r18,r18,2047
   47bf0:	1023883a 	mov	r17,r2
   47bf4:	81a0703a 	and	r16,r16,r6
   47bf8:	90000126 	beq	r18,zero,47c00 <__d2b+0x54>
   47bfc:	84000434 	orhi	r16,r16,16
   47c00:	dc000115 	stw	r16,4(sp)
   47c04:	a0002226 	beq	r20,zero,47c90 <__d2b+0xe4>
   47c08:	d809883a 	mov	r4,sp
   47c0c:	dd000015 	stw	r20,0(sp)
   47c10:	00471400 	call	47140 <__lo0bits>
   47c14:	d8c00117 	ldw	r3,4(sp)
   47c18:	10003326 	beq	r2,zero,47ce8 <__d2b+0x13c>
   47c1c:	01000804 	movi	r4,32
   47c20:	2089c83a 	sub	r4,r4,r2
   47c24:	1908983a 	sll	r4,r3,r4
   47c28:	d9400017 	ldw	r5,0(sp)
   47c2c:	1886d83a 	srl	r3,r3,r2
   47c30:	2148b03a 	or	r4,r4,r5
   47c34:	89000515 	stw	r4,20(r17)
   47c38:	d8c00115 	stw	r3,4(sp)
   47c3c:	88c00615 	stw	r3,24(r17)
   47c40:	1800271e 	bne	r3,zero,47ce0 <__d2b+0x134>
   47c44:	04000044 	movi	r16,1
   47c48:	8c000415 	stw	r16,16(r17)
   47c4c:	90001926 	beq	r18,zero,47cb4 <__d2b+0x108>
   47c50:	00c00d44 	movi	r3,53
   47c54:	94bef344 	addi	r18,r18,-1075
   47c58:	90a5883a 	add	r18,r18,r2
   47c5c:	1885c83a 	sub	r2,r3,r2
   47c60:	d8c00817 	ldw	r3,32(sp)
   47c64:	9c800015 	stw	r18,0(r19)
   47c68:	18800015 	stw	r2,0(r3)
   47c6c:	8805883a 	mov	r2,r17
   47c70:	dfc00717 	ldw	ra,28(sp)
   47c74:	dd000617 	ldw	r20,24(sp)
   47c78:	dcc00517 	ldw	r19,20(sp)
   47c7c:	dc800417 	ldw	r18,16(sp)
   47c80:	dc400317 	ldw	r17,12(sp)
   47c84:	dc000217 	ldw	r16,8(sp)
   47c88:	dec00804 	addi	sp,sp,32
   47c8c:	f800283a 	ret
   47c90:	d9000104 	addi	r4,sp,4
   47c94:	00471400 	call	47140 <__lo0bits>
   47c98:	00c00044 	movi	r3,1
   47c9c:	88c00415 	stw	r3,16(r17)
   47ca0:	d8c00117 	ldw	r3,4(sp)
   47ca4:	10800804 	addi	r2,r2,32
   47ca8:	04000044 	movi	r16,1
   47cac:	88c00515 	stw	r3,20(r17)
   47cb0:	903fe71e 	bne	r18,zero,47c50 <__d2b+0xa4>
   47cb4:	800690ba 	slli	r3,r16,2
   47cb8:	10bef384 	addi	r2,r2,-1074
   47cbc:	98800015 	stw	r2,0(r19)
   47cc0:	88c5883a 	add	r2,r17,r3
   47cc4:	11000417 	ldw	r4,16(r2)
   47cc8:	8020917a 	slli	r16,r16,5
   47ccc:	00470dc0 	call	470dc <__hi0bits>
   47cd0:	80a1c83a 	sub	r16,r16,r2
   47cd4:	d8800817 	ldw	r2,32(sp)
   47cd8:	14000015 	stw	r16,0(r2)
   47cdc:	003fe306 	br	47c6c <__d2b+0xc0>
   47ce0:	04000084 	movi	r16,2
   47ce4:	003fd806 	br	47c48 <__d2b+0x9c>
   47ce8:	d9000017 	ldw	r4,0(sp)
   47cec:	89000515 	stw	r4,20(r17)
   47cf0:	003fd206 	br	47c3c <__d2b+0x90>
   47cf4:	01c00174 	movhi	r7,5
   47cf8:	01000174 	movhi	r4,5
   47cfc:	39ff9004 	addi	r7,r7,-448
   47d00:	000d883a 	mov	r6,zero
   47d04:	0140c284 	movi	r5,778
   47d08:	213fa404 	addi	r4,r4,-368
   47d0c:	0049bd80 	call	49bd8 <__assert_func>

00047d10 <__ratio>:
   47d10:	defff904 	addi	sp,sp,-28
   47d14:	dc400315 	stw	r17,12(sp)
   47d18:	2823883a 	mov	r17,r5
   47d1c:	d80b883a 	mov	r5,sp
   47d20:	dfc00615 	stw	ra,24(sp)
   47d24:	dcc00515 	stw	r19,20(sp)
   47d28:	dc800415 	stw	r18,16(sp)
   47d2c:	2027883a 	mov	r19,r4
   47d30:	dc000215 	stw	r16,8(sp)
   47d34:	0047aa40 	call	47aa4 <__b2d>
   47d38:	d9400104 	addi	r5,sp,4
   47d3c:	8809883a 	mov	r4,r17
   47d40:	1025883a 	mov	r18,r2
   47d44:	1821883a 	mov	r16,r3
   47d48:	0047aa40 	call	47aa4 <__b2d>
   47d4c:	89000417 	ldw	r4,16(r17)
   47d50:	9a000417 	ldw	r8,16(r19)
   47d54:	d9400117 	ldw	r5,4(sp)
   47d58:	100d883a 	mov	r6,r2
   47d5c:	4111c83a 	sub	r8,r8,r4
   47d60:	d9000017 	ldw	r4,0(sp)
   47d64:	4010917a 	slli	r8,r8,5
   47d68:	180f883a 	mov	r7,r3
   47d6c:	2149c83a 	sub	r4,r4,r5
   47d70:	4111883a 	add	r8,r8,r4
   47d74:	02000c0e 	bge	zero,r8,47da8 <__ratio+0x98>
   47d78:	4010953a 	slli	r8,r8,20
   47d7c:	4421883a 	add	r16,r8,r16
   47d80:	9009883a 	mov	r4,r18
   47d84:	800b883a 	mov	r5,r16
   47d88:	00405040 	call	40504 <__divdf3>
   47d8c:	dfc00617 	ldw	ra,24(sp)
   47d90:	dcc00517 	ldw	r19,20(sp)
   47d94:	dc800417 	ldw	r18,16(sp)
   47d98:	dc400317 	ldw	r17,12(sp)
   47d9c:	dc000217 	ldw	r16,8(sp)
   47da0:	dec00704 	addi	sp,sp,28
   47da4:	f800283a 	ret
   47da8:	00bffc34 	movhi	r2,65520
   47dac:	4091383a 	mul	r8,r8,r2
   47db0:	40cf883a 	add	r7,r8,r3
   47db4:	003ff206 	br	47d80 <__ratio+0x70>

00047db8 <_mprec_log10>:
   47db8:	defffe04 	addi	sp,sp,-8
   47dbc:	dc000015 	stw	r16,0(sp)
   47dc0:	dfc00115 	stw	ra,4(sp)
   47dc4:	20800608 	cmpgei	r2,r4,24
   47dc8:	2021883a 	mov	r16,r4
   47dcc:	10000f26 	beq	r2,zero,47e0c <_mprec_log10+0x54>
   47dd0:	0009883a 	mov	r4,zero
   47dd4:	014ffc34 	movhi	r5,16368
   47dd8:	000d883a 	mov	r6,zero
   47ddc:	01d00934 	movhi	r7,16420
   47de0:	004c2780 	call	4c278 <__muldf3>
   47de4:	843fffc4 	addi	r16,r16,-1
   47de8:	1009883a 	mov	r4,r2
   47dec:	180b883a 	mov	r5,r3
   47df0:	803ff91e 	bne	r16,zero,47dd8 <_mprec_log10+0x20>
   47df4:	2005883a 	mov	r2,r4
   47df8:	2807883a 	mov	r3,r5
   47dfc:	dfc00117 	ldw	ra,4(sp)
   47e00:	dc000017 	ldw	r16,0(sp)
   47e04:	dec00204 	addi	sp,sp,8
   47e08:	f800283a 	ret
   47e0c:	202090fa 	slli	r16,r4,3
   47e10:	00800174 	movhi	r2,5
   47e14:	10bfca04 	addi	r2,r2,-216
   47e18:	1421883a 	add	r16,r2,r16
   47e1c:	81000017 	ldw	r4,0(r16)
   47e20:	81400117 	ldw	r5,4(r16)
   47e24:	003ff306 	br	47df4 <_mprec_log10+0x3c>

00047e28 <__copybits>:
   47e28:	297fffc4 	addi	r5,r5,-1
   47e2c:	280fd17a 	srai	r7,r5,5
   47e30:	31400417 	ldw	r5,16(r6)
   47e34:	30800504 	addi	r2,r6,20
   47e38:	39c00044 	addi	r7,r7,1
   47e3c:	280a90ba 	slli	r5,r5,2
   47e40:	380e90ba 	slli	r7,r7,2
   47e44:	114b883a 	add	r5,r2,r5
   47e48:	21cf883a 	add	r7,r4,r7
   47e4c:	11400c2e 	bgeu	r2,r5,47e80 <__copybits+0x58>
   47e50:	2007883a 	mov	r3,r4
   47e54:	12000017 	ldw	r8,0(r2)
   47e58:	10800104 	addi	r2,r2,4
   47e5c:	18c00104 	addi	r3,r3,4
   47e60:	1a3fff15 	stw	r8,-4(r3)
   47e64:	117ffb36 	bltu	r2,r5,47e54 <__copybits+0x2c>
   47e68:	2985c83a 	sub	r2,r5,r6
   47e6c:	10bffac4 	addi	r2,r2,-21
   47e70:	1004d0ba 	srli	r2,r2,2
   47e74:	10800044 	addi	r2,r2,1
   47e78:	100490ba 	slli	r2,r2,2
   47e7c:	2089883a 	add	r4,r4,r2
   47e80:	21c0072e 	bgeu	r4,r7,47ea0 <__copybits+0x78>
   47e84:	39bfffc4 	addi	r6,r7,-1
   47e88:	310dc83a 	sub	r6,r6,r4
   47e8c:	300cd0ba 	srli	r6,r6,2
   47e90:	000b883a 	mov	r5,zero
   47e94:	31800044 	addi	r6,r6,1
   47e98:	300c90ba 	slli	r6,r6,2
   47e9c:	0046cb41 	jmpi	46cb4 <memset>
   47ea0:	f800283a 	ret

00047ea4 <__any_on>:
   47ea4:	20c00417 	ldw	r3,16(r4)
   47ea8:	280dd17a 	srai	r6,r5,5
   47eac:	21000504 	addi	r4,r4,20
   47eb0:	1980080e 	bge	r3,r6,47ed4 <__any_on+0x30>
   47eb4:	180490ba 	slli	r2,r3,2
   47eb8:	2085883a 	add	r2,r4,r2
   47ebc:	20800f2e 	bgeu	r4,r2,47efc <__any_on+0x58>
   47ec0:	10ffff17 	ldw	r3,-4(r2)
   47ec4:	10bfff04 	addi	r2,r2,-4
   47ec8:	183ffc26 	beq	r3,zero,47ebc <__any_on+0x18>
   47ecc:	00800044 	movi	r2,1
   47ed0:	f800283a 	ret
   47ed4:	300490ba 	slli	r2,r6,2
   47ed8:	2085883a 	add	r2,r4,r2
   47edc:	30fff70e 	bge	r6,r3,47ebc <__any_on+0x18>
   47ee0:	294007cc 	andi	r5,r5,31
   47ee4:	283ff526 	beq	r5,zero,47ebc <__any_on+0x18>
   47ee8:	11800017 	ldw	r6,0(r2)
   47eec:	3146d83a 	srl	r3,r6,r5
   47ef0:	194a983a 	sll	r5,r3,r5
   47ef4:	317ff51e 	bne	r6,r5,47ecc <__any_on+0x28>
   47ef8:	003ff006 	br	47ebc <__any_on+0x18>
   47efc:	0005883a 	mov	r2,zero
   47f00:	f800283a 	ret

00047f04 <_realloc_r>:
   47f04:	defff504 	addi	sp,sp,-44
   47f08:	dc800315 	stw	r18,12(sp)
   47f0c:	dfc00a15 	stw	ra,40(sp)
   47f10:	df000915 	stw	fp,36(sp)
   47f14:	ddc00815 	stw	r23,32(sp)
   47f18:	dd800715 	stw	r22,28(sp)
   47f1c:	dd400615 	stw	r21,24(sp)
   47f20:	dd000515 	stw	r20,20(sp)
   47f24:	dcc00415 	stw	r19,16(sp)
   47f28:	dc400215 	stw	r17,8(sp)
   47f2c:	dc000115 	stw	r16,4(sp)
   47f30:	3025883a 	mov	r18,r6
   47f34:	28008b26 	beq	r5,zero,48164 <_realloc_r+0x260>
   47f38:	2821883a 	mov	r16,r5
   47f3c:	2027883a 	mov	r19,r4
   47f40:	944002c4 	addi	r17,r18,11
   47f44:	004daf80 	call	4daf8 <__malloc_lock>
   47f48:	888005f0 	cmpltui	r2,r17,23
   47f4c:	1000521e 	bne	r2,zero,48098 <_realloc_r+0x194>
   47f50:	017ffe04 	movi	r5,-8
   47f54:	8962703a 	and	r17,r17,r5
   47f58:	8807883a 	mov	r3,r17
   47f5c:	88005116 	blt	r17,zero,480a4 <_realloc_r+0x1a0>
   47f60:	8c805036 	bltu	r17,r18,480a4 <_realloc_r+0x1a0>
   47f64:	80bfff17 	ldw	r2,-4(r16)
   47f68:	017fff04 	movi	r5,-4
   47f6c:	857ffe04 	addi	r21,r16,-8
   47f70:	1168703a 	and	r20,r2,r5
   47f74:	ad2d883a 	add	r22,r21,r20
   47f78:	a0c0390e 	bge	r20,r3,48060 <_realloc_r+0x15c>
   47f7c:	07000174 	movhi	fp,5
   47f80:	e701cd04 	addi	fp,fp,1844
   47f84:	e2000217 	ldw	r8,8(fp)
   47f88:	b1000117 	ldw	r4,4(r22)
   47f8c:	45808e26 	beq	r8,r22,481c8 <_realloc_r+0x2c4>
   47f90:	01bfff84 	movi	r6,-2
   47f94:	218c703a 	and	r6,r4,r6
   47f98:	b18d883a 	add	r6,r22,r6
   47f9c:	31800117 	ldw	r6,4(r6)
   47fa0:	3180004c 	andi	r6,r6,1
   47fa4:	30004f1e 	bne	r6,zero,480e4 <_realloc_r+0x1e0>
   47fa8:	2148703a 	and	r4,r4,r5
   47fac:	a10b883a 	add	r5,r20,r4
   47fb0:	28c0bf0e 	bge	r5,r3,482b0 <_realloc_r+0x3ac>
   47fb4:	1080004c 	andi	r2,r2,1
   47fb8:	10004c1e 	bne	r2,zero,480ec <_realloc_r+0x1e8>
   47fbc:	81fffe17 	ldw	r7,-8(r16)
   47fc0:	00bfff04 	movi	r2,-4
   47fc4:	a9cfc83a 	sub	r7,r21,r7
   47fc8:	39400117 	ldw	r5,4(r7)
   47fcc:	288a703a 	and	r5,r5,r2
   47fd0:	b0000426 	beq	r22,zero,47fe4 <_realloc_r+0xe0>
   47fd4:	a16f883a 	add	r23,r20,r5
   47fd8:	b92f883a 	add	r23,r23,r4
   47fdc:	4580bf26 	beq	r8,r22,482dc <_realloc_r+0x3d8>
   47fe0:	b8c0930e 	bge	r23,r3,48230 <_realloc_r+0x32c>
   47fe4:	38004126 	beq	r7,zero,480ec <_realloc_r+0x1e8>
   47fe8:	a16f883a 	add	r23,r20,r5
   47fec:	b8c03f16 	blt	r23,r3,480ec <_realloc_r+0x1e8>
   47ff0:	38800317 	ldw	r2,12(r7)
   47ff4:	38c00217 	ldw	r3,8(r7)
   47ff8:	a1bfff04 	addi	r6,r20,-4
   47ffc:	31400968 	cmpgeui	r5,r6,37
   48000:	18800315 	stw	r2,12(r3)
   48004:	10c00215 	stw	r3,8(r2)
   48008:	39000204 	addi	r4,r7,8
   4800c:	3ded883a 	add	r22,r7,r23
   48010:	2800941e 	bne	r5,zero,48264 <_realloc_r+0x360>
   48014:	30800530 	cmpltui	r2,r6,20
   48018:	80c00017 	ldw	r3,0(r16)
   4801c:	1000df1e 	bne	r2,zero,4839c <_realloc_r+0x498>
   48020:	38c00215 	stw	r3,8(r7)
   48024:	80c00117 	ldw	r3,4(r16)
   48028:	30800728 	cmpgeui	r2,r6,28
   4802c:	38c00315 	stw	r3,12(r7)
   48030:	1000dc1e 	bne	r2,zero,483a4 <_realloc_r+0x4a0>
   48034:	80c00217 	ldw	r3,8(r16)
   48038:	38800404 	addi	r2,r7,16
   4803c:	84000204 	addi	r16,r16,8
   48040:	10c00015 	stw	r3,0(r2)
   48044:	80c00117 	ldw	r3,4(r16)
   48048:	b829883a 	mov	r20,r23
   4804c:	382b883a 	mov	r21,r7
   48050:	10c00115 	stw	r3,4(r2)
   48054:	80c00217 	ldw	r3,8(r16)
   48058:	2021883a 	mov	r16,r4
   4805c:	10c00215 	stw	r3,8(r2)
   48060:	a9800117 	ldw	r6,4(r21)
   48064:	a445c83a 	sub	r2,r20,r17
   48068:	10c00430 	cmpltui	r3,r2,16
   4806c:	3180004c 	andi	r6,r6,1
   48070:	18004926 	beq	r3,zero,48198 <_realloc_r+0x294>
   48074:	a18cb03a 	or	r6,r20,r6
   48078:	a9800115 	stw	r6,4(r21)
   4807c:	b0800117 	ldw	r2,4(r22)
   48080:	10800054 	ori	r2,r2,1
   48084:	b0800115 	stw	r2,4(r22)
   48088:	9809883a 	mov	r4,r19
   4808c:	004db1c0 	call	4db1c <__malloc_unlock>
   48090:	8025883a 	mov	r18,r16
   48094:	00000606 	br	480b0 <_realloc_r+0x1ac>
   48098:	04400404 	movi	r17,16
   4809c:	00c00404 	movi	r3,16
   480a0:	8cbfb02e 	bgeu	r17,r18,47f64 <_realloc_r+0x60>
   480a4:	00800304 	movi	r2,12
   480a8:	98800015 	stw	r2,0(r19)
   480ac:	0025883a 	mov	r18,zero
   480b0:	9005883a 	mov	r2,r18
   480b4:	dfc00a17 	ldw	ra,40(sp)
   480b8:	df000917 	ldw	fp,36(sp)
   480bc:	ddc00817 	ldw	r23,32(sp)
   480c0:	dd800717 	ldw	r22,28(sp)
   480c4:	dd400617 	ldw	r21,24(sp)
   480c8:	dd000517 	ldw	r20,20(sp)
   480cc:	dcc00417 	ldw	r19,16(sp)
   480d0:	dc800317 	ldw	r18,12(sp)
   480d4:	dc400217 	ldw	r17,8(sp)
   480d8:	dc000117 	ldw	r16,4(sp)
   480dc:	dec00b04 	addi	sp,sp,44
   480e0:	f800283a 	ret
   480e4:	1080004c 	andi	r2,r2,1
   480e8:	10006c26 	beq	r2,zero,4829c <_realloc_r+0x398>
   480ec:	900b883a 	mov	r5,r18
   480f0:	9809883a 	mov	r4,r19
   480f4:	00461d80 	call	461d8 <_malloc_r>
   480f8:	1025883a 	mov	r18,r2
   480fc:	10001626 	beq	r2,zero,48158 <_realloc_r+0x254>
   48100:	80bfff17 	ldw	r2,-4(r16)
   48104:	013fff84 	movi	r4,-2
   48108:	90fffe04 	addi	r3,r18,-8
   4810c:	1104703a 	and	r2,r2,r4
   48110:	a885883a 	add	r2,r21,r2
   48114:	10c05b26 	beq	r2,r3,48284 <_realloc_r+0x380>
   48118:	a1bfff04 	addi	r6,r20,-4
   4811c:	30800968 	cmpgeui	r2,r6,37
   48120:	10006a1e 	bne	r2,zero,482cc <_realloc_r+0x3c8>
   48124:	30800530 	cmpltui	r2,r6,20
   48128:	81000017 	ldw	r4,0(r16)
   4812c:	10003726 	beq	r2,zero,4820c <_realloc_r+0x308>
   48130:	9005883a 	mov	r2,r18
   48134:	8007883a 	mov	r3,r16
   48138:	11000015 	stw	r4,0(r2)
   4813c:	19000117 	ldw	r4,4(r3)
   48140:	11000115 	stw	r4,4(r2)
   48144:	18c00217 	ldw	r3,8(r3)
   48148:	10c00215 	stw	r3,8(r2)
   4814c:	800b883a 	mov	r5,r16
   48150:	9809883a 	mov	r4,r19
   48154:	004567c0 	call	4567c <_free_r>
   48158:	9809883a 	mov	r4,r19
   4815c:	004db1c0 	call	4db1c <__malloc_unlock>
   48160:	003fd306 	br	480b0 <_realloc_r+0x1ac>
   48164:	300b883a 	mov	r5,r6
   48168:	dfc00a17 	ldw	ra,40(sp)
   4816c:	df000917 	ldw	fp,36(sp)
   48170:	ddc00817 	ldw	r23,32(sp)
   48174:	dd800717 	ldw	r22,28(sp)
   48178:	dd400617 	ldw	r21,24(sp)
   4817c:	dd000517 	ldw	r20,20(sp)
   48180:	dcc00417 	ldw	r19,16(sp)
   48184:	dc800317 	ldw	r18,12(sp)
   48188:	dc400217 	ldw	r17,8(sp)
   4818c:	dc000117 	ldw	r16,4(sp)
   48190:	dec00b04 	addi	sp,sp,44
   48194:	00461d81 	jmpi	461d8 <_malloc_r>
   48198:	344cb03a 	or	r6,r6,r17
   4819c:	a9800115 	stw	r6,4(r21)
   481a0:	ac4b883a 	add	r5,r21,r17
   481a4:	10800054 	ori	r2,r2,1
   481a8:	28800115 	stw	r2,4(r5)
   481ac:	b0800117 	ldw	r2,4(r22)
   481b0:	29400204 	addi	r5,r5,8
   481b4:	9809883a 	mov	r4,r19
   481b8:	10800054 	ori	r2,r2,1
   481bc:	b0800115 	stw	r2,4(r22)
   481c0:	004567c0 	call	4567c <_free_r>
   481c4:	003fb006 	br	48088 <_realloc_r+0x184>
   481c8:	2148703a 	and	r4,r4,r5
   481cc:	a10b883a 	add	r5,r20,r4
   481d0:	89800404 	addi	r6,r17,16
   481d4:	29bf7716 	blt	r5,r6,47fb4 <_realloc_r+0xb0>
   481d8:	ac6b883a 	add	r21,r21,r17
   481dc:	2c45c83a 	sub	r2,r5,r17
   481e0:	e5400215 	stw	r21,8(fp)
   481e4:	10800054 	ori	r2,r2,1
   481e8:	a8800115 	stw	r2,4(r21)
   481ec:	80bfff17 	ldw	r2,-4(r16)
   481f0:	9809883a 	mov	r4,r19
   481f4:	8025883a 	mov	r18,r16
   481f8:	1080004c 	andi	r2,r2,1
   481fc:	1462b03a 	or	r17,r2,r17
   48200:	847fff15 	stw	r17,-4(r16)
   48204:	004db1c0 	call	4db1c <__malloc_unlock>
   48208:	003fa906 	br	480b0 <_realloc_r+0x1ac>
   4820c:	91000015 	stw	r4,0(r18)
   48210:	80c00117 	ldw	r3,4(r16)
   48214:	30800728 	cmpgeui	r2,r6,28
   48218:	90c00115 	stw	r3,4(r18)
   4821c:	1000551e 	bne	r2,zero,48374 <_realloc_r+0x470>
   48220:	81000217 	ldw	r4,8(r16)
   48224:	80c00204 	addi	r3,r16,8
   48228:	90800204 	addi	r2,r18,8
   4822c:	003fc206 	br	48138 <_realloc_r+0x234>
   48230:	b0800317 	ldw	r2,12(r22)
   48234:	b0c00217 	ldw	r3,8(r22)
   48238:	a1bfff04 	addi	r6,r20,-4
   4823c:	31400968 	cmpgeui	r5,r6,37
   48240:	18800315 	stw	r2,12(r3)
   48244:	10c00215 	stw	r3,8(r2)
   48248:	38c00217 	ldw	r3,8(r7)
   4824c:	38800317 	ldw	r2,12(r7)
   48250:	39000204 	addi	r4,r7,8
   48254:	3ded883a 	add	r22,r7,r23
   48258:	18800315 	stw	r2,12(r3)
   4825c:	10c00215 	stw	r3,8(r2)
   48260:	283f6c26 	beq	r5,zero,48014 <_realloc_r+0x110>
   48264:	800b883a 	mov	r5,r16
   48268:	d9c00015 	stw	r7,0(sp)
   4826c:	0046b880 	call	46b88 <memmove>
   48270:	d9c00017 	ldw	r7,0(sp)
   48274:	1021883a 	mov	r16,r2
   48278:	b829883a 	mov	r20,r23
   4827c:	382b883a 	mov	r21,r7
   48280:	003f7706 	br	48060 <_realloc_r+0x15c>
   48284:	90bfff17 	ldw	r2,-4(r18)
   48288:	00ffff04 	movi	r3,-4
   4828c:	10c4703a 	and	r2,r2,r3
   48290:	a0a9883a 	add	r20,r20,r2
   48294:	ad2d883a 	add	r22,r21,r20
   48298:	003f7106 	br	48060 <_realloc_r+0x15c>
   4829c:	81fffe17 	ldw	r7,-8(r16)
   482a0:	a9cfc83a 	sub	r7,r21,r7
   482a4:	38800117 	ldw	r2,4(r7)
   482a8:	114a703a 	and	r5,r2,r5
   482ac:	003f4d06 	br	47fe4 <_realloc_r+0xe0>
   482b0:	b0800317 	ldw	r2,12(r22)
   482b4:	b0c00217 	ldw	r3,8(r22)
   482b8:	2829883a 	mov	r20,r5
   482bc:	a96d883a 	add	r22,r21,r5
   482c0:	18800315 	stw	r2,12(r3)
   482c4:	10c00215 	stw	r3,8(r2)
   482c8:	003f6506 	br	48060 <_realloc_r+0x15c>
   482cc:	800b883a 	mov	r5,r16
   482d0:	9009883a 	mov	r4,r18
   482d4:	0046b880 	call	46b88 <memmove>
   482d8:	003f9c06 	br	4814c <_realloc_r+0x248>
   482dc:	88800404 	addi	r2,r17,16
   482e0:	b8bf4016 	blt	r23,r2,47fe4 <_realloc_r+0xe0>
   482e4:	38800317 	ldw	r2,12(r7)
   482e8:	38c00217 	ldw	r3,8(r7)
   482ec:	a1bfff04 	addi	r6,r20,-4
   482f0:	31000968 	cmpgeui	r4,r6,37
   482f4:	18800315 	stw	r2,12(r3)
   482f8:	10c00215 	stw	r3,8(r2)
   482fc:	3c800204 	addi	r18,r7,8
   48300:	20003b1e 	bne	r4,zero,483f0 <_realloc_r+0x4ec>
   48304:	30800530 	cmpltui	r2,r6,20
   48308:	80c00017 	ldw	r3,0(r16)
   4830c:	1000361e 	bne	r2,zero,483e8 <_realloc_r+0x4e4>
   48310:	38c00215 	stw	r3,8(r7)
   48314:	80c00117 	ldw	r3,4(r16)
   48318:	30800728 	cmpgeui	r2,r6,28
   4831c:	38c00315 	stw	r3,12(r7)
   48320:	1000401e 	bne	r2,zero,48424 <_realloc_r+0x520>
   48324:	80c00217 	ldw	r3,8(r16)
   48328:	38800404 	addi	r2,r7,16
   4832c:	84000204 	addi	r16,r16,8
   48330:	10c00015 	stw	r3,0(r2)
   48334:	80c00117 	ldw	r3,4(r16)
   48338:	10c00115 	stw	r3,4(r2)
   4833c:	80c00217 	ldw	r3,8(r16)
   48340:	10c00215 	stw	r3,8(r2)
   48344:	3c47883a 	add	r3,r7,r17
   48348:	bc45c83a 	sub	r2,r23,r17
   4834c:	e0c00215 	stw	r3,8(fp)
   48350:	10800054 	ori	r2,r2,1
   48354:	18800115 	stw	r2,4(r3)
   48358:	38800117 	ldw	r2,4(r7)
   4835c:	9809883a 	mov	r4,r19
   48360:	1080004c 	andi	r2,r2,1
   48364:	1462b03a 	or	r17,r2,r17
   48368:	3c400115 	stw	r17,4(r7)
   4836c:	004db1c0 	call	4db1c <__malloc_unlock>
   48370:	003f4f06 	br	480b0 <_realloc_r+0x1ac>
   48374:	80800217 	ldw	r2,8(r16)
   48378:	31800920 	cmpeqi	r6,r6,36
   4837c:	90800215 	stw	r2,8(r18)
   48380:	80800317 	ldw	r2,12(r16)
   48384:	90800315 	stw	r2,12(r18)
   48388:	81000417 	ldw	r4,16(r16)
   4838c:	30000f1e 	bne	r6,zero,483cc <_realloc_r+0x4c8>
   48390:	80c00404 	addi	r3,r16,16
   48394:	90800404 	addi	r2,r18,16
   48398:	003f6706 	br	48138 <_realloc_r+0x234>
   4839c:	2005883a 	mov	r2,r4
   483a0:	003f2706 	br	48040 <_realloc_r+0x13c>
   483a4:	80800217 	ldw	r2,8(r16)
   483a8:	31800920 	cmpeqi	r6,r6,36
   483ac:	38800415 	stw	r2,16(r7)
   483b0:	80800317 	ldw	r2,12(r16)
   483b4:	38800515 	stw	r2,20(r7)
   483b8:	80c00417 	ldw	r3,16(r16)
   483bc:	3000121e 	bne	r6,zero,48408 <_realloc_r+0x504>
   483c0:	38800604 	addi	r2,r7,24
   483c4:	84000404 	addi	r16,r16,16
   483c8:	003f1d06 	br	48040 <_realloc_r+0x13c>
   483cc:	91000415 	stw	r4,16(r18)
   483d0:	81000517 	ldw	r4,20(r16)
   483d4:	80c00604 	addi	r3,r16,24
   483d8:	90800604 	addi	r2,r18,24
   483dc:	91000515 	stw	r4,20(r18)
   483e0:	81000617 	ldw	r4,24(r16)
   483e4:	003f5406 	br	48138 <_realloc_r+0x234>
   483e8:	9005883a 	mov	r2,r18
   483ec:	003fd006 	br	48330 <_realloc_r+0x42c>
   483f0:	800b883a 	mov	r5,r16
   483f4:	9009883a 	mov	r4,r18
   483f8:	d9c00015 	stw	r7,0(sp)
   483fc:	0046b880 	call	46b88 <memmove>
   48400:	d9c00017 	ldw	r7,0(sp)
   48404:	003fcf06 	br	48344 <_realloc_r+0x440>
   48408:	84000604 	addi	r16,r16,24
   4840c:	38c00615 	stw	r3,24(r7)
   48410:	80ffff17 	ldw	r3,-4(r16)
   48414:	38800804 	addi	r2,r7,32
   48418:	38c00715 	stw	r3,28(r7)
   4841c:	80c00017 	ldw	r3,0(r16)
   48420:	003f0706 	br	48040 <_realloc_r+0x13c>
   48424:	80800217 	ldw	r2,8(r16)
   48428:	31800920 	cmpeqi	r6,r6,36
   4842c:	38800415 	stw	r2,16(r7)
   48430:	80800317 	ldw	r2,12(r16)
   48434:	38800515 	stw	r2,20(r7)
   48438:	80c00417 	ldw	r3,16(r16)
   4843c:	3000031e 	bne	r6,zero,4844c <_realloc_r+0x548>
   48440:	38800604 	addi	r2,r7,24
   48444:	84000404 	addi	r16,r16,16
   48448:	003fb906 	br	48330 <_realloc_r+0x42c>
   4844c:	84000604 	addi	r16,r16,24
   48450:	38c00615 	stw	r3,24(r7)
   48454:	80ffff17 	ldw	r3,-4(r16)
   48458:	38800804 	addi	r2,r7,32
   4845c:	38c00715 	stw	r3,28(r7)
   48460:	80c00017 	ldw	r3,0(r16)
   48464:	003fb206 	br	48330 <_realloc_r+0x42c>

00048468 <_sbrk_r>:
   48468:	defffe04 	addi	sp,sp,-8
   4846c:	dc000015 	stw	r16,0(sp)
   48470:	00800174 	movhi	r2,5
   48474:	2021883a 	mov	r16,r4
   48478:	2809883a 	mov	r4,r5
   4847c:	dfc00115 	stw	ra,4(sp)
   48480:	100eb315 	stw	zero,15052(r2)
   48484:	004dcd00 	call	4dcd0 <sbrk>
   48488:	10ffffd8 	cmpnei	r3,r2,-1
   4848c:	18000426 	beq	r3,zero,484a0 <_sbrk_r+0x38>
   48490:	dfc00117 	ldw	ra,4(sp)
   48494:	dc000017 	ldw	r16,0(sp)
   48498:	dec00204 	addi	sp,sp,8
   4849c:	f800283a 	ret
   484a0:	00c00174 	movhi	r3,5
   484a4:	18ceb317 	ldw	r3,15052(r3)
   484a8:	183ff926 	beq	r3,zero,48490 <_sbrk_r+0x28>
   484ac:	80c00015 	stw	r3,0(r16)
   484b0:	dfc00117 	ldw	ra,4(sp)
   484b4:	dc000017 	ldw	r16,0(sp)
   484b8:	dec00204 	addi	sp,sp,8
   484bc:	f800283a 	ret

000484c0 <__sread>:
   484c0:	defffe04 	addi	sp,sp,-8
   484c4:	dc000015 	stw	r16,0(sp)
   484c8:	2821883a 	mov	r16,r5
   484cc:	2940038f 	ldh	r5,14(r5)
   484d0:	dfc00115 	stw	ra,4(sp)
   484d4:	004a35c0 	call	4a35c <_read_r>
   484d8:	10000716 	blt	r2,zero,484f8 <__sread+0x38>
   484dc:	80c01417 	ldw	r3,80(r16)
   484e0:	1887883a 	add	r3,r3,r2
   484e4:	80c01415 	stw	r3,80(r16)
   484e8:	dfc00117 	ldw	ra,4(sp)
   484ec:	dc000017 	ldw	r16,0(sp)
   484f0:	dec00204 	addi	sp,sp,8
   484f4:	f800283a 	ret
   484f8:	80c0030b 	ldhu	r3,12(r16)
   484fc:	18fbffcc 	andi	r3,r3,61439
   48500:	80c0030d 	sth	r3,12(r16)
   48504:	dfc00117 	ldw	ra,4(sp)
   48508:	dc000017 	ldw	r16,0(sp)
   4850c:	dec00204 	addi	sp,sp,8
   48510:	f800283a 	ret

00048514 <__seofread>:
   48514:	0005883a 	mov	r2,zero
   48518:	f800283a 	ret

0004851c <__swrite>:
   4851c:	2880030b 	ldhu	r2,12(r5)
   48520:	defffb04 	addi	sp,sp,-20
   48524:	dcc00315 	stw	r19,12(sp)
   48528:	dc800215 	stw	r18,8(sp)
   4852c:	dc400115 	stw	r17,4(sp)
   48530:	dc000015 	stw	r16,0(sp)
   48534:	dfc00415 	stw	ra,16(sp)
   48538:	10c0400c 	andi	r3,r2,256
   4853c:	2821883a 	mov	r16,r5
   48540:	2023883a 	mov	r17,r4
   48544:	2940038f 	ldh	r5,14(r5)
   48548:	3025883a 	mov	r18,r6
   4854c:	3827883a 	mov	r19,r7
   48550:	18000c1e 	bne	r3,zero,48584 <__swrite+0x68>
   48554:	10bbffcc 	andi	r2,r2,61439
   48558:	980f883a 	mov	r7,r19
   4855c:	900d883a 	mov	r6,r18
   48560:	8809883a 	mov	r4,r17
   48564:	8080030d 	sth	r2,12(r16)
   48568:	dfc00417 	ldw	ra,16(sp)
   4856c:	dcc00317 	ldw	r19,12(sp)
   48570:	dc800217 	ldw	r18,8(sp)
   48574:	dc400117 	ldw	r17,4(sp)
   48578:	dc000017 	ldw	r16,0(sp)
   4857c:	dec00504 	addi	sp,sp,20
   48580:	0049b1c1 	jmpi	49b1c <_write_r>
   48584:	01c00084 	movi	r7,2
   48588:	000d883a 	mov	r6,zero
   4858c:	004a2a80 	call	4a2a8 <_lseek_r>
   48590:	8080030b 	ldhu	r2,12(r16)
   48594:	8140038f 	ldh	r5,14(r16)
   48598:	003fee06 	br	48554 <__swrite+0x38>

0004859c <__sseek>:
   4859c:	defffe04 	addi	sp,sp,-8
   485a0:	dc000015 	stw	r16,0(sp)
   485a4:	2821883a 	mov	r16,r5
   485a8:	2940038f 	ldh	r5,14(r5)
   485ac:	dfc00115 	stw	ra,4(sp)
   485b0:	004a2a80 	call	4a2a8 <_lseek_r>
   485b4:	10ffffd8 	cmpnei	r3,r2,-1
   485b8:	18000826 	beq	r3,zero,485dc <__sseek+0x40>
   485bc:	80c0030b 	ldhu	r3,12(r16)
   485c0:	80801415 	stw	r2,80(r16)
   485c4:	18c40014 	ori	r3,r3,4096
   485c8:	80c0030d 	sth	r3,12(r16)
   485cc:	dfc00117 	ldw	ra,4(sp)
   485d0:	dc000017 	ldw	r16,0(sp)
   485d4:	dec00204 	addi	sp,sp,8
   485d8:	f800283a 	ret
   485dc:	80c0030b 	ldhu	r3,12(r16)
   485e0:	18fbffcc 	andi	r3,r3,61439
   485e4:	80c0030d 	sth	r3,12(r16)
   485e8:	dfc00117 	ldw	ra,4(sp)
   485ec:	dc000017 	ldw	r16,0(sp)
   485f0:	dec00204 	addi	sp,sp,8
   485f4:	f800283a 	ret

000485f8 <__sclose>:
   485f8:	2940038f 	ldh	r5,14(r5)
   485fc:	0049b801 	jmpi	49b80 <_close_r>

00048600 <__sprint_r.part.0>:
   48600:	28801917 	ldw	r2,100(r5)
   48604:	defff604 	addi	sp,sp,-40
   48608:	dcc00315 	stw	r19,12(sp)
   4860c:	dfc00915 	stw	ra,36(sp)
   48610:	df000815 	stw	fp,32(sp)
   48614:	ddc00715 	stw	r23,28(sp)
   48618:	dd800615 	stw	r22,24(sp)
   4861c:	dd400515 	stw	r21,20(sp)
   48620:	dd000415 	stw	r20,16(sp)
   48624:	dc800215 	stw	r18,8(sp)
   48628:	dc400115 	stw	r17,4(sp)
   4862c:	dc000015 	stw	r16,0(sp)
   48630:	1088000c 	andi	r2,r2,8192
   48634:	3027883a 	mov	r19,r6
   48638:	10002c26 	beq	r2,zero,486ec <__sprint_r.part.0+0xec>
   4863c:	30800217 	ldw	r2,8(r6)
   48640:	35000017 	ldw	r20,0(r6)
   48644:	2821883a 	mov	r16,r5
   48648:	2023883a 	mov	r17,r4
   4864c:	05bfff04 	movi	r22,-4
   48650:	10002426 	beq	r2,zero,486e4 <__sprint_r.part.0+0xe4>
   48654:	a5400117 	ldw	r21,4(r20)
   48658:	a5c00017 	ldw	r23,0(r20)
   4865c:	a824d0ba 	srli	r18,r21,2
   48660:	90001b26 	beq	r18,zero,486d0 <__sprint_r.part.0+0xd0>
   48664:	0039883a 	mov	fp,zero
   48668:	00000206 	br	48674 <__sprint_r.part.0+0x74>
   4866c:	bdc00104 	addi	r23,r23,4
   48670:	97001626 	beq	r18,fp,486cc <__sprint_r.part.0+0xcc>
   48674:	b9400017 	ldw	r5,0(r23)
   48678:	800d883a 	mov	r6,r16
   4867c:	8809883a 	mov	r4,r17
   48680:	004a0600 	call	4a060 <_fputwc_r>
   48684:	10bfffe0 	cmpeqi	r2,r2,-1
   48688:	e7000044 	addi	fp,fp,1
   4868c:	103ff726 	beq	r2,zero,4866c <__sprint_r.part.0+0x6c>
   48690:	00bfffc4 	movi	r2,-1
   48694:	98000215 	stw	zero,8(r19)
   48698:	98000115 	stw	zero,4(r19)
   4869c:	dfc00917 	ldw	ra,36(sp)
   486a0:	df000817 	ldw	fp,32(sp)
   486a4:	ddc00717 	ldw	r23,28(sp)
   486a8:	dd800617 	ldw	r22,24(sp)
   486ac:	dd400517 	ldw	r21,20(sp)
   486b0:	dd000417 	ldw	r20,16(sp)
   486b4:	dcc00317 	ldw	r19,12(sp)
   486b8:	dc800217 	ldw	r18,8(sp)
   486bc:	dc400117 	ldw	r17,4(sp)
   486c0:	dc000017 	ldw	r16,0(sp)
   486c4:	dec00a04 	addi	sp,sp,40
   486c8:	f800283a 	ret
   486cc:	98800217 	ldw	r2,8(r19)
   486d0:	adaa703a 	and	r21,r21,r22
   486d4:	1545c83a 	sub	r2,r2,r21
   486d8:	98800215 	stw	r2,8(r19)
   486dc:	a5000204 	addi	r20,r20,8
   486e0:	103fdc1e 	bne	r2,zero,48654 <__sprint_r.part.0+0x54>
   486e4:	0005883a 	mov	r2,zero
   486e8:	003fea06 	br	48694 <__sprint_r.part.0+0x94>
   486ec:	00459780 	call	45978 <__sfvwrite_r>
   486f0:	003fe806 	br	48694 <__sprint_r.part.0+0x94>

000486f4 <__sprint_r>:
   486f4:	30c00217 	ldw	r3,8(r6)
   486f8:	18000126 	beq	r3,zero,48700 <__sprint_r+0xc>
   486fc:	00486001 	jmpi	48600 <__sprint_r.part.0>
   48700:	30000115 	stw	zero,4(r6)
   48704:	0005883a 	mov	r2,zero
   48708:	f800283a 	ret

0004870c <___vfiprintf_internal_r>:
   4870c:	deffcf04 	addi	sp,sp,-196
   48710:	dd802d15 	stw	r22,180(sp)
   48714:	dd402c15 	stw	r21,176(sp)
   48718:	dd002b15 	stw	r20,172(sp)
   4871c:	dfc03015 	stw	ra,192(sp)
   48720:	df002f15 	stw	fp,188(sp)
   48724:	ddc02e15 	stw	r23,184(sp)
   48728:	dcc02a15 	stw	r19,168(sp)
   4872c:	dc802915 	stw	r18,164(sp)
   48730:	dc402815 	stw	r17,160(sp)
   48734:	dc002715 	stw	r16,156(sp)
   48738:	d9c00415 	stw	r7,16(sp)
   4873c:	202d883a 	mov	r22,r4
   48740:	282b883a 	mov	r21,r5
   48744:	3029883a 	mov	r20,r6
   48748:	20000226 	beq	r4,zero,48754 <___vfiprintf_internal_r+0x48>
   4874c:	20800e17 	ldw	r2,56(r4)
   48750:	1001bb26 	beq	r2,zero,48e40 <___vfiprintf_internal_r+0x734>
   48754:	a880030b 	ldhu	r2,12(r21)
   48758:	10c8000c 	andi	r3,r2,8192
   4875c:	1800061e 	bne	r3,zero,48778 <___vfiprintf_internal_r+0x6c>
   48760:	a8c01917 	ldw	r3,100(r21)
   48764:	0137ffc4 	movi	r4,-8193
   48768:	10880014 	ori	r2,r2,8192
   4876c:	1906703a 	and	r3,r3,r4
   48770:	a880030d 	sth	r2,12(r21)
   48774:	a8c01915 	stw	r3,100(r21)
   48778:	10c0020c 	andi	r3,r2,8
   4877c:	18010626 	beq	r3,zero,48b98 <___vfiprintf_internal_r+0x48c>
   48780:	a8c00417 	ldw	r3,16(r21)
   48784:	18010426 	beq	r3,zero,48b98 <___vfiprintf_internal_r+0x48c>
   48788:	1080068c 	andi	r2,r2,26
   4878c:	10800298 	cmpnei	r2,r2,10
   48790:	10010926 	beq	r2,zero,48bb8 <___vfiprintf_internal_r+0x4ac>
   48794:	dc801704 	addi	r18,sp,92
   48798:	dc800a15 	stw	r18,40(sp)
   4879c:	d8000c15 	stw	zero,48(sp)
   487a0:	d8000b15 	stw	zero,44(sp)
   487a4:	9021883a 	mov	r16,r18
   487a8:	d8000515 	stw	zero,20(sp)
   487ac:	d8000115 	stw	zero,4(sp)
   487b0:	a0800007 	ldb	r2,0(r20)
   487b4:	1000e626 	beq	r2,zero,48b50 <___vfiprintf_internal_r+0x444>
   487b8:	a023883a 	mov	r17,r20
   487bc:	00000306 	br	487cc <___vfiprintf_internal_r+0xc0>
   487c0:	88800047 	ldb	r2,1(r17)
   487c4:	8c400044 	addi	r17,r17,1
   487c8:	10013126 	beq	r2,zero,48c90 <___vfiprintf_internal_r+0x584>
   487cc:	10800958 	cmpnei	r2,r2,37
   487d0:	103ffb1e 	bne	r2,zero,487c0 <___vfiprintf_internal_r+0xb4>
   487d4:	8d27c83a 	sub	r19,r17,r20
   487d8:	8d012f1e 	bne	r17,r20,48c98 <___vfiprintf_internal_r+0x58c>
   487dc:	88800003 	ldbu	r2,0(r17)
   487e0:	10803fcc 	andi	r2,r2,255
   487e4:	1080201c 	xori	r2,r2,128
   487e8:	10bfe004 	addi	r2,r2,-128
   487ec:	1000d826 	beq	r2,zero,48b50 <___vfiprintf_internal_r+0x444>
   487f0:	88800047 	ldb	r2,1(r17)
   487f4:	8d000044 	addi	r20,r17,1
   487f8:	d8000945 	stb	zero,37(sp)
   487fc:	000b883a 	mov	r5,zero
   48800:	000d883a 	mov	r6,zero
   48804:	023fffc4 	movi	r8,-1
   48808:	0023883a 	mov	r17,zero
   4880c:	001b883a 	mov	r13,zero
   48810:	a5000044 	addi	r20,r20,1
   48814:	10fff804 	addi	r3,r2,-32
   48818:	19001668 	cmpgeui	r4,r3,89
   4881c:	20006a1e 	bne	r4,zero,489c8 <___vfiprintf_internal_r+0x2bc>
   48820:	180690ba 	slli	r3,r3,2
   48824:	01000174 	movhi	r4,5
   48828:	1909883a 	add	r4,r3,r4
   4882c:	20e20d17 	ldw	r3,-30668(r4)
   48830:	1800683a 	jmp	r3
   48834:	00049160 	cmpeqi	zero,zero,4677
   48838:	000489c8 	cmpgei	zero,zero,4647
   4883c:	000489c8 	cmpgei	zero,zero,4647
   48840:	00049154 	movui	zero,4677
   48844:	000489c8 	cmpgei	zero,zero,4647
   48848:	000489c8 	cmpgei	zero,zero,4647
   4884c:	000489c8 	cmpgei	zero,zero,4647
   48850:	000489c8 	cmpgei	zero,zero,4647
   48854:	000489c8 	cmpgei	zero,zero,4647
   48858:	000489c8 	cmpgei	zero,zero,4647
   4885c:	0004912c 	andhi	zero,zero,4676
   48860:	0004911c 	xori	zero,zero,4676
   48864:	000489c8 	cmpgei	zero,zero,4647
   48868:	00049104 	movi	zero,4676
   4886c:	000490c0 	call	490c <__reset-0x3b6f4>
   48870:	000489c8 	cmpgei	zero,zero,4647
   48874:	000490b4 	movhi	zero,4674
   48878:	00048998 	cmpnei	zero,zero,4646
   4887c:	00048998 	cmpnei	zero,zero,4646
   48880:	00048998 	cmpnei	zero,zero,4646
   48884:	00048998 	cmpnei	zero,zero,4646
   48888:	00048998 	cmpnei	zero,zero,4646
   4888c:	00048998 	cmpnei	zero,zero,4646
   48890:	00048998 	cmpnei	zero,zero,4646
   48894:	00048998 	cmpnei	zero,zero,4646
   48898:	00048998 	cmpnei	zero,zero,4646
   4889c:	000489c8 	cmpgei	zero,zero,4647
   488a0:	000489c8 	cmpgei	zero,zero,4647
   488a4:	000489c8 	cmpgei	zero,zero,4647
   488a8:	000489c8 	cmpgei	zero,zero,4647
   488ac:	000489c8 	cmpgei	zero,zero,4647
   488b0:	000489c8 	cmpgei	zero,zero,4647
   488b4:	000489c8 	cmpgei	zero,zero,4647
   488b8:	000489c8 	cmpgei	zero,zero,4647
   488bc:	000489c8 	cmpgei	zero,zero,4647
   488c0:	000489c8 	cmpgei	zero,zero,4647
   488c4:	00048fb0 	cmpltui	zero,zero,4670
   488c8:	000489c8 	cmpgei	zero,zero,4647
   488cc:	000489c8 	cmpgei	zero,zero,4647
   488d0:	000489c8 	cmpgei	zero,zero,4647
   488d4:	000489c8 	cmpgei	zero,zero,4647
   488d8:	000489c8 	cmpgei	zero,zero,4647
   488dc:	000489c8 	cmpgei	zero,zero,4647
   488e0:	000489c8 	cmpgei	zero,zero,4647
   488e4:	000489c8 	cmpgei	zero,zero,4647
   488e8:	000489c8 	cmpgei	zero,zero,4647
   488ec:	000489c8 	cmpgei	zero,zero,4647
   488f0:	00048c28 	cmpgeui	zero,zero,4656
   488f4:	000489c8 	cmpgei	zero,zero,4647
   488f8:	000489c8 	cmpgei	zero,zero,4647
   488fc:	000489c8 	cmpgei	zero,zero,4647
   48900:	000489c8 	cmpgei	zero,zero,4647
   48904:	000489c8 	cmpgei	zero,zero,4647
   48908:	00048c00 	call	48c0 <__reset-0x3b740>
   4890c:	000489c8 	cmpgei	zero,zero,4647
   48910:	000489c8 	cmpgei	zero,zero,4647
   48914:	000491b4 	movhi	zero,4678
   48918:	000489c8 	cmpgei	zero,zero,4647
   4891c:	000489c8 	cmpgei	zero,zero,4647
   48920:	000489c8 	cmpgei	zero,zero,4647
   48924:	000489c8 	cmpgei	zero,zero,4647
   48928:	000489c8 	cmpgei	zero,zero,4647
   4892c:	000489c8 	cmpgei	zero,zero,4647
   48930:	000489c8 	cmpgei	zero,zero,4647
   48934:	000489c8 	cmpgei	zero,zero,4647
   48938:	000489c8 	cmpgei	zero,zero,4647
   4893c:	000489c8 	cmpgei	zero,zero,4647
   48940:	0004918c 	andi	zero,zero,4678
   48944:	00048e48 	cmpgei	zero,zero,4665
   48948:	000489c8 	cmpgei	zero,zero,4647
   4894c:	000489c8 	cmpgei	zero,zero,4647
   48950:	000489c8 	cmpgei	zero,zero,4647
   48954:	00048ebc 	xorhi	zero,zero,4666
   48958:	00048e48 	cmpgei	zero,zero,4665
   4895c:	000489c8 	cmpgei	zero,zero,4647
   48960:	000489c8 	cmpgei	zero,zero,4647
   48964:	00049238 	rdprs	zero,zero,4680
   48968:	000489c8 	cmpgei	zero,zero,4647
   4896c:	000491fc 	xorhi	zero,zero,4679
   48970:	00048c2c 	andhi	zero,zero,4656
   48974:	00048f74 	movhi	zero,4669
   48978:	00048f68 	cmpgeui	zero,zero,4669
   4897c:	000489c8 	cmpgei	zero,zero,4647
   48980:	00048f10 	cmplti	zero,zero,4668
   48984:	000489c8 	cmpgei	zero,zero,4647
   48988:	00048c04 	movi	zero,4656
   4898c:	000489c8 	cmpgei	zero,zero,4647
   48990:	000489c8 	cmpgei	zero,zero,4647
   48994:	00048ec8 	cmpgei	zero,zero,4667
   48998:	0023883a 	mov	r17,zero
   4899c:	10fff404 	addi	r3,r2,-48
   489a0:	a0800007 	ldb	r2,0(r20)
   489a4:	8c4002a4 	muli	r17,r17,10
   489a8:	a5000044 	addi	r20,r20,1
   489ac:	1c63883a 	add	r17,r3,r17
   489b0:	10fff404 	addi	r3,r2,-48
   489b4:	190002b0 	cmpltui	r4,r3,10
   489b8:	203ff91e 	bne	r4,zero,489a0 <___vfiprintf_internal_r+0x294>
   489bc:	10fff804 	addi	r3,r2,-32
   489c0:	19001668 	cmpgeui	r4,r3,89
   489c4:	203f9626 	beq	r4,zero,48820 <___vfiprintf_internal_r+0x114>
   489c8:	29403fcc 	andi	r5,r5,255
   489cc:	2803eb1e 	bne	r5,zero,4997c <___vfiprintf_internal_r+0x1270>
   489d0:	10005f26 	beq	r2,zero,48b50 <___vfiprintf_internal_r+0x444>
   489d4:	d8800d05 	stb	r2,52(sp)
   489d8:	d8000945 	stb	zero,37(sp)
   489dc:	05c00044 	movi	r23,1
   489e0:	07000044 	movi	fp,1
   489e4:	dcc00d04 	addi	r19,sp,52
   489e8:	db400015 	stw	r13,0(sp)
   489ec:	0011883a 	mov	r8,zero
   489f0:	d8800017 	ldw	r2,0(sp)
   489f4:	1380008c 	andi	r14,r2,2
   489f8:	70000126 	beq	r14,zero,48a00 <___vfiprintf_internal_r+0x2f4>
   489fc:	bdc00084 	addi	r23,r23,2
   48a00:	d8800017 	ldw	r2,0(sp)
   48a04:	d9000b17 	ldw	r4,44(sp)
   48a08:	1340210c 	andi	r13,r2,132
   48a0c:	21800044 	addi	r6,r4,1
   48a10:	d8800c17 	ldw	r2,48(sp)
   48a14:	300b883a 	mov	r5,r6
   48a18:	6800021e 	bne	r13,zero,48a24 <___vfiprintf_internal_r+0x318>
   48a1c:	8dc7c83a 	sub	r3,r17,r23
   48a20:	00c2e016 	blt	zero,r3,495a4 <___vfiprintf_internal_r+0xe98>
   48a24:	d8c00947 	ldb	r3,37(sp)
   48a28:	81800204 	addi	r6,r16,8
   48a2c:	18000d26 	beq	r3,zero,48a64 <___vfiprintf_internal_r+0x358>
   48a30:	d8c00944 	addi	r3,sp,37
   48a34:	10800044 	addi	r2,r2,1
   48a38:	80c00015 	stw	r3,0(r16)
   48a3c:	00c00044 	movi	r3,1
   48a40:	80c00115 	stw	r3,4(r16)
   48a44:	d8800c15 	stw	r2,48(sp)
   48a48:	d9400b15 	stw	r5,44(sp)
   48a4c:	28c00208 	cmpgei	r3,r5,8
   48a50:	1802981e 	bne	r3,zero,494b4 <___vfiprintf_internal_r+0xda8>
   48a54:	2809883a 	mov	r4,r5
   48a58:	3021883a 	mov	r16,r6
   48a5c:	29400044 	addi	r5,r5,1
   48a60:	31800204 	addi	r6,r6,8
   48a64:	70001826 	beq	r14,zero,48ac8 <___vfiprintf_internal_r+0x3bc>
   48a68:	d8c00984 	addi	r3,sp,38
   48a6c:	10800084 	addi	r2,r2,2
   48a70:	80c00015 	stw	r3,0(r16)
   48a74:	00c00084 	movi	r3,2
   48a78:	80c00115 	stw	r3,4(r16)
   48a7c:	d8800c15 	stw	r2,48(sp)
   48a80:	d9400b15 	stw	r5,44(sp)
   48a84:	28c00208 	cmpgei	r3,r5,8
   48a88:	1802a226 	beq	r3,zero,49514 <___vfiprintf_internal_r+0xe08>
   48a8c:	10032026 	beq	r2,zero,49710 <___vfiprintf_internal_r+0x1004>
   48a90:	d9800a04 	addi	r6,sp,40
   48a94:	a80b883a 	mov	r5,r21
   48a98:	b009883a 	mov	r4,r22
   48a9c:	da000315 	stw	r8,12(sp)
   48aa0:	db400215 	stw	r13,8(sp)
   48aa4:	00486000 	call	48600 <__sprint_r.part.0>
   48aa8:	10002b1e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0x44c>
   48aac:	d9000b17 	ldw	r4,44(sp)
   48ab0:	d8800c17 	ldw	r2,48(sp)
   48ab4:	da000317 	ldw	r8,12(sp)
   48ab8:	db400217 	ldw	r13,8(sp)
   48abc:	d9801904 	addi	r6,sp,100
   48ac0:	21400044 	addi	r5,r4,1
   48ac4:	9021883a 	mov	r16,r18
   48ac8:	6b402018 	cmpnei	r13,r13,128
   48acc:	6801e326 	beq	r13,zero,4925c <___vfiprintf_internal_r+0xb50>
   48ad0:	4711c83a 	sub	r8,r8,fp
   48ad4:	02022216 	blt	zero,r8,49360 <___vfiprintf_internal_r+0xc54>
   48ad8:	e085883a 	add	r2,fp,r2
   48adc:	d9400b15 	stw	r5,44(sp)
   48ae0:	84c00015 	stw	r19,0(r16)
   48ae4:	87000115 	stw	fp,4(r16)
   48ae8:	d8800c15 	stw	r2,48(sp)
   48aec:	29400210 	cmplti	r5,r5,8
   48af0:	2800081e 	bne	r5,zero,48b14 <___vfiprintf_internal_r+0x408>
   48af4:	10009826 	beq	r2,zero,48d58 <___vfiprintf_internal_r+0x64c>
   48af8:	d9800a04 	addi	r6,sp,40
   48afc:	a80b883a 	mov	r5,r21
   48b00:	b009883a 	mov	r4,r22
   48b04:	00486000 	call	48600 <__sprint_r.part.0>
   48b08:	1000131e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0x44c>
   48b0c:	d8800c17 	ldw	r2,48(sp)
   48b10:	900d883a 	mov	r6,r18
   48b14:	d8c00017 	ldw	r3,0(sp)
   48b18:	1cc0010c 	andi	r19,r3,4
   48b1c:	98000226 	beq	r19,zero,48b28 <___vfiprintf_internal_r+0x41c>
   48b20:	8de1c83a 	sub	r16,r17,r23
   48b24:	04009316 	blt	zero,r16,48d74 <___vfiprintf_internal_r+0x668>
   48b28:	8dc0010e 	bge	r17,r23,48b30 <___vfiprintf_internal_r+0x424>
   48b2c:	b823883a 	mov	r17,r23
   48b30:	d8c00117 	ldw	r3,4(sp)
   48b34:	1c47883a 	add	r3,r3,r17
   48b38:	d8c00115 	stw	r3,4(sp)
   48b3c:	1002531e 	bne	r2,zero,4948c <___vfiprintf_internal_r+0xd80>
   48b40:	a0800007 	ldb	r2,0(r20)
   48b44:	d8000b15 	stw	zero,44(sp)
   48b48:	9021883a 	mov	r16,r18
   48b4c:	103f1a1e 	bne	r2,zero,487b8 <___vfiprintf_internal_r+0xac>
   48b50:	d8800c17 	ldw	r2,48(sp)
   48b54:	10038b1e 	bne	r2,zero,49984 <___vfiprintf_internal_r+0x1278>
   48b58:	a880030b 	ldhu	r2,12(r21)
   48b5c:	1080100c 	andi	r2,r2,64
   48b60:	1003a31e 	bne	r2,zero,499f0 <___vfiprintf_internal_r+0x12e4>
   48b64:	d8800117 	ldw	r2,4(sp)
   48b68:	dfc03017 	ldw	ra,192(sp)
   48b6c:	df002f17 	ldw	fp,188(sp)
   48b70:	ddc02e17 	ldw	r23,184(sp)
   48b74:	dd802d17 	ldw	r22,180(sp)
   48b78:	dd402c17 	ldw	r21,176(sp)
   48b7c:	dd002b17 	ldw	r20,172(sp)
   48b80:	dcc02a17 	ldw	r19,168(sp)
   48b84:	dc802917 	ldw	r18,164(sp)
   48b88:	dc402817 	ldw	r17,160(sp)
   48b8c:	dc002717 	ldw	r16,156(sp)
   48b90:	dec03104 	addi	sp,sp,196
   48b94:	f800283a 	ret
   48b98:	a80b883a 	mov	r5,r21
   48b9c:	b009883a 	mov	r4,r22
   48ba0:	00434100 	call	43410 <__swsetup_r>
   48ba4:	1003921e 	bne	r2,zero,499f0 <___vfiprintf_internal_r+0x12e4>
   48ba8:	a880030b 	ldhu	r2,12(r21)
   48bac:	1080068c 	andi	r2,r2,26
   48bb0:	10800298 	cmpnei	r2,r2,10
   48bb4:	103ef71e 	bne	r2,zero,48794 <___vfiprintf_internal_r+0x88>
   48bb8:	a880038f 	ldh	r2,14(r21)
   48bbc:	103ef516 	blt	r2,zero,48794 <___vfiprintf_internal_r+0x88>
   48bc0:	d9c00417 	ldw	r7,16(sp)
   48bc4:	a00d883a 	mov	r6,r20
   48bc8:	a80b883a 	mov	r5,r21
   48bcc:	b009883a 	mov	r4,r22
   48bd0:	dfc03017 	ldw	ra,192(sp)
   48bd4:	df002f17 	ldw	fp,188(sp)
   48bd8:	ddc02e17 	ldw	r23,184(sp)
   48bdc:	dd802d17 	ldw	r22,180(sp)
   48be0:	dd402c17 	ldw	r21,176(sp)
   48be4:	dd002b17 	ldw	r20,172(sp)
   48be8:	dcc02a17 	ldw	r19,168(sp)
   48bec:	dc802917 	ldw	r18,164(sp)
   48bf0:	dc402817 	ldw	r17,160(sp)
   48bf4:	dc002717 	ldw	r16,156(sp)
   48bf8:	dec03104 	addi	sp,sp,196
   48bfc:	0049a5c1 	jmpi	49a5c <__sbprintf>
   48c00:	6b400414 	ori	r13,r13,16
   48c04:	6880080c 	andi	r2,r13,32
   48c08:	10004726 	beq	r2,zero,48d28 <___vfiprintf_internal_r+0x61c>
   48c0c:	d8c00417 	ldw	r3,16(sp)
   48c10:	00800044 	movi	r2,1
   48c14:	1dc00017 	ldw	r23,0(r3)
   48c18:	1f000117 	ldw	fp,4(r3)
   48c1c:	18c00204 	addi	r3,r3,8
   48c20:	d8c00415 	stw	r3,16(sp)
   48c24:	00000906 	br	48c4c <___vfiprintf_internal_r+0x540>
   48c28:	6b400414 	ori	r13,r13,16
   48c2c:	6880080c 	andi	r2,r13,32
   48c30:	10003126 	beq	r2,zero,48cf8 <___vfiprintf_internal_r+0x5ec>
   48c34:	d8c00417 	ldw	r3,16(sp)
   48c38:	0005883a 	mov	r2,zero
   48c3c:	1dc00017 	ldw	r23,0(r3)
   48c40:	1f000117 	ldw	fp,4(r3)
   48c44:	18c00204 	addi	r3,r3,8
   48c48:	d8c00415 	stw	r3,16(sp)
   48c4c:	d8000945 	stb	zero,37(sp)
   48c50:	40ffffe0 	cmpeqi	r3,r8,-1
   48c54:	001d883a 	mov	r14,zero
   48c58:	1800f01e 	bne	r3,zero,4901c <___vfiprintf_internal_r+0x910>
   48c5c:	04ffdfc4 	movi	r19,-129
   48c60:	6cc8703a 	and	r4,r13,r19
   48c64:	bf06b03a 	or	r3,r23,fp
   48c68:	d9000015 	stw	r4,0(sp)
   48c6c:	18022e1e 	bne	r3,zero,49528 <___vfiprintf_internal_r+0xe1c>
   48c70:	4001f11e 	bne	r8,zero,49438 <___vfiprintf_internal_r+0xd2c>
   48c74:	10029c1e 	bne	r2,zero,496e8 <___vfiprintf_internal_r+0xfdc>
   48c78:	6f00004c 	andi	fp,r13,1
   48c7c:	e002ba26 	beq	fp,zero,49768 <___vfiprintf_internal_r+0x105c>
   48c80:	00800c04 	movi	r2,48
   48c84:	d88016c5 	stb	r2,91(sp)
   48c88:	dcc016c4 	addi	r19,sp,91
   48c8c:	00010006 	br	49090 <___vfiprintf_internal_r+0x984>
   48c90:	8d27c83a 	sub	r19,r17,r20
   48c94:	8d3fae26 	beq	r17,r20,48b50 <___vfiprintf_internal_r+0x444>
   48c98:	d8c00c17 	ldw	r3,48(sp)
   48c9c:	d8800b17 	ldw	r2,44(sp)
   48ca0:	85000015 	stw	r20,0(r16)
   48ca4:	98c7883a 	add	r3,r19,r3
   48ca8:	10800044 	addi	r2,r2,1
   48cac:	d8800b15 	stw	r2,44(sp)
   48cb0:	84c00115 	stw	r19,4(r16)
   48cb4:	d8c00c15 	stw	r3,48(sp)
   48cb8:	10800208 	cmpgei	r2,r2,8
   48cbc:	1000061e 	bne	r2,zero,48cd8 <___vfiprintf_internal_r+0x5cc>
   48cc0:	84000204 	addi	r16,r16,8
   48cc4:	d8c00117 	ldw	r3,4(sp)
   48cc8:	88800003 	ldbu	r2,0(r17)
   48ccc:	1cc7883a 	add	r3,r3,r19
   48cd0:	d8c00115 	stw	r3,4(sp)
   48cd4:	003ec206 	br	487e0 <___vfiprintf_internal_r+0xd4>
   48cd8:	18027f26 	beq	r3,zero,496d8 <___vfiprintf_internal_r+0xfcc>
   48cdc:	d9800a04 	addi	r6,sp,40
   48ce0:	a80b883a 	mov	r5,r21
   48ce4:	b009883a 	mov	r4,r22
   48ce8:	00486000 	call	48600 <__sprint_r.part.0>
   48cec:	103f9a1e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0x44c>
   48cf0:	9021883a 	mov	r16,r18
   48cf4:	003ff306 	br	48cc4 <___vfiprintf_internal_r+0x5b8>
   48cf8:	d9000417 	ldw	r4,16(sp)
   48cfc:	6880040c 	andi	r2,r13,16
   48d00:	20c00104 	addi	r3,r4,4
   48d04:	1002aa1e 	bne	r2,zero,497b0 <___vfiprintf_internal_r+0x10a4>
   48d08:	6880100c 	andi	r2,r13,64
   48d0c:	1002f926 	beq	r2,zero,498f4 <___vfiprintf_internal_r+0x11e8>
   48d10:	d8800417 	ldw	r2,16(sp)
   48d14:	0039883a 	mov	fp,zero
   48d18:	d8c00415 	stw	r3,16(sp)
   48d1c:	15c0000b 	ldhu	r23,0(r2)
   48d20:	0005883a 	mov	r2,zero
   48d24:	003fc906 	br	48c4c <___vfiprintf_internal_r+0x540>
   48d28:	d9000417 	ldw	r4,16(sp)
   48d2c:	6880040c 	andi	r2,r13,16
   48d30:	20c00104 	addi	r3,r4,4
   48d34:	1002ad1e 	bne	r2,zero,497ec <___vfiprintf_internal_r+0x10e0>
   48d38:	6880100c 	andi	r2,r13,64
   48d3c:	1002f926 	beq	r2,zero,49924 <___vfiprintf_internal_r+0x1218>
   48d40:	d8800417 	ldw	r2,16(sp)
   48d44:	0039883a 	mov	fp,zero
   48d48:	d8c00415 	stw	r3,16(sp)
   48d4c:	15c0000b 	ldhu	r23,0(r2)
   48d50:	00800044 	movi	r2,1
   48d54:	003fbd06 	br	48c4c <___vfiprintf_internal_r+0x540>
   48d58:	d8c00017 	ldw	r3,0(sp)
   48d5c:	d8000b15 	stw	zero,44(sp)
   48d60:	1cc0010c 	andi	r19,r3,4
   48d64:	98024a26 	beq	r19,zero,49690 <___vfiprintf_internal_r+0xf84>
   48d68:	8de1c83a 	sub	r16,r17,r23
   48d6c:	0402480e 	bge	zero,r16,49690 <___vfiprintf_internal_r+0xf84>
   48d70:	900d883a 	mov	r6,r18
   48d74:	80c00450 	cmplti	r3,r16,17
   48d78:	d9000b17 	ldw	r4,44(sp)
   48d7c:	01c00174 	movhi	r7,5
   48d80:	1803181e 	bne	r3,zero,499e4 <___vfiprintf_internal_r+0x12d8>
   48d84:	39c00004 	addi	r7,r7,0
   48d88:	04c00404 	movi	r19,16
   48d8c:	00000606 	br	48da8 <___vfiprintf_internal_r+0x69c>
   48d90:	21400084 	addi	r5,r4,2
   48d94:	31800204 	addi	r6,r6,8
   48d98:	1809883a 	mov	r4,r3
   48d9c:	843ffc04 	addi	r16,r16,-16
   48da0:	80c00448 	cmpgei	r3,r16,17
   48da4:	18001726 	beq	r3,zero,48e04 <___vfiprintf_internal_r+0x6f8>
   48da8:	20c00044 	addi	r3,r4,1
   48dac:	10800404 	addi	r2,r2,16
   48db0:	31c00015 	stw	r7,0(r6)
   48db4:	34c00115 	stw	r19,4(r6)
   48db8:	d8800c15 	stw	r2,48(sp)
   48dbc:	d8c00b15 	stw	r3,44(sp)
   48dc0:	19400208 	cmpgei	r5,r3,8
   48dc4:	283ff226 	beq	r5,zero,48d90 <___vfiprintf_internal_r+0x684>
   48dc8:	d9800a04 	addi	r6,sp,40
   48dcc:	a80b883a 	mov	r5,r21
   48dd0:	b009883a 	mov	r4,r22
   48dd4:	10011d26 	beq	r2,zero,4924c <___vfiprintf_internal_r+0xb40>
   48dd8:	d9c00015 	stw	r7,0(sp)
   48ddc:	00486000 	call	48600 <__sprint_r.part.0>
   48de0:	103f5d1e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0x44c>
   48de4:	d9000b17 	ldw	r4,44(sp)
   48de8:	843ffc04 	addi	r16,r16,-16
   48dec:	80c00448 	cmpgei	r3,r16,17
   48df0:	d8800c17 	ldw	r2,48(sp)
   48df4:	d9c00017 	ldw	r7,0(sp)
   48df8:	900d883a 	mov	r6,r18
   48dfc:	21400044 	addi	r5,r4,1
   48e00:	183fe91e 	bne	r3,zero,48da8 <___vfiprintf_internal_r+0x69c>
   48e04:	1405883a 	add	r2,r2,r16
   48e08:	d9400b15 	stw	r5,44(sp)
   48e0c:	31c00015 	stw	r7,0(r6)
   48e10:	34000115 	stw	r16,4(r6)
   48e14:	d8800c15 	stw	r2,48(sp)
   48e18:	29400210 	cmplti	r5,r5,8
   48e1c:	283f421e 	bne	r5,zero,48b28 <___vfiprintf_internal_r+0x41c>
   48e20:	10021b26 	beq	r2,zero,49690 <___vfiprintf_internal_r+0xf84>
   48e24:	d9800a04 	addi	r6,sp,40
   48e28:	a80b883a 	mov	r5,r21
   48e2c:	b009883a 	mov	r4,r22
   48e30:	00486000 	call	48600 <__sprint_r.part.0>
   48e34:	103f481e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0x44c>
   48e38:	d8800c17 	ldw	r2,48(sp)
   48e3c:	003f3a06 	br	48b28 <___vfiprintf_internal_r+0x41c>
   48e40:	00455180 	call	45518 <__sinit>
   48e44:	003e4306 	br	48754 <___vfiprintf_internal_r+0x48>
   48e48:	29403fcc 	andi	r5,r5,255
   48e4c:	2802d81e 	bne	r5,zero,499b0 <___vfiprintf_internal_r+0x12a4>
   48e50:	6880080c 	andi	r2,r13,32
   48e54:	10005b26 	beq	r2,zero,48fc4 <___vfiprintf_internal_r+0x8b8>
   48e58:	d8c00417 	ldw	r3,16(sp)
   48e5c:	18800117 	ldw	r2,4(r3)
   48e60:	1dc00017 	ldw	r23,0(r3)
   48e64:	18c00204 	addi	r3,r3,8
   48e68:	d8c00415 	stw	r3,16(sp)
   48e6c:	1039883a 	mov	fp,r2
   48e70:	10006016 	blt	r2,zero,48ff4 <___vfiprintf_internal_r+0x8e8>
   48e74:	40bfffd8 	cmpnei	r2,r8,-1
   48e78:	db800943 	ldbu	r14,37(sp)
   48e7c:	10000626 	beq	r2,zero,48e98 <___vfiprintf_internal_r+0x78c>
   48e80:	04ffdfc4 	movi	r19,-129
   48e84:	6cc6703a 	and	r3,r13,r19
   48e88:	bf04b03a 	or	r2,r23,fp
   48e8c:	d8c00015 	stw	r3,0(sp)
   48e90:	10021426 	beq	r2,zero,496e4 <___vfiprintf_internal_r+0xfd8>
   48e94:	db400017 	ldw	r13,0(sp)
   48e98:	e001a51e 	bne	fp,zero,49530 <___vfiprintf_internal_r+0xe24>
   48e9c:	b88002a8 	cmpgeui	r2,r23,10
   48ea0:	1001a31e 	bne	r2,zero,49530 <___vfiprintf_internal_r+0xe24>
   48ea4:	bdc00c04 	addi	r23,r23,48
   48ea8:	ddc016c5 	stb	r23,91(sp)
   48eac:	db400015 	stw	r13,0(sp)
   48eb0:	07000044 	movi	fp,1
   48eb4:	dcc016c4 	addi	r19,sp,91
   48eb8:	00007506 	br	49090 <___vfiprintf_internal_r+0x984>
   48ebc:	a0800007 	ldb	r2,0(r20)
   48ec0:	6b401014 	ori	r13,r13,64
   48ec4:	003e5206 	br	48810 <___vfiprintf_internal_r+0x104>
   48ec8:	29403fcc 	andi	r5,r5,255
   48ecc:	2802ba1e 	bne	r5,zero,499b8 <___vfiprintf_internal_r+0x12ac>
   48ed0:	00c00174 	movhi	r3,5
   48ed4:	18ff7704 	addi	r3,r3,-548
   48ed8:	d8c00515 	stw	r3,20(sp)
   48edc:	68c0080c 	andi	r3,r13,32
   48ee0:	1800bb26 	beq	r3,zero,491d0 <___vfiprintf_internal_r+0xac4>
   48ee4:	d8c00417 	ldw	r3,16(sp)
   48ee8:	1dc00017 	ldw	r23,0(r3)
   48eec:	1f000117 	ldw	fp,4(r3)
   48ef0:	18c00204 	addi	r3,r3,8
   48ef4:	d8c00415 	stw	r3,16(sp)
   48ef8:	68c0004c 	andi	r3,r13,1
   48efc:	18000226 	beq	r3,zero,48f08 <___vfiprintf_internal_r+0x7fc>
   48f00:	bf06b03a 	or	r3,r23,fp
   48f04:	1802241e 	bne	r3,zero,49798 <___vfiprintf_internal_r+0x108c>
   48f08:	00800084 	movi	r2,2
   48f0c:	003f4f06 	br	48c4c <___vfiprintf_internal_r+0x540>
   48f10:	d8800417 	ldw	r2,16(sp)
   48f14:	d8000945 	stb	zero,37(sp)
   48f18:	14c00017 	ldw	r19,0(r2)
   48f1c:	10c00104 	addi	r3,r2,4
   48f20:	98026726 	beq	r19,zero,498c0 <___vfiprintf_internal_r+0x11b4>
   48f24:	40bfffe0 	cmpeqi	r2,r8,-1
   48f28:	10023f1e 	bne	r2,zero,49828 <___vfiprintf_internal_r+0x111c>
   48f2c:	400d883a 	mov	r6,r8
   48f30:	000b883a 	mov	r5,zero
   48f34:	9809883a 	mov	r4,r19
   48f38:	d8c00315 	stw	r3,12(sp)
   48f3c:	db400215 	stw	r13,8(sp)
   48f40:	da000015 	stw	r8,0(sp)
   48f44:	00469b80 	call	469b8 <memchr>
   48f48:	da000017 	ldw	r8,0(sp)
   48f4c:	db400217 	ldw	r13,8(sp)
   48f50:	d8c00317 	ldw	r3,12(sp)
   48f54:	10029226 	beq	r2,zero,499a0 <___vfiprintf_internal_r+0x1294>
   48f58:	14f9c83a 	sub	fp,r2,r19
   48f5c:	e02f883a 	mov	r23,fp
   48f60:	d8c00415 	stw	r3,16(sp)
   48f64:	003ea006 	br	489e8 <___vfiprintf_internal_r+0x2dc>
   48f68:	a0800007 	ldb	r2,0(r20)
   48f6c:	6b400814 	ori	r13,r13,32
   48f70:	003e2706 	br	48810 <___vfiprintf_internal_r+0x104>
   48f74:	d8c00417 	ldw	r3,16(sp)
   48f78:	00800c04 	movi	r2,48
   48f7c:	d8800985 	stb	r2,38(sp)
   48f80:	00801e04 	movi	r2,120
   48f84:	01000174 	movhi	r4,5
   48f88:	d88009c5 	stb	r2,39(sp)
   48f8c:	18800104 	addi	r2,r3,4
   48f90:	d8800415 	stw	r2,16(sp)
   48f94:	20bf7704 	addi	r2,r4,-548
   48f98:	d8800515 	stw	r2,20(sp)
   48f9c:	1dc00017 	ldw	r23,0(r3)
   48fa0:	0039883a 	mov	fp,zero
   48fa4:	6b400094 	ori	r13,r13,2
   48fa8:	00800084 	movi	r2,2
   48fac:	003f2706 	br	48c4c <___vfiprintf_internal_r+0x540>
   48fb0:	29403fcc 	andi	r5,r5,255
   48fb4:	2802821e 	bne	r5,zero,499c0 <___vfiprintf_internal_r+0x12b4>
   48fb8:	6b400414 	ori	r13,r13,16
   48fbc:	6880080c 	andi	r2,r13,32
   48fc0:	103fa51e 	bne	r2,zero,48e58 <___vfiprintf_internal_r+0x74c>
   48fc4:	d9000417 	ldw	r4,16(sp)
   48fc8:	6880040c 	andi	r2,r13,16
   48fcc:	20c00104 	addi	r3,r4,4
   48fd0:	1001ec1e 	bne	r2,zero,49784 <___vfiprintf_internal_r+0x1078>
   48fd4:	6880100c 	andi	r2,r13,64
   48fd8:	10024c26 	beq	r2,zero,4990c <___vfiprintf_internal_r+0x1200>
   48fdc:	d8800417 	ldw	r2,16(sp)
   48fe0:	d8c00415 	stw	r3,16(sp)
   48fe4:	15c0000f 	ldh	r23,0(r2)
   48fe8:	b839d7fa 	srai	fp,r23,31
   48fec:	e005883a 	mov	r2,fp
   48ff0:	103fa00e 	bge	r2,zero,48e74 <___vfiprintf_internal_r+0x768>
   48ff4:	b804c03a 	cmpne	r2,r23,zero
   48ff8:	0739c83a 	sub	fp,zero,fp
   48ffc:	e0b9c83a 	sub	fp,fp,r2
   49000:	00800b44 	movi	r2,45
   49004:	d8800945 	stb	r2,37(sp)
   49008:	40ffffe0 	cmpeqi	r3,r8,-1
   4900c:	05efc83a 	sub	r23,zero,r23
   49010:	03800b44 	movi	r14,45
   49014:	00800044 	movi	r2,1
   49018:	183f1026 	beq	r3,zero,48c5c <___vfiprintf_internal_r+0x550>
   4901c:	10c00060 	cmpeqi	r3,r2,1
   49020:	183f9d1e 	bne	r3,zero,48e98 <___vfiprintf_internal_r+0x78c>
   49024:	108000a0 	cmpeqi	r2,r2,2
   49028:	1001081e 	bne	r2,zero,4944c <___vfiprintf_internal_r+0xd40>
   4902c:	9027883a 	mov	r19,r18
   49030:	e008977a 	slli	r4,fp,29
   49034:	b806d0fa 	srli	r3,r23,3
   49038:	e038d0fa 	srli	fp,fp,3
   4903c:	b88001cc 	andi	r2,r23,7
   49040:	10800c04 	addi	r2,r2,48
   49044:	20eeb03a 	or	r23,r4,r3
   49048:	98bfffc5 	stb	r2,-1(r19)
   4904c:	bf06b03a 	or	r3,r23,fp
   49050:	980b883a 	mov	r5,r19
   49054:	9cffffc4 	addi	r19,r19,-1
   49058:	183ff51e 	bne	r3,zero,49030 <___vfiprintf_internal_r+0x924>
   4905c:	68c0004c 	andi	r3,r13,1
   49060:	18010726 	beq	r3,zero,49480 <___vfiprintf_internal_r+0xd74>
   49064:	10803fcc 	andi	r2,r2,255
   49068:	1080201c 	xori	r2,r2,128
   4906c:	10bfe004 	addi	r2,r2,-128
   49070:	10800c18 	cmpnei	r2,r2,48
   49074:	10010226 	beq	r2,zero,49480 <___vfiprintf_internal_r+0xd74>
   49078:	297fff84 	addi	r5,r5,-2
   4907c:	00800c04 	movi	r2,48
   49080:	98bfffc5 	stb	r2,-1(r19)
   49084:	9179c83a 	sub	fp,r18,r5
   49088:	db400015 	stw	r13,0(sp)
   4908c:	2827883a 	mov	r19,r5
   49090:	402f883a 	mov	r23,r8
   49094:	4700010e 	bge	r8,fp,4909c <___vfiprintf_internal_r+0x990>
   49098:	e02f883a 	mov	r23,fp
   4909c:	73803fcc 	andi	r14,r14,255
   490a0:	7380201c 	xori	r14,r14,128
   490a4:	73bfe004 	addi	r14,r14,-128
   490a8:	703e5126 	beq	r14,zero,489f0 <___vfiprintf_internal_r+0x2e4>
   490ac:	bdc00044 	addi	r23,r23,1
   490b0:	003e4f06 	br	489f0 <___vfiprintf_internal_r+0x2e4>
   490b4:	a0800007 	ldb	r2,0(r20)
   490b8:	6b402014 	ori	r13,r13,128
   490bc:	003dd406 	br	48810 <___vfiprintf_internal_r+0x104>
   490c0:	a0800007 	ldb	r2,0(r20)
   490c4:	a1000044 	addi	r4,r20,1
   490c8:	10c00aa0 	cmpeqi	r3,r2,42
   490cc:	1802501e 	bne	r3,zero,49a10 <___vfiprintf_internal_r+0x1304>
   490d0:	10fff404 	addi	r3,r2,-48
   490d4:	19c002b0 	cmpltui	r7,r3,10
   490d8:	2029883a 	mov	r20,r4
   490dc:	0011883a 	mov	r8,zero
   490e0:	383dcc26 	beq	r7,zero,48814 <___vfiprintf_internal_r+0x108>
   490e4:	a0800007 	ldb	r2,0(r20)
   490e8:	420002a4 	muli	r8,r8,10
   490ec:	a5000044 	addi	r20,r20,1
   490f0:	40d1883a 	add	r8,r8,r3
   490f4:	10fff404 	addi	r3,r2,-48
   490f8:	190002b0 	cmpltui	r4,r3,10
   490fc:	203ff91e 	bne	r4,zero,490e4 <___vfiprintf_internal_r+0x9d8>
   49100:	003dc406 	br	48814 <___vfiprintf_internal_r+0x108>
   49104:	a0800003 	ldbu	r2,0(r20)
   49108:	10803fcc 	andi	r2,r2,255
   4910c:	1080201c 	xori	r2,r2,128
   49110:	6b400114 	ori	r13,r13,4
   49114:	10bfe004 	addi	r2,r2,-128
   49118:	003dbd06 	br	48810 <___vfiprintf_internal_r+0x104>
   4911c:	a0800007 	ldb	r2,0(r20)
   49120:	01400044 	movi	r5,1
   49124:	01800ac4 	movi	r6,43
   49128:	003db906 	br	48810 <___vfiprintf_internal_r+0x104>
   4912c:	d8c00417 	ldw	r3,16(sp)
   49130:	a0800003 	ldbu	r2,0(r20)
   49134:	1c400017 	ldw	r17,0(r3)
   49138:	18c00104 	addi	r3,r3,4
   4913c:	8801b716 	blt	r17,zero,4981c <___vfiprintf_internal_r+0x1110>
   49140:	d8c00415 	stw	r3,16(sp)
   49144:	10803fcc 	andi	r2,r2,255
   49148:	1080201c 	xori	r2,r2,128
   4914c:	10bfe004 	addi	r2,r2,-128
   49150:	003daf06 	br	48810 <___vfiprintf_internal_r+0x104>
   49154:	a0800007 	ldb	r2,0(r20)
   49158:	6b400054 	ori	r13,r13,1
   4915c:	003dac06 	br	48810 <___vfiprintf_internal_r+0x104>
   49160:	30c03fcc 	andi	r3,r6,255
   49164:	18c0201c 	xori	r3,r3,128
   49168:	18ffe004 	addi	r3,r3,-128
   4916c:	a0800003 	ldbu	r2,0(r20)
   49170:	183ff41e 	bne	r3,zero,49144 <___vfiprintf_internal_r+0xa38>
   49174:	10803fcc 	andi	r2,r2,255
   49178:	1080201c 	xori	r2,r2,128
   4917c:	01400044 	movi	r5,1
   49180:	01800804 	movi	r6,32
   49184:	10bfe004 	addi	r2,r2,-128
   49188:	003da106 	br	48810 <___vfiprintf_internal_r+0x104>
   4918c:	d8c00417 	ldw	r3,16(sp)
   49190:	d8000945 	stb	zero,37(sp)
   49194:	05c00044 	movi	r23,1
   49198:	18800017 	ldw	r2,0(r3)
   4919c:	18c00104 	addi	r3,r3,4
   491a0:	d8c00415 	stw	r3,16(sp)
   491a4:	d8800d05 	stb	r2,52(sp)
   491a8:	07000044 	movi	fp,1
   491ac:	dcc00d04 	addi	r19,sp,52
   491b0:	003e0d06 	br	489e8 <___vfiprintf_internal_r+0x2dc>
   491b4:	29403fcc 	andi	r5,r5,255
   491b8:	2802061e 	bne	r5,zero,499d4 <___vfiprintf_internal_r+0x12c8>
   491bc:	00c00174 	movhi	r3,5
   491c0:	18ff7c04 	addi	r3,r3,-528
   491c4:	d8c00515 	stw	r3,20(sp)
   491c8:	68c0080c 	andi	r3,r13,32
   491cc:	183f451e 	bne	r3,zero,48ee4 <___vfiprintf_internal_r+0x7d8>
   491d0:	d9400417 	ldw	r5,16(sp)
   491d4:	68c0040c 	andi	r3,r13,16
   491d8:	29000104 	addi	r4,r5,4
   491dc:	18017f1e 	bne	r3,zero,497dc <___vfiprintf_internal_r+0x10d0>
   491e0:	68c0100c 	andi	r3,r13,64
   491e4:	1801be26 	beq	r3,zero,498e0 <___vfiprintf_internal_r+0x11d4>
   491e8:	d8c00417 	ldw	r3,16(sp)
   491ec:	0039883a 	mov	fp,zero
   491f0:	d9000415 	stw	r4,16(sp)
   491f4:	1dc0000b 	ldhu	r23,0(r3)
   491f8:	003f3f06 	br	48ef8 <___vfiprintf_internal_r+0x7ec>
   491fc:	29403fcc 	andi	r5,r5,255
   49200:	2801f61e 	bne	r5,zero,499dc <___vfiprintf_internal_r+0x12d0>
   49204:	d9000417 	ldw	r4,16(sp)
   49208:	6880080c 	andi	r2,r13,32
   4920c:	20c00017 	ldw	r3,0(r4)
   49210:	21000104 	addi	r4,r4,4
   49214:	10016b1e 	bne	r2,zero,497c4 <___vfiprintf_internal_r+0x10b8>
   49218:	6880040c 	andi	r2,r13,16
   4921c:	1001951e 	bne	r2,zero,49874 <___vfiprintf_internal_r+0x1168>
   49220:	6b40100c 	andi	r13,r13,64
   49224:	68019326 	beq	r13,zero,49874 <___vfiprintf_internal_r+0x1168>
   49228:	d8800117 	ldw	r2,4(sp)
   4922c:	d9000415 	stw	r4,16(sp)
   49230:	1880000d 	sth	r2,0(r3)
   49234:	003d5e06 	br	487b0 <___vfiprintf_internal_r+0xa4>
   49238:	a0800007 	ldb	r2,0(r20)
   4923c:	10c01b18 	cmpnei	r3,r2,108
   49240:	18019826 	beq	r3,zero,498a4 <___vfiprintf_internal_r+0x1198>
   49244:	6b400414 	ori	r13,r13,16
   49248:	003d7106 	br	48810 <___vfiprintf_internal_r+0x104>
   4924c:	01400044 	movi	r5,1
   49250:	0009883a 	mov	r4,zero
   49254:	900d883a 	mov	r6,r18
   49258:	003ed006 	br	48d9c <___vfiprintf_internal_r+0x690>
   4925c:	8dc7c83a 	sub	r3,r17,r23
   49260:	00fe1b0e 	bge	zero,r3,48ad0 <___vfiprintf_internal_r+0x3c4>
   49264:	19c00450 	cmplti	r7,r3,17
   49268:	3801e41e 	bne	r7,zero,499fc <___vfiprintf_internal_r+0x12f0>
   4926c:	01c00174 	movhi	r7,5
   49270:	39fffc04 	addi	r7,r7,-16
   49274:	03400404 	movi	r13,16
   49278:	00000606 	br	49294 <___vfiprintf_internal_r+0xb88>
   4927c:	23800084 	addi	r14,r4,2
   49280:	84000204 	addi	r16,r16,8
   49284:	2809883a 	mov	r4,r5
   49288:	18fffc04 	addi	r3,r3,-16
   4928c:	19400448 	cmpgei	r5,r3,17
   49290:	28001c26 	beq	r5,zero,49304 <___vfiprintf_internal_r+0xbf8>
   49294:	21400044 	addi	r5,r4,1
   49298:	10800404 	addi	r2,r2,16
   4929c:	81c00015 	stw	r7,0(r16)
   492a0:	83400115 	stw	r13,4(r16)
   492a4:	d8800c15 	stw	r2,48(sp)
   492a8:	d9400b15 	stw	r5,44(sp)
   492ac:	29800208 	cmpgei	r6,r5,8
   492b0:	303ff226 	beq	r6,zero,4927c <___vfiprintf_internal_r+0xb70>
   492b4:	d9800a04 	addi	r6,sp,40
   492b8:	a80b883a 	mov	r5,r21
   492bc:	b009883a 	mov	r4,r22
   492c0:	10007826 	beq	r2,zero,494a4 <___vfiprintf_internal_r+0xd98>
   492c4:	d9c00615 	stw	r7,24(sp)
   492c8:	d8c00315 	stw	r3,12(sp)
   492cc:	da000215 	stw	r8,8(sp)
   492d0:	00486000 	call	48600 <__sprint_r.part.0>
   492d4:	103e201e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0x44c>
   492d8:	d8c00317 	ldw	r3,12(sp)
   492dc:	d9000b17 	ldw	r4,44(sp)
   492e0:	d8800c17 	ldw	r2,48(sp)
   492e4:	18fffc04 	addi	r3,r3,-16
   492e8:	19400448 	cmpgei	r5,r3,17
   492ec:	d9c00617 	ldw	r7,24(sp)
   492f0:	da000217 	ldw	r8,8(sp)
   492f4:	9021883a 	mov	r16,r18
   492f8:	23800044 	addi	r14,r4,1
   492fc:	03400404 	movi	r13,16
   49300:	283fe41e 	bne	r5,zero,49294 <___vfiprintf_internal_r+0xb88>
   49304:	83400204 	addi	r13,r16,8
   49308:	10c5883a 	add	r2,r2,r3
   4930c:	80c00115 	stw	r3,4(r16)
   49310:	81c00015 	stw	r7,0(r16)
   49314:	d8800c15 	stw	r2,48(sp)
   49318:	db800b15 	stw	r14,44(sp)
   4931c:	70c00208 	cmpgei	r3,r14,8
   49320:	18011326 	beq	r3,zero,49770 <___vfiprintf_internal_r+0x1064>
   49324:	10018826 	beq	r2,zero,49948 <___vfiprintf_internal_r+0x123c>
   49328:	d9800a04 	addi	r6,sp,40
   4932c:	a80b883a 	mov	r5,r21
   49330:	b009883a 	mov	r4,r22
   49334:	da000215 	stw	r8,8(sp)
   49338:	00486000 	call	48600 <__sprint_r.part.0>
   4933c:	103e061e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0x44c>
   49340:	da000217 	ldw	r8,8(sp)
   49344:	d9000b17 	ldw	r4,44(sp)
   49348:	d8800c17 	ldw	r2,48(sp)
   4934c:	4711c83a 	sub	r8,r8,fp
   49350:	d9801904 	addi	r6,sp,100
   49354:	21400044 	addi	r5,r4,1
   49358:	9021883a 	mov	r16,r18
   4935c:	023dde0e 	bge	zero,r8,48ad8 <___vfiprintf_internal_r+0x3cc>
   49360:	40c00450 	cmplti	r3,r8,17
   49364:	01c00174 	movhi	r7,5
   49368:	1801741e 	bne	r3,zero,4993c <___vfiprintf_internal_r+0x1230>
   4936c:	39fffc04 	addi	r7,r7,-16
   49370:	03400404 	movi	r13,16
   49374:	00000606 	br	49390 <___vfiprintf_internal_r+0xc84>
   49378:	21400084 	addi	r5,r4,2
   4937c:	84000204 	addi	r16,r16,8
   49380:	1809883a 	mov	r4,r3
   49384:	423ffc04 	addi	r8,r8,-16
   49388:	40c00448 	cmpgei	r3,r8,17
   4938c:	18001a26 	beq	r3,zero,493f8 <___vfiprintf_internal_r+0xcec>
   49390:	20c00044 	addi	r3,r4,1
   49394:	10800404 	addi	r2,r2,16
   49398:	81c00015 	stw	r7,0(r16)
   4939c:	83400115 	stw	r13,4(r16)
   493a0:	d8800c15 	stw	r2,48(sp)
   493a4:	d8c00b15 	stw	r3,44(sp)
   493a8:	19400208 	cmpgei	r5,r3,8
   493ac:	283ff226 	beq	r5,zero,49378 <___vfiprintf_internal_r+0xc6c>
   493b0:	d9800a04 	addi	r6,sp,40
   493b4:	a80b883a 	mov	r5,r21
   493b8:	b009883a 	mov	r4,r22
   493bc:	10001a26 	beq	r2,zero,49428 <___vfiprintf_internal_r+0xd1c>
   493c0:	d9c00315 	stw	r7,12(sp)
   493c4:	da000215 	stw	r8,8(sp)
   493c8:	00486000 	call	48600 <__sprint_r.part.0>
   493cc:	103de21e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0x44c>
   493d0:	da000217 	ldw	r8,8(sp)
   493d4:	d9000b17 	ldw	r4,44(sp)
   493d8:	d8800c17 	ldw	r2,48(sp)
   493dc:	423ffc04 	addi	r8,r8,-16
   493e0:	40c00448 	cmpgei	r3,r8,17
   493e4:	d9c00317 	ldw	r7,12(sp)
   493e8:	9021883a 	mov	r16,r18
   493ec:	21400044 	addi	r5,r4,1
   493f0:	03400404 	movi	r13,16
   493f4:	183fe61e 	bne	r3,zero,49390 <___vfiprintf_internal_r+0xc84>
   493f8:	81000204 	addi	r4,r16,8
   493fc:	1205883a 	add	r2,r2,r8
   49400:	81c00015 	stw	r7,0(r16)
   49404:	82000115 	stw	r8,4(r16)
   49408:	d8800c15 	stw	r2,48(sp)
   4940c:	d9400b15 	stw	r5,44(sp)
   49410:	28c00208 	cmpgei	r3,r5,8
   49414:	1800a41e 	bne	r3,zero,496a8 <___vfiprintf_internal_r+0xf9c>
   49418:	29400044 	addi	r5,r5,1
   4941c:	21800204 	addi	r6,r4,8
   49420:	2021883a 	mov	r16,r4
   49424:	003dac06 	br	48ad8 <___vfiprintf_internal_r+0x3cc>
   49428:	01400044 	movi	r5,1
   4942c:	0009883a 	mov	r4,zero
   49430:	9021883a 	mov	r16,r18
   49434:	003fd306 	br	49384 <___vfiprintf_internal_r+0xc78>
   49438:	10c00060 	cmpeqi	r3,r2,1
   4943c:	1801561e 	bne	r3,zero,49998 <___vfiprintf_internal_r+0x128c>
   49440:	108000a0 	cmpeqi	r2,r2,2
   49444:	db400017 	ldw	r13,0(sp)
   49448:	103ef826 	beq	r2,zero,4902c <___vfiprintf_internal_r+0x920>
   4944c:	9027883a 	mov	r19,r18
   49450:	d9000517 	ldw	r4,20(sp)
   49454:	b88003cc 	andi	r2,r23,15
   49458:	e006973a 	slli	r3,fp,28
   4945c:	b82ed13a 	srli	r23,r23,4
   49460:	2085883a 	add	r2,r4,r2
   49464:	10800003 	ldbu	r2,0(r2)
   49468:	e038d13a 	srli	fp,fp,4
   4946c:	1deeb03a 	or	r23,r3,r23
   49470:	98bfffc5 	stb	r2,-1(r19)
   49474:	bf04b03a 	or	r2,r23,fp
   49478:	9cffffc4 	addi	r19,r19,-1
   4947c:	103ff41e 	bne	r2,zero,49450 <___vfiprintf_internal_r+0xd44>
   49480:	94f9c83a 	sub	fp,r18,r19
   49484:	db400015 	stw	r13,0(sp)
   49488:	003f0106 	br	49090 <___vfiprintf_internal_r+0x984>
   4948c:	d9800a04 	addi	r6,sp,40
   49490:	a80b883a 	mov	r5,r21
   49494:	b009883a 	mov	r4,r22
   49498:	00486000 	call	48600 <__sprint_r.part.0>
   4949c:	103da826 	beq	r2,zero,48b40 <___vfiprintf_internal_r+0x434>
   494a0:	003dad06 	br	48b58 <___vfiprintf_internal_r+0x44c>
   494a4:	03800044 	movi	r14,1
   494a8:	0009883a 	mov	r4,zero
   494ac:	9021883a 	mov	r16,r18
   494b0:	003f7506 	br	49288 <___vfiprintf_internal_r+0xb7c>
   494b4:	10009026 	beq	r2,zero,496f8 <___vfiprintf_internal_r+0xfec>
   494b8:	d9800a04 	addi	r6,sp,40
   494bc:	a80b883a 	mov	r5,r21
   494c0:	b009883a 	mov	r4,r22
   494c4:	da000615 	stw	r8,24(sp)
   494c8:	db400315 	stw	r13,12(sp)
   494cc:	db800215 	stw	r14,8(sp)
   494d0:	00486000 	call	48600 <__sprint_r.part.0>
   494d4:	103da01e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0x44c>
   494d8:	d9000b17 	ldw	r4,44(sp)
   494dc:	d8800c17 	ldw	r2,48(sp)
   494e0:	da000617 	ldw	r8,24(sp)
   494e4:	db400317 	ldw	r13,12(sp)
   494e8:	db800217 	ldw	r14,8(sp)
   494ec:	d9801904 	addi	r6,sp,100
   494f0:	21400044 	addi	r5,r4,1
   494f4:	9021883a 	mov	r16,r18
   494f8:	003d5a06 	br	48a64 <___vfiprintf_internal_r+0x358>
   494fc:	d8800984 	addi	r2,sp,38
   49500:	d8801715 	stw	r2,92(sp)
   49504:	00800084 	movi	r2,2
   49508:	d8801815 	stw	r2,96(sp)
   4950c:	d9801904 	addi	r6,sp,100
   49510:	01400044 	movi	r5,1
   49514:	3021883a 	mov	r16,r6
   49518:	2809883a 	mov	r4,r5
   4951c:	21400044 	addi	r5,r4,1
   49520:	81800204 	addi	r6,r16,8
   49524:	003d6806 	br	48ac8 <___vfiprintf_internal_r+0x3bc>
   49528:	db400017 	ldw	r13,0(sp)
   4952c:	003ebb06 	br	4901c <___vfiprintf_internal_r+0x910>
   49530:	9027883a 	mov	r19,r18
   49534:	b809883a 	mov	r4,r23
   49538:	e00b883a 	mov	r5,fp
   4953c:	01800284 	movi	r6,10
   49540:	000f883a 	mov	r7,zero
   49544:	db800315 	stw	r14,12(sp)
   49548:	da000215 	stw	r8,8(sp)
   4954c:	db400015 	stw	r13,0(sp)
   49550:	004b2040 	call	4b204 <__umoddi3>
   49554:	10800c04 	addi	r2,r2,48
   49558:	b809883a 	mov	r4,r23
   4955c:	e00b883a 	mov	r5,fp
   49560:	98bfffc5 	stb	r2,-1(r19)
   49564:	01800284 	movi	r6,10
   49568:	000f883a 	mov	r7,zero
   4956c:	004ac740 	call	4ac74 <__udivdi3>
   49570:	e009883a 	mov	r4,fp
   49574:	b80b883a 	mov	r5,r23
   49578:	db400017 	ldw	r13,0(sp)
   4957c:	da000217 	ldw	r8,8(sp)
   49580:	db800317 	ldw	r14,12(sp)
   49584:	9cffffc4 	addi	r19,r19,-1
   49588:	102f883a 	mov	r23,r2
   4958c:	1839883a 	mov	fp,r3
   49590:	203fe81e 	bne	r4,zero,49534 <___vfiprintf_internal_r+0xe28>
   49594:	294002a8 	cmpgeui	r5,r5,10
   49598:	283fe61e 	bne	r5,zero,49534 <___vfiprintf_internal_r+0xe28>
   4959c:	94f9c83a 	sub	fp,r18,r19
   495a0:	003ebb06 	br	49090 <___vfiprintf_internal_r+0x984>
   495a4:	19400450 	cmplti	r5,r3,17
   495a8:	01c00174 	movhi	r7,5
   495ac:	2801061e 	bne	r5,zero,499c8 <___vfiprintf_internal_r+0x12bc>
   495b0:	39c00004 	addi	r7,r7,0
   495b4:	03c00404 	movi	r15,16
   495b8:	00000706 	br	495d8 <___vfiprintf_internal_r+0xecc>
   495bc:	27c00084 	addi	ra,r4,2
   495c0:	84000204 	addi	r16,r16,8
   495c4:	3009883a 	mov	r4,r6
   495c8:	18fffc04 	addi	r3,r3,-16
   495cc:	19400448 	cmpgei	r5,r3,17
   495d0:	28002026 	beq	r5,zero,49654 <___vfiprintf_internal_r+0xf48>
   495d4:	21800044 	addi	r6,r4,1
   495d8:	10800404 	addi	r2,r2,16
   495dc:	81c00015 	stw	r7,0(r16)
   495e0:	83c00115 	stw	r15,4(r16)
   495e4:	d8800c15 	stw	r2,48(sp)
   495e8:	d9800b15 	stw	r6,44(sp)
   495ec:	31400208 	cmpgei	r5,r6,8
   495f0:	283ff226 	beq	r5,zero,495bc <___vfiprintf_internal_r+0xeb0>
   495f4:	d9800a04 	addi	r6,sp,40
   495f8:	a80b883a 	mov	r5,r21
   495fc:	b009883a 	mov	r4,r22
   49600:	10001f26 	beq	r2,zero,49680 <___vfiprintf_internal_r+0xf74>
   49604:	d9c00815 	stw	r7,32(sp)
   49608:	d8c00715 	stw	r3,28(sp)
   4960c:	da000615 	stw	r8,24(sp)
   49610:	db400315 	stw	r13,12(sp)
   49614:	db800215 	stw	r14,8(sp)
   49618:	00486000 	call	48600 <__sprint_r.part.0>
   4961c:	103d4e1e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0x44c>
   49620:	d8c00717 	ldw	r3,28(sp)
   49624:	d9000b17 	ldw	r4,44(sp)
   49628:	d8800c17 	ldw	r2,48(sp)
   4962c:	18fffc04 	addi	r3,r3,-16
   49630:	19400448 	cmpgei	r5,r3,17
   49634:	d9c00817 	ldw	r7,32(sp)
   49638:	da000617 	ldw	r8,24(sp)
   4963c:	db400317 	ldw	r13,12(sp)
   49640:	db800217 	ldw	r14,8(sp)
   49644:	9021883a 	mov	r16,r18
   49648:	27c00044 	addi	ra,r4,1
   4964c:	03c00404 	movi	r15,16
   49650:	283fe01e 	bne	r5,zero,495d4 <___vfiprintf_internal_r+0xec8>
   49654:	10c5883a 	add	r2,r2,r3
   49658:	80c00115 	stw	r3,4(r16)
   4965c:	81c00015 	stw	r7,0(r16)
   49660:	d8800c15 	stw	r2,48(sp)
   49664:	dfc00b15 	stw	ra,44(sp)
   49668:	f8c00208 	cmpgei	r3,ra,8
   4966c:	18002d1e 	bne	r3,zero,49724 <___vfiprintf_internal_r+0x1018>
   49670:	84000204 	addi	r16,r16,8
   49674:	f9400044 	addi	r5,ra,1
   49678:	f809883a 	mov	r4,ra
   4967c:	003ce906 	br	48a24 <___vfiprintf_internal_r+0x318>
   49680:	0009883a 	mov	r4,zero
   49684:	07c00044 	movi	ra,1
   49688:	9021883a 	mov	r16,r18
   4968c:	003fce06 	br	495c8 <___vfiprintf_internal_r+0xebc>
   49690:	8dc0010e 	bge	r17,r23,49698 <___vfiprintf_internal_r+0xf8c>
   49694:	b823883a 	mov	r17,r23
   49698:	d8800117 	ldw	r2,4(sp)
   4969c:	1445883a 	add	r2,r2,r17
   496a0:	d8800115 	stw	r2,4(sp)
   496a4:	003d2606 	br	48b40 <___vfiprintf_internal_r+0x434>
   496a8:	10007626 	beq	r2,zero,49884 <___vfiprintf_internal_r+0x1178>
   496ac:	d9800a04 	addi	r6,sp,40
   496b0:	a80b883a 	mov	r5,r21
   496b4:	b009883a 	mov	r4,r22
   496b8:	00486000 	call	48600 <__sprint_r.part.0>
   496bc:	103d261e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0x44c>
   496c0:	d9400b17 	ldw	r5,44(sp)
   496c4:	d8800c17 	ldw	r2,48(sp)
   496c8:	d9801904 	addi	r6,sp,100
   496cc:	29400044 	addi	r5,r5,1
   496d0:	9021883a 	mov	r16,r18
   496d4:	003d0006 	br	48ad8 <___vfiprintf_internal_r+0x3cc>
   496d8:	d8000b15 	stw	zero,44(sp)
   496dc:	9021883a 	mov	r16,r18
   496e0:	003d7806 	br	48cc4 <___vfiprintf_internal_r+0x5b8>
   496e4:	4000ac1e 	bne	r8,zero,49998 <___vfiprintf_internal_r+0x128c>
   496e8:	0011883a 	mov	r8,zero
   496ec:	0039883a 	mov	fp,zero
   496f0:	9027883a 	mov	r19,r18
   496f4:	003e6606 	br	49090 <___vfiprintf_internal_r+0x984>
   496f8:	7000411e 	bne	r14,zero,49800 <___vfiprintf_internal_r+0x10f4>
   496fc:	0009883a 	mov	r4,zero
   49700:	d9801904 	addi	r6,sp,100
   49704:	01400044 	movi	r5,1
   49708:	9021883a 	mov	r16,r18
   4970c:	003cee06 	br	48ac8 <___vfiprintf_internal_r+0x3bc>
   49710:	d9801904 	addi	r6,sp,100
   49714:	01400044 	movi	r5,1
   49718:	0009883a 	mov	r4,zero
   4971c:	9021883a 	mov	r16,r18
   49720:	003ce906 	br	48ac8 <___vfiprintf_internal_r+0x3bc>
   49724:	10004a26 	beq	r2,zero,49850 <___vfiprintf_internal_r+0x1144>
   49728:	d9800a04 	addi	r6,sp,40
   4972c:	a80b883a 	mov	r5,r21
   49730:	b009883a 	mov	r4,r22
   49734:	da000615 	stw	r8,24(sp)
   49738:	db400315 	stw	r13,12(sp)
   4973c:	db800215 	stw	r14,8(sp)
   49740:	00486000 	call	48600 <__sprint_r.part.0>
   49744:	103d041e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0x44c>
   49748:	d9000b17 	ldw	r4,44(sp)
   4974c:	d8800c17 	ldw	r2,48(sp)
   49750:	da000617 	ldw	r8,24(sp)
   49754:	db400317 	ldw	r13,12(sp)
   49758:	db800217 	ldw	r14,8(sp)
   4975c:	9021883a 	mov	r16,r18
   49760:	21400044 	addi	r5,r4,1
   49764:	003caf06 	br	48a24 <___vfiprintf_internal_r+0x318>
   49768:	9027883a 	mov	r19,r18
   4976c:	003e4806 	br	49090 <___vfiprintf_internal_r+0x984>
   49770:	71400044 	addi	r5,r14,1
   49774:	69800204 	addi	r6,r13,8
   49778:	7009883a 	mov	r4,r14
   4977c:	6821883a 	mov	r16,r13
   49780:	003cd306 	br	48ad0 <___vfiprintf_internal_r+0x3c4>
   49784:	25c00017 	ldw	r23,0(r4)
   49788:	d8c00415 	stw	r3,16(sp)
   4978c:	b839d7fa 	srai	fp,r23,31
   49790:	e005883a 	mov	r2,fp
   49794:	003db606 	br	48e70 <___vfiprintf_internal_r+0x764>
   49798:	00c00c04 	movi	r3,48
   4979c:	d88009c5 	stb	r2,39(sp)
   497a0:	d8c00985 	stb	r3,38(sp)
   497a4:	6b400094 	ori	r13,r13,2
   497a8:	00800084 	movi	r2,2
   497ac:	003d2706 	br	48c4c <___vfiprintf_internal_r+0x540>
   497b0:	25c00017 	ldw	r23,0(r4)
   497b4:	0039883a 	mov	fp,zero
   497b8:	d8c00415 	stw	r3,16(sp)
   497bc:	0005883a 	mov	r2,zero
   497c0:	003d2206 	br	48c4c <___vfiprintf_internal_r+0x540>
   497c4:	d9400117 	ldw	r5,4(sp)
   497c8:	d9000415 	stw	r4,16(sp)
   497cc:	2805d7fa 	srai	r2,r5,31
   497d0:	19400015 	stw	r5,0(r3)
   497d4:	18800115 	stw	r2,4(r3)
   497d8:	003bf506 	br	487b0 <___vfiprintf_internal_r+0xa4>
   497dc:	2dc00017 	ldw	r23,0(r5)
   497e0:	0039883a 	mov	fp,zero
   497e4:	d9000415 	stw	r4,16(sp)
   497e8:	003dc306 	br	48ef8 <___vfiprintf_internal_r+0x7ec>
   497ec:	25c00017 	ldw	r23,0(r4)
   497f0:	0039883a 	mov	fp,zero
   497f4:	d8c00415 	stw	r3,16(sp)
   497f8:	00800044 	movi	r2,1
   497fc:	003d1306 	br	48c4c <___vfiprintf_internal_r+0x540>
   49800:	d8800984 	addi	r2,sp,38
   49804:	d8801715 	stw	r2,92(sp)
   49808:	00800084 	movi	r2,2
   4980c:	d8801815 	stw	r2,96(sp)
   49810:	dc001904 	addi	r16,sp,100
   49814:	01000044 	movi	r4,1
   49818:	003f4006 	br	4951c <___vfiprintf_internal_r+0xe10>
   4981c:	0463c83a 	sub	r17,zero,r17
   49820:	d8c00415 	stw	r3,16(sp)
   49824:	003e3806 	br	49108 <___vfiprintf_internal_r+0x9fc>
   49828:	9809883a 	mov	r4,r19
   4982c:	d8c00215 	stw	r3,8(sp)
   49830:	db400015 	stw	r13,0(sp)
   49834:	00411a80 	call	411a8 <strlen>
   49838:	d8c00217 	ldw	r3,8(sp)
   4983c:	db400017 	ldw	r13,0(sp)
   49840:	1039883a 	mov	fp,r2
   49844:	102f883a 	mov	r23,r2
   49848:	d8c00415 	stw	r3,16(sp)
   4984c:	003c6606 	br	489e8 <___vfiprintf_internal_r+0x2dc>
   49850:	d8c00947 	ldb	r3,37(sp)
   49854:	18004326 	beq	r3,zero,49964 <___vfiprintf_internal_r+0x1258>
   49858:	d8800944 	addi	r2,sp,37
   4985c:	d8801715 	stw	r2,92(sp)
   49860:	00800044 	movi	r2,1
   49864:	d8801815 	stw	r2,96(sp)
   49868:	d9801904 	addi	r6,sp,100
   4986c:	01400044 	movi	r5,1
   49870:	003c7806 	br	48a54 <___vfiprintf_internal_r+0x348>
   49874:	d8800117 	ldw	r2,4(sp)
   49878:	18800015 	stw	r2,0(r3)
   4987c:	d9000415 	stw	r4,16(sp)
   49880:	003bcb06 	br	487b0 <___vfiprintf_internal_r+0xa4>
   49884:	00c00044 	movi	r3,1
   49888:	e005883a 	mov	r2,fp
   4988c:	dcc01715 	stw	r19,92(sp)
   49890:	df001815 	stw	fp,96(sp)
   49894:	df000c15 	stw	fp,48(sp)
   49898:	d8c00b15 	stw	r3,44(sp)
   4989c:	d9801904 	addi	r6,sp,100
   498a0:	003c9c06 	br	48b14 <___vfiprintf_internal_r+0x408>
   498a4:	a0800043 	ldbu	r2,1(r20)
   498a8:	6b400814 	ori	r13,r13,32
   498ac:	a5000044 	addi	r20,r20,1
   498b0:	10803fcc 	andi	r2,r2,255
   498b4:	1080201c 	xori	r2,r2,128
   498b8:	10bfe004 	addi	r2,r2,-128
   498bc:	003bd406 	br	48810 <___vfiprintf_internal_r+0x104>
   498c0:	408001f0 	cmpltui	r2,r8,7
   498c4:	4039883a 	mov	fp,r8
   498c8:	10002426 	beq	r2,zero,4995c <___vfiprintf_internal_r+0x1250>
   498cc:	04c00174 	movhi	r19,5
   498d0:	e02f883a 	mov	r23,fp
   498d4:	d8c00415 	stw	r3,16(sp)
   498d8:	9cff8104 	addi	r19,r19,-508
   498dc:	003c4206 	br	489e8 <___vfiprintf_internal_r+0x2dc>
   498e0:	d8c00417 	ldw	r3,16(sp)
   498e4:	0039883a 	mov	fp,zero
   498e8:	d9000415 	stw	r4,16(sp)
   498ec:	1dc00017 	ldw	r23,0(r3)
   498f0:	003d8106 	br	48ef8 <___vfiprintf_internal_r+0x7ec>
   498f4:	d8800417 	ldw	r2,16(sp)
   498f8:	0039883a 	mov	fp,zero
   498fc:	d8c00415 	stw	r3,16(sp)
   49900:	15c00017 	ldw	r23,0(r2)
   49904:	0005883a 	mov	r2,zero
   49908:	003cd006 	br	48c4c <___vfiprintf_internal_r+0x540>
   4990c:	d8800417 	ldw	r2,16(sp)
   49910:	d8c00415 	stw	r3,16(sp)
   49914:	15c00017 	ldw	r23,0(r2)
   49918:	b839d7fa 	srai	fp,r23,31
   4991c:	e005883a 	mov	r2,fp
   49920:	003d5306 	br	48e70 <___vfiprintf_internal_r+0x764>
   49924:	d8800417 	ldw	r2,16(sp)
   49928:	0039883a 	mov	fp,zero
   4992c:	d8c00415 	stw	r3,16(sp)
   49930:	15c00017 	ldw	r23,0(r2)
   49934:	00800044 	movi	r2,1
   49938:	003cc406 	br	48c4c <___vfiprintf_internal_r+0x540>
   4993c:	3009883a 	mov	r4,r6
   49940:	39fffc04 	addi	r7,r7,-16
   49944:	003ead06 	br	493fc <___vfiprintf_internal_r+0xcf0>
   49948:	d9801904 	addi	r6,sp,100
   4994c:	01400044 	movi	r5,1
   49950:	0009883a 	mov	r4,zero
   49954:	9021883a 	mov	r16,r18
   49958:	003c5d06 	br	48ad0 <___vfiprintf_internal_r+0x3c4>
   4995c:	07000184 	movi	fp,6
   49960:	003fda06 	br	498cc <___vfiprintf_internal_r+0x11c0>
   49964:	703ee51e 	bne	r14,zero,494fc <___vfiprintf_internal_r+0xdf0>
   49968:	0009883a 	mov	r4,zero
   4996c:	d9801904 	addi	r6,sp,100
   49970:	01400044 	movi	r5,1
   49974:	9021883a 	mov	r16,r18
   49978:	003c5506 	br	48ad0 <___vfiprintf_internal_r+0x3c4>
   4997c:	d9800945 	stb	r6,37(sp)
   49980:	003c1306 	br	489d0 <___vfiprintf_internal_r+0x2c4>
   49984:	d9800a04 	addi	r6,sp,40
   49988:	a80b883a 	mov	r5,r21
   4998c:	b009883a 	mov	r4,r22
   49990:	00486000 	call	48600 <__sprint_r.part.0>
   49994:	003c7006 	br	48b58 <___vfiprintf_internal_r+0x44c>
   49998:	db400017 	ldw	r13,0(sp)
   4999c:	003d4106 	br	48ea4 <___vfiprintf_internal_r+0x798>
   499a0:	402f883a 	mov	r23,r8
   499a4:	d8c00415 	stw	r3,16(sp)
   499a8:	4039883a 	mov	fp,r8
   499ac:	003c0e06 	br	489e8 <___vfiprintf_internal_r+0x2dc>
   499b0:	d9800945 	stb	r6,37(sp)
   499b4:	003d2606 	br	48e50 <___vfiprintf_internal_r+0x744>
   499b8:	d9800945 	stb	r6,37(sp)
   499bc:	003d4406 	br	48ed0 <___vfiprintf_internal_r+0x7c4>
   499c0:	d9800945 	stb	r6,37(sp)
   499c4:	003d7c06 	br	48fb8 <___vfiprintf_internal_r+0x8ac>
   499c8:	303f883a 	mov	ra,r6
   499cc:	39c00004 	addi	r7,r7,0
   499d0:	003f2006 	br	49654 <___vfiprintf_internal_r+0xf48>
   499d4:	d9800945 	stb	r6,37(sp)
   499d8:	003df806 	br	491bc <___vfiprintf_internal_r+0xab0>
   499dc:	d9800945 	stb	r6,37(sp)
   499e0:	003e0806 	br	49204 <___vfiprintf_internal_r+0xaf8>
   499e4:	21400044 	addi	r5,r4,1
   499e8:	39c00004 	addi	r7,r7,0
   499ec:	003d0506 	br	48e04 <___vfiprintf_internal_r+0x6f8>
   499f0:	00bfffc4 	movi	r2,-1
   499f4:	d8800115 	stw	r2,4(sp)
   499f8:	003c5a06 	br	48b64 <___vfiprintf_internal_r+0x458>
   499fc:	01c00174 	movhi	r7,5
   49a00:	301b883a 	mov	r13,r6
   49a04:	281d883a 	mov	r14,r5
   49a08:	39fffc04 	addi	r7,r7,-16
   49a0c:	003e3e06 	br	49308 <___vfiprintf_internal_r+0xbfc>
   49a10:	d8800417 	ldw	r2,16(sp)
   49a14:	12000017 	ldw	r8,0(r2)
   49a18:	10c00104 	addi	r3,r2,4
   49a1c:	4000010e 	bge	r8,zero,49a24 <___vfiprintf_internal_r+0x1318>
   49a20:	023fffc4 	movi	r8,-1
   49a24:	a0800043 	ldbu	r2,1(r20)
   49a28:	d8c00415 	stw	r3,16(sp)
   49a2c:	2029883a 	mov	r20,r4
   49a30:	10803fcc 	andi	r2,r2,255
   49a34:	1080201c 	xori	r2,r2,128
   49a38:	10bfe004 	addi	r2,r2,-128
   49a3c:	003b7406 	br	48810 <___vfiprintf_internal_r+0x104>

00049a40 <__vfiprintf_internal>:
   49a40:	00c00174 	movhi	r3,5
   49a44:	2005883a 	mov	r2,r4
   49a48:	1907ad17 	ldw	r4,7860(r3)
   49a4c:	300f883a 	mov	r7,r6
   49a50:	280d883a 	mov	r6,r5
   49a54:	100b883a 	mov	r5,r2
   49a58:	004870c1 	jmpi	4870c <___vfiprintf_internal_r>

00049a5c <__sbprintf>:
   49a5c:	2880030b 	ldhu	r2,12(r5)
   49a60:	2b001917 	ldw	r12,100(r5)
   49a64:	2ac0038b 	ldhu	r11,14(r5)
   49a68:	2a800717 	ldw	r10,28(r5)
   49a6c:	2a400917 	ldw	r9,36(r5)
   49a70:	defee204 	addi	sp,sp,-1144
   49a74:	da001a04 	addi	r8,sp,104
   49a78:	00c10004 	movi	r3,1024
   49a7c:	dc011a15 	stw	r16,1128(sp)
   49a80:	10bfff4c 	andi	r2,r2,65533
   49a84:	2821883a 	mov	r16,r5
   49a88:	d80b883a 	mov	r5,sp
   49a8c:	dc811c15 	stw	r18,1136(sp)
   49a90:	dc411b15 	stw	r17,1132(sp)
   49a94:	dfc11d15 	stw	ra,1140(sp)
   49a98:	2025883a 	mov	r18,r4
   49a9c:	d880030d 	sth	r2,12(sp)
   49aa0:	db001915 	stw	r12,100(sp)
   49aa4:	dac0038d 	sth	r11,14(sp)
   49aa8:	da800715 	stw	r10,28(sp)
   49aac:	da400915 	stw	r9,36(sp)
   49ab0:	da000015 	stw	r8,0(sp)
   49ab4:	da000415 	stw	r8,16(sp)
   49ab8:	d8c00215 	stw	r3,8(sp)
   49abc:	d8c00515 	stw	r3,20(sp)
   49ac0:	d8000615 	stw	zero,24(sp)
   49ac4:	004870c0 	call	4870c <___vfiprintf_internal_r>
   49ac8:	1023883a 	mov	r17,r2
   49acc:	10000d0e 	bge	r2,zero,49b04 <__sbprintf+0xa8>
   49ad0:	d880030b 	ldhu	r2,12(sp)
   49ad4:	1080100c 	andi	r2,r2,64
   49ad8:	10000326 	beq	r2,zero,49ae8 <__sbprintf+0x8c>
   49adc:	8080030b 	ldhu	r2,12(r16)
   49ae0:	10801014 	ori	r2,r2,64
   49ae4:	8080030d 	sth	r2,12(r16)
   49ae8:	8805883a 	mov	r2,r17
   49aec:	dfc11d17 	ldw	ra,1140(sp)
   49af0:	dc811c17 	ldw	r18,1136(sp)
   49af4:	dc411b17 	ldw	r17,1132(sp)
   49af8:	dc011a17 	ldw	r16,1128(sp)
   49afc:	dec11e04 	addi	sp,sp,1144
   49b00:	f800283a 	ret
   49b04:	d80b883a 	mov	r5,sp
   49b08:	9009883a 	mov	r4,r18
   49b0c:	00450e00 	call	450e0 <_fflush_r>
   49b10:	103fef26 	beq	r2,zero,49ad0 <__sbprintf+0x74>
   49b14:	047fffc4 	movi	r17,-1
   49b18:	003fed06 	br	49ad0 <__sbprintf+0x74>

00049b1c <_write_r>:
   49b1c:	2807883a 	mov	r3,r5
   49b20:	defffe04 	addi	sp,sp,-8
   49b24:	dc000015 	stw	r16,0(sp)
   49b28:	300b883a 	mov	r5,r6
   49b2c:	00800174 	movhi	r2,5
   49b30:	380d883a 	mov	r6,r7
   49b34:	2021883a 	mov	r16,r4
   49b38:	1809883a 	mov	r4,r3
   49b3c:	dfc00115 	stw	ra,4(sp)
   49b40:	100eb315 	stw	zero,15052(r2)
   49b44:	004ddf40 	call	4ddf4 <write>
   49b48:	10ffffd8 	cmpnei	r3,r2,-1
   49b4c:	18000426 	beq	r3,zero,49b60 <_write_r+0x44>
   49b50:	dfc00117 	ldw	ra,4(sp)
   49b54:	dc000017 	ldw	r16,0(sp)
   49b58:	dec00204 	addi	sp,sp,8
   49b5c:	f800283a 	ret
   49b60:	00c00174 	movhi	r3,5
   49b64:	18ceb317 	ldw	r3,15052(r3)
   49b68:	183ff926 	beq	r3,zero,49b50 <_write_r+0x34>
   49b6c:	80c00015 	stw	r3,0(r16)
   49b70:	dfc00117 	ldw	ra,4(sp)
   49b74:	dc000017 	ldw	r16,0(sp)
   49b78:	dec00204 	addi	sp,sp,8
   49b7c:	f800283a 	ret

00049b80 <_close_r>:
   49b80:	defffe04 	addi	sp,sp,-8
   49b84:	dc000015 	stw	r16,0(sp)
   49b88:	00800174 	movhi	r2,5
   49b8c:	2021883a 	mov	r16,r4
   49b90:	2809883a 	mov	r4,r5
   49b94:	dfc00115 	stw	ra,4(sp)
   49b98:	100eb315 	stw	zero,15052(r2)
   49b9c:	004d3f80 	call	4d3f8 <close>
   49ba0:	10ffffd8 	cmpnei	r3,r2,-1
   49ba4:	18000426 	beq	r3,zero,49bb8 <_close_r+0x38>
   49ba8:	dfc00117 	ldw	ra,4(sp)
   49bac:	dc000017 	ldw	r16,0(sp)
   49bb0:	dec00204 	addi	sp,sp,8
   49bb4:	f800283a 	ret
   49bb8:	00c00174 	movhi	r3,5
   49bbc:	18ceb317 	ldw	r3,15052(r3)
   49bc0:	183ff926 	beq	r3,zero,49ba8 <_close_r+0x28>
   49bc4:	80c00015 	stw	r3,0(r16)
   49bc8:	dfc00117 	ldw	ra,4(sp)
   49bcc:	dc000017 	ldw	r16,0(sp)
   49bd0:	dec00204 	addi	sp,sp,8
   49bd4:	f800283a 	ret

00049bd8 <__assert_func>:
   49bd8:	00800174 	movhi	r2,5
   49bdc:	1207ad17 	ldw	r8,7860(r2)
   49be0:	defffc04 	addi	sp,sp,-16
   49be4:	3807883a 	mov	r3,r7
   49be8:	3005883a 	mov	r2,r6
   49bec:	dfc00315 	stw	ra,12(sp)
   49bf0:	42400317 	ldw	r9,12(r8)
   49bf4:	200f883a 	mov	r7,r4
   49bf8:	2811883a 	mov	r8,r5
   49bfc:	180d883a 	mov	r6,r3
   49c00:	10000a26 	beq	r2,zero,49c2c <__assert_func+0x54>
   49c04:	00c00174 	movhi	r3,5
   49c08:	18c00404 	addi	r3,r3,16
   49c0c:	01400174 	movhi	r5,5
   49c10:	29400804 	addi	r5,r5,32
   49c14:	4809883a 	mov	r4,r9
   49c18:	d8c00115 	stw	r3,4(sp)
   49c1c:	da000015 	stw	r8,0(sp)
   49c20:	d8800215 	stw	r2,8(sp)
   49c24:	0049ec40 	call	49ec4 <fiprintf>
   49c28:	004a70c0 	call	4a70c <abort>
   49c2c:	00c00174 	movhi	r3,5
   49c30:	18c00704 	addi	r3,r3,28
   49c34:	1805883a 	mov	r2,r3
   49c38:	003ff406 	br	49c0c <__assert_func+0x34>

00049c3c <__assert>:
   49c3c:	deffff04 	addi	sp,sp,-4
   49c40:	300f883a 	mov	r7,r6
   49c44:	000d883a 	mov	r6,zero
   49c48:	dfc00015 	stw	ra,0(sp)
   49c4c:	0049bd80 	call	49bd8 <__assert_func>

00049c50 <_calloc_r>:
   49c50:	298b383a 	mul	r5,r5,r6
   49c54:	deffff04 	addi	sp,sp,-4
   49c58:	dfc00015 	stw	ra,0(sp)
   49c5c:	00461d80 	call	461d8 <_malloc_r>
   49c60:	1009883a 	mov	r4,r2
   49c64:	10000c26 	beq	r2,zero,49c98 <_calloc_r+0x48>
   49c68:	11bfff17 	ldw	r6,-4(r2)
   49c6c:	00bfff04 	movi	r2,-4
   49c70:	308c703a 	and	r6,r6,r2
   49c74:	31bfff04 	addi	r6,r6,-4
   49c78:	30800968 	cmpgeui	r2,r6,37
   49c7c:	1000141e 	bne	r2,zero,49cd0 <_calloc_r+0x80>
   49c80:	30800530 	cmpltui	r2,r6,20
   49c84:	10000826 	beq	r2,zero,49ca8 <_calloc_r+0x58>
   49c88:	2005883a 	mov	r2,r4
   49c8c:	10000015 	stw	zero,0(r2)
   49c90:	10000115 	stw	zero,4(r2)
   49c94:	10000215 	stw	zero,8(r2)
   49c98:	2005883a 	mov	r2,r4
   49c9c:	dfc00017 	ldw	ra,0(sp)
   49ca0:	dec00104 	addi	sp,sp,4
   49ca4:	f800283a 	ret
   49ca8:	20000015 	stw	zero,0(r4)
   49cac:	20000115 	stw	zero,4(r4)
   49cb0:	30800728 	cmpgeui	r2,r6,28
   49cb4:	10000d26 	beq	r2,zero,49cec <_calloc_r+0x9c>
   49cb8:	20000215 	stw	zero,8(r4)
   49cbc:	20000315 	stw	zero,12(r4)
   49cc0:	31800920 	cmpeqi	r6,r6,36
   49cc4:	30000b1e 	bne	r6,zero,49cf4 <_calloc_r+0xa4>
   49cc8:	20800404 	addi	r2,r4,16
   49ccc:	003fef06 	br	49c8c <_calloc_r+0x3c>
   49cd0:	000b883a 	mov	r5,zero
   49cd4:	0046cb40 	call	46cb4 <memset>
   49cd8:	1009883a 	mov	r4,r2
   49cdc:	2005883a 	mov	r2,r4
   49ce0:	dfc00017 	ldw	ra,0(sp)
   49ce4:	dec00104 	addi	sp,sp,4
   49ce8:	f800283a 	ret
   49cec:	20800204 	addi	r2,r4,8
   49cf0:	003fe606 	br	49c8c <_calloc_r+0x3c>
   49cf4:	20000415 	stw	zero,16(r4)
   49cf8:	20800604 	addi	r2,r4,24
   49cfc:	20000515 	stw	zero,20(r4)
   49d00:	003fe206 	br	49c8c <_calloc_r+0x3c>

00049d04 <_fclose_r.part.0>:
   49d04:	defffc04 	addi	sp,sp,-16
   49d08:	dc800215 	stw	r18,8(sp)
   49d0c:	dc400115 	stw	r17,4(sp)
   49d10:	dc000015 	stw	r16,0(sp)
   49d14:	dfc00315 	stw	ra,12(sp)
   49d18:	2821883a 	mov	r16,r5
   49d1c:	2023883a 	mov	r17,r4
   49d20:	0044eb80 	call	44eb8 <__sflush_r>
   49d24:	80c00b17 	ldw	r3,44(r16)
   49d28:	1025883a 	mov	r18,r2
   49d2c:	18000426 	beq	r3,zero,49d40 <_fclose_r.part.0+0x3c>
   49d30:	81400717 	ldw	r5,28(r16)
   49d34:	8809883a 	mov	r4,r17
   49d38:	183ee83a 	callr	r3
   49d3c:	10001916 	blt	r2,zero,49da4 <_fclose_r.part.0+0xa0>
   49d40:	8080030b 	ldhu	r2,12(r16)
   49d44:	1080200c 	andi	r2,r2,128
   49d48:	10001a1e 	bne	r2,zero,49db4 <_fclose_r.part.0+0xb0>
   49d4c:	81400c17 	ldw	r5,48(r16)
   49d50:	28000526 	beq	r5,zero,49d68 <_fclose_r.part.0+0x64>
   49d54:	80801004 	addi	r2,r16,64
   49d58:	28800226 	beq	r5,r2,49d64 <_fclose_r.part.0+0x60>
   49d5c:	8809883a 	mov	r4,r17
   49d60:	004567c0 	call	4567c <_free_r>
   49d64:	80000c15 	stw	zero,48(r16)
   49d68:	81401117 	ldw	r5,68(r16)
   49d6c:	28000326 	beq	r5,zero,49d7c <_fclose_r.part.0+0x78>
   49d70:	8809883a 	mov	r4,r17
   49d74:	004567c0 	call	4567c <_free_r>
   49d78:	80001115 	stw	zero,68(r16)
   49d7c:	00455280 	call	45528 <__sfp_lock_acquire>
   49d80:	8000030d 	sth	zero,12(r16)
   49d84:	004552c0 	call	4552c <__sfp_lock_release>
   49d88:	9005883a 	mov	r2,r18
   49d8c:	dfc00317 	ldw	ra,12(sp)
   49d90:	dc800217 	ldw	r18,8(sp)
   49d94:	dc400117 	ldw	r17,4(sp)
   49d98:	dc000017 	ldw	r16,0(sp)
   49d9c:	dec00404 	addi	sp,sp,16
   49da0:	f800283a 	ret
   49da4:	8080030b 	ldhu	r2,12(r16)
   49da8:	04bfffc4 	movi	r18,-1
   49dac:	1080200c 	andi	r2,r2,128
   49db0:	103fe626 	beq	r2,zero,49d4c <_fclose_r.part.0+0x48>
   49db4:	81400417 	ldw	r5,16(r16)
   49db8:	8809883a 	mov	r4,r17
   49dbc:	004567c0 	call	4567c <_free_r>
   49dc0:	003fe206 	br	49d4c <_fclose_r.part.0+0x48>

00049dc4 <_fclose_r>:
   49dc4:	28001926 	beq	r5,zero,49e2c <_fclose_r+0x68>
   49dc8:	defffd04 	addi	sp,sp,-12
   49dcc:	dc000115 	stw	r16,4(sp)
   49dd0:	dfc00215 	stw	ra,8(sp)
   49dd4:	2021883a 	mov	r16,r4
   49dd8:	20000226 	beq	r4,zero,49de4 <_fclose_r+0x20>
   49ddc:	20800e17 	ldw	r2,56(r4)
   49de0:	10000c26 	beq	r2,zero,49e14 <_fclose_r+0x50>
   49de4:	2880030f 	ldh	r2,12(r5)
   49de8:	1000051e 	bne	r2,zero,49e00 <_fclose_r+0x3c>
   49dec:	0005883a 	mov	r2,zero
   49df0:	dfc00217 	ldw	ra,8(sp)
   49df4:	dc000117 	ldw	r16,4(sp)
   49df8:	dec00304 	addi	sp,sp,12
   49dfc:	f800283a 	ret
   49e00:	8009883a 	mov	r4,r16
   49e04:	dfc00217 	ldw	ra,8(sp)
   49e08:	dc000117 	ldw	r16,4(sp)
   49e0c:	dec00304 	addi	sp,sp,12
   49e10:	0049d041 	jmpi	49d04 <_fclose_r.part.0>
   49e14:	d9400015 	stw	r5,0(sp)
   49e18:	00455180 	call	45518 <__sinit>
   49e1c:	d9400017 	ldw	r5,0(sp)
   49e20:	2880030f 	ldh	r2,12(r5)
   49e24:	103ff126 	beq	r2,zero,49dec <_fclose_r+0x28>
   49e28:	003ff506 	br	49e00 <_fclose_r+0x3c>
   49e2c:	0005883a 	mov	r2,zero
   49e30:	f800283a 	ret

00049e34 <fclose>:
   49e34:	20000826 	beq	r4,zero,49e58 <fclose+0x24>
   49e38:	00800174 	movhi	r2,5
   49e3c:	200b883a 	mov	r5,r4
   49e40:	1107ad17 	ldw	r4,7860(r2)
   49e44:	20000226 	beq	r4,zero,49e50 <fclose+0x1c>
   49e48:	20800e17 	ldw	r2,56(r4)
   49e4c:	10000526 	beq	r2,zero,49e64 <fclose+0x30>
   49e50:	2880030f 	ldh	r2,12(r5)
   49e54:	1000021e 	bne	r2,zero,49e60 <fclose+0x2c>
   49e58:	0005883a 	mov	r2,zero
   49e5c:	f800283a 	ret
   49e60:	0049d041 	jmpi	49d04 <_fclose_r.part.0>
   49e64:	defffd04 	addi	sp,sp,-12
   49e68:	d9400115 	stw	r5,4(sp)
   49e6c:	d9000015 	stw	r4,0(sp)
   49e70:	dfc00215 	stw	ra,8(sp)
   49e74:	00455180 	call	45518 <__sinit>
   49e78:	d9400117 	ldw	r5,4(sp)
   49e7c:	d9000017 	ldw	r4,0(sp)
   49e80:	2880030f 	ldh	r2,12(r5)
   49e84:	10000326 	beq	r2,zero,49e94 <fclose+0x60>
   49e88:	dfc00217 	ldw	ra,8(sp)
   49e8c:	dec00304 	addi	sp,sp,12
   49e90:	0049d041 	jmpi	49d04 <_fclose_r.part.0>
   49e94:	0005883a 	mov	r2,zero
   49e98:	dfc00217 	ldw	ra,8(sp)
   49e9c:	dec00304 	addi	sp,sp,12
   49ea0:	f800283a 	ret

00049ea4 <_fiprintf_r>:
   49ea4:	defffe04 	addi	sp,sp,-8
   49ea8:	dfc00015 	stw	ra,0(sp)
   49eac:	d9c00115 	stw	r7,4(sp)
   49eb0:	d9c00104 	addi	r7,sp,4
   49eb4:	004a4780 	call	4a478 <_vfiprintf_r>
   49eb8:	dfc00017 	ldw	ra,0(sp)
   49ebc:	dec00204 	addi	sp,sp,8
   49ec0:	f800283a 	ret

00049ec4 <fiprintf>:
   49ec4:	defffd04 	addi	sp,sp,-12
   49ec8:	2005883a 	mov	r2,r4
   49ecc:	dfc00015 	stw	ra,0(sp)
   49ed0:	d9800115 	stw	r6,4(sp)
   49ed4:	d9c00215 	stw	r7,8(sp)
   49ed8:	00c00174 	movhi	r3,5
   49edc:	1907ad17 	ldw	r4,7860(r3)
   49ee0:	280d883a 	mov	r6,r5
   49ee4:	d9c00104 	addi	r7,sp,4
   49ee8:	100b883a 	mov	r5,r2
   49eec:	004a4780 	call	4a478 <_vfiprintf_r>
   49ef0:	dfc00017 	ldw	ra,0(sp)
   49ef4:	dec00304 	addi	sp,sp,12
   49ef8:	f800283a 	ret

00049efc <__fputwc>:
   49efc:	defff904 	addi	sp,sp,-28
   49f00:	dcc00415 	stw	r19,16(sp)
   49f04:	dc800315 	stw	r18,12(sp)
   49f08:	dc000115 	stw	r16,4(sp)
   49f0c:	dfc00615 	stw	ra,24(sp)
   49f10:	dd000515 	stw	r20,20(sp)
   49f14:	dc400215 	stw	r17,8(sp)
   49f18:	2025883a 	mov	r18,r4
   49f1c:	2827883a 	mov	r19,r5
   49f20:	3021883a 	mov	r16,r6
   49f24:	004a2280 	call	4a228 <__locale_mb_cur_max>
   49f28:	10800058 	cmpnei	r2,r2,1
   49f2c:	1000071e 	bne	r2,zero,49f4c <__fputwc+0x50>
   49f30:	98bfffc4 	addi	r2,r19,-1
   49f34:	10803fe8 	cmpgeui	r2,r2,255
   49f38:	1000041e 	bne	r2,zero,49f4c <__fputwc+0x50>
   49f3c:	980b883a 	mov	r5,r19
   49f40:	dcc000c5 	stb	r19,3(sp)
   49f44:	05000044 	movi	r20,1
   49f48:	00000a06 	br	49f74 <__fputwc+0x78>
   49f4c:	81c01704 	addi	r7,r16,92
   49f50:	980d883a 	mov	r6,r19
   49f54:	d94000c4 	addi	r5,sp,3
   49f58:	9009883a 	mov	r4,r18
   49f5c:	004a5dc0 	call	4a5dc <_wcrtomb_r>
   49f60:	1029883a 	mov	r20,r2
   49f64:	10bfffd8 	cmpnei	r2,r2,-1
   49f68:	10003926 	beq	r2,zero,4a050 <__fputwc+0x154>
   49f6c:	a0001f26 	beq	r20,zero,49fec <__fputwc+0xf0>
   49f70:	d94000c3 	ldbu	r5,3(sp)
   49f74:	0023883a 	mov	r17,zero
   49f78:	00000a06 	br	49fa4 <__fputwc+0xa8>
   49f7c:	80800017 	ldw	r2,0(r16)
   49f80:	11400005 	stb	r5,0(r2)
   49f84:	80c00017 	ldw	r3,0(r16)
   49f88:	18c00044 	addi	r3,r3,1
   49f8c:	80c00015 	stw	r3,0(r16)
   49f90:	8c400044 	addi	r17,r17,1
   49f94:	d88000c4 	addi	r2,sp,3
   49f98:	1447883a 	add	r3,r2,r17
   49f9c:	8d00132e 	bgeu	r17,r20,49fec <__fputwc+0xf0>
   49fa0:	19400003 	ldbu	r5,0(r3)
   49fa4:	80c00217 	ldw	r3,8(r16)
   49fa8:	18ffffc4 	addi	r3,r3,-1
   49fac:	80c00215 	stw	r3,8(r16)
   49fb0:	183ff20e 	bge	r3,zero,49f7c <__fputwc+0x80>
   49fb4:	80800617 	ldw	r2,24(r16)
   49fb8:	18801616 	blt	r3,r2,4a014 <__fputwc+0x118>
   49fbc:	80800017 	ldw	r2,0(r16)
   49fc0:	11400005 	stb	r5,0(r2)
   49fc4:	80800017 	ldw	r2,0(r16)
   49fc8:	10c00003 	ldbu	r3,0(r2)
   49fcc:	10800044 	addi	r2,r2,1
   49fd0:	18c002a0 	cmpeqi	r3,r3,10
   49fd4:	1800171e 	bne	r3,zero,4a034 <__fputwc+0x138>
   49fd8:	80800015 	stw	r2,0(r16)
   49fdc:	8c400044 	addi	r17,r17,1
   49fe0:	d88000c4 	addi	r2,sp,3
   49fe4:	1447883a 	add	r3,r2,r17
   49fe8:	8d3fed36 	bltu	r17,r20,49fa0 <__fputwc+0xa4>
   49fec:	9829883a 	mov	r20,r19
   49ff0:	a005883a 	mov	r2,r20
   49ff4:	dfc00617 	ldw	ra,24(sp)
   49ff8:	dd000517 	ldw	r20,20(sp)
   49ffc:	dcc00417 	ldw	r19,16(sp)
   4a000:	dc800317 	ldw	r18,12(sp)
   4a004:	dc400217 	ldw	r17,8(sp)
   4a008:	dc000117 	ldw	r16,4(sp)
   4a00c:	dec00704 	addi	sp,sp,28
   4a010:	f800283a 	ret
   4a014:	29403fcc 	andi	r5,r5,255
   4a018:	800d883a 	mov	r6,r16
   4a01c:	9009883a 	mov	r4,r18
   4a020:	004a47c0 	call	4a47c <__swbuf_r>
   4a024:	10bfffe0 	cmpeqi	r2,r2,-1
   4a028:	103fd926 	beq	r2,zero,49f90 <__fputwc+0x94>
   4a02c:	053fffc4 	movi	r20,-1
   4a030:	003fef06 	br	49ff0 <__fputwc+0xf4>
   4a034:	800d883a 	mov	r6,r16
   4a038:	01400284 	movi	r5,10
   4a03c:	9009883a 	mov	r4,r18
   4a040:	004a47c0 	call	4a47c <__swbuf_r>
   4a044:	10bfffe0 	cmpeqi	r2,r2,-1
   4a048:	103fd126 	beq	r2,zero,49f90 <__fputwc+0x94>
   4a04c:	003ff706 	br	4a02c <__fputwc+0x130>
   4a050:	8080030b 	ldhu	r2,12(r16)
   4a054:	10801014 	ori	r2,r2,64
   4a058:	8080030d 	sth	r2,12(r16)
   4a05c:	003fe406 	br	49ff0 <__fputwc+0xf4>

0004a060 <_fputwc_r>:
   4a060:	3080030b 	ldhu	r2,12(r6)
   4a064:	10c8000c 	andi	r3,r2,8192
   4a068:	1800051e 	bne	r3,zero,4a080 <_fputwc_r+0x20>
   4a06c:	30c01917 	ldw	r3,100(r6)
   4a070:	10880014 	ori	r2,r2,8192
   4a074:	3080030d 	sth	r2,12(r6)
   4a078:	18880014 	ori	r2,r3,8192
   4a07c:	30801915 	stw	r2,100(r6)
   4a080:	0049efc1 	jmpi	49efc <__fputwc>

0004a084 <fputwc>:
   4a084:	defffc04 	addi	sp,sp,-16
   4a088:	00800174 	movhi	r2,5
   4a08c:	dc000215 	stw	r16,8(sp)
   4a090:	1407ad17 	ldw	r16,7860(r2)
   4a094:	dfc00315 	stw	ra,12(sp)
   4a098:	280d883a 	mov	r6,r5
   4a09c:	200b883a 	mov	r5,r4
   4a0a0:	80000226 	beq	r16,zero,4a0ac <fputwc+0x28>
   4a0a4:	80800e17 	ldw	r2,56(r16)
   4a0a8:	10000d26 	beq	r2,zero,4a0e0 <fputwc+0x5c>
   4a0ac:	3080030b 	ldhu	r2,12(r6)
   4a0b0:	10c8000c 	andi	r3,r2,8192
   4a0b4:	1800051e 	bne	r3,zero,4a0cc <fputwc+0x48>
   4a0b8:	30c01917 	ldw	r3,100(r6)
   4a0bc:	10880014 	ori	r2,r2,8192
   4a0c0:	3080030d 	sth	r2,12(r6)
   4a0c4:	18880014 	ori	r2,r3,8192
   4a0c8:	30801915 	stw	r2,100(r6)
   4a0cc:	8009883a 	mov	r4,r16
   4a0d0:	dfc00317 	ldw	ra,12(sp)
   4a0d4:	dc000217 	ldw	r16,8(sp)
   4a0d8:	dec00404 	addi	sp,sp,16
   4a0dc:	0049efc1 	jmpi	49efc <__fputwc>
   4a0e0:	d9000015 	stw	r4,0(sp)
   4a0e4:	8009883a 	mov	r4,r16
   4a0e8:	d9800115 	stw	r6,4(sp)
   4a0ec:	00455180 	call	45518 <__sinit>
   4a0f0:	d9800117 	ldw	r6,4(sp)
   4a0f4:	d9400017 	ldw	r5,0(sp)
   4a0f8:	003fec06 	br	4a0ac <fputwc+0x28>

0004a0fc <_fstat_r>:
   4a0fc:	2807883a 	mov	r3,r5
   4a100:	defffe04 	addi	sp,sp,-8
   4a104:	dc000015 	stw	r16,0(sp)
   4a108:	00800174 	movhi	r2,5
   4a10c:	300b883a 	mov	r5,r6
   4a110:	2021883a 	mov	r16,r4
   4a114:	1809883a 	mov	r4,r3
   4a118:	dfc00115 	stw	ra,4(sp)
   4a11c:	100eb315 	stw	zero,15052(r2)
   4a120:	004d5680 	call	4d568 <fstat>
   4a124:	10ffffd8 	cmpnei	r3,r2,-1
   4a128:	18000426 	beq	r3,zero,4a13c <_fstat_r+0x40>
   4a12c:	dfc00117 	ldw	ra,4(sp)
   4a130:	dc000017 	ldw	r16,0(sp)
   4a134:	dec00204 	addi	sp,sp,8
   4a138:	f800283a 	ret
   4a13c:	00c00174 	movhi	r3,5
   4a140:	18ceb317 	ldw	r3,15052(r3)
   4a144:	183ff926 	beq	r3,zero,4a12c <_fstat_r+0x30>
   4a148:	80c00015 	stw	r3,0(r16)
   4a14c:	dfc00117 	ldw	ra,4(sp)
   4a150:	dc000017 	ldw	r16,0(sp)
   4a154:	dec00204 	addi	sp,sp,8
   4a158:	f800283a 	ret

0004a15c <_isatty_r>:
   4a15c:	defffe04 	addi	sp,sp,-8
   4a160:	dc000015 	stw	r16,0(sp)
   4a164:	00800174 	movhi	r2,5
   4a168:	2021883a 	mov	r16,r4
   4a16c:	2809883a 	mov	r4,r5
   4a170:	dfc00115 	stw	ra,4(sp)
   4a174:	100eb315 	stw	zero,15052(r2)
   4a178:	004d6740 	call	4d674 <isatty>
   4a17c:	10ffffd8 	cmpnei	r3,r2,-1
   4a180:	18000426 	beq	r3,zero,4a194 <_isatty_r+0x38>
   4a184:	dfc00117 	ldw	ra,4(sp)
   4a188:	dc000017 	ldw	r16,0(sp)
   4a18c:	dec00204 	addi	sp,sp,8
   4a190:	f800283a 	ret
   4a194:	00c00174 	movhi	r3,5
   4a198:	18ceb317 	ldw	r3,15052(r3)
   4a19c:	183ff926 	beq	r3,zero,4a184 <_isatty_r+0x28>
   4a1a0:	80c00015 	stw	r3,0(r16)
   4a1a4:	dfc00117 	ldw	ra,4(sp)
   4a1a8:	dc000017 	ldw	r16,0(sp)
   4a1ac:	dec00204 	addi	sp,sp,8
   4a1b0:	f800283a 	ret

0004a1b4 <_setlocale_r>:
   4a1b4:	30001626 	beq	r6,zero,4a210 <_setlocale_r+0x5c>
   4a1b8:	01400174 	movhi	r5,5
   4a1bc:	defffe04 	addi	sp,sp,-8
   4a1c0:	29401504 	addi	r5,r5,84
   4a1c4:	3009883a 	mov	r4,r6
   4a1c8:	dc000015 	stw	r16,0(sp)
   4a1cc:	dfc00115 	stw	ra,4(sp)
   4a1d0:	3021883a 	mov	r16,r6
   4a1d4:	004a3c00 	call	4a3c0 <strcmp>
   4a1d8:	1000061e 	bne	r2,zero,4a1f4 <_setlocale_r+0x40>
   4a1dc:	00800174 	movhi	r2,5
   4a1e0:	10801404 	addi	r2,r2,80
   4a1e4:	dfc00117 	ldw	ra,4(sp)
   4a1e8:	dc000017 	ldw	r16,0(sp)
   4a1ec:	dec00204 	addi	sp,sp,8
   4a1f0:	f800283a 	ret
   4a1f4:	80800003 	ldbu	r2,0(r16)
   4a1f8:	10bfef44 	addi	r2,r2,-67
   4a1fc:	10000726 	beq	r2,zero,4a21c <_setlocale_r+0x68>
   4a200:	80800003 	ldbu	r2,0(r16)
   4a204:	103ff526 	beq	r2,zero,4a1dc <_setlocale_r+0x28>
   4a208:	0005883a 	mov	r2,zero
   4a20c:	003ff506 	br	4a1e4 <_setlocale_r+0x30>
   4a210:	00800174 	movhi	r2,5
   4a214:	10801404 	addi	r2,r2,80
   4a218:	f800283a 	ret
   4a21c:	80800043 	ldbu	r2,1(r16)
   4a220:	103fee26 	beq	r2,zero,4a1dc <_setlocale_r+0x28>
   4a224:	003ff606 	br	4a200 <_setlocale_r+0x4c>

0004a228 <__locale_mb_cur_max>:
   4a228:	00800174 	movhi	r2,5
   4a22c:	10831907 	ldb	r2,3172(r2)
   4a230:	f800283a 	ret

0004a234 <setlocale>:
   4a234:	28001626 	beq	r5,zero,4a290 <setlocale+0x5c>
   4a238:	defffe04 	addi	sp,sp,-8
   4a23c:	dc000015 	stw	r16,0(sp)
   4a240:	2821883a 	mov	r16,r5
   4a244:	01400174 	movhi	r5,5
   4a248:	29401504 	addi	r5,r5,84
   4a24c:	8009883a 	mov	r4,r16
   4a250:	dfc00115 	stw	ra,4(sp)
   4a254:	004a3c00 	call	4a3c0 <strcmp>
   4a258:	1000061e 	bne	r2,zero,4a274 <setlocale+0x40>
   4a25c:	00800174 	movhi	r2,5
   4a260:	10801404 	addi	r2,r2,80
   4a264:	dfc00117 	ldw	ra,4(sp)
   4a268:	dc000017 	ldw	r16,0(sp)
   4a26c:	dec00204 	addi	sp,sp,8
   4a270:	f800283a 	ret
   4a274:	80800003 	ldbu	r2,0(r16)
   4a278:	10bfef44 	addi	r2,r2,-67
   4a27c:	10000726 	beq	r2,zero,4a29c <setlocale+0x68>
   4a280:	80800003 	ldbu	r2,0(r16)
   4a284:	103ff526 	beq	r2,zero,4a25c <setlocale+0x28>
   4a288:	0005883a 	mov	r2,zero
   4a28c:	003ff506 	br	4a264 <setlocale+0x30>
   4a290:	00800174 	movhi	r2,5
   4a294:	10801404 	addi	r2,r2,80
   4a298:	f800283a 	ret
   4a29c:	80800043 	ldbu	r2,1(r16)
   4a2a0:	103fee26 	beq	r2,zero,4a25c <setlocale+0x28>
   4a2a4:	003ff606 	br	4a280 <setlocale+0x4c>

0004a2a8 <_lseek_r>:
   4a2a8:	2807883a 	mov	r3,r5
   4a2ac:	defffe04 	addi	sp,sp,-8
   4a2b0:	dc000015 	stw	r16,0(sp)
   4a2b4:	300b883a 	mov	r5,r6
   4a2b8:	00800174 	movhi	r2,5
   4a2bc:	380d883a 	mov	r6,r7
   4a2c0:	2021883a 	mov	r16,r4
   4a2c4:	1809883a 	mov	r4,r3
   4a2c8:	dfc00115 	stw	ra,4(sp)
   4a2cc:	100eb315 	stw	zero,15052(r2)
   4a2d0:	004d9a80 	call	4d9a8 <lseek>
   4a2d4:	10ffffd8 	cmpnei	r3,r2,-1
   4a2d8:	18000426 	beq	r3,zero,4a2ec <_lseek_r+0x44>
   4a2dc:	dfc00117 	ldw	ra,4(sp)
   4a2e0:	dc000017 	ldw	r16,0(sp)
   4a2e4:	dec00204 	addi	sp,sp,8
   4a2e8:	f800283a 	ret
   4a2ec:	00c00174 	movhi	r3,5
   4a2f0:	18ceb317 	ldw	r3,15052(r3)
   4a2f4:	183ff926 	beq	r3,zero,4a2dc <_lseek_r+0x34>
   4a2f8:	80c00015 	stw	r3,0(r16)
   4a2fc:	dfc00117 	ldw	ra,4(sp)
   4a300:	dc000017 	ldw	r16,0(sp)
   4a304:	dec00204 	addi	sp,sp,8
   4a308:	f800283a 	ret

0004a30c <_mbtowc_r>:
   4a30c:	00800174 	movhi	r2,5
   4a310:	10830817 	ldw	r2,3104(r2)
   4a314:	1000683a 	jmp	r2

0004a318 <__ascii_mbtowc>:
   4a318:	deffff04 	addi	sp,sp,-4
   4a31c:	28000826 	beq	r5,zero,4a340 <__ascii_mbtowc+0x28>
   4a320:	30000926 	beq	r6,zero,4a348 <__ascii_mbtowc+0x30>
   4a324:	38000b26 	beq	r7,zero,4a354 <__ascii_mbtowc+0x3c>
   4a328:	30800003 	ldbu	r2,0(r6)
   4a32c:	28800015 	stw	r2,0(r5)
   4a330:	30800003 	ldbu	r2,0(r6)
   4a334:	1004c03a 	cmpne	r2,r2,zero
   4a338:	dec00104 	addi	sp,sp,4
   4a33c:	f800283a 	ret
   4a340:	d80b883a 	mov	r5,sp
   4a344:	303ff71e 	bne	r6,zero,4a324 <__ascii_mbtowc+0xc>
   4a348:	0005883a 	mov	r2,zero
   4a34c:	dec00104 	addi	sp,sp,4
   4a350:	f800283a 	ret
   4a354:	00bfff84 	movi	r2,-2
   4a358:	003ff706 	br	4a338 <__ascii_mbtowc+0x20>

0004a35c <_read_r>:
   4a35c:	2807883a 	mov	r3,r5
   4a360:	defffe04 	addi	sp,sp,-8
   4a364:	dc000015 	stw	r16,0(sp)
   4a368:	300b883a 	mov	r5,r6
   4a36c:	00800174 	movhi	r2,5
   4a370:	380d883a 	mov	r6,r7
   4a374:	2021883a 	mov	r16,r4
   4a378:	1809883a 	mov	r4,r3
   4a37c:	dfc00115 	stw	ra,4(sp)
   4a380:	100eb315 	stw	zero,15052(r2)
   4a384:	004db7c0 	call	4db7c <read>
   4a388:	10ffffd8 	cmpnei	r3,r2,-1
   4a38c:	18000426 	beq	r3,zero,4a3a0 <_read_r+0x44>
   4a390:	dfc00117 	ldw	ra,4(sp)
   4a394:	dc000017 	ldw	r16,0(sp)
   4a398:	dec00204 	addi	sp,sp,8
   4a39c:	f800283a 	ret
   4a3a0:	00c00174 	movhi	r3,5
   4a3a4:	18ceb317 	ldw	r3,15052(r3)
   4a3a8:	183ff926 	beq	r3,zero,4a390 <_read_r+0x34>
   4a3ac:	80c00015 	stw	r3,0(r16)
   4a3b0:	dfc00117 	ldw	ra,4(sp)
   4a3b4:	dc000017 	ldw	r16,0(sp)
   4a3b8:	dec00204 	addi	sp,sp,8
   4a3bc:	f800283a 	ret

0004a3c0 <strcmp>:
   4a3c0:	2144b03a 	or	r2,r4,r5
   4a3c4:	108000cc 	andi	r2,r2,3
   4a3c8:	1000141e 	bne	r2,zero,4a41c <strcmp+0x5c>
   4a3cc:	20800017 	ldw	r2,0(r4)
   4a3d0:	28c00017 	ldw	r3,0(r5)
   4a3d4:	10c0111e 	bne	r2,r3,4a41c <strcmp+0x5c>
   4a3d8:	01ffbff4 	movhi	r7,65279
   4a3dc:	01a02074 	movhi	r6,32897
   4a3e0:	39ffbfc4 	addi	r7,r7,-257
   4a3e4:	31a02004 	addi	r6,r6,-32640
   4a3e8:	00000306 	br	4a3f8 <strcmp+0x38>
   4a3ec:	20800017 	ldw	r2,0(r4)
   4a3f0:	28c00017 	ldw	r3,0(r5)
   4a3f4:	10c0091e 	bne	r2,r3,4a41c <strcmp+0x5c>
   4a3f8:	11c7883a 	add	r3,r2,r7
   4a3fc:	0084303a 	nor	r2,zero,r2
   4a400:	1884703a 	and	r2,r3,r2
   4a404:	1184703a 	and	r2,r2,r6
   4a408:	21000104 	addi	r4,r4,4
   4a40c:	29400104 	addi	r5,r5,4
   4a410:	103ff626 	beq	r2,zero,4a3ec <strcmp+0x2c>
   4a414:	0005883a 	mov	r2,zero
   4a418:	f800283a 	ret
   4a41c:	20c00003 	ldbu	r3,0(r4)
   4a420:	18803fcc 	andi	r2,r3,255
   4a424:	1080201c 	xori	r2,r2,128
   4a428:	10bfe004 	addi	r2,r2,-128
   4a42c:	1000071e 	bne	r2,zero,4a44c <strcmp+0x8c>
   4a430:	00000a06 	br	4a45c <strcmp+0x9c>
   4a434:	20c00003 	ldbu	r3,0(r4)
   4a438:	29400044 	addi	r5,r5,1
   4a43c:	18803fcc 	andi	r2,r3,255
   4a440:	1080201c 	xori	r2,r2,128
   4a444:	10bfe004 	addi	r2,r2,-128
   4a448:	10000726 	beq	r2,zero,4a468 <strcmp+0xa8>
   4a44c:	29800007 	ldb	r6,0(r5)
   4a450:	21000044 	addi	r4,r4,1
   4a454:	30bff726 	beq	r6,r2,4a434 <strcmp+0x74>
   4a458:	18803fcc 	andi	r2,r3,255
   4a45c:	28c00003 	ldbu	r3,0(r5)
   4a460:	10c5c83a 	sub	r2,r2,r3
   4a464:	f800283a 	ret
   4a468:	28c00003 	ldbu	r3,0(r5)
   4a46c:	0005883a 	mov	r2,zero
   4a470:	10c5c83a 	sub	r2,r2,r3
   4a474:	f800283a 	ret

0004a478 <_vfiprintf_r>:
   4a478:	004870c1 	jmpi	4870c <___vfiprintf_internal_r>

0004a47c <__swbuf_r>:
   4a47c:	defffb04 	addi	sp,sp,-20
   4a480:	dcc00315 	stw	r19,12(sp)
   4a484:	dc400115 	stw	r17,4(sp)
   4a488:	dc000015 	stw	r16,0(sp)
   4a48c:	dfc00415 	stw	ra,16(sp)
   4a490:	dc800215 	stw	r18,8(sp)
   4a494:	2027883a 	mov	r19,r4
   4a498:	2823883a 	mov	r17,r5
   4a49c:	3021883a 	mov	r16,r6
   4a4a0:	20000226 	beq	r4,zero,4a4ac <__swbuf_r+0x30>
   4a4a4:	20800e17 	ldw	r2,56(r4)
   4a4a8:	10003e26 	beq	r2,zero,4a5a4 <__swbuf_r+0x128>
   4a4ac:	80800617 	ldw	r2,24(r16)
   4a4b0:	80c0030b 	ldhu	r3,12(r16)
   4a4b4:	80800215 	stw	r2,8(r16)
   4a4b8:	1880020c 	andi	r2,r3,8
   4a4bc:	10001f26 	beq	r2,zero,4a53c <__swbuf_r+0xc0>
   4a4c0:	80800417 	ldw	r2,16(r16)
   4a4c4:	10001d26 	beq	r2,zero,4a53c <__swbuf_r+0xc0>
   4a4c8:	1948000c 	andi	r5,r3,8192
   4a4cc:	8c803fcc 	andi	r18,r17,255
   4a4d0:	28002326 	beq	r5,zero,4a560 <__swbuf_r+0xe4>
   4a4d4:	80c00017 	ldw	r3,0(r16)
   4a4d8:	81000517 	ldw	r4,20(r16)
   4a4dc:	1885c83a 	sub	r2,r3,r2
   4a4e0:	1100290e 	bge	r2,r4,4a588 <__swbuf_r+0x10c>
   4a4e4:	10800044 	addi	r2,r2,1
   4a4e8:	81400217 	ldw	r5,8(r16)
   4a4ec:	19000044 	addi	r4,r3,1
   4a4f0:	81000015 	stw	r4,0(r16)
   4a4f4:	297fffc4 	addi	r5,r5,-1
   4a4f8:	81400215 	stw	r5,8(r16)
   4a4fc:	1c400005 	stb	r17,0(r3)
   4a500:	80c00517 	ldw	r3,20(r16)
   4a504:	18802926 	beq	r3,r2,4a5ac <__swbuf_r+0x130>
   4a508:	8080030b 	ldhu	r2,12(r16)
   4a50c:	1080004c 	andi	r2,r2,1
   4a510:	10000226 	beq	r2,zero,4a51c <__swbuf_r+0xa0>
   4a514:	90800298 	cmpnei	r2,r18,10
   4a518:	10002426 	beq	r2,zero,4a5ac <__swbuf_r+0x130>
   4a51c:	9005883a 	mov	r2,r18
   4a520:	dfc00417 	ldw	ra,16(sp)
   4a524:	dcc00317 	ldw	r19,12(sp)
   4a528:	dc800217 	ldw	r18,8(sp)
   4a52c:	dc400117 	ldw	r17,4(sp)
   4a530:	dc000017 	ldw	r16,0(sp)
   4a534:	dec00504 	addi	sp,sp,20
   4a538:	f800283a 	ret
   4a53c:	800b883a 	mov	r5,r16
   4a540:	9809883a 	mov	r4,r19
   4a544:	00434100 	call	43410 <__swsetup_r>
   4a548:	10001c1e 	bne	r2,zero,4a5bc <__swbuf_r+0x140>
   4a54c:	80c0030b 	ldhu	r3,12(r16)
   4a550:	80800417 	ldw	r2,16(r16)
   4a554:	8c803fcc 	andi	r18,r17,255
   4a558:	1948000c 	andi	r5,r3,8192
   4a55c:	283fdd1e 	bne	r5,zero,4a4d4 <__swbuf_r+0x58>
   4a560:	81001917 	ldw	r4,100(r16)
   4a564:	18c80014 	ori	r3,r3,8192
   4a568:	0177ffc4 	movi	r5,-8193
   4a56c:	2148703a 	and	r4,r4,r5
   4a570:	80c0030d 	sth	r3,12(r16)
   4a574:	80c00017 	ldw	r3,0(r16)
   4a578:	81001915 	stw	r4,100(r16)
   4a57c:	81000517 	ldw	r4,20(r16)
   4a580:	1885c83a 	sub	r2,r3,r2
   4a584:	113fd716 	blt	r2,r4,4a4e4 <__swbuf_r+0x68>
   4a588:	800b883a 	mov	r5,r16
   4a58c:	9809883a 	mov	r4,r19
   4a590:	00450e00 	call	450e0 <_fflush_r>
   4a594:	1000091e 	bne	r2,zero,4a5bc <__swbuf_r+0x140>
   4a598:	80c00017 	ldw	r3,0(r16)
   4a59c:	00800044 	movi	r2,1
   4a5a0:	003fd106 	br	4a4e8 <__swbuf_r+0x6c>
   4a5a4:	00455180 	call	45518 <__sinit>
   4a5a8:	003fc006 	br	4a4ac <__swbuf_r+0x30>
   4a5ac:	800b883a 	mov	r5,r16
   4a5b0:	9809883a 	mov	r4,r19
   4a5b4:	00450e00 	call	450e0 <_fflush_r>
   4a5b8:	103fd826 	beq	r2,zero,4a51c <__swbuf_r+0xa0>
   4a5bc:	04bfffc4 	movi	r18,-1
   4a5c0:	003fd606 	br	4a51c <__swbuf_r+0xa0>

0004a5c4 <__swbuf>:
   4a5c4:	00c00174 	movhi	r3,5
   4a5c8:	2005883a 	mov	r2,r4
   4a5cc:	1907ad17 	ldw	r4,7860(r3)
   4a5d0:	280d883a 	mov	r6,r5
   4a5d4:	100b883a 	mov	r5,r2
   4a5d8:	004a47c1 	jmpi	4a47c <__swbuf_r>

0004a5dc <_wcrtomb_r>:
   4a5dc:	defffa04 	addi	sp,sp,-24
   4a5e0:	dc400415 	stw	r17,16(sp)
   4a5e4:	dc000315 	stw	r16,12(sp)
   4a5e8:	00800174 	movhi	r2,5
   4a5ec:	dfc00515 	stw	ra,20(sp)
   4a5f0:	10830717 	ldw	r2,3100(r2)
   4a5f4:	2023883a 	mov	r17,r4
   4a5f8:	3821883a 	mov	r16,r7
   4a5fc:	28000826 	beq	r5,zero,4a620 <_wcrtomb_r+0x44>
   4a600:	103ee83a 	callr	r2
   4a604:	10ffffd8 	cmpnei	r3,r2,-1
   4a608:	18000a26 	beq	r3,zero,4a634 <_wcrtomb_r+0x58>
   4a60c:	dfc00517 	ldw	ra,20(sp)
   4a610:	dc400417 	ldw	r17,16(sp)
   4a614:	dc000317 	ldw	r16,12(sp)
   4a618:	dec00604 	addi	sp,sp,24
   4a61c:	f800283a 	ret
   4a620:	000d883a 	mov	r6,zero
   4a624:	d9400084 	addi	r5,sp,2
   4a628:	103ee83a 	callr	r2
   4a62c:	10ffffd8 	cmpnei	r3,r2,-1
   4a630:	183ff61e 	bne	r3,zero,4a60c <_wcrtomb_r+0x30>
   4a634:	00802284 	movi	r2,138
   4a638:	80000015 	stw	zero,0(r16)
   4a63c:	88800015 	stw	r2,0(r17)
   4a640:	00bfffc4 	movi	r2,-1
   4a644:	003ff106 	br	4a60c <_wcrtomb_r+0x30>

0004a648 <wcrtomb>:
   4a648:	defffa04 	addi	sp,sp,-24
   4a64c:	00c00174 	movhi	r3,5
   4a650:	dc400415 	stw	r17,16(sp)
   4a654:	dc000315 	stw	r16,12(sp)
   4a658:	1c47ad17 	ldw	r17,7860(r3)
   4a65c:	dfc00515 	stw	ra,20(sp)
   4a660:	00c00174 	movhi	r3,5
   4a664:	18c30717 	ldw	r3,3100(r3)
   4a668:	3021883a 	mov	r16,r6
   4a66c:	20000c26 	beq	r4,zero,4a6a0 <wcrtomb+0x58>
   4a670:	280d883a 	mov	r6,r5
   4a674:	800f883a 	mov	r7,r16
   4a678:	200b883a 	mov	r5,r4
   4a67c:	8809883a 	mov	r4,r17
   4a680:	183ee83a 	callr	r3
   4a684:	10ffffd8 	cmpnei	r3,r2,-1
   4a688:	18000c26 	beq	r3,zero,4a6bc <wcrtomb+0x74>
   4a68c:	dfc00517 	ldw	ra,20(sp)
   4a690:	dc400417 	ldw	r17,16(sp)
   4a694:	dc000317 	ldw	r16,12(sp)
   4a698:	dec00604 	addi	sp,sp,24
   4a69c:	f800283a 	ret
   4a6a0:	300f883a 	mov	r7,r6
   4a6a4:	d9400084 	addi	r5,sp,2
   4a6a8:	000d883a 	mov	r6,zero
   4a6ac:	8809883a 	mov	r4,r17
   4a6b0:	183ee83a 	callr	r3
   4a6b4:	10ffffd8 	cmpnei	r3,r2,-1
   4a6b8:	183ff41e 	bne	r3,zero,4a68c <wcrtomb+0x44>
   4a6bc:	00802284 	movi	r2,138
   4a6c0:	80000015 	stw	zero,0(r16)
   4a6c4:	88800015 	stw	r2,0(r17)
   4a6c8:	00bfffc4 	movi	r2,-1
   4a6cc:	003fef06 	br	4a68c <wcrtomb+0x44>

0004a6d0 <_wctomb_r>:
   4a6d0:	00800174 	movhi	r2,5
   4a6d4:	10830717 	ldw	r2,3100(r2)
   4a6d8:	1000683a 	jmp	r2

0004a6dc <__ascii_wctomb>:
   4a6dc:	28000926 	beq	r5,zero,4a704 <__ascii_wctomb+0x28>
   4a6e0:	30804030 	cmpltui	r2,r6,256
   4a6e4:	10000326 	beq	r2,zero,4a6f4 <__ascii_wctomb+0x18>
   4a6e8:	29800005 	stb	r6,0(r5)
   4a6ec:	00800044 	movi	r2,1
   4a6f0:	f800283a 	ret
   4a6f4:	00802284 	movi	r2,138
   4a6f8:	20800015 	stw	r2,0(r4)
   4a6fc:	00bfffc4 	movi	r2,-1
   4a700:	f800283a 	ret
   4a704:	0005883a 	mov	r2,zero
   4a708:	f800283a 	ret

0004a70c <abort>:
   4a70c:	deffff04 	addi	sp,sp,-4
   4a710:	01000184 	movi	r4,6
   4a714:	dfc00015 	stw	ra,0(sp)
   4a718:	004a9980 	call	4a998 <raise>
   4a71c:	01000044 	movi	r4,1
   4a720:	004d4f40 	call	4d4f4 <_exit>

0004a724 <_init_signal_r>:
   4a724:	2080b717 	ldw	r2,732(r4)
   4a728:	10000226 	beq	r2,zero,4a734 <_init_signal_r+0x10>
   4a72c:	0005883a 	mov	r2,zero
   4a730:	f800283a 	ret
   4a734:	defffe04 	addi	sp,sp,-8
   4a738:	01402004 	movi	r5,128
   4a73c:	dc000015 	stw	r16,0(sp)
   4a740:	dfc00115 	stw	ra,4(sp)
   4a744:	2021883a 	mov	r16,r4
   4a748:	00461d80 	call	461d8 <_malloc_r>
   4a74c:	8080b715 	stw	r2,732(r16)
   4a750:	1009883a 	mov	r4,r2
   4a754:	10000826 	beq	r2,zero,4a778 <_init_signal_r+0x54>
   4a758:	01802004 	movi	r6,128
   4a75c:	000b883a 	mov	r5,zero
   4a760:	0046cb40 	call	46cb4 <memset>
   4a764:	0005883a 	mov	r2,zero
   4a768:	dfc00117 	ldw	ra,4(sp)
   4a76c:	dc000017 	ldw	r16,0(sp)
   4a770:	dec00204 	addi	sp,sp,8
   4a774:	f800283a 	ret
   4a778:	00bfffc4 	movi	r2,-1
   4a77c:	003ffa06 	br	4a768 <_init_signal_r+0x44>

0004a780 <_signal_r>:
   4a780:	defffc04 	addi	sp,sp,-16
   4a784:	dc400115 	stw	r17,4(sp)
   4a788:	dfc00315 	stw	ra,12(sp)
   4a78c:	dc800215 	stw	r18,8(sp)
   4a790:	dc000015 	stw	r16,0(sp)
   4a794:	28800830 	cmpltui	r2,r5,32
   4a798:	2023883a 	mov	r17,r4
   4a79c:	10000e26 	beq	r2,zero,4a7d8 <_signal_r+0x58>
   4a7a0:	20c0b717 	ldw	r3,732(r4)
   4a7a4:	2821883a 	mov	r16,r5
   4a7a8:	3025883a 	mov	r18,r6
   4a7ac:	18000e26 	beq	r3,zero,4a7e8 <_signal_r+0x68>
   4a7b0:	802090ba 	slli	r16,r16,2
   4a7b4:	1c21883a 	add	r16,r3,r16
   4a7b8:	80800017 	ldw	r2,0(r16)
   4a7bc:	84800015 	stw	r18,0(r16)
   4a7c0:	dfc00317 	ldw	ra,12(sp)
   4a7c4:	dc800217 	ldw	r18,8(sp)
   4a7c8:	dc400117 	ldw	r17,4(sp)
   4a7cc:	dc000017 	ldw	r16,0(sp)
   4a7d0:	dec00404 	addi	sp,sp,16
   4a7d4:	f800283a 	ret
   4a7d8:	00800584 	movi	r2,22
   4a7dc:	20800015 	stw	r2,0(r4)
   4a7e0:	00bfffc4 	movi	r2,-1
   4a7e4:	003ff606 	br	4a7c0 <_signal_r+0x40>
   4a7e8:	01402004 	movi	r5,128
   4a7ec:	00461d80 	call	461d8 <_malloc_r>
   4a7f0:	8880b715 	stw	r2,732(r17)
   4a7f4:	10000626 	beq	r2,zero,4a810 <_signal_r+0x90>
   4a7f8:	01802004 	movi	r6,128
   4a7fc:	000b883a 	mov	r5,zero
   4a800:	1009883a 	mov	r4,r2
   4a804:	0046cb40 	call	46cb4 <memset>
   4a808:	1007883a 	mov	r3,r2
   4a80c:	003fe806 	br	4a7b0 <_signal_r+0x30>
   4a810:	00bfffc4 	movi	r2,-1
   4a814:	003fea06 	br	4a7c0 <_signal_r+0x40>

0004a818 <_raise_r>:
   4a818:	28800830 	cmpltui	r2,r5,32
   4a81c:	10002b26 	beq	r2,zero,4a8cc <_raise_r+0xb4>
   4a820:	2080b717 	ldw	r2,732(r4)
   4a824:	defffd04 	addi	sp,sp,-12
   4a828:	dc000115 	stw	r16,4(sp)
   4a82c:	dfc00215 	stw	ra,8(sp)
   4a830:	2821883a 	mov	r16,r5
   4a834:	10001026 	beq	r2,zero,4a878 <_raise_r+0x60>
   4a838:	280690ba 	slli	r3,r5,2
   4a83c:	10c5883a 	add	r2,r2,r3
   4a840:	10c00017 	ldw	r3,0(r2)
   4a844:	18000c26 	beq	r3,zero,4a878 <_raise_r+0x60>
   4a848:	19400060 	cmpeqi	r5,r3,1
   4a84c:	28001a1e 	bne	r5,zero,4a8b8 <_raise_r+0xa0>
   4a850:	197fffd8 	cmpnei	r5,r3,-1
   4a854:	28001126 	beq	r5,zero,4a89c <_raise_r+0x84>
   4a858:	10000015 	stw	zero,0(r2)
   4a85c:	8009883a 	mov	r4,r16
   4a860:	183ee83a 	callr	r3
   4a864:	0005883a 	mov	r2,zero
   4a868:	dfc00217 	ldw	ra,8(sp)
   4a86c:	dc000117 	ldw	r16,4(sp)
   4a870:	dec00304 	addi	sp,sp,12
   4a874:	f800283a 	ret
   4a878:	d9000015 	stw	r4,0(sp)
   4a87c:	004ac700 	call	4ac70 <_getpid_r>
   4a880:	d9000017 	ldw	r4,0(sp)
   4a884:	800d883a 	mov	r6,r16
   4a888:	100b883a 	mov	r5,r2
   4a88c:	dfc00217 	ldw	ra,8(sp)
   4a890:	dc000117 	ldw	r16,4(sp)
   4a894:	dec00304 	addi	sp,sp,12
   4a898:	004ac101 	jmpi	4ac10 <_kill_r>
   4a89c:	00800584 	movi	r2,22
   4a8a0:	20800015 	stw	r2,0(r4)
   4a8a4:	00800044 	movi	r2,1
   4a8a8:	dfc00217 	ldw	ra,8(sp)
   4a8ac:	dc000117 	ldw	r16,4(sp)
   4a8b0:	dec00304 	addi	sp,sp,12
   4a8b4:	f800283a 	ret
   4a8b8:	0005883a 	mov	r2,zero
   4a8bc:	dfc00217 	ldw	ra,8(sp)
   4a8c0:	dc000117 	ldw	r16,4(sp)
   4a8c4:	dec00304 	addi	sp,sp,12
   4a8c8:	f800283a 	ret
   4a8cc:	00800584 	movi	r2,22
   4a8d0:	20800015 	stw	r2,0(r4)
   4a8d4:	00bfffc4 	movi	r2,-1
   4a8d8:	f800283a 	ret

0004a8dc <__sigtramp_r>:
   4a8dc:	28800830 	cmpltui	r2,r5,32
   4a8e0:	10002b26 	beq	r2,zero,4a990 <__sigtramp_r+0xb4>
   4a8e4:	20c0b717 	ldw	r3,732(r4)
   4a8e8:	defffd04 	addi	sp,sp,-12
   4a8ec:	dc400115 	stw	r17,4(sp)
   4a8f0:	dc000015 	stw	r16,0(sp)
   4a8f4:	dfc00215 	stw	ra,8(sp)
   4a8f8:	2821883a 	mov	r16,r5
   4a8fc:	2023883a 	mov	r17,r4
   4a900:	18001326 	beq	r3,zero,4a950 <__sigtramp_r+0x74>
   4a904:	800490ba 	slli	r2,r16,2
   4a908:	1887883a 	add	r3,r3,r2
   4a90c:	18800017 	ldw	r2,0(r3)
   4a910:	10000d26 	beq	r2,zero,4a948 <__sigtramp_r+0x6c>
   4a914:	113fffe0 	cmpeqi	r4,r2,-1
   4a918:	2000191e 	bne	r4,zero,4a980 <__sigtramp_r+0xa4>
   4a91c:	11000060 	cmpeqi	r4,r2,1
   4a920:	2000151e 	bne	r4,zero,4a978 <__sigtramp_r+0x9c>
   4a924:	18000015 	stw	zero,0(r3)
   4a928:	8009883a 	mov	r4,r16
   4a92c:	103ee83a 	callr	r2
   4a930:	0005883a 	mov	r2,zero
   4a934:	dfc00217 	ldw	ra,8(sp)
   4a938:	dc400117 	ldw	r17,4(sp)
   4a93c:	dc000017 	ldw	r16,0(sp)
   4a940:	dec00304 	addi	sp,sp,12
   4a944:	f800283a 	ret
   4a948:	00800044 	movi	r2,1
   4a94c:	003ff906 	br	4a934 <__sigtramp_r+0x58>
   4a950:	01402004 	movi	r5,128
   4a954:	00461d80 	call	461d8 <_malloc_r>
   4a958:	8880b715 	stw	r2,732(r17)
   4a95c:	10000a26 	beq	r2,zero,4a988 <__sigtramp_r+0xac>
   4a960:	01802004 	movi	r6,128
   4a964:	000b883a 	mov	r5,zero
   4a968:	1009883a 	mov	r4,r2
   4a96c:	0046cb40 	call	46cb4 <memset>
   4a970:	1007883a 	mov	r3,r2
   4a974:	003fe306 	br	4a904 <__sigtramp_r+0x28>
   4a978:	008000c4 	movi	r2,3
   4a97c:	003fed06 	br	4a934 <__sigtramp_r+0x58>
   4a980:	00800084 	movi	r2,2
   4a984:	003feb06 	br	4a934 <__sigtramp_r+0x58>
   4a988:	00bfffc4 	movi	r2,-1
   4a98c:	003fe906 	br	4a934 <__sigtramp_r+0x58>
   4a990:	00bfffc4 	movi	r2,-1
   4a994:	f800283a 	ret

0004a998 <raise>:
   4a998:	defffd04 	addi	sp,sp,-12
   4a99c:	dc400115 	stw	r17,4(sp)
   4a9a0:	00c00174 	movhi	r3,5
   4a9a4:	dfc00215 	stw	ra,8(sp)
   4a9a8:	dc000015 	stw	r16,0(sp)
   4a9ac:	20800830 	cmpltui	r2,r4,32
   4a9b0:	1c47ad17 	ldw	r17,7860(r3)
   4a9b4:	10002326 	beq	r2,zero,4aa44 <raise+0xac>
   4a9b8:	8880b717 	ldw	r2,732(r17)
   4a9bc:	2021883a 	mov	r16,r4
   4a9c0:	10001026 	beq	r2,zero,4aa04 <raise+0x6c>
   4a9c4:	200690ba 	slli	r3,r4,2
   4a9c8:	10c5883a 	add	r2,r2,r3
   4a9cc:	10c00017 	ldw	r3,0(r2)
   4a9d0:	18000c26 	beq	r3,zero,4aa04 <raise+0x6c>
   4a9d4:	19400060 	cmpeqi	r5,r3,1
   4a9d8:	2800181e 	bne	r5,zero,4aa3c <raise+0xa4>
   4a9dc:	197fffd8 	cmpnei	r5,r3,-1
   4a9e0:	28001226 	beq	r5,zero,4aa2c <raise+0x94>
   4a9e4:	10000015 	stw	zero,0(r2)
   4a9e8:	183ee83a 	callr	r3
   4a9ec:	0005883a 	mov	r2,zero
   4a9f0:	dfc00217 	ldw	ra,8(sp)
   4a9f4:	dc400117 	ldw	r17,4(sp)
   4a9f8:	dc000017 	ldw	r16,0(sp)
   4a9fc:	dec00304 	addi	sp,sp,12
   4aa00:	f800283a 	ret
   4aa04:	8809883a 	mov	r4,r17
   4aa08:	004ac700 	call	4ac70 <_getpid_r>
   4aa0c:	800d883a 	mov	r6,r16
   4aa10:	100b883a 	mov	r5,r2
   4aa14:	8809883a 	mov	r4,r17
   4aa18:	dfc00217 	ldw	ra,8(sp)
   4aa1c:	dc400117 	ldw	r17,4(sp)
   4aa20:	dc000017 	ldw	r16,0(sp)
   4aa24:	dec00304 	addi	sp,sp,12
   4aa28:	004ac101 	jmpi	4ac10 <_kill_r>
   4aa2c:	00800584 	movi	r2,22
   4aa30:	88800015 	stw	r2,0(r17)
   4aa34:	00800044 	movi	r2,1
   4aa38:	003fed06 	br	4a9f0 <raise+0x58>
   4aa3c:	0005883a 	mov	r2,zero
   4aa40:	003feb06 	br	4a9f0 <raise+0x58>
   4aa44:	00800584 	movi	r2,22
   4aa48:	88800015 	stw	r2,0(r17)
   4aa4c:	00bfffc4 	movi	r2,-1
   4aa50:	003fe706 	br	4a9f0 <raise+0x58>

0004aa54 <signal>:
   4aa54:	defffc04 	addi	sp,sp,-16
   4aa58:	dc800215 	stw	r18,8(sp)
   4aa5c:	00c00174 	movhi	r3,5
   4aa60:	dfc00315 	stw	ra,12(sp)
   4aa64:	dc400115 	stw	r17,4(sp)
   4aa68:	dc000015 	stw	r16,0(sp)
   4aa6c:	20800830 	cmpltui	r2,r4,32
   4aa70:	1c87ad17 	ldw	r18,7860(r3)
   4aa74:	10000e26 	beq	r2,zero,4aab0 <signal+0x5c>
   4aa78:	2021883a 	mov	r16,r4
   4aa7c:	9100b717 	ldw	r4,732(r18)
   4aa80:	2823883a 	mov	r17,r5
   4aa84:	20000e26 	beq	r4,zero,4aac0 <signal+0x6c>
   4aa88:	802090ba 	slli	r16,r16,2
   4aa8c:	2421883a 	add	r16,r4,r16
   4aa90:	80800017 	ldw	r2,0(r16)
   4aa94:	84400015 	stw	r17,0(r16)
   4aa98:	dfc00317 	ldw	ra,12(sp)
   4aa9c:	dc800217 	ldw	r18,8(sp)
   4aaa0:	dc400117 	ldw	r17,4(sp)
   4aaa4:	dc000017 	ldw	r16,0(sp)
   4aaa8:	dec00404 	addi	sp,sp,16
   4aaac:	f800283a 	ret
   4aab0:	00800584 	movi	r2,22
   4aab4:	90800015 	stw	r2,0(r18)
   4aab8:	00bfffc4 	movi	r2,-1
   4aabc:	003ff606 	br	4aa98 <signal+0x44>
   4aac0:	9009883a 	mov	r4,r18
   4aac4:	01402004 	movi	r5,128
   4aac8:	00461d80 	call	461d8 <_malloc_r>
   4aacc:	9080b715 	stw	r2,732(r18)
   4aad0:	1009883a 	mov	r4,r2
   4aad4:	10000526 	beq	r2,zero,4aaec <signal+0x98>
   4aad8:	01802004 	movi	r6,128
   4aadc:	000b883a 	mov	r5,zero
   4aae0:	0046cb40 	call	46cb4 <memset>
   4aae4:	1009883a 	mov	r4,r2
   4aae8:	003fe706 	br	4aa88 <signal+0x34>
   4aaec:	00bfffc4 	movi	r2,-1
   4aaf0:	003fe906 	br	4aa98 <signal+0x44>

0004aaf4 <_init_signal>:
   4aaf4:	defffe04 	addi	sp,sp,-8
   4aaf8:	00800174 	movhi	r2,5
   4aafc:	dc000015 	stw	r16,0(sp)
   4ab00:	1407ad17 	ldw	r16,7860(r2)
   4ab04:	dfc00115 	stw	ra,4(sp)
   4ab08:	8080b717 	ldw	r2,732(r16)
   4ab0c:	10000526 	beq	r2,zero,4ab24 <_init_signal+0x30>
   4ab10:	0005883a 	mov	r2,zero
   4ab14:	dfc00117 	ldw	ra,4(sp)
   4ab18:	dc000017 	ldw	r16,0(sp)
   4ab1c:	dec00204 	addi	sp,sp,8
   4ab20:	f800283a 	ret
   4ab24:	8009883a 	mov	r4,r16
   4ab28:	01402004 	movi	r5,128
   4ab2c:	00461d80 	call	461d8 <_malloc_r>
   4ab30:	8080b715 	stw	r2,732(r16)
   4ab34:	1009883a 	mov	r4,r2
   4ab38:	10000426 	beq	r2,zero,4ab4c <_init_signal+0x58>
   4ab3c:	01802004 	movi	r6,128
   4ab40:	000b883a 	mov	r5,zero
   4ab44:	0046cb40 	call	46cb4 <memset>
   4ab48:	003ff106 	br	4ab10 <_init_signal+0x1c>
   4ab4c:	00bfffc4 	movi	r2,-1
   4ab50:	003ff006 	br	4ab14 <_init_signal+0x20>

0004ab54 <__sigtramp>:
   4ab54:	defffd04 	addi	sp,sp,-12
   4ab58:	dc400115 	stw	r17,4(sp)
   4ab5c:	00c00174 	movhi	r3,5
   4ab60:	dfc00215 	stw	ra,8(sp)
   4ab64:	dc000015 	stw	r16,0(sp)
   4ab68:	20800830 	cmpltui	r2,r4,32
   4ab6c:	1c47ad17 	ldw	r17,7860(r3)
   4ab70:	10002526 	beq	r2,zero,4ac08 <__sigtramp+0xb4>
   4ab74:	88c0b717 	ldw	r3,732(r17)
   4ab78:	2021883a 	mov	r16,r4
   4ab7c:	18001326 	beq	r3,zero,4abcc <__sigtramp+0x78>
   4ab80:	800890ba 	slli	r4,r16,2
   4ab84:	1907883a 	add	r3,r3,r4
   4ab88:	18800017 	ldw	r2,0(r3)
   4ab8c:	10000d26 	beq	r2,zero,4abc4 <__sigtramp+0x70>
   4ab90:	113fffe0 	cmpeqi	r4,r2,-1
   4ab94:	20001a1e 	bne	r4,zero,4ac00 <__sigtramp+0xac>
   4ab98:	11000060 	cmpeqi	r4,r2,1
   4ab9c:	2000161e 	bne	r4,zero,4abf8 <__sigtramp+0xa4>
   4aba0:	18000015 	stw	zero,0(r3)
   4aba4:	8009883a 	mov	r4,r16
   4aba8:	103ee83a 	callr	r2
   4abac:	0005883a 	mov	r2,zero
   4abb0:	dfc00217 	ldw	ra,8(sp)
   4abb4:	dc400117 	ldw	r17,4(sp)
   4abb8:	dc000017 	ldw	r16,0(sp)
   4abbc:	dec00304 	addi	sp,sp,12
   4abc0:	f800283a 	ret
   4abc4:	00800044 	movi	r2,1
   4abc8:	003ff906 	br	4abb0 <__sigtramp+0x5c>
   4abcc:	01402004 	movi	r5,128
   4abd0:	8809883a 	mov	r4,r17
   4abd4:	00461d80 	call	461d8 <_malloc_r>
   4abd8:	8880b715 	stw	r2,732(r17)
   4abdc:	10000a26 	beq	r2,zero,4ac08 <__sigtramp+0xb4>
   4abe0:	01802004 	movi	r6,128
   4abe4:	000b883a 	mov	r5,zero
   4abe8:	1009883a 	mov	r4,r2
   4abec:	0046cb40 	call	46cb4 <memset>
   4abf0:	1007883a 	mov	r3,r2
   4abf4:	003fe206 	br	4ab80 <__sigtramp+0x2c>
   4abf8:	008000c4 	movi	r2,3
   4abfc:	003fec06 	br	4abb0 <__sigtramp+0x5c>
   4ac00:	00800084 	movi	r2,2
   4ac04:	003fea06 	br	4abb0 <__sigtramp+0x5c>
   4ac08:	00bfffc4 	movi	r2,-1
   4ac0c:	003fe806 	br	4abb0 <__sigtramp+0x5c>

0004ac10 <_kill_r>:
   4ac10:	2807883a 	mov	r3,r5
   4ac14:	defffe04 	addi	sp,sp,-8
   4ac18:	dc000015 	stw	r16,0(sp)
   4ac1c:	00800174 	movhi	r2,5
   4ac20:	300b883a 	mov	r5,r6
   4ac24:	2021883a 	mov	r16,r4
   4ac28:	1809883a 	mov	r4,r3
   4ac2c:	dfc00115 	stw	ra,4(sp)
   4ac30:	100eb315 	stw	zero,15052(r2)
   4ac34:	004d7540 	call	4d754 <kill>
   4ac38:	10ffffd8 	cmpnei	r3,r2,-1
   4ac3c:	18000426 	beq	r3,zero,4ac50 <_kill_r+0x40>
   4ac40:	dfc00117 	ldw	ra,4(sp)
   4ac44:	dc000017 	ldw	r16,0(sp)
   4ac48:	dec00204 	addi	sp,sp,8
   4ac4c:	f800283a 	ret
   4ac50:	00c00174 	movhi	r3,5
   4ac54:	18ceb317 	ldw	r3,15052(r3)
   4ac58:	183ff926 	beq	r3,zero,4ac40 <_kill_r+0x30>
   4ac5c:	80c00015 	stw	r3,0(r16)
   4ac60:	dfc00117 	ldw	ra,4(sp)
   4ac64:	dc000017 	ldw	r16,0(sp)
   4ac68:	dec00204 	addi	sp,sp,8
   4ac6c:	f800283a 	ret

0004ac70 <_getpid_r>:
   4ac70:	004d6181 	jmpi	4d618 <getpid>

0004ac74 <__udivdi3>:
   4ac74:	defff504 	addi	sp,sp,-44
   4ac78:	dcc00415 	stw	r19,16(sp)
   4ac7c:	dc000115 	stw	r16,4(sp)
   4ac80:	dfc00a15 	stw	ra,40(sp)
   4ac84:	df000915 	stw	fp,36(sp)
   4ac88:	ddc00815 	stw	r23,32(sp)
   4ac8c:	dd800715 	stw	r22,28(sp)
   4ac90:	dd400615 	stw	r21,24(sp)
   4ac94:	dd000515 	stw	r20,20(sp)
   4ac98:	dc800315 	stw	r18,12(sp)
   4ac9c:	dc400215 	stw	r17,8(sp)
   4aca0:	2027883a 	mov	r19,r4
   4aca4:	2821883a 	mov	r16,r5
   4aca8:	3800411e 	bne	r7,zero,4adb0 <__udivdi3+0x13c>
   4acac:	3829883a 	mov	r20,r7
   4acb0:	3023883a 	mov	r17,r6
   4acb4:	2025883a 	mov	r18,r4
   4acb8:	29805d2e 	bgeu	r5,r6,4ae30 <__udivdi3+0x1bc>
   4acbc:	00bfffd4 	movui	r2,65535
   4acc0:	282b883a 	mov	r21,r5
   4acc4:	1180a02e 	bgeu	r2,r6,4af48 <__udivdi3+0x2d4>
   4acc8:	00804034 	movhi	r2,256
   4accc:	30813636 	bltu	r6,r2,4b1a8 <__udivdi3+0x534>
   4acd0:	3006d63a 	srli	r3,r6,24
   4acd4:	05000604 	movi	r20,24
   4acd8:	00800174 	movhi	r2,5
   4acdc:	1885883a 	add	r2,r3,r2
   4ace0:	10bf3203 	ldbu	r2,-824(r2)
   4ace4:	00c00804 	movi	r3,32
   4ace8:	1505883a 	add	r2,r2,r20
   4acec:	1889c83a 	sub	r4,r3,r2
   4acf0:	18800526 	beq	r3,r2,4ad08 <__udivdi3+0x94>
   4acf4:	8120983a 	sll	r16,r16,r4
   4acf8:	9884d83a 	srl	r2,r19,r2
   4acfc:	3122983a 	sll	r17,r6,r4
   4ad00:	9924983a 	sll	r18,r19,r4
   4ad04:	142ab03a 	or	r21,r2,r16
   4ad08:	882cd43a 	srli	r22,r17,16
   4ad0c:	a809883a 	mov	r4,r21
   4ad10:	8d3fffcc 	andi	r20,r17,65535
   4ad14:	b00b883a 	mov	r5,r22
   4ad18:	00410080 	call	41008 <__umodsi3>
   4ad1c:	a809883a 	mov	r4,r21
   4ad20:	b00b883a 	mov	r5,r22
   4ad24:	1027883a 	mov	r19,r2
   4ad28:	0040fa40 	call	40fa4 <__udivsi3>
   4ad2c:	9826943a 	slli	r19,r19,16
   4ad30:	9008d43a 	srli	r4,r18,16
   4ad34:	1021883a 	mov	r16,r2
   4ad38:	a085383a 	mul	r2,r20,r2
   4ad3c:	9908b03a 	or	r4,r19,r4
   4ad40:	2080052e 	bgeu	r4,r2,4ad58 <__udivdi3+0xe4>
   4ad44:	2449883a 	add	r4,r4,r17
   4ad48:	80ffffc4 	addi	r3,r16,-1
   4ad4c:	24400136 	bltu	r4,r17,4ad54 <__udivdi3+0xe0>
   4ad50:	20812636 	bltu	r4,r2,4b1ec <__udivdi3+0x578>
   4ad54:	1821883a 	mov	r16,r3
   4ad58:	20a7c83a 	sub	r19,r4,r2
   4ad5c:	9809883a 	mov	r4,r19
   4ad60:	b00b883a 	mov	r5,r22
   4ad64:	00410080 	call	41008 <__umodsi3>
   4ad68:	9809883a 	mov	r4,r19
   4ad6c:	b00b883a 	mov	r5,r22
   4ad70:	1027883a 	mov	r19,r2
   4ad74:	9826943a 	slli	r19,r19,16
   4ad78:	0040fa40 	call	40fa4 <__udivsi3>
   4ad7c:	a0a9383a 	mul	r20,r20,r2
   4ad80:	94bfffcc 	andi	r18,r18,65535
   4ad84:	9ca4b03a 	or	r18,r19,r18
   4ad88:	9500052e 	bgeu	r18,r20,4ada0 <__udivdi3+0x12c>
   4ad8c:	8ca5883a 	add	r18,r17,r18
   4ad90:	10ffffc4 	addi	r3,r2,-1
   4ad94:	94400136 	bltu	r18,r17,4ad9c <__udivdi3+0x128>
   4ad98:	95011236 	bltu	r18,r20,4b1e4 <__udivdi3+0x570>
   4ad9c:	1805883a 	mov	r2,r3
   4ada0:	8020943a 	slli	r16,r16,16
   4ada4:	0007883a 	mov	r3,zero
   4ada8:	8084b03a 	or	r2,r16,r2
   4adac:	00000306 	br	4adbc <__udivdi3+0x148>
   4adb0:	29c00e2e 	bgeu	r5,r7,4adec <__udivdi3+0x178>
   4adb4:	0007883a 	mov	r3,zero
   4adb8:	0005883a 	mov	r2,zero
   4adbc:	dfc00a17 	ldw	ra,40(sp)
   4adc0:	df000917 	ldw	fp,36(sp)
   4adc4:	ddc00817 	ldw	r23,32(sp)
   4adc8:	dd800717 	ldw	r22,28(sp)
   4adcc:	dd400617 	ldw	r21,24(sp)
   4add0:	dd000517 	ldw	r20,20(sp)
   4add4:	dcc00417 	ldw	r19,16(sp)
   4add8:	dc800317 	ldw	r18,12(sp)
   4addc:	dc400217 	ldw	r17,8(sp)
   4ade0:	dc000117 	ldw	r16,4(sp)
   4ade4:	dec00b04 	addi	sp,sp,44
   4ade8:	f800283a 	ret
   4adec:	00bfffd4 	movui	r2,65535
   4adf0:	11c05a2e 	bgeu	r2,r7,4af5c <__udivdi3+0x2e8>
   4adf4:	00804034 	movhi	r2,256
   4adf8:	3880dd36 	bltu	r7,r2,4b170 <__udivdi3+0x4fc>
   4adfc:	3804d63a 	srli	r2,r7,24
   4ae00:	01000604 	movi	r4,24
   4ae04:	00c00174 	movhi	r3,5
   4ae08:	10c7883a 	add	r3,r2,r3
   4ae0c:	18bf3203 	ldbu	r2,-824(r3)
   4ae10:	00c00804 	movi	r3,32
   4ae14:	1105883a 	add	r2,r2,r4
   4ae18:	18abc83a 	sub	r21,r3,r2
   4ae1c:	1880861e 	bne	r3,r2,4b038 <__udivdi3+0x3c4>
   4ae20:	3c00d836 	bltu	r7,r16,4b184 <__udivdi3+0x510>
   4ae24:	9985403a 	cmpgeu	r2,r19,r6
   4ae28:	0007883a 	mov	r3,zero
   4ae2c:	003fe306 	br	4adbc <__udivdi3+0x148>
   4ae30:	3000041e 	bne	r6,zero,4ae44 <__udivdi3+0x1d0>
   4ae34:	000b883a 	mov	r5,zero
   4ae38:	01000044 	movi	r4,1
   4ae3c:	0040fa40 	call	40fa4 <__udivsi3>
   4ae40:	1023883a 	mov	r17,r2
   4ae44:	00bfffd4 	movui	r2,65535
   4ae48:	14403a2e 	bgeu	r2,r17,4af34 <__udivdi3+0x2c0>
   4ae4c:	00804034 	movhi	r2,256
   4ae50:	8880d236 	bltu	r17,r2,4b19c <__udivdi3+0x528>
   4ae54:	8806d63a 	srli	r3,r17,24
   4ae58:	05000604 	movi	r20,24
   4ae5c:	00800174 	movhi	r2,5
   4ae60:	1885883a 	add	r2,r3,r2
   4ae64:	10bf3203 	ldbu	r2,-824(r2)
   4ae68:	00c00804 	movi	r3,32
   4ae6c:	1505883a 	add	r2,r2,r20
   4ae70:	188dc83a 	sub	r6,r3,r2
   4ae74:	18803e1e 	bne	r3,r2,4af70 <__udivdi3+0x2fc>
   4ae78:	882ad43a 	srli	r21,r17,16
   4ae7c:	8461c83a 	sub	r16,r16,r17
   4ae80:	8cffffcc 	andi	r19,r17,65535
   4ae84:	00c00044 	movi	r3,1
   4ae88:	8009883a 	mov	r4,r16
   4ae8c:	a80b883a 	mov	r5,r21
   4ae90:	d8c00015 	stw	r3,0(sp)
   4ae94:	00410080 	call	41008 <__umodsi3>
   4ae98:	8009883a 	mov	r4,r16
   4ae9c:	a80b883a 	mov	r5,r21
   4aea0:	1021883a 	mov	r16,r2
   4aea4:	0040fa40 	call	40fa4 <__udivsi3>
   4aea8:	8020943a 	slli	r16,r16,16
   4aeac:	9008d43a 	srli	r4,r18,16
   4aeb0:	1029883a 	mov	r20,r2
   4aeb4:	14c5383a 	mul	r2,r2,r19
   4aeb8:	8108b03a 	or	r4,r16,r4
   4aebc:	d8c00017 	ldw	r3,0(sp)
   4aec0:	2080052e 	bgeu	r4,r2,4aed8 <__udivdi3+0x264>
   4aec4:	2449883a 	add	r4,r4,r17
   4aec8:	a17fffc4 	addi	r5,r20,-1
   4aecc:	24400136 	bltu	r4,r17,4aed4 <__udivdi3+0x260>
   4aed0:	2080c936 	bltu	r4,r2,4b1f8 <__udivdi3+0x584>
   4aed4:	2829883a 	mov	r20,r5
   4aed8:	20a1c83a 	sub	r16,r4,r2
   4aedc:	8009883a 	mov	r4,r16
   4aee0:	a80b883a 	mov	r5,r21
   4aee4:	d8c00015 	stw	r3,0(sp)
   4aee8:	00410080 	call	41008 <__umodsi3>
   4aeec:	8009883a 	mov	r4,r16
   4aef0:	a80b883a 	mov	r5,r21
   4aef4:	1021883a 	mov	r16,r2
   4aef8:	8020943a 	slli	r16,r16,16
   4aefc:	0040fa40 	call	40fa4 <__udivsi3>
   4af00:	14e7383a 	mul	r19,r2,r19
   4af04:	94bfffcc 	andi	r18,r18,65535
   4af08:	84a4b03a 	or	r18,r16,r18
   4af0c:	d8c00017 	ldw	r3,0(sp)
   4af10:	94c0052e 	bgeu	r18,r19,4af28 <__udivdi3+0x2b4>
   4af14:	8ca5883a 	add	r18,r17,r18
   4af18:	113fffc4 	addi	r4,r2,-1
   4af1c:	94400136 	bltu	r18,r17,4af24 <__udivdi3+0x2b0>
   4af20:	94c0ae36 	bltu	r18,r19,4b1dc <__udivdi3+0x568>
   4af24:	2005883a 	mov	r2,r4
   4af28:	a00c943a 	slli	r6,r20,16
   4af2c:	3084b03a 	or	r2,r6,r2
   4af30:	003fa206 	br	4adbc <__udivdi3+0x148>
   4af34:	88804030 	cmpltui	r2,r17,256
   4af38:	10009e1e 	bne	r2,zero,4b1b4 <__udivdi3+0x540>
   4af3c:	8806d23a 	srli	r3,r17,8
   4af40:	05000204 	movi	r20,8
   4af44:	003fc506 	br	4ae5c <__udivdi3+0x1e8>
   4af48:	30804030 	cmpltui	r2,r6,256
   4af4c:	10008b1e 	bne	r2,zero,4b17c <__udivdi3+0x508>
   4af50:	3006d23a 	srli	r3,r6,8
   4af54:	05000204 	movi	r20,8
   4af58:	003f5f06 	br	4acd8 <__udivdi3+0x64>
   4af5c:	38804030 	cmpltui	r2,r7,256
   4af60:	10008b1e 	bne	r2,zero,4b190 <__udivdi3+0x51c>
   4af64:	3804d23a 	srli	r2,r7,8
   4af68:	01000204 	movi	r4,8
   4af6c:	003fa506 	br	4ae04 <__udivdi3+0x190>
   4af70:	89a2983a 	sll	r17,r17,r6
   4af74:	80acd83a 	srl	r22,r16,r2
   4af78:	81a0983a 	sll	r16,r16,r6
   4af7c:	882ad43a 	srli	r21,r17,16
   4af80:	9884d83a 	srl	r2,r19,r2
   4af84:	b009883a 	mov	r4,r22
   4af88:	a80b883a 	mov	r5,r21
   4af8c:	99a4983a 	sll	r18,r19,r6
   4af90:	1428b03a 	or	r20,r2,r16
   4af94:	00410080 	call	41008 <__umodsi3>
   4af98:	b009883a 	mov	r4,r22
   4af9c:	a80b883a 	mov	r5,r21
   4afa0:	1021883a 	mov	r16,r2
   4afa4:	0040fa40 	call	40fa4 <__udivsi3>
   4afa8:	8008943a 	slli	r4,r16,16
   4afac:	a00ad43a 	srli	r5,r20,16
   4afb0:	8cffffcc 	andi	r19,r17,65535
   4afb4:	98a1383a 	mul	r16,r19,r2
   4afb8:	2148b03a 	or	r4,r4,r5
   4afbc:	102d883a 	mov	r22,r2
   4afc0:	2400062e 	bgeu	r4,r16,4afdc <__udivdi3+0x368>
   4afc4:	2449883a 	add	r4,r4,r17
   4afc8:	10bfffc4 	addi	r2,r2,-1
   4afcc:	24408136 	bltu	r4,r17,4b1d4 <__udivdi3+0x560>
   4afd0:	2400802e 	bgeu	r4,r16,4b1d4 <__udivdi3+0x560>
   4afd4:	b5bfff84 	addi	r22,r22,-2
   4afd8:	2449883a 	add	r4,r4,r17
   4afdc:	2421c83a 	sub	r16,r4,r16
   4afe0:	8009883a 	mov	r4,r16
   4afe4:	a80b883a 	mov	r5,r21
   4afe8:	00410080 	call	41008 <__umodsi3>
   4afec:	8009883a 	mov	r4,r16
   4aff0:	a80b883a 	mov	r5,r21
   4aff4:	1021883a 	mov	r16,r2
   4aff8:	8020943a 	slli	r16,r16,16
   4affc:	0040fa40 	call	40fa4 <__udivsi3>
   4b000:	9889383a 	mul	r4,r19,r2
   4b004:	a53fffcc 	andi	r20,r20,65535
   4b008:	8520b03a 	or	r16,r16,r20
   4b00c:	8100062e 	bgeu	r16,r4,4b028 <__udivdi3+0x3b4>
   4b010:	8461883a 	add	r16,r16,r17
   4b014:	10ffffc4 	addi	r3,r2,-1
   4b018:	84406a36 	bltu	r16,r17,4b1c4 <__udivdi3+0x550>
   4b01c:	8100692e 	bgeu	r16,r4,4b1c4 <__udivdi3+0x550>
   4b020:	10bfff84 	addi	r2,r2,-2
   4b024:	8461883a 	add	r16,r16,r17
   4b028:	b006943a 	slli	r3,r22,16
   4b02c:	8121c83a 	sub	r16,r16,r4
   4b030:	1886b03a 	or	r3,r3,r2
   4b034:	003f9406 	br	4ae88 <__udivdi3+0x214>
   4b038:	30acd83a 	srl	r22,r6,r2
   4b03c:	3d4e983a 	sll	r7,r7,r21
   4b040:	80a4d83a 	srl	r18,r16,r2
   4b044:	8546983a 	sll	r3,r16,r21
   4b048:	b1ecb03a 	or	r22,r22,r7
   4b04c:	b038d43a 	srli	fp,r22,16
   4b050:	9884d83a 	srl	r2,r19,r2
   4b054:	9009883a 	mov	r4,r18
   4b058:	e00b883a 	mov	r5,fp
   4b05c:	10e2b03a 	or	r17,r2,r3
   4b060:	3568983a 	sll	r20,r6,r21
   4b064:	00410080 	call	41008 <__umodsi3>
   4b068:	9009883a 	mov	r4,r18
   4b06c:	e00b883a 	mov	r5,fp
   4b070:	1025883a 	mov	r18,r2
   4b074:	0040fa40 	call	40fa4 <__udivsi3>
   4b078:	9008943a 	slli	r4,r18,16
   4b07c:	8806d43a 	srli	r3,r17,16
   4b080:	b5ffffcc 	andi	r23,r22,65535
   4b084:	b8a5383a 	mul	r18,r23,r2
   4b088:	20c8b03a 	or	r4,r4,r3
   4b08c:	1021883a 	mov	r16,r2
   4b090:	2480062e 	bgeu	r4,r18,4b0ac <__udivdi3+0x438>
   4b094:	2589883a 	add	r4,r4,r22
   4b098:	10bfffc4 	addi	r2,r2,-1
   4b09c:	25804b36 	bltu	r4,r22,4b1cc <__udivdi3+0x558>
   4b0a0:	24804a2e 	bgeu	r4,r18,4b1cc <__udivdi3+0x558>
   4b0a4:	843fff84 	addi	r16,r16,-2
   4b0a8:	2589883a 	add	r4,r4,r22
   4b0ac:	24a5c83a 	sub	r18,r4,r18
   4b0b0:	9009883a 	mov	r4,r18
   4b0b4:	e00b883a 	mov	r5,fp
   4b0b8:	00410080 	call	41008 <__umodsi3>
   4b0bc:	9009883a 	mov	r4,r18
   4b0c0:	e00b883a 	mov	r5,fp
   4b0c4:	1025883a 	mov	r18,r2
   4b0c8:	9024943a 	slli	r18,r18,16
   4b0cc:	0040fa40 	call	40fa4 <__udivsi3>
   4b0d0:	b8af383a 	mul	r23,r23,r2
   4b0d4:	8c7fffcc 	andi	r17,r17,65535
   4b0d8:	9462b03a 	or	r17,r18,r17
   4b0dc:	8dc0062e 	bgeu	r17,r23,4b0f8 <__udivdi3+0x484>
   4b0e0:	8da3883a 	add	r17,r17,r22
   4b0e4:	10ffffc4 	addi	r3,r2,-1
   4b0e8:	8d803436 	bltu	r17,r22,4b1bc <__udivdi3+0x548>
   4b0ec:	8dc0332e 	bgeu	r17,r23,4b1bc <__udivdi3+0x548>
   4b0f0:	10bfff84 	addi	r2,r2,-2
   4b0f4:	8da3883a 	add	r17,r17,r22
   4b0f8:	8020943a 	slli	r16,r16,16
   4b0fc:	10ffffcc 	andi	r3,r2,65535
   4b100:	a00ed43a 	srli	r7,r20,16
   4b104:	8084b03a 	or	r2,r16,r2
   4b108:	1008d43a 	srli	r4,r2,16
   4b10c:	a1bfffcc 	andi	r6,r20,65535
   4b110:	1991383a 	mul	r8,r3,r6
   4b114:	218d383a 	mul	r6,r4,r6
   4b118:	19c7383a 	mul	r3,r3,r7
   4b11c:	400ad43a 	srli	r5,r8,16
   4b120:	21c9383a 	mul	r4,r4,r7
   4b124:	1987883a 	add	r3,r3,r6
   4b128:	28c7883a 	add	r3,r5,r3
   4b12c:	8de3c83a 	sub	r17,r17,r23
   4b130:	1980022e 	bgeu	r3,r6,4b13c <__udivdi3+0x4c8>
   4b134:	01400074 	movhi	r5,1
   4b138:	2149883a 	add	r4,r4,r5
   4b13c:	180ad43a 	srli	r5,r3,16
   4b140:	2909883a 	add	r4,r5,r4
   4b144:	89000836 	bltu	r17,r4,4b168 <__udivdi3+0x4f4>
   4b148:	89000226 	beq	r17,r4,4b154 <__udivdi3+0x4e0>
   4b14c:	0007883a 	mov	r3,zero
   4b150:	003f1a06 	br	4adbc <__udivdi3+0x148>
   4b154:	1806943a 	slli	r3,r3,16
   4b158:	9d4c983a 	sll	r6,r19,r21
   4b15c:	423fffcc 	andi	r8,r8,65535
   4b160:	1a07883a 	add	r3,r3,r8
   4b164:	30fff92e 	bgeu	r6,r3,4b14c <__udivdi3+0x4d8>
   4b168:	10bfffc4 	addi	r2,r2,-1
   4b16c:	003ff706 	br	4b14c <__udivdi3+0x4d8>
   4b170:	3804d43a 	srli	r2,r7,16
   4b174:	01000404 	movi	r4,16
   4b178:	003f2206 	br	4ae04 <__udivdi3+0x190>
   4b17c:	3007883a 	mov	r3,r6
   4b180:	003ed506 	br	4acd8 <__udivdi3+0x64>
   4b184:	0007883a 	mov	r3,zero
   4b188:	00800044 	movi	r2,1
   4b18c:	003f0b06 	br	4adbc <__udivdi3+0x148>
   4b190:	3805883a 	mov	r2,r7
   4b194:	0009883a 	mov	r4,zero
   4b198:	003f1a06 	br	4ae04 <__udivdi3+0x190>
   4b19c:	8806d43a 	srli	r3,r17,16
   4b1a0:	05000404 	movi	r20,16
   4b1a4:	003f2d06 	br	4ae5c <__udivdi3+0x1e8>
   4b1a8:	3006d43a 	srli	r3,r6,16
   4b1ac:	05000404 	movi	r20,16
   4b1b0:	003ec906 	br	4acd8 <__udivdi3+0x64>
   4b1b4:	8807883a 	mov	r3,r17
   4b1b8:	003f2806 	br	4ae5c <__udivdi3+0x1e8>
   4b1bc:	1805883a 	mov	r2,r3
   4b1c0:	003fcd06 	br	4b0f8 <__udivdi3+0x484>
   4b1c4:	1805883a 	mov	r2,r3
   4b1c8:	003f9706 	br	4b028 <__udivdi3+0x3b4>
   4b1cc:	1021883a 	mov	r16,r2
   4b1d0:	003fb606 	br	4b0ac <__udivdi3+0x438>
   4b1d4:	102d883a 	mov	r22,r2
   4b1d8:	003f8006 	br	4afdc <__udivdi3+0x368>
   4b1dc:	10bfff84 	addi	r2,r2,-2
   4b1e0:	003f5106 	br	4af28 <__udivdi3+0x2b4>
   4b1e4:	10bfff84 	addi	r2,r2,-2
   4b1e8:	003eed06 	br	4ada0 <__udivdi3+0x12c>
   4b1ec:	843fff84 	addi	r16,r16,-2
   4b1f0:	2449883a 	add	r4,r4,r17
   4b1f4:	003ed806 	br	4ad58 <__udivdi3+0xe4>
   4b1f8:	a53fff84 	addi	r20,r20,-2
   4b1fc:	2449883a 	add	r4,r4,r17
   4b200:	003f3506 	br	4aed8 <__udivdi3+0x264>

0004b204 <__umoddi3>:
   4b204:	defff504 	addi	sp,sp,-44
   4b208:	dc400215 	stw	r17,8(sp)
   4b20c:	dc000115 	stw	r16,4(sp)
   4b210:	dfc00a15 	stw	ra,40(sp)
   4b214:	df000915 	stw	fp,36(sp)
   4b218:	ddc00815 	stw	r23,32(sp)
   4b21c:	dd800715 	stw	r22,28(sp)
   4b220:	dd400615 	stw	r21,24(sp)
   4b224:	dd000515 	stw	r20,20(sp)
   4b228:	dcc00415 	stw	r19,16(sp)
   4b22c:	dc800315 	stw	r18,12(sp)
   4b230:	2823883a 	mov	r17,r5
   4b234:	2021883a 	mov	r16,r4
   4b238:	3800371e 	bne	r7,zero,4b318 <__umoddi3+0x114>
   4b23c:	3825883a 	mov	r18,r7
   4b240:	3029883a 	mov	r20,r6
   4b244:	2027883a 	mov	r19,r4
   4b248:	2980572e 	bgeu	r5,r6,4b3a8 <__umoddi3+0x1a4>
   4b24c:	00bfffd4 	movui	r2,65535
   4b250:	282b883a 	mov	r21,r5
   4b254:	1180922e 	bgeu	r2,r6,4b4a0 <__umoddi3+0x29c>
   4b258:	00804034 	movhi	r2,256
   4b25c:	30812036 	bltu	r6,r2,4b6e0 <__umoddi3+0x4dc>
   4b260:	3006d63a 	srli	r3,r6,24
   4b264:	04800604 	movi	r18,24
   4b268:	00800174 	movhi	r2,5
   4b26c:	1885883a 	add	r2,r3,r2
   4b270:	10bf3203 	ldbu	r2,-824(r2)
   4b274:	00c00804 	movi	r3,32
   4b278:	1485883a 	add	r2,r2,r18
   4b27c:	18a5c83a 	sub	r18,r3,r2
   4b280:	18800526 	beq	r3,r2,4b298 <__umoddi3+0x94>
   4b284:	8ca2983a 	sll	r17,r17,r18
   4b288:	8084d83a 	srl	r2,r16,r2
   4b28c:	34a8983a 	sll	r20,r6,r18
   4b290:	84a6983a 	sll	r19,r16,r18
   4b294:	146ab03a 	or	r21,r2,r17
   4b298:	a02cd43a 	srli	r22,r20,16
   4b29c:	a809883a 	mov	r4,r21
   4b2a0:	a43fffcc 	andi	r16,r20,65535
   4b2a4:	b00b883a 	mov	r5,r22
   4b2a8:	00410080 	call	41008 <__umodsi3>
   4b2ac:	a809883a 	mov	r4,r21
   4b2b0:	b00b883a 	mov	r5,r22
   4b2b4:	1023883a 	mov	r17,r2
   4b2b8:	0040fa40 	call	40fa4 <__udivsi3>
   4b2bc:	8822943a 	slli	r17,r17,16
   4b2c0:	9808d43a 	srli	r4,r19,16
   4b2c4:	80ab383a 	mul	r21,r16,r2
   4b2c8:	8908b03a 	or	r4,r17,r4
   4b2cc:	2540042e 	bgeu	r4,r21,4b2e0 <__umoddi3+0xdc>
   4b2d0:	2509883a 	add	r4,r4,r20
   4b2d4:	25000236 	bltu	r4,r20,4b2e0 <__umoddi3+0xdc>
   4b2d8:	2540012e 	bgeu	r4,r21,4b2e0 <__umoddi3+0xdc>
   4b2dc:	2509883a 	add	r4,r4,r20
   4b2e0:	256bc83a 	sub	r21,r4,r21
   4b2e4:	b00b883a 	mov	r5,r22
   4b2e8:	a809883a 	mov	r4,r21
   4b2ec:	00410080 	call	41008 <__umodsi3>
   4b2f0:	1023883a 	mov	r17,r2
   4b2f4:	b00b883a 	mov	r5,r22
   4b2f8:	a809883a 	mov	r4,r21
   4b2fc:	0040fa40 	call	40fa4 <__udivsi3>
   4b300:	8822943a 	slli	r17,r17,16
   4b304:	8085383a 	mul	r2,r16,r2
   4b308:	98ffffcc 	andi	r3,r19,65535
   4b30c:	88c6b03a 	or	r3,r17,r3
   4b310:	18805a2e 	bgeu	r3,r2,4b47c <__umoddi3+0x278>
   4b314:	00005506 	br	4b46c <__umoddi3+0x268>
   4b318:	2005883a 	mov	r2,r4
   4b31c:	29c00d2e 	bgeu	r5,r7,4b354 <__umoddi3+0x150>
   4b320:	2807883a 	mov	r3,r5
   4b324:	dfc00a17 	ldw	ra,40(sp)
   4b328:	df000917 	ldw	fp,36(sp)
   4b32c:	ddc00817 	ldw	r23,32(sp)
   4b330:	dd800717 	ldw	r22,28(sp)
   4b334:	dd400617 	ldw	r21,24(sp)
   4b338:	dd000517 	ldw	r20,20(sp)
   4b33c:	dcc00417 	ldw	r19,16(sp)
   4b340:	dc800317 	ldw	r18,12(sp)
   4b344:	dc400217 	ldw	r17,8(sp)
   4b348:	dc000117 	ldw	r16,4(sp)
   4b34c:	dec00b04 	addi	sp,sp,44
   4b350:	f800283a 	ret
   4b354:	013fffd4 	movui	r4,65535
   4b358:	2807883a 	mov	r3,r5
   4b35c:	21c0552e 	bgeu	r4,r7,4b4b4 <__umoddi3+0x2b0>
   4b360:	01004034 	movhi	r4,256
   4b364:	3900e336 	bltu	r7,r4,4b6f4 <__umoddi3+0x4f0>
   4b368:	3808d63a 	srli	r4,r7,24
   4b36c:	02000604 	movi	r8,24
   4b370:	01400174 	movhi	r5,5
   4b374:	214b883a 	add	r5,r4,r5
   4b378:	2d7f3203 	ldbu	r21,-824(r5)
   4b37c:	01000804 	movi	r4,32
   4b380:	aa2b883a 	add	r21,r21,r8
   4b384:	2569c83a 	sub	r20,r4,r21
   4b388:	25404f1e 	bne	r4,r21,4b4c8 <__umoddi3+0x2c4>
   4b38c:	3c400136 	bltu	r7,r17,4b394 <__umoddi3+0x190>
   4b390:	81bfe436 	bltu	r16,r6,4b324 <__umoddi3+0x120>
   4b394:	8185c83a 	sub	r2,r16,r6
   4b398:	89cfc83a 	sub	r7,r17,r7
   4b39c:	8087803a 	cmpltu	r3,r16,r2
   4b3a0:	38c7c83a 	sub	r3,r7,r3
   4b3a4:	003fdf06 	br	4b324 <__umoddi3+0x120>
   4b3a8:	3000041e 	bne	r6,zero,4b3bc <__umoddi3+0x1b8>
   4b3ac:	000b883a 	mov	r5,zero
   4b3b0:	01000044 	movi	r4,1
   4b3b4:	0040fa40 	call	40fa4 <__udivsi3>
   4b3b8:	1029883a 	mov	r20,r2
   4b3bc:	00bfffd4 	movui	r2,65535
   4b3c0:	1500322e 	bgeu	r2,r20,4b48c <__umoddi3+0x288>
   4b3c4:	00804034 	movhi	r2,256
   4b3c8:	a080cd36 	bltu	r20,r2,4b700 <__umoddi3+0x4fc>
   4b3cc:	a006d63a 	srli	r3,r20,24
   4b3d0:	04800604 	movi	r18,24
   4b3d4:	00800174 	movhi	r2,5
   4b3d8:	1885883a 	add	r2,r3,r2
   4b3dc:	15bf3203 	ldbu	r22,-824(r2)
   4b3e0:	00800804 	movi	r2,32
   4b3e4:	b4ad883a 	add	r22,r22,r18
   4b3e8:	15a5c83a 	sub	r18,r2,r22
   4b3ec:	15808a1e 	bne	r2,r22,4b618 <__umoddi3+0x414>
   4b3f0:	a02ed43a 	srli	r23,r20,16
   4b3f4:	8d23c83a 	sub	r17,r17,r20
   4b3f8:	a57fffcc 	andi	r21,r20,65535
   4b3fc:	b80b883a 	mov	r5,r23
   4b400:	8809883a 	mov	r4,r17
   4b404:	00410080 	call	41008 <__umodsi3>
   4b408:	8809883a 	mov	r4,r17
   4b40c:	b80b883a 	mov	r5,r23
   4b410:	102d883a 	mov	r22,r2
   4b414:	0040fa40 	call	40fa4 <__udivsi3>
   4b418:	b02c943a 	slli	r22,r22,16
   4b41c:	9808d43a 	srli	r4,r19,16
   4b420:	1561383a 	mul	r16,r2,r21
   4b424:	b108b03a 	or	r4,r22,r4
   4b428:	2400032e 	bgeu	r4,r16,4b438 <__umoddi3+0x234>
   4b42c:	2509883a 	add	r4,r4,r20
   4b430:	25000136 	bltu	r4,r20,4b438 <__umoddi3+0x234>
   4b434:	2400be36 	bltu	r4,r16,4b730 <__umoddi3+0x52c>
   4b438:	2421c83a 	sub	r16,r4,r16
   4b43c:	b80b883a 	mov	r5,r23
   4b440:	8009883a 	mov	r4,r16
   4b444:	00410080 	call	41008 <__umodsi3>
   4b448:	1023883a 	mov	r17,r2
   4b44c:	b80b883a 	mov	r5,r23
   4b450:	8009883a 	mov	r4,r16
   4b454:	0040fa40 	call	40fa4 <__udivsi3>
   4b458:	8822943a 	slli	r17,r17,16
   4b45c:	1545383a 	mul	r2,r2,r21
   4b460:	98ffffcc 	andi	r3,r19,65535
   4b464:	88c6b03a 	or	r3,r17,r3
   4b468:	1880042e 	bgeu	r3,r2,4b47c <__umoddi3+0x278>
   4b46c:	1d07883a 	add	r3,r3,r20
   4b470:	1d000236 	bltu	r3,r20,4b47c <__umoddi3+0x278>
   4b474:	1880012e 	bgeu	r3,r2,4b47c <__umoddi3+0x278>
   4b478:	1d07883a 	add	r3,r3,r20
   4b47c:	1885c83a 	sub	r2,r3,r2
   4b480:	1484d83a 	srl	r2,r2,r18
   4b484:	0007883a 	mov	r3,zero
   4b488:	003fa606 	br	4b324 <__umoddi3+0x120>
   4b48c:	a0804030 	cmpltui	r2,r20,256
   4b490:	10009e1e 	bne	r2,zero,4b70c <__umoddi3+0x508>
   4b494:	a006d23a 	srli	r3,r20,8
   4b498:	04800204 	movi	r18,8
   4b49c:	003fcd06 	br	4b3d4 <__umoddi3+0x1d0>
   4b4a0:	30804030 	cmpltui	r2,r6,256
   4b4a4:	1000911e 	bne	r2,zero,4b6ec <__umoddi3+0x4e8>
   4b4a8:	3006d23a 	srli	r3,r6,8
   4b4ac:	04800204 	movi	r18,8
   4b4b0:	003f6d06 	br	4b268 <__umoddi3+0x64>
   4b4b4:	39004030 	cmpltui	r4,r7,256
   4b4b8:	2000961e 	bne	r4,zero,4b714 <__umoddi3+0x510>
   4b4bc:	3808d23a 	srli	r4,r7,8
   4b4c0:	02000204 	movi	r8,8
   4b4c4:	003faa06 	br	4b370 <__umoddi3+0x16c>
   4b4c8:	3d0e983a 	sll	r7,r7,r20
   4b4cc:	3544d83a 	srl	r2,r6,r21
   4b4d0:	8d64d83a 	srl	r18,r17,r21
   4b4d4:	8d22983a 	sll	r17,r17,r20
   4b4d8:	11eeb03a 	or	r23,r2,r7
   4b4dc:	b838d43a 	srli	fp,r23,16
   4b4e0:	8544d83a 	srl	r2,r16,r21
   4b4e4:	9009883a 	mov	r4,r18
   4b4e8:	e00b883a 	mov	r5,fp
   4b4ec:	3526983a 	sll	r19,r6,r20
   4b4f0:	1462b03a 	or	r17,r2,r17
   4b4f4:	00410080 	call	41008 <__umodsi3>
   4b4f8:	9009883a 	mov	r4,r18
   4b4fc:	e00b883a 	mov	r5,fp
   4b500:	1025883a 	mov	r18,r2
   4b504:	0040fa40 	call	40fa4 <__udivsi3>
   4b508:	9008943a 	slli	r4,r18,16
   4b50c:	8806d43a 	srli	r3,r17,16
   4b510:	b9ffffcc 	andi	r7,r23,65535
   4b514:	38a5383a 	mul	r18,r7,r2
   4b518:	20c8b03a 	or	r4,r4,r3
   4b51c:	8520983a 	sll	r16,r16,r20
   4b520:	102d883a 	mov	r22,r2
   4b524:	2480062e 	bgeu	r4,r18,4b540 <__umoddi3+0x33c>
   4b528:	25c9883a 	add	r4,r4,r23
   4b52c:	10bfffc4 	addi	r2,r2,-1
   4b530:	25c07d36 	bltu	r4,r23,4b728 <__umoddi3+0x524>
   4b534:	24807c2e 	bgeu	r4,r18,4b728 <__umoddi3+0x524>
   4b538:	b5bfff84 	addi	r22,r22,-2
   4b53c:	25c9883a 	add	r4,r4,r23
   4b540:	24a5c83a 	sub	r18,r4,r18
   4b544:	9009883a 	mov	r4,r18
   4b548:	e00b883a 	mov	r5,fp
   4b54c:	d9c00015 	stw	r7,0(sp)
   4b550:	00410080 	call	41008 <__umodsi3>
   4b554:	9009883a 	mov	r4,r18
   4b558:	e00b883a 	mov	r5,fp
   4b55c:	1025883a 	mov	r18,r2
   4b560:	0040fa40 	call	40fa4 <__udivsi3>
   4b564:	d9c00017 	ldw	r7,0(sp)
   4b568:	9024943a 	slli	r18,r18,16
   4b56c:	8c7fffcc 	andi	r17,r17,65535
   4b570:	388f383a 	mul	r7,r7,r2
   4b574:	9448b03a 	or	r4,r18,r17
   4b578:	21c0062e 	bgeu	r4,r7,4b594 <__umoddi3+0x390>
   4b57c:	25c9883a 	add	r4,r4,r23
   4b580:	10ffffc4 	addi	r3,r2,-1
   4b584:	25c06636 	bltu	r4,r23,4b720 <__umoddi3+0x51c>
   4b588:	21c0652e 	bgeu	r4,r7,4b720 <__umoddi3+0x51c>
   4b58c:	10bfff84 	addi	r2,r2,-2
   4b590:	25c9883a 	add	r4,r4,r23
   4b594:	b00a943a 	slli	r5,r22,16
   4b598:	11bfffcc 	andi	r6,r2,65535
   4b59c:	9806d43a 	srli	r3,r19,16
   4b5a0:	2884b03a 	or	r2,r5,r2
   4b5a4:	102cd43a 	srli	r22,r2,16
   4b5a8:	997fffcc 	andi	r5,r19,65535
   4b5ac:	3151383a 	mul	r8,r6,r5
   4b5b0:	b14b383a 	mul	r5,r22,r5
   4b5b4:	30cd383a 	mul	r6,r6,r3
   4b5b8:	4004d43a 	srli	r2,r8,16
   4b5bc:	b0ed383a 	mul	r22,r22,r3
   4b5c0:	314d883a 	add	r6,r6,r5
   4b5c4:	1185883a 	add	r2,r2,r6
   4b5c8:	21c9c83a 	sub	r4,r4,r7
   4b5cc:	1140022e 	bgeu	r2,r5,4b5d8 <__umoddi3+0x3d4>
   4b5d0:	00c00074 	movhi	r3,1
   4b5d4:	b0ed883a 	add	r22,r22,r3
   4b5d8:	1006d43a 	srli	r3,r2,16
   4b5dc:	1004943a 	slli	r2,r2,16
   4b5e0:	423fffcc 	andi	r8,r8,65535
   4b5e4:	1dad883a 	add	r22,r3,r22
   4b5e8:	1205883a 	add	r2,r2,r8
   4b5ec:	25803636 	bltu	r4,r22,4b6c8 <__umoddi3+0x4c4>
   4b5f0:	25803426 	beq	r4,r22,4b6c4 <__umoddi3+0x4c0>
   4b5f4:	8085c83a 	sub	r2,r16,r2
   4b5f8:	8087803a 	cmpltu	r3,r16,r2
   4b5fc:	2589c83a 	sub	r4,r4,r22
   4b600:	20c7c83a 	sub	r3,r4,r3
   4b604:	1d60983a 	sll	r16,r3,r21
   4b608:	1504d83a 	srl	r2,r2,r20
   4b60c:	1d06d83a 	srl	r3,r3,r20
   4b610:	8084b03a 	or	r2,r16,r2
   4b614:	003f4306 	br	4b324 <__umoddi3+0x120>
   4b618:	a4a8983a 	sll	r20,r20,r18
   4b61c:	8daad83a 	srl	r21,r17,r22
   4b620:	8ca2983a 	sll	r17,r17,r18
   4b624:	a02ed43a 	srli	r23,r20,16
   4b628:	a809883a 	mov	r4,r21
   4b62c:	85acd83a 	srl	r22,r16,r22
   4b630:	b80b883a 	mov	r5,r23
   4b634:	00410080 	call	41008 <__umodsi3>
   4b638:	a809883a 	mov	r4,r21
   4b63c:	b80b883a 	mov	r5,r23
   4b640:	b46cb03a 	or	r22,r22,r17
   4b644:	1027883a 	mov	r19,r2
   4b648:	0040fa40 	call	40fa4 <__udivsi3>
   4b64c:	9826943a 	slli	r19,r19,16
   4b650:	b008d43a 	srli	r4,r22,16
   4b654:	a57fffcc 	andi	r21,r20,65535
   4b658:	a8a3383a 	mul	r17,r21,r2
   4b65c:	9908b03a 	or	r4,r19,r4
   4b660:	84a6983a 	sll	r19,r16,r18
   4b664:	2440042e 	bgeu	r4,r17,4b678 <__umoddi3+0x474>
   4b668:	2509883a 	add	r4,r4,r20
   4b66c:	25000236 	bltu	r4,r20,4b678 <__umoddi3+0x474>
   4b670:	2440012e 	bgeu	r4,r17,4b678 <__umoddi3+0x474>
   4b674:	2509883a 	add	r4,r4,r20
   4b678:	2463c83a 	sub	r17,r4,r17
   4b67c:	8809883a 	mov	r4,r17
   4b680:	b80b883a 	mov	r5,r23
   4b684:	00410080 	call	41008 <__umodsi3>
   4b688:	1021883a 	mov	r16,r2
   4b68c:	8809883a 	mov	r4,r17
   4b690:	b80b883a 	mov	r5,r23
   4b694:	8020943a 	slli	r16,r16,16
   4b698:	0040fa40 	call	40fa4 <__udivsi3>
   4b69c:	a885383a 	mul	r2,r21,r2
   4b6a0:	b47fffcc 	andi	r17,r22,65535
   4b6a4:	8462b03a 	or	r17,r16,r17
   4b6a8:	8880042e 	bgeu	r17,r2,4b6bc <__umoddi3+0x4b8>
   4b6ac:	8d23883a 	add	r17,r17,r20
   4b6b0:	8d000236 	bltu	r17,r20,4b6bc <__umoddi3+0x4b8>
   4b6b4:	8880012e 	bgeu	r17,r2,4b6bc <__umoddi3+0x4b8>
   4b6b8:	8d23883a 	add	r17,r17,r20
   4b6bc:	88a3c83a 	sub	r17,r17,r2
   4b6c0:	003f4e06 	br	4b3fc <__umoddi3+0x1f8>
   4b6c4:	80bfcb2e 	bgeu	r16,r2,4b5f4 <__umoddi3+0x3f0>
   4b6c8:	14e7c83a 	sub	r19,r2,r19
   4b6cc:	14c5803a 	cmpltu	r2,r2,r19
   4b6d0:	15c5883a 	add	r2,r2,r23
   4b6d4:	b0adc83a 	sub	r22,r22,r2
   4b6d8:	9805883a 	mov	r2,r19
   4b6dc:	003fc506 	br	4b5f4 <__umoddi3+0x3f0>
   4b6e0:	3006d43a 	srli	r3,r6,16
   4b6e4:	04800404 	movi	r18,16
   4b6e8:	003edf06 	br	4b268 <__umoddi3+0x64>
   4b6ec:	3007883a 	mov	r3,r6
   4b6f0:	003edd06 	br	4b268 <__umoddi3+0x64>
   4b6f4:	3808d43a 	srli	r4,r7,16
   4b6f8:	02000404 	movi	r8,16
   4b6fc:	003f1c06 	br	4b370 <__umoddi3+0x16c>
   4b700:	a006d43a 	srli	r3,r20,16
   4b704:	04800404 	movi	r18,16
   4b708:	003f3206 	br	4b3d4 <__umoddi3+0x1d0>
   4b70c:	a007883a 	mov	r3,r20
   4b710:	003f3006 	br	4b3d4 <__umoddi3+0x1d0>
   4b714:	3809883a 	mov	r4,r7
   4b718:	0011883a 	mov	r8,zero
   4b71c:	003f1406 	br	4b370 <__umoddi3+0x16c>
   4b720:	1805883a 	mov	r2,r3
   4b724:	003f9b06 	br	4b594 <__umoddi3+0x390>
   4b728:	102d883a 	mov	r22,r2
   4b72c:	003f8406 	br	4b540 <__umoddi3+0x33c>
   4b730:	2509883a 	add	r4,r4,r20
   4b734:	003f4006 	br	4b438 <__umoddi3+0x234>

0004b738 <__adddf3>:
   4b738:	02000434 	movhi	r8,16
   4b73c:	423fffc4 	addi	r8,r8,-1
   4b740:	2806d53a 	srli	r3,r5,20
   4b744:	3804d53a 	srli	r2,r7,20
   4b748:	2a14703a 	and	r10,r5,r8
   4b74c:	3a12703a 	and	r9,r7,r8
   4b750:	280ad7fa 	srli	r5,r5,31
   4b754:	501490fa 	slli	r10,r10,3
   4b758:	2018d77a 	srli	r12,r4,29
   4b75c:	481290fa 	slli	r9,r9,3
   4b760:	3016d77a 	srli	r11,r6,29
   4b764:	380ed7fa 	srli	r7,r7,31
   4b768:	defffb04 	addi	sp,sp,-20
   4b76c:	dc800215 	stw	r18,8(sp)
   4b770:	dc000015 	stw	r16,0(sp)
   4b774:	1c81ffcc 	andi	r18,r3,2047
   4b778:	1081ffcc 	andi	r2,r2,2047
   4b77c:	dfc00415 	stw	ra,16(sp)
   4b780:	dcc00315 	stw	r19,12(sp)
   4b784:	dc400115 	stw	r17,4(sp)
   4b788:	201c90fa 	slli	r14,r4,3
   4b78c:	301a90fa 	slli	r13,r6,3
   4b790:	2821883a 	mov	r16,r5
   4b794:	6294b03a 	or	r10,r12,r10
   4b798:	5a52b03a 	or	r9,r11,r9
   4b79c:	9087c83a 	sub	r3,r18,r2
   4b7a0:	29c06126 	beq	r5,r7,4b928 <__adddf3+0x1f0>
   4b7a4:	00c0550e 	bge	zero,r3,4b8fc <__adddf3+0x1c4>
   4b7a8:	10007326 	beq	r2,zero,4b978 <__adddf3+0x240>
   4b7ac:	9081ffd8 	cmpnei	r2,r18,2047
   4b7b0:	1000bd26 	beq	r2,zero,4baa8 <__adddf3+0x370>
   4b7b4:	4a402034 	orhi	r9,r9,128
   4b7b8:	18800e48 	cmpgei	r2,r3,57
   4b7bc:	1000ef1e 	bne	r2,zero,4bb7c <__adddf3+0x444>
   4b7c0:	18800808 	cmpgei	r2,r3,32
   4b7c4:	1001321e 	bne	r2,zero,4bc90 <__adddf3+0x558>
   4b7c8:	00800804 	movi	r2,32
   4b7cc:	10c5c83a 	sub	r2,r2,r3
   4b7d0:	68c8d83a 	srl	r4,r13,r3
   4b7d4:	48a2983a 	sll	r17,r9,r2
   4b7d8:	689a983a 	sll	r13,r13,r2
   4b7dc:	48c6d83a 	srl	r3,r9,r3
   4b7e0:	8922b03a 	or	r17,r17,r4
   4b7e4:	681ac03a 	cmpne	r13,r13,zero
   4b7e8:	8b62b03a 	or	r17,r17,r13
   4b7ec:	50d5c83a 	sub	r10,r10,r3
   4b7f0:	7463c83a 	sub	r17,r14,r17
   4b7f4:	7451803a 	cmpltu	r8,r14,r17
   4b7f8:	5211c83a 	sub	r8,r10,r8
   4b7fc:	4080202c 	andhi	r2,r8,128
   4b800:	10008d26 	beq	r2,zero,4ba38 <__adddf3+0x300>
   4b804:	02402034 	movhi	r9,128
   4b808:	4a7fffc4 	addi	r9,r9,-1
   4b80c:	4266703a 	and	r19,r8,r9
   4b810:	9800b326 	beq	r19,zero,4bae0 <__adddf3+0x3a8>
   4b814:	9809883a 	mov	r4,r19
   4b818:	0040e5c0 	call	40e5c <__clzsi2>
   4b81c:	10fffe04 	addi	r3,r2,-8
   4b820:	02000804 	movi	r8,32
   4b824:	40d1c83a 	sub	r8,r8,r3
   4b828:	8a10d83a 	srl	r8,r17,r8
   4b82c:	98d2983a 	sll	r9,r19,r3
   4b830:	88e2983a 	sll	r17,r17,r3
   4b834:	4250b03a 	or	r8,r8,r9
   4b838:	1c80b216 	blt	r3,r18,4bb04 <__adddf3+0x3cc>
   4b83c:	1c87c83a 	sub	r3,r3,r18
   4b840:	19000044 	addi	r4,r3,1
   4b844:	20800808 	cmpgei	r2,r4,32
   4b848:	10006f1e 	bne	r2,zero,4ba08 <__adddf3+0x2d0>
   4b84c:	00800804 	movi	r2,32
   4b850:	1105c83a 	sub	r2,r2,r4
   4b854:	8906d83a 	srl	r3,r17,r4
   4b858:	88a2983a 	sll	r17,r17,r2
   4b85c:	4084983a 	sll	r2,r8,r2
   4b860:	4110d83a 	srl	r8,r8,r4
   4b864:	8822c03a 	cmpne	r17,r17,zero
   4b868:	10c4b03a 	or	r2,r2,r3
   4b86c:	1462b03a 	or	r17,r2,r17
   4b870:	0025883a 	mov	r18,zero
   4b874:	888001cc 	andi	r2,r17,7
   4b878:	10000726 	beq	r2,zero,4b898 <__adddf3+0x160>
   4b87c:	888003cc 	andi	r2,r17,15
   4b880:	10800120 	cmpeqi	r2,r2,4
   4b884:	1000041e 	bne	r2,zero,4b898 <__adddf3+0x160>
   4b888:	88c00104 	addi	r3,r17,4
   4b88c:	1c63803a 	cmpltu	r17,r3,r17
   4b890:	4451883a 	add	r8,r8,r17
   4b894:	1823883a 	mov	r17,r3
   4b898:	4080202c 	andhi	r2,r8,128
   4b89c:	10006826 	beq	r2,zero,4ba40 <__adddf3+0x308>
   4b8a0:	90c00044 	addi	r3,r18,1
   4b8a4:	1881ffe0 	cmpeqi	r2,r3,2047
   4b8a8:	18c1ffcc 	andi	r3,r3,2047
   4b8ac:	10007a1e 	bne	r2,zero,4ba98 <__adddf3+0x360>
   4b8b0:	00bfe034 	movhi	r2,65408
   4b8b4:	10bfffc4 	addi	r2,r2,-1
   4b8b8:	4090703a 	and	r8,r8,r2
   4b8bc:	4004977a 	slli	r2,r8,29
   4b8c0:	4010927a 	slli	r8,r8,9
   4b8c4:	8822d0fa 	srli	r17,r17,3
   4b8c8:	4010d33a 	srli	r8,r8,12
   4b8cc:	1444b03a 	or	r2,r2,r17
   4b8d0:	1806953a 	slli	r3,r3,20
   4b8d4:	802097fa 	slli	r16,r16,31
   4b8d8:	1a06b03a 	or	r3,r3,r8
   4b8dc:	1c06b03a 	or	r3,r3,r16
   4b8e0:	dfc00417 	ldw	ra,16(sp)
   4b8e4:	dcc00317 	ldw	r19,12(sp)
   4b8e8:	dc800217 	ldw	r18,8(sp)
   4b8ec:	dc400117 	ldw	r17,4(sp)
   4b8f0:	dc000017 	ldw	r16,0(sp)
   4b8f4:	dec00504 	addi	sp,sp,20
   4b8f8:	f800283a 	ret
   4b8fc:	18002626 	beq	r3,zero,4b998 <__adddf3+0x260>
   4b900:	1487c83a 	sub	r3,r2,r18
   4b904:	9000ba1e 	bne	r18,zero,4bbf0 <__adddf3+0x4b8>
   4b908:	5388b03a 	or	r4,r10,r14
   4b90c:	20011826 	beq	r4,zero,4bd70 <__adddf3+0x638>
   4b910:	193fffc4 	addi	r4,r3,-1
   4b914:	20015726 	beq	r4,zero,4be74 <__adddf3+0x73c>
   4b918:	18c1ffd8 	cmpnei	r3,r3,2047
   4b91c:	18013026 	beq	r3,zero,4bde0 <__adddf3+0x6a8>
   4b920:	2007883a 	mov	r3,r4
   4b924:	0000b506 	br	4bbfc <__adddf3+0x4c4>
   4b928:	00c07b0e 	bge	zero,r3,4bb18 <__adddf3+0x3e0>
   4b92c:	10002e26 	beq	r2,zero,4b9e8 <__adddf3+0x2b0>
   4b930:	9081ffd8 	cmpnei	r2,r18,2047
   4b934:	10005c26 	beq	r2,zero,4baa8 <__adddf3+0x370>
   4b938:	4a402034 	orhi	r9,r9,128
   4b93c:	18800e48 	cmpgei	r2,r3,57
   4b940:	10004b1e 	bne	r2,zero,4ba70 <__adddf3+0x338>
   4b944:	18800808 	cmpgei	r2,r3,32
   4b948:	1000ec26 	beq	r2,zero,4bcfc <__adddf3+0x5c4>
   4b94c:	1c7ff804 	addi	r17,r3,-32
   4b950:	19000820 	cmpeqi	r4,r3,32
   4b954:	4c44d83a 	srl	r2,r9,r17
   4b958:	2000041e 	bne	r4,zero,4b96c <__adddf3+0x234>
   4b95c:	01001004 	movi	r4,64
   4b960:	20c7c83a 	sub	r3,r4,r3
   4b964:	48d2983a 	sll	r9,r9,r3
   4b968:	6a5ab03a 	or	r13,r13,r9
   4b96c:	6822c03a 	cmpne	r17,r13,zero
   4b970:	88a2b03a 	or	r17,r17,r2
   4b974:	00004006 	br	4ba78 <__adddf3+0x340>
   4b978:	4b44b03a 	or	r2,r9,r13
   4b97c:	10008226 	beq	r2,zero,4bb88 <__adddf3+0x450>
   4b980:	18bfffc4 	addi	r2,r3,-1
   4b984:	10011026 	beq	r2,zero,4bdc8 <__adddf3+0x690>
   4b988:	18c1ffd8 	cmpnei	r3,r3,2047
   4b98c:	18004626 	beq	r3,zero,4baa8 <__adddf3+0x370>
   4b990:	1007883a 	mov	r3,r2
   4b994:	003f8806 	br	4b7b8 <__adddf3+0x80>
   4b998:	90800044 	addi	r2,r18,1
   4b99c:	1081ff8c 	andi	r2,r2,2046
   4b9a0:	1000a51e 	bne	r2,zero,4bc38 <__adddf3+0x500>
   4b9a4:	538ab03a 	or	r5,r10,r14
   4b9a8:	4b44b03a 	or	r2,r9,r13
   4b9ac:	9000f81e 	bne	r18,zero,4bd90 <__adddf3+0x658>
   4b9b0:	28013726 	beq	r5,zero,4be90 <__adddf3+0x758>
   4b9b4:	10011226 	beq	r2,zero,4be00 <__adddf3+0x6c8>
   4b9b8:	7363c83a 	sub	r17,r14,r13
   4b9bc:	7445803a 	cmpltu	r2,r14,r17
   4b9c0:	5251c83a 	sub	r8,r10,r9
   4b9c4:	4091c83a 	sub	r8,r8,r2
   4b9c8:	4080202c 	andhi	r2,r8,128
   4b9cc:	10018f26 	beq	r2,zero,4c00c <__adddf3+0x8d4>
   4b9d0:	6ba3c83a 	sub	r17,r13,r14
   4b9d4:	4a95c83a 	sub	r10,r9,r10
   4b9d8:	6c51803a 	cmpltu	r8,r13,r17
   4b9dc:	5211c83a 	sub	r8,r10,r8
   4b9e0:	3821883a 	mov	r16,r7
   4b9e4:	003fa306 	br	4b874 <__adddf3+0x13c>
   4b9e8:	4b44b03a 	or	r2,r9,r13
   4b9ec:	10006626 	beq	r2,zero,4bb88 <__adddf3+0x450>
   4b9f0:	18bfffc4 	addi	r2,r3,-1
   4b9f4:	1000ec26 	beq	r2,zero,4bda8 <__adddf3+0x670>
   4b9f8:	18c1ffd8 	cmpnei	r3,r3,2047
   4b9fc:	18012d26 	beq	r3,zero,4beb4 <__adddf3+0x77c>
   4ba00:	1007883a 	mov	r3,r2
   4ba04:	003fcd06 	br	4b93c <__adddf3+0x204>
   4ba08:	18fff844 	addi	r3,r3,-31
   4ba0c:	20800820 	cmpeqi	r2,r4,32
   4ba10:	40c6d83a 	srl	r3,r8,r3
   4ba14:	1000041e 	bne	r2,zero,4ba28 <__adddf3+0x2f0>
   4ba18:	00801004 	movi	r2,64
   4ba1c:	1109c83a 	sub	r4,r2,r4
   4ba20:	4110983a 	sll	r8,r8,r4
   4ba24:	8a22b03a 	or	r17,r17,r8
   4ba28:	8822c03a 	cmpne	r17,r17,zero
   4ba2c:	88e2b03a 	or	r17,r17,r3
   4ba30:	0011883a 	mov	r8,zero
   4ba34:	0025883a 	mov	r18,zero
   4ba38:	888001cc 	andi	r2,r17,7
   4ba3c:	103f8f1e 	bne	r2,zero,4b87c <__adddf3+0x144>
   4ba40:	8822d0fa 	srli	r17,r17,3
   4ba44:	4004977a 	slli	r2,r8,29
   4ba48:	4014d0fa 	srli	r10,r8,3
   4ba4c:	9007883a 	mov	r3,r18
   4ba50:	8884b03a 	or	r2,r17,r2
   4ba54:	1901ffe0 	cmpeqi	r4,r3,2047
   4ba58:	2000191e 	bne	r4,zero,4bac0 <__adddf3+0x388>
   4ba5c:	02000434 	movhi	r8,16
   4ba60:	423fffc4 	addi	r8,r8,-1
   4ba64:	5210703a 	and	r8,r10,r8
   4ba68:	18c1ffcc 	andi	r3,r3,2047
   4ba6c:	003f9806 	br	4b8d0 <__adddf3+0x198>
   4ba70:	4b62b03a 	or	r17,r9,r13
   4ba74:	8822c03a 	cmpne	r17,r17,zero
   4ba78:	8ba3883a 	add	r17,r17,r14
   4ba7c:	8b91803a 	cmpltu	r8,r17,r14
   4ba80:	4291883a 	add	r8,r8,r10
   4ba84:	4080202c 	andhi	r2,r8,128
   4ba88:	103feb26 	beq	r2,zero,4ba38 <__adddf3+0x300>
   4ba8c:	94800044 	addi	r18,r18,1
   4ba90:	9081ffe0 	cmpeqi	r2,r18,2047
   4ba94:	10007426 	beq	r2,zero,4bc68 <__adddf3+0x530>
   4ba98:	00c1ffc4 	movi	r3,2047
   4ba9c:	0011883a 	mov	r8,zero
   4baa0:	0005883a 	mov	r2,zero
   4baa4:	003f8a06 	br	4b8d0 <__adddf3+0x198>
   4baa8:	500a977a 	slli	r5,r10,29
   4baac:	00c80034 	movhi	r3,8192
   4bab0:	18ffffc4 	addi	r3,r3,-1
   4bab4:	5014d0fa 	srli	r10,r10,3
   4bab8:	20c4703a 	and	r2,r4,r3
   4babc:	1144b03a 	or	r2,r2,r5
   4bac0:	1286b03a 	or	r3,r2,r10
   4bac4:	18015426 	beq	r3,zero,4c018 <__adddf3+0x8e0>
   4bac8:	00c00434 	movhi	r3,16
   4bacc:	18ffffc4 	addi	r3,r3,-1
   4bad0:	52000234 	orhi	r8,r10,8
   4bad4:	40d0703a 	and	r8,r8,r3
   4bad8:	00c1ffc4 	movi	r3,2047
   4badc:	003f7c06 	br	4b8d0 <__adddf3+0x198>
   4bae0:	8809883a 	mov	r4,r17
   4bae4:	0040e5c0 	call	40e5c <__clzsi2>
   4bae8:	10c00604 	addi	r3,r2,24
   4baec:	19000808 	cmpgei	r4,r3,32
   4baf0:	203f4b26 	beq	r4,zero,4b820 <__adddf3+0xe8>
   4baf4:	123ffe04 	addi	r8,r2,-8
   4baf8:	8a10983a 	sll	r8,r17,r8
   4bafc:	0023883a 	mov	r17,zero
   4bb00:	1cbf4e0e 	bge	r3,r18,4b83c <__adddf3+0x104>
   4bb04:	00bfe034 	movhi	r2,65408
   4bb08:	10bfffc4 	addi	r2,r2,-1
   4bb0c:	90e5c83a 	sub	r18,r18,r3
   4bb10:	4090703a 	and	r8,r8,r2
   4bb14:	003f5706 	br	4b874 <__adddf3+0x13c>
   4bb18:	18002226 	beq	r3,zero,4bba4 <__adddf3+0x46c>
   4bb1c:	1487c83a 	sub	r3,r2,r18
   4bb20:	90006e26 	beq	r18,zero,4bcdc <__adddf3+0x5a4>
   4bb24:	1101ffd8 	cmpnei	r4,r2,2047
   4bb28:	2000e926 	beq	r4,zero,4bed0 <__adddf3+0x798>
   4bb2c:	52802034 	orhi	r10,r10,128
   4bb30:	19000e48 	cmpgei	r4,r3,57
   4bb34:	2000b91e 	bne	r4,zero,4be1c <__adddf3+0x6e4>
   4bb38:	19000808 	cmpgei	r4,r3,32
   4bb3c:	2001101e 	bne	r4,zero,4bf80 <__adddf3+0x848>
   4bb40:	01000804 	movi	r4,32
   4bb44:	20c9c83a 	sub	r4,r4,r3
   4bb48:	5122983a 	sll	r17,r10,r4
   4bb4c:	70cad83a 	srl	r5,r14,r3
   4bb50:	7108983a 	sll	r4,r14,r4
   4bb54:	50d4d83a 	srl	r10,r10,r3
   4bb58:	8962b03a 	or	r17,r17,r5
   4bb5c:	2008c03a 	cmpne	r4,r4,zero
   4bb60:	8922b03a 	or	r17,r17,r4
   4bb64:	4a93883a 	add	r9,r9,r10
   4bb68:	8b63883a 	add	r17,r17,r13
   4bb6c:	8b51803a 	cmpltu	r8,r17,r13
   4bb70:	4251883a 	add	r8,r8,r9
   4bb74:	1025883a 	mov	r18,r2
   4bb78:	003fc206 	br	4ba84 <__adddf3+0x34c>
   4bb7c:	4b62b03a 	or	r17,r9,r13
   4bb80:	8822c03a 	cmpne	r17,r17,zero
   4bb84:	003f1a06 	br	4b7f0 <__adddf3+0xb8>
   4bb88:	500c977a 	slli	r6,r10,29
   4bb8c:	01480034 	movhi	r5,8192
   4bb90:	297fffc4 	addi	r5,r5,-1
   4bb94:	2144703a 	and	r2,r4,r5
   4bb98:	5014d0fa 	srli	r10,r10,3
   4bb9c:	1184b03a 	or	r2,r2,r6
   4bba0:	003fac06 	br	4ba54 <__adddf3+0x31c>
   4bba4:	90800044 	addi	r2,r18,1
   4bba8:	1141ff8c 	andi	r5,r2,2046
   4bbac:	28005e1e 	bne	r5,zero,4bd28 <__adddf3+0x5f0>
   4bbb0:	5384b03a 	or	r2,r10,r14
   4bbb4:	9000a71e 	bne	r18,zero,4be54 <__adddf3+0x71c>
   4bbb8:	1000e526 	beq	r2,zero,4bf50 <__adddf3+0x818>
   4bbbc:	4b44b03a 	or	r2,r9,r13
   4bbc0:	10008f26 	beq	r2,zero,4be00 <__adddf3+0x6c8>
   4bbc4:	7363883a 	add	r17,r14,r13
   4bbc8:	5255883a 	add	r10,r10,r9
   4bbcc:	8b91803a 	cmpltu	r8,r17,r14
   4bbd0:	5211883a 	add	r8,r10,r8
   4bbd4:	4080202c 	andhi	r2,r8,128
   4bbd8:	103f9726 	beq	r2,zero,4ba38 <__adddf3+0x300>
   4bbdc:	00bfe034 	movhi	r2,65408
   4bbe0:	10bfffc4 	addi	r2,r2,-1
   4bbe4:	4090703a 	and	r8,r8,r2
   4bbe8:	04800044 	movi	r18,1
   4bbec:	003f9206 	br	4ba38 <__adddf3+0x300>
   4bbf0:	1101ffd8 	cmpnei	r4,r2,2047
   4bbf4:	20007a26 	beq	r4,zero,4bde0 <__adddf3+0x6a8>
   4bbf8:	52802034 	orhi	r10,r10,128
   4bbfc:	19000e48 	cmpgei	r4,r3,57
   4bc00:	20002e1e 	bne	r4,zero,4bcbc <__adddf3+0x584>
   4bc04:	19000808 	cmpgei	r4,r3,32
   4bc08:	2000871e 	bne	r4,zero,4be28 <__adddf3+0x6f0>
   4bc0c:	01000804 	movi	r4,32
   4bc10:	20c9c83a 	sub	r4,r4,r3
   4bc14:	5122983a 	sll	r17,r10,r4
   4bc18:	70cad83a 	srl	r5,r14,r3
   4bc1c:	711c983a 	sll	r14,r14,r4
   4bc20:	50d4d83a 	srl	r10,r10,r3
   4bc24:	8962b03a 	or	r17,r17,r5
   4bc28:	701cc03a 	cmpne	r14,r14,zero
   4bc2c:	8ba2b03a 	or	r17,r17,r14
   4bc30:	4a93c83a 	sub	r9,r9,r10
   4bc34:	00002306 	br	4bcc4 <__adddf3+0x58c>
   4bc38:	7363c83a 	sub	r17,r14,r13
   4bc3c:	5267c83a 	sub	r19,r10,r9
   4bc40:	7451803a 	cmpltu	r8,r14,r17
   4bc44:	9a27c83a 	sub	r19,r19,r8
   4bc48:	9880202c 	andhi	r2,r19,128
   4bc4c:	1000421e 	bne	r2,zero,4bd58 <__adddf3+0x620>
   4bc50:	8cc4b03a 	or	r2,r17,r19
   4bc54:	103eee1e 	bne	r2,zero,4b810 <__adddf3+0xd8>
   4bc58:	0015883a 	mov	r10,zero
   4bc5c:	0021883a 	mov	r16,zero
   4bc60:	003f7e06 	br	4ba5c <__adddf3+0x324>
   4bc64:	04800084 	movi	r18,2
   4bc68:	00bfe034 	movhi	r2,65408
   4bc6c:	10bfffc4 	addi	r2,r2,-1
   4bc70:	8806d07a 	srli	r3,r17,1
   4bc74:	4090703a 	and	r8,r8,r2
   4bc78:	400497fa 	slli	r2,r8,31
   4bc7c:	8c40004c 	andi	r17,r17,1
   4bc80:	1c62b03a 	or	r17,r3,r17
   4bc84:	4010d07a 	srli	r8,r8,1
   4bc88:	1462b03a 	or	r17,r2,r17
   4bc8c:	003ef906 	br	4b874 <__adddf3+0x13c>
   4bc90:	1c7ff804 	addi	r17,r3,-32
   4bc94:	19000820 	cmpeqi	r4,r3,32
   4bc98:	4c44d83a 	srl	r2,r9,r17
   4bc9c:	2000041e 	bne	r4,zero,4bcb0 <__adddf3+0x578>
   4bca0:	01001004 	movi	r4,64
   4bca4:	20c7c83a 	sub	r3,r4,r3
   4bca8:	48d2983a 	sll	r9,r9,r3
   4bcac:	6a5ab03a 	or	r13,r13,r9
   4bcb0:	6822c03a 	cmpne	r17,r13,zero
   4bcb4:	88a2b03a 	or	r17,r17,r2
   4bcb8:	003ecd06 	br	4b7f0 <__adddf3+0xb8>
   4bcbc:	5394b03a 	or	r10,r10,r14
   4bcc0:	5022c03a 	cmpne	r17,r10,zero
   4bcc4:	6c63c83a 	sub	r17,r13,r17
   4bcc8:	6c51803a 	cmpltu	r8,r13,r17
   4bccc:	4a11c83a 	sub	r8,r9,r8
   4bcd0:	3821883a 	mov	r16,r7
   4bcd4:	1025883a 	mov	r18,r2
   4bcd8:	003ec806 	br	4b7fc <__adddf3+0xc4>
   4bcdc:	5388b03a 	or	r4,r10,r14
   4bce0:	20008226 	beq	r4,zero,4beec <__adddf3+0x7b4>
   4bce4:	193fffc4 	addi	r4,r3,-1
   4bce8:	2000b026 	beq	r4,zero,4bfac <__adddf3+0x874>
   4bcec:	18c1ffd8 	cmpnei	r3,r3,2047
   4bcf0:	18007726 	beq	r3,zero,4bed0 <__adddf3+0x798>
   4bcf4:	2007883a 	mov	r3,r4
   4bcf8:	003f8d06 	br	4bb30 <__adddf3+0x3f8>
   4bcfc:	00800804 	movi	r2,32
   4bd00:	10c5c83a 	sub	r2,r2,r3
   4bd04:	68c8d83a 	srl	r4,r13,r3
   4bd08:	48a2983a 	sll	r17,r9,r2
   4bd0c:	689a983a 	sll	r13,r13,r2
   4bd10:	48c6d83a 	srl	r3,r9,r3
   4bd14:	8922b03a 	or	r17,r17,r4
   4bd18:	681ac03a 	cmpne	r13,r13,zero
   4bd1c:	8b62b03a 	or	r17,r17,r13
   4bd20:	50d5883a 	add	r10,r10,r3
   4bd24:	003f5406 	br	4ba78 <__adddf3+0x340>
   4bd28:	10c1ffe0 	cmpeqi	r3,r2,2047
   4bd2c:	183f5a1e 	bne	r3,zero,4ba98 <__adddf3+0x360>
   4bd30:	7351883a 	add	r8,r14,r13
   4bd34:	4387803a 	cmpltu	r3,r8,r14
   4bd38:	5255883a 	add	r10,r10,r9
   4bd3c:	50c7883a 	add	r3,r10,r3
   4bd40:	401ad07a 	srli	r13,r8,1
   4bd44:	182297fa 	slli	r17,r3,31
   4bd48:	1810d07a 	srli	r8,r3,1
   4bd4c:	1025883a 	mov	r18,r2
   4bd50:	8b62b03a 	or	r17,r17,r13
   4bd54:	003f3806 	br	4ba38 <__adddf3+0x300>
   4bd58:	6ba3c83a 	sub	r17,r13,r14
   4bd5c:	4a93c83a 	sub	r9,r9,r10
   4bd60:	6c51803a 	cmpltu	r8,r13,r17
   4bd64:	4a27c83a 	sub	r19,r9,r8
   4bd68:	3821883a 	mov	r16,r7
   4bd6c:	003ea806 	br	4b810 <__adddf3+0xd8>
   4bd70:	480a977a 	slli	r5,r9,29
   4bd74:	01080034 	movhi	r4,8192
   4bd78:	213fffc4 	addi	r4,r4,-1
   4bd7c:	3104703a 	and	r2,r6,r4
   4bd80:	4814d0fa 	srli	r10,r9,3
   4bd84:	1144b03a 	or	r2,r2,r5
   4bd88:	3821883a 	mov	r16,r7
   4bd8c:	003f3106 	br	4ba54 <__adddf3+0x31c>
   4bd90:	28005d1e 	bne	r5,zero,4bf08 <__adddf3+0x7d0>
   4bd94:	1000121e 	bne	r2,zero,4bde0 <__adddf3+0x6a8>
   4bd98:	0021883a 	mov	r16,zero
   4bd9c:	4015883a 	mov	r10,r8
   4bda0:	00bfffc4 	movi	r2,-1
   4bda4:	003f4806 	br	4bac8 <__adddf3+0x390>
   4bda8:	7363883a 	add	r17,r14,r13
   4bdac:	5255883a 	add	r10,r10,r9
   4bdb0:	8b91803a 	cmpltu	r8,r17,r14
   4bdb4:	5211883a 	add	r8,r10,r8
   4bdb8:	4080202c 	andhi	r2,r8,128
   4bdbc:	103fa91e 	bne	r2,zero,4bc64 <__adddf3+0x52c>
   4bdc0:	04800044 	movi	r18,1
   4bdc4:	003f1c06 	br	4ba38 <__adddf3+0x300>
   4bdc8:	7363c83a 	sub	r17,r14,r13
   4bdcc:	5255c83a 	sub	r10,r10,r9
   4bdd0:	7451803a 	cmpltu	r8,r14,r17
   4bdd4:	5211c83a 	sub	r8,r10,r8
   4bdd8:	04800044 	movi	r18,1
   4bddc:	003e8706 	br	4b7fc <__adddf3+0xc4>
   4bde0:	4806977a 	slli	r3,r9,29
   4bde4:	00880034 	movhi	r2,8192
   4bde8:	10bfffc4 	addi	r2,r2,-1
   4bdec:	3084703a 	and	r2,r6,r2
   4bdf0:	4814d0fa 	srli	r10,r9,3
   4bdf4:	10c4b03a 	or	r2,r2,r3
   4bdf8:	3821883a 	mov	r16,r7
   4bdfc:	003f3006 	br	4bac0 <__adddf3+0x388>
   4be00:	500a977a 	slli	r5,r10,29
   4be04:	00880034 	movhi	r2,8192
   4be08:	10bfffc4 	addi	r2,r2,-1
   4be0c:	2084703a 	and	r2,r4,r2
   4be10:	5014d0fa 	srli	r10,r10,3
   4be14:	1144b03a 	or	r2,r2,r5
   4be18:	003f1006 	br	4ba5c <__adddf3+0x324>
   4be1c:	5394b03a 	or	r10,r10,r14
   4be20:	5022c03a 	cmpne	r17,r10,zero
   4be24:	003f5006 	br	4bb68 <__adddf3+0x430>
   4be28:	1c7ff804 	addi	r17,r3,-32
   4be2c:	19400820 	cmpeqi	r5,r3,32
   4be30:	5448d83a 	srl	r4,r10,r17
   4be34:	2800041e 	bne	r5,zero,4be48 <__adddf3+0x710>
   4be38:	01401004 	movi	r5,64
   4be3c:	28c7c83a 	sub	r3,r5,r3
   4be40:	50d4983a 	sll	r10,r10,r3
   4be44:	729cb03a 	or	r14,r14,r10
   4be48:	7022c03a 	cmpne	r17,r14,zero
   4be4c:	8922b03a 	or	r17,r17,r4
   4be50:	003f9c06 	br	4bcc4 <__adddf3+0x58c>
   4be54:	10005a1e 	bne	r2,zero,4bfc0 <__adddf3+0x888>
   4be58:	4804977a 	slli	r2,r9,29
   4be5c:	00c80034 	movhi	r3,8192
   4be60:	18ffffc4 	addi	r3,r3,-1
   4be64:	30cc703a 	and	r6,r6,r3
   4be68:	4814d0fa 	srli	r10,r9,3
   4be6c:	1184b03a 	or	r2,r2,r6
   4be70:	003f1306 	br	4bac0 <__adddf3+0x388>
   4be74:	6ba3c83a 	sub	r17,r13,r14
   4be78:	4a95c83a 	sub	r10,r9,r10
   4be7c:	6c51803a 	cmpltu	r8,r13,r17
   4be80:	5211c83a 	sub	r8,r10,r8
   4be84:	3821883a 	mov	r16,r7
   4be88:	04800044 	movi	r18,1
   4be8c:	003e5b06 	br	4b7fc <__adddf3+0xc4>
   4be90:	103f7126 	beq	r2,zero,4bc58 <__adddf3+0x520>
   4be94:	4808977a 	slli	r4,r9,29
   4be98:	00880034 	movhi	r2,8192
   4be9c:	10bfffc4 	addi	r2,r2,-1
   4bea0:	3084703a 	and	r2,r6,r2
   4bea4:	4814d0fa 	srli	r10,r9,3
   4bea8:	1104b03a 	or	r2,r2,r4
   4beac:	3821883a 	mov	r16,r7
   4beb0:	003eea06 	br	4ba5c <__adddf3+0x324>
   4beb4:	5006977a 	slli	r3,r10,29
   4beb8:	00880034 	movhi	r2,8192
   4bebc:	10bfffc4 	addi	r2,r2,-1
   4bec0:	2084703a 	and	r2,r4,r2
   4bec4:	5014d0fa 	srli	r10,r10,3
   4bec8:	10c4b03a 	or	r2,r2,r3
   4becc:	003efc06 	br	4bac0 <__adddf3+0x388>
   4bed0:	4806977a 	slli	r3,r9,29
   4bed4:	00880034 	movhi	r2,8192
   4bed8:	10bfffc4 	addi	r2,r2,-1
   4bedc:	3084703a 	and	r2,r6,r2
   4bee0:	4814d0fa 	srli	r10,r9,3
   4bee4:	10c4b03a 	or	r2,r2,r3
   4bee8:	003ef506 	br	4bac0 <__adddf3+0x388>
   4beec:	4808977a 	slli	r4,r9,29
   4bef0:	00880034 	movhi	r2,8192
   4bef4:	10bfffc4 	addi	r2,r2,-1
   4bef8:	3084703a 	and	r2,r6,r2
   4befc:	4814d0fa 	srli	r10,r9,3
   4bf00:	1104b03a 	or	r2,r2,r4
   4bf04:	003ed306 	br	4ba54 <__adddf3+0x31c>
   4bf08:	500a977a 	slli	r5,r10,29
   4bf0c:	5014d0fa 	srli	r10,r10,3
   4bf10:	10001626 	beq	r2,zero,4bf6c <__adddf3+0x834>
   4bf14:	00c80034 	movhi	r3,8192
   4bf18:	18ffffc4 	addi	r3,r3,-1
   4bf1c:	20c4703a 	and	r2,r4,r3
   4bf20:	5100022c 	andhi	r4,r10,8
   4bf24:	1144b03a 	or	r2,r2,r5
   4bf28:	203ee526 	beq	r4,zero,4bac0 <__adddf3+0x388>
   4bf2c:	4808d0fa 	srli	r4,r9,3
   4bf30:	2140022c 	andhi	r5,r4,8
   4bf34:	283ee21e 	bne	r5,zero,4bac0 <__adddf3+0x388>
   4bf38:	4812977a 	slli	r9,r9,29
   4bf3c:	30c4703a 	and	r2,r6,r3
   4bf40:	3821883a 	mov	r16,r7
   4bf44:	1244b03a 	or	r2,r2,r9
   4bf48:	2015883a 	mov	r10,r4
   4bf4c:	003edc06 	br	4bac0 <__adddf3+0x388>
   4bf50:	4804977a 	slli	r2,r9,29
   4bf54:	01080034 	movhi	r4,8192
   4bf58:	213fffc4 	addi	r4,r4,-1
   4bf5c:	310c703a 	and	r6,r6,r4
   4bf60:	4814d0fa 	srli	r10,r9,3
   4bf64:	1184b03a 	or	r2,r2,r6
   4bf68:	003ebc06 	br	4ba5c <__adddf3+0x324>
   4bf6c:	00880034 	movhi	r2,8192
   4bf70:	10bfffc4 	addi	r2,r2,-1
   4bf74:	2084703a 	and	r2,r4,r2
   4bf78:	1144b03a 	or	r2,r2,r5
   4bf7c:	003ed006 	br	4bac0 <__adddf3+0x388>
   4bf80:	193ff804 	addi	r4,r3,-32
   4bf84:	19400820 	cmpeqi	r5,r3,32
   4bf88:	5108d83a 	srl	r4,r10,r4
   4bf8c:	2800041e 	bne	r5,zero,4bfa0 <__adddf3+0x868>
   4bf90:	01401004 	movi	r5,64
   4bf94:	28c7c83a 	sub	r3,r5,r3
   4bf98:	50d4983a 	sll	r10,r10,r3
   4bf9c:	729cb03a 	or	r14,r14,r10
   4bfa0:	7022c03a 	cmpne	r17,r14,zero
   4bfa4:	8922b03a 	or	r17,r17,r4
   4bfa8:	003eef06 	br	4bb68 <__adddf3+0x430>
   4bfac:	7363883a 	add	r17,r14,r13
   4bfb0:	5255883a 	add	r10,r10,r9
   4bfb4:	8b51803a 	cmpltu	r8,r17,r13
   4bfb8:	5211883a 	add	r8,r10,r8
   4bfbc:	003f7e06 	br	4bdb8 <__adddf3+0x680>
   4bfc0:	4b50b03a 	or	r8,r9,r13
   4bfc4:	500a977a 	slli	r5,r10,29
   4bfc8:	5014d0fa 	srli	r10,r10,3
   4bfcc:	403fe726 	beq	r8,zero,4bf6c <__adddf3+0x834>
   4bfd0:	00c80034 	movhi	r3,8192
   4bfd4:	18ffffc4 	addi	r3,r3,-1
   4bfd8:	20c4703a 	and	r2,r4,r3
   4bfdc:	5100022c 	andhi	r4,r10,8
   4bfe0:	1144b03a 	or	r2,r2,r5
   4bfe4:	203eb626 	beq	r4,zero,4bac0 <__adddf3+0x388>
   4bfe8:	4808d0fa 	srli	r4,r9,3
   4bfec:	2140022c 	andhi	r5,r4,8
   4bff0:	283eb31e 	bne	r5,zero,4bac0 <__adddf3+0x388>
   4bff4:	4804977a 	slli	r2,r9,29
   4bff8:	30cc703a 	and	r6,r6,r3
   4bffc:	3821883a 	mov	r16,r7
   4c000:	3084b03a 	or	r2,r6,r2
   4c004:	2015883a 	mov	r10,r4
   4c008:	003ead06 	br	4bac0 <__adddf3+0x388>
   4c00c:	8a04b03a 	or	r2,r17,r8
   4c010:	103f1126 	beq	r2,zero,4bc58 <__adddf3+0x520>
   4c014:	003e8806 	br	4ba38 <__adddf3+0x300>
   4c018:	0005883a 	mov	r2,zero
   4c01c:	00c1ffc4 	movi	r3,2047
   4c020:	0011883a 	mov	r8,zero
   4c024:	003e2a06 	br	4b8d0 <__adddf3+0x198>

0004c028 <__eqdf2>:
   4c028:	2810d53a 	srli	r8,r5,20
   4c02c:	3806d53a 	srli	r3,r7,20
   4c030:	00800434 	movhi	r2,16
   4c034:	4201ffcc 	andi	r8,r8,2047
   4c038:	10bfffc4 	addi	r2,r2,-1
   4c03c:	4241ffd8 	cmpnei	r9,r8,2047
   4c040:	2814d7fa 	srli	r10,r5,31
   4c044:	3816d7fa 	srli	r11,r7,31
   4c048:	288a703a 	and	r5,r5,r2
   4c04c:	388e703a 	and	r7,r7,r2
   4c050:	1881ffcc 	andi	r2,r3,2047
   4c054:	48000626 	beq	r9,zero,4c070 <__eqdf2+0x48>
   4c058:	10c1ffe0 	cmpeqi	r3,r2,2047
   4c05c:	1800021e 	bne	r3,zero,4c068 <__eqdf2+0x40>
   4c060:	4080011e 	bne	r8,r2,4c068 <__eqdf2+0x40>
   4c064:	29c00826 	beq	r5,r7,4c088 <__eqdf2+0x60>
   4c068:	00800044 	movi	r2,1
   4c06c:	f800283a 	ret
   4c070:	2906b03a 	or	r3,r5,r4
   4c074:	183ffc1e 	bne	r3,zero,4c068 <__eqdf2+0x40>
   4c078:	1081ffd8 	cmpnei	r2,r2,2047
   4c07c:	103ffa1e 	bne	r2,zero,4c068 <__eqdf2+0x40>
   4c080:	398eb03a 	or	r7,r7,r6
   4c084:	383ff81e 	bne	r7,zero,4c068 <__eqdf2+0x40>
   4c088:	21bff71e 	bne	r4,r6,4c068 <__eqdf2+0x40>
   4c08c:	52c00426 	beq	r10,r11,4c0a0 <__eqdf2+0x78>
   4c090:	403ff51e 	bne	r8,zero,4c068 <__eqdf2+0x40>
   4c094:	290ab03a 	or	r5,r5,r4
   4c098:	2804c03a 	cmpne	r2,r5,zero
   4c09c:	f800283a 	ret
   4c0a0:	0005883a 	mov	r2,zero
   4c0a4:	f800283a 	ret

0004c0a8 <__gedf2>:
   4c0a8:	2810d53a 	srli	r8,r5,20
   4c0ac:	3812d53a 	srli	r9,r7,20
   4c0b0:	00c00434 	movhi	r3,16
   4c0b4:	4201ffcc 	andi	r8,r8,2047
   4c0b8:	18ffffc4 	addi	r3,r3,-1
   4c0bc:	4281ffd8 	cmpnei	r10,r8,2047
   4c0c0:	2816d7fa 	srli	r11,r5,31
   4c0c4:	3804d7fa 	srli	r2,r7,31
   4c0c8:	28ca703a 	and	r5,r5,r3
   4c0cc:	38ce703a 	and	r7,r7,r3
   4c0d0:	48c1ffcc 	andi	r3,r9,2047
   4c0d4:	50000a26 	beq	r10,zero,4c100 <__gedf2+0x58>
   4c0d8:	1a41ffd8 	cmpnei	r9,r3,2047
   4c0dc:	48000c26 	beq	r9,zero,4c110 <__gedf2+0x68>
   4c0e0:	4000171e 	bne	r8,zero,4c140 <__gedf2+0x98>
   4c0e4:	2912b03a 	or	r9,r5,r4
   4c0e8:	1800121e 	bne	r3,zero,4c134 <__gedf2+0x8c>
   4c0ec:	3994b03a 	or	r10,r7,r6
   4c0f0:	5000101e 	bne	r10,zero,4c134 <__gedf2+0x8c>
   4c0f4:	48000a1e 	bne	r9,zero,4c120 <__gedf2+0x78>
   4c0f8:	0005883a 	mov	r2,zero
   4c0fc:	f800283a 	ret
   4c100:	2912b03a 	or	r9,r5,r4
   4c104:	48001d1e 	bne	r9,zero,4c17c <__gedf2+0xd4>
   4c108:	1a41ffe0 	cmpeqi	r9,r3,2047
   4c10c:	48000c26 	beq	r9,zero,4c140 <__gedf2+0x98>
   4c110:	3992b03a 	or	r9,r7,r6
   4c114:	4800191e 	bne	r9,zero,4c17c <__gedf2+0xd4>
   4c118:	40000526 	beq	r8,zero,4c130 <__gedf2+0x88>
   4c11c:	58800c26 	beq	r11,r2,4c150 <__gedf2+0xa8>
   4c120:	00800044 	movi	r2,1
   4c124:	58000526 	beq	r11,zero,4c13c <__gedf2+0x94>
   4c128:	00bfffc4 	movi	r2,-1
   4c12c:	f800283a 	ret
   4c130:	2912b03a 	or	r9,r5,r4
   4c134:	483ff91e 	bne	r9,zero,4c11c <__gedf2+0x74>
   4c138:	103ffb26 	beq	r2,zero,4c128 <__gedf2+0x80>
   4c13c:	f800283a 	ret
   4c140:	183ff61e 	bne	r3,zero,4c11c <__gedf2+0x74>
   4c144:	3992b03a 	or	r9,r7,r6
   4c148:	483ff41e 	bne	r9,zero,4c11c <__gedf2+0x74>
   4c14c:	003ff406 	br	4c120 <__gedf2+0x78>
   4c150:	1a000716 	blt	r3,r8,4c170 <__gedf2+0xc8>
   4c154:	40fff816 	blt	r8,r3,4c138 <__gedf2+0x90>
   4c158:	397ff136 	bltu	r7,r5,4c120 <__gedf2+0x78>
   4c15c:	29c00926 	beq	r5,r7,4c184 <__gedf2+0xdc>
   4c160:	29ffe52e 	bgeu	r5,r7,4c0f8 <__gedf2+0x50>
   4c164:	583ff026 	beq	r11,zero,4c128 <__gedf2+0x80>
   4c168:	5805883a 	mov	r2,r11
   4c16c:	f800283a 	ret
   4c170:	103fed1e 	bne	r2,zero,4c128 <__gedf2+0x80>
   4c174:	00800044 	movi	r2,1
   4c178:	f800283a 	ret
   4c17c:	00bfff84 	movi	r2,-2
   4c180:	f800283a 	ret
   4c184:	313fe636 	bltu	r6,r4,4c120 <__gedf2+0x78>
   4c188:	21bfdb2e 	bgeu	r4,r6,4c0f8 <__gedf2+0x50>
   4c18c:	003ff506 	br	4c164 <__gedf2+0xbc>

0004c190 <__ledf2>:
   4c190:	2810d53a 	srli	r8,r5,20
   4c194:	3812d53a 	srli	r9,r7,20
   4c198:	00c00434 	movhi	r3,16
   4c19c:	4201ffcc 	andi	r8,r8,2047
   4c1a0:	18ffffc4 	addi	r3,r3,-1
   4c1a4:	4281ffd8 	cmpnei	r10,r8,2047
   4c1a8:	2816d7fa 	srli	r11,r5,31
   4c1ac:	3804d7fa 	srli	r2,r7,31
   4c1b0:	28ca703a 	and	r5,r5,r3
   4c1b4:	38ce703a 	and	r7,r7,r3
   4c1b8:	48c1ffcc 	andi	r3,r9,2047
   4c1bc:	50000a26 	beq	r10,zero,4c1e8 <__ledf2+0x58>
   4c1c0:	1a41ffd8 	cmpnei	r9,r3,2047
   4c1c4:	48000c26 	beq	r9,zero,4c1f8 <__ledf2+0x68>
   4c1c8:	4000191e 	bne	r8,zero,4c230 <__ledf2+0xa0>
   4c1cc:	2912b03a 	or	r9,r5,r4
   4c1d0:	18000d1e 	bne	r3,zero,4c208 <__ledf2+0x78>
   4c1d4:	3994b03a 	or	r10,r7,r6
   4c1d8:	50000b1e 	bne	r10,zero,4c208 <__ledf2+0x78>
   4c1dc:	48000c1e 	bne	r9,zero,4c210 <__ledf2+0x80>
   4c1e0:	0005883a 	mov	r2,zero
   4c1e4:	f800283a 	ret
   4c1e8:	2912b03a 	or	r9,r5,r4
   4c1ec:	48000c1e 	bne	r9,zero,4c220 <__ledf2+0x90>
   4c1f0:	1a41ffe0 	cmpeqi	r9,r3,2047
   4c1f4:	48000e26 	beq	r9,zero,4c230 <__ledf2+0xa0>
   4c1f8:	3992b03a 	or	r9,r7,r6
   4c1fc:	4800081e 	bne	r9,zero,4c220 <__ledf2+0x90>
   4c200:	4000021e 	bne	r8,zero,4c20c <__ledf2+0x7c>
   4c204:	2912b03a 	or	r9,r5,r4
   4c208:	48000726 	beq	r9,zero,4c228 <__ledf2+0x98>
   4c20c:	58800c26 	beq	r11,r2,4c240 <__ledf2+0xb0>
   4c210:	00800044 	movi	r2,1
   4c214:	58000526 	beq	r11,zero,4c22c <__ledf2+0x9c>
   4c218:	00bfffc4 	movi	r2,-1
   4c21c:	f800283a 	ret
   4c220:	00800084 	movi	r2,2
   4c224:	f800283a 	ret
   4c228:	103ffb26 	beq	r2,zero,4c218 <__ledf2+0x88>
   4c22c:	f800283a 	ret
   4c230:	183ff61e 	bne	r3,zero,4c20c <__ledf2+0x7c>
   4c234:	3992b03a 	or	r9,r7,r6
   4c238:	483ff41e 	bne	r9,zero,4c20c <__ledf2+0x7c>
   4c23c:	003ff406 	br	4c210 <__ledf2+0x80>
   4c240:	1a00030e 	bge	r3,r8,4c250 <__ledf2+0xc0>
   4c244:	103ff41e 	bne	r2,zero,4c218 <__ledf2+0x88>
   4c248:	00800044 	movi	r2,1
   4c24c:	f800283a 	ret
   4c250:	40fff516 	blt	r8,r3,4c228 <__ledf2+0x98>
   4c254:	397fee36 	bltu	r7,r5,4c210 <__ledf2+0x80>
   4c258:	29c00426 	beq	r5,r7,4c26c <__ledf2+0xdc>
   4c25c:	29ffe02e 	bgeu	r5,r7,4c1e0 <__ledf2+0x50>
   4c260:	583fed26 	beq	r11,zero,4c218 <__ledf2+0x88>
   4c264:	5805883a 	mov	r2,r11
   4c268:	f800283a 	ret
   4c26c:	313fe836 	bltu	r6,r4,4c210 <__ledf2+0x80>
   4c270:	21bfdb2e 	bgeu	r4,r6,4c1e0 <__ledf2+0x50>
   4c274:	003ffa06 	br	4c260 <__ledf2+0xd0>

0004c278 <__muldf3>:
   4c278:	2804d53a 	srli	r2,r5,20
   4c27c:	defff504 	addi	sp,sp,-44
   4c280:	02000434 	movhi	r8,16
   4c284:	df000915 	stw	fp,36(sp)
   4c288:	dd000515 	stw	r20,20(sp)
   4c28c:	dcc00415 	stw	r19,16(sp)
   4c290:	dc000115 	stw	r16,4(sp)
   4c294:	423fffc4 	addi	r8,r8,-1
   4c298:	dfc00a15 	stw	ra,40(sp)
   4c29c:	ddc00815 	stw	r23,32(sp)
   4c2a0:	dd800715 	stw	r22,28(sp)
   4c2a4:	dd400615 	stw	r21,24(sp)
   4c2a8:	dc800315 	stw	r18,12(sp)
   4c2ac:	dc400215 	stw	r17,8(sp)
   4c2b0:	1081ffcc 	andi	r2,r2,2047
   4c2b4:	2828d7fa 	srli	r20,r5,31
   4c2b8:	2027883a 	mov	r19,r4
   4c2bc:	3039883a 	mov	fp,r6
   4c2c0:	2a20703a 	and	r16,r5,r8
   4c2c4:	1000e726 	beq	r2,zero,4c664 <__muldf3+0x3ec>
   4c2c8:	10c1ffe0 	cmpeqi	r3,r2,2047
   4c2cc:	1800f91e 	bne	r3,zero,4c6b4 <__muldf3+0x43c>
   4c2d0:	800a90fa 	slli	r5,r16,3
   4c2d4:	2020d77a 	srli	r16,r4,29
   4c2d8:	202490fa 	slli	r18,r4,3
   4c2dc:	14ff0044 	addi	r19,r2,-1023
   4c2e0:	8160b03a 	or	r16,r16,r5
   4c2e4:	84002034 	orhi	r16,r16,128
   4c2e8:	002b883a 	mov	r21,zero
   4c2ec:	002d883a 	mov	r22,zero
   4c2f0:	3804d53a 	srli	r2,r7,20
   4c2f4:	00c00434 	movhi	r3,16
   4c2f8:	18ffffc4 	addi	r3,r3,-1
   4c2fc:	1081ffcc 	andi	r2,r2,2047
   4c300:	382ed7fa 	srli	r23,r7,31
   4c304:	38e2703a 	and	r17,r7,r3
   4c308:	1000c526 	beq	r2,zero,4c620 <__muldf3+0x3a8>
   4c30c:	10c1ffe0 	cmpeqi	r3,r2,2047
   4c310:	1800ef1e 	bne	r3,zero,4c6d0 <__muldf3+0x458>
   4c314:	880690fa 	slli	r3,r17,3
   4c318:	e022d77a 	srli	r17,fp,29
   4c31c:	e00a90fa 	slli	r5,fp,3
   4c320:	10bf0044 	addi	r2,r2,-1023
   4c324:	88e2b03a 	or	r17,r17,r3
   4c328:	8c402034 	orhi	r17,r17,128
   4c32c:	98a7883a 	add	r19,r19,r2
   4c330:	0007883a 	mov	r3,zero
   4c334:	a8800428 	cmpgeui	r2,r21,16
   4c338:	a5ccf03a 	xor	r6,r20,r23
   4c33c:	9a000044 	addi	r8,r19,1
   4c340:	1000371e 	bne	r2,zero,4c420 <__muldf3+0x1a8>
   4c344:	a80490ba 	slli	r2,r21,2
   4c348:	01000174 	movhi	r4,5
   4c34c:	1109883a 	add	r4,r2,r4
   4c350:	20b0d617 	ldw	r2,-15528(r4)
   4c354:	1000683a 	jmp	r2
   4c358:	0004c420 	cmpeqi	zero,zero,4880
   4c35c:	0004c39c 	xori	zero,zero,4878
   4c360:	0004c39c 	xori	zero,zero,4878
   4c364:	0004c398 	cmpnei	zero,zero,4878
   4c368:	0004c3a8 	cmpgeui	zero,zero,4878
   4c36c:	0004c3a8 	cmpgeui	zero,zero,4878
   4c370:	0004c744 	movi	zero,4893
   4c374:	0004c398 	cmpnei	zero,zero,4878
   4c378:	0004c3a8 	cmpgeui	zero,zero,4878
   4c37c:	0004c744 	movi	zero,4893
   4c380:	0004c3a8 	cmpgeui	zero,zero,4878
   4c384:	0004c398 	cmpnei	zero,zero,4878
   4c388:	0004c6ec 	andhi	zero,zero,4891
   4c38c:	0004c6ec 	andhi	zero,zero,4891
   4c390:	0004c6ec 	andhi	zero,zero,4891
   4c394:	0004c7d0 	cmplti	zero,zero,4895
   4c398:	b80d883a 	mov	r6,r23
   4c39c:	8821883a 	mov	r16,r17
   4c3a0:	2825883a 	mov	r18,r5
   4c3a4:	182d883a 	mov	r22,r3
   4c3a8:	b08000a0 	cmpeqi	r2,r22,2
   4c3ac:	1000181e 	bne	r2,zero,4c410 <__muldf3+0x198>
   4c3b0:	b08000e0 	cmpeqi	r2,r22,3
   4c3b4:	1001481e 	bne	r2,zero,4c8d8 <__muldf3+0x660>
   4c3b8:	b0800060 	cmpeqi	r2,r22,1
   4c3bc:	10007e26 	beq	r2,zero,4c5b8 <__muldf3+0x340>
   4c3c0:	0007883a 	mov	r3,zero
   4c3c4:	0021883a 	mov	r16,zero
   4c3c8:	0025883a 	mov	r18,zero
   4c3cc:	1806953a 	slli	r3,r3,20
   4c3d0:	300c97fa 	slli	r6,r6,31
   4c3d4:	9005883a 	mov	r2,r18
   4c3d8:	1c06b03a 	or	r3,r3,r16
   4c3dc:	1986b03a 	or	r3,r3,r6
   4c3e0:	dfc00a17 	ldw	ra,40(sp)
   4c3e4:	df000917 	ldw	fp,36(sp)
   4c3e8:	ddc00817 	ldw	r23,32(sp)
   4c3ec:	dd800717 	ldw	r22,28(sp)
   4c3f0:	dd400617 	ldw	r21,24(sp)
   4c3f4:	dd000517 	ldw	r20,20(sp)
   4c3f8:	dcc00417 	ldw	r19,16(sp)
   4c3fc:	dc800317 	ldw	r18,12(sp)
   4c400:	dc400217 	ldw	r17,8(sp)
   4c404:	dc000117 	ldw	r16,4(sp)
   4c408:	dec00b04 	addi	sp,sp,44
   4c40c:	f800283a 	ret
   4c410:	00c1ffc4 	movi	r3,2047
   4c414:	0021883a 	mov	r16,zero
   4c418:	0025883a 	mov	r18,zero
   4c41c:	003feb06 	br	4c3cc <__muldf3+0x154>
   4c420:	9004d43a 	srli	r2,r18,16
   4c424:	281ed43a 	srli	r15,r5,16
   4c428:	94bfffcc 	andi	r18,r18,65535
   4c42c:	297fffcc 	andi	r5,r5,65535
   4c430:	2c89383a 	mul	r4,r5,r18
   4c434:	114f383a 	mul	r7,r2,r5
   4c438:	7c87383a 	mul	r3,r15,r18
   4c43c:	2012d43a 	srli	r9,r4,16
   4c440:	13dd383a 	mul	r14,r2,r15
   4c444:	19c7883a 	add	r3,r3,r7
   4c448:	48d3883a 	add	r9,r9,r3
   4c44c:	49c0022e 	bgeu	r9,r7,4c458 <__muldf3+0x1e0>
   4c450:	00c00074 	movhi	r3,1
   4c454:	70dd883a 	add	r14,r14,r3
   4c458:	881ad43a 	srli	r13,r17,16
   4c45c:	8c7fffcc 	andi	r17,r17,65535
   4c460:	8c87383a 	mul	r3,r17,r18
   4c464:	144f383a 	mul	r7,r2,r17
   4c468:	6ca5383a 	mul	r18,r13,r18
   4c46c:	1816d43a 	srli	r11,r3,16
   4c470:	4814943a 	slli	r10,r9,16
   4c474:	91e5883a 	add	r18,r18,r7
   4c478:	213fffcc 	andi	r4,r4,65535
   4c47c:	5c97883a 	add	r11,r11,r18
   4c480:	4818d43a 	srli	r12,r9,16
   4c484:	1345383a 	mul	r2,r2,r13
   4c488:	5115883a 	add	r10,r10,r4
   4c48c:	59c0022e 	bgeu	r11,r7,4c498 <__muldf3+0x220>
   4c490:	01000074 	movhi	r4,1
   4c494:	1105883a 	add	r2,r2,r4
   4c498:	8028d43a 	srli	r20,r16,16
   4c49c:	827fffcc 	andi	r9,r16,65535
   4c4a0:	2a6b383a 	mul	r21,r5,r9
   4c4a4:	7a49383a 	mul	r4,r15,r9
   4c4a8:	a14b383a 	mul	r5,r20,r5
   4c4ac:	580e943a 	slli	r7,r11,16
   4c4b0:	a82cd43a 	srli	r22,r21,16
   4c4b4:	5824d43a 	srli	r18,r11,16
   4c4b8:	18ffffcc 	andi	r3,r3,65535
   4c4bc:	2149883a 	add	r4,r4,r5
   4c4c0:	38cf883a 	add	r7,r7,r3
   4c4c4:	b109883a 	add	r4,r22,r4
   4c4c8:	7d1f383a 	mul	r15,r15,r20
   4c4cc:	9097883a 	add	r11,r18,r2
   4c4d0:	61c7883a 	add	r3,r12,r7
   4c4d4:	2140022e 	bgeu	r4,r5,4c4e0 <__muldf3+0x268>
   4c4d8:	00800074 	movhi	r2,1
   4c4dc:	789f883a 	add	r15,r15,r2
   4c4e0:	8a65383a 	mul	r18,r17,r9
   4c4e4:	6a53383a 	mul	r9,r13,r9
   4c4e8:	a463383a 	mul	r17,r20,r17
   4c4ec:	9020d43a 	srli	r16,r18,16
   4c4f0:	200ad43a 	srli	r5,r4,16
   4c4f4:	2008943a 	slli	r4,r4,16
   4c4f8:	4c53883a 	add	r9,r9,r17
   4c4fc:	ab3fffcc 	andi	r12,r21,65535
   4c500:	8253883a 	add	r9,r16,r9
   4c504:	6d1b383a 	mul	r13,r13,r20
   4c508:	2bdf883a 	add	r15,r5,r15
   4c50c:	2309883a 	add	r4,r4,r12
   4c510:	4c40022e 	bgeu	r9,r17,4c51c <__muldf3+0x2a4>
   4c514:	00800074 	movhi	r2,1
   4c518:	689b883a 	add	r13,r13,r2
   4c51c:	4804943a 	slli	r2,r9,16
   4c520:	917fffcc 	andi	r5,r18,65535
   4c524:	1b87883a 	add	r3,r3,r14
   4c528:	1145883a 	add	r2,r2,r5
   4c52c:	19cf803a 	cmpltu	r7,r3,r7
   4c530:	12c5883a 	add	r2,r2,r11
   4c534:	1907883a 	add	r3,r3,r4
   4c538:	11dd883a 	add	r14,r2,r7
   4c53c:	1909803a 	cmpltu	r4,r3,r4
   4c540:	73cb883a 	add	r5,r14,r15
   4c544:	4812d43a 	srli	r9,r9,16
   4c548:	2919883a 	add	r12,r5,r4
   4c54c:	12c5803a 	cmpltu	r2,r2,r11
   4c550:	71e1803a 	cmpltu	r16,r14,r7
   4c554:	1420b03a 	or	r16,r2,r16
   4c558:	2bcb803a 	cmpltu	r5,r5,r15
   4c55c:	6109803a 	cmpltu	r4,r12,r4
   4c560:	2908b03a 	or	r4,r5,r4
   4c564:	8261883a 	add	r16,r16,r9
   4c568:	1824927a 	slli	r18,r3,9
   4c56c:	8121883a 	add	r16,r16,r4
   4c570:	8361883a 	add	r16,r16,r13
   4c574:	8020927a 	slli	r16,r16,9
   4c578:	1806d5fa 	srli	r3,r3,23
   4c57c:	600ad5fa 	srli	r5,r12,23
   4c580:	6004927a 	slli	r2,r12,9
   4c584:	92a4b03a 	or	r18,r18,r10
   4c588:	9024c03a 	cmpne	r18,r18,zero
   4c58c:	90e4b03a 	or	r18,r18,r3
   4c590:	80c0402c 	andhi	r3,r16,256
   4c594:	90a4b03a 	or	r18,r18,r2
   4c598:	8160b03a 	or	r16,r16,r5
   4c59c:	1800b326 	beq	r3,zero,4c86c <__muldf3+0x5f4>
   4c5a0:	9006d07a 	srli	r3,r18,1
   4c5a4:	800497fa 	slli	r2,r16,31
   4c5a8:	9480004c 	andi	r18,r18,1
   4c5ac:	8020d07a 	srli	r16,r16,1
   4c5b0:	1c86b03a 	or	r3,r3,r18
   4c5b4:	18a4b03a 	or	r18,r3,r2
   4c5b8:	4100ffc4 	addi	r4,r8,1023
   4c5bc:	0100670e 	bge	zero,r4,4c75c <__muldf3+0x4e4>
   4c5c0:	908001cc 	andi	r2,r18,7
   4c5c4:	10000726 	beq	r2,zero,4c5e4 <__muldf3+0x36c>
   4c5c8:	908003cc 	andi	r2,r18,15
   4c5cc:	10800120 	cmpeqi	r2,r2,4
   4c5d0:	1000041e 	bne	r2,zero,4c5e4 <__muldf3+0x36c>
   4c5d4:	90800104 	addi	r2,r18,4
   4c5d8:	14a5803a 	cmpltu	r18,r2,r18
   4c5dc:	84a1883a 	add	r16,r16,r18
   4c5e0:	1025883a 	mov	r18,r2
   4c5e4:	8080402c 	andhi	r2,r16,256
   4c5e8:	10000426 	beq	r2,zero,4c5fc <__muldf3+0x384>
   4c5ec:	00bfc034 	movhi	r2,65280
   4c5f0:	10bfffc4 	addi	r2,r2,-1
   4c5f4:	80a0703a 	and	r16,r16,r2
   4c5f8:	41010004 	addi	r4,r8,1024
   4c5fc:	2081ffc8 	cmpgei	r2,r4,2047
   4c600:	103f831e 	bne	r2,zero,4c410 <__muldf3+0x198>
   4c604:	8004977a 	slli	r2,r16,29
   4c608:	9024d0fa 	srli	r18,r18,3
   4c60c:	8020927a 	slli	r16,r16,9
   4c610:	20c1ffcc 	andi	r3,r4,2047
   4c614:	14a4b03a 	or	r18,r2,r18
   4c618:	8020d33a 	srli	r16,r16,12
   4c61c:	003f6b06 	br	4c3cc <__muldf3+0x154>
   4c620:	8f0ab03a 	or	r5,r17,fp
   4c624:	28004326 	beq	r5,zero,4c734 <__muldf3+0x4bc>
   4c628:	88008526 	beq	r17,zero,4c840 <__muldf3+0x5c8>
   4c62c:	8809883a 	mov	r4,r17
   4c630:	0040e5c0 	call	40e5c <__clzsi2>
   4c634:	11bffd44 	addi	r6,r2,-11
   4c638:	01000744 	movi	r4,29
   4c63c:	117ffe04 	addi	r5,r2,-8
   4c640:	2189c83a 	sub	r4,r4,r6
   4c644:	8962983a 	sll	r17,r17,r5
   4c648:	e108d83a 	srl	r4,fp,r4
   4c64c:	e14a983a 	sll	r5,fp,r5
   4c650:	2462b03a 	or	r17,r4,r17
   4c654:	9885c83a 	sub	r2,r19,r2
   4c658:	14ff0344 	addi	r19,r2,-1011
   4c65c:	0007883a 	mov	r3,zero
   4c660:	003f3406 	br	4c334 <__muldf3+0xbc>
   4c664:	8124b03a 	or	r18,r16,r4
   4c668:	90002d26 	beq	r18,zero,4c720 <__muldf3+0x4a8>
   4c66c:	d9c00015 	stw	r7,0(sp)
   4c670:	80006826 	beq	r16,zero,4c814 <__muldf3+0x59c>
   4c674:	8009883a 	mov	r4,r16
   4c678:	0040e5c0 	call	40e5c <__clzsi2>
   4c67c:	d9c00017 	ldw	r7,0(sp)
   4c680:	113ffd44 	addi	r4,r2,-11
   4c684:	00c00744 	movi	r3,29
   4c688:	14bffe04 	addi	r18,r2,-8
   4c68c:	1907c83a 	sub	r3,r3,r4
   4c690:	84a0983a 	sll	r16,r16,r18
   4c694:	98c6d83a 	srl	r3,r19,r3
   4c698:	9ca4983a 	sll	r18,r19,r18
   4c69c:	1c20b03a 	or	r16,r3,r16
   4c6a0:	04ff0344 	movi	r19,-1011
   4c6a4:	98a7c83a 	sub	r19,r19,r2
   4c6a8:	002b883a 	mov	r21,zero
   4c6ac:	002d883a 	mov	r22,zero
   4c6b0:	003f0f06 	br	4c2f0 <__muldf3+0x78>
   4c6b4:	8124b03a 	or	r18,r16,r4
   4c6b8:	9000141e 	bne	r18,zero,4c70c <__muldf3+0x494>
   4c6bc:	0021883a 	mov	r16,zero
   4c6c0:	05400204 	movi	r21,8
   4c6c4:	04c1ffc4 	movi	r19,2047
   4c6c8:	05800084 	movi	r22,2
   4c6cc:	003f0806 	br	4c2f0 <__muldf3+0x78>
   4c6d0:	8f0ab03a 	or	r5,r17,fp
   4c6d4:	9cc1ffc4 	addi	r19,r19,2047
   4c6d8:	2800081e 	bne	r5,zero,4c6fc <__muldf3+0x484>
   4c6dc:	ad400094 	ori	r21,r21,2
   4c6e0:	0023883a 	mov	r17,zero
   4c6e4:	00c00084 	movi	r3,2
   4c6e8:	003f1206 	br	4c334 <__muldf3+0xbc>
   4c6ec:	b08000a0 	cmpeqi	r2,r22,2
   4c6f0:	a00d883a 	mov	r6,r20
   4c6f4:	103f2e26 	beq	r2,zero,4c3b0 <__muldf3+0x138>
   4c6f8:	003f4506 	br	4c410 <__muldf3+0x198>
   4c6fc:	ad4000d4 	ori	r21,r21,3
   4c700:	e00b883a 	mov	r5,fp
   4c704:	00c000c4 	movi	r3,3
   4c708:	003f0a06 	br	4c334 <__muldf3+0xbc>
   4c70c:	2025883a 	mov	r18,r4
   4c710:	05400304 	movi	r21,12
   4c714:	04c1ffc4 	movi	r19,2047
   4c718:	058000c4 	movi	r22,3
   4c71c:	003ef406 	br	4c2f0 <__muldf3+0x78>
   4c720:	0021883a 	mov	r16,zero
   4c724:	05400104 	movi	r21,4
   4c728:	0027883a 	mov	r19,zero
   4c72c:	05800044 	movi	r22,1
   4c730:	003eef06 	br	4c2f0 <__muldf3+0x78>
   4c734:	ad400054 	ori	r21,r21,1
   4c738:	0023883a 	mov	r17,zero
   4c73c:	00c00044 	movi	r3,1
   4c740:	003efc06 	br	4c334 <__muldf3+0xbc>
   4c744:	04000434 	movhi	r16,16
   4c748:	000d883a 	mov	r6,zero
   4c74c:	843fffc4 	addi	r16,r16,-1
   4c750:	04bfffc4 	movi	r18,-1
   4c754:	00c1ffc4 	movi	r3,2047
   4c758:	003f1c06 	br	4c3cc <__muldf3+0x154>
   4c75c:	00800044 	movi	r2,1
   4c760:	1105c83a 	sub	r2,r2,r4
   4c764:	10c00e48 	cmpgei	r3,r2,57
   4c768:	183f151e 	bne	r3,zero,4c3c0 <__muldf3+0x148>
   4c76c:	10c00808 	cmpgei	r3,r2,32
   4c770:	1800401e 	bne	r3,zero,4c874 <__muldf3+0x5fc>
   4c774:	42010784 	addi	r8,r8,1054
   4c778:	8206983a 	sll	r3,r16,r8
   4c77c:	9088d83a 	srl	r4,r18,r2
   4c780:	9210983a 	sll	r8,r18,r8
   4c784:	80a0d83a 	srl	r16,r16,r2
   4c788:	1904b03a 	or	r2,r3,r4
   4c78c:	4024c03a 	cmpne	r18,r8,zero
   4c790:	1484b03a 	or	r2,r2,r18
   4c794:	10c001cc 	andi	r3,r2,7
   4c798:	18000726 	beq	r3,zero,4c7b8 <__muldf3+0x540>
   4c79c:	10c003cc 	andi	r3,r2,15
   4c7a0:	18c00120 	cmpeqi	r3,r3,4
   4c7a4:	1800041e 	bne	r3,zero,4c7b8 <__muldf3+0x540>
   4c7a8:	10c00104 	addi	r3,r2,4
   4c7ac:	1885803a 	cmpltu	r2,r3,r2
   4c7b0:	80a1883a 	add	r16,r16,r2
   4c7b4:	1805883a 	mov	r2,r3
   4c7b8:	80c0202c 	andhi	r3,r16,128
   4c7bc:	18004226 	beq	r3,zero,4c8c8 <__muldf3+0x650>
   4c7c0:	00c00044 	movi	r3,1
   4c7c4:	0021883a 	mov	r16,zero
   4c7c8:	0025883a 	mov	r18,zero
   4c7cc:	003eff06 	br	4c3cc <__muldf3+0x154>
   4c7d0:	8080022c 	andhi	r2,r16,8
   4c7d4:	10000926 	beq	r2,zero,4c7fc <__muldf3+0x584>
   4c7d8:	8880022c 	andhi	r2,r17,8
   4c7dc:	1000071e 	bne	r2,zero,4c7fc <__muldf3+0x584>
   4c7e0:	00800434 	movhi	r2,16
   4c7e4:	8c000234 	orhi	r16,r17,8
   4c7e8:	10bfffc4 	addi	r2,r2,-1
   4c7ec:	80a0703a 	and	r16,r16,r2
   4c7f0:	b80d883a 	mov	r6,r23
   4c7f4:	2825883a 	mov	r18,r5
   4c7f8:	003fd606 	br	4c754 <__muldf3+0x4dc>
   4c7fc:	00800434 	movhi	r2,16
   4c800:	84000234 	orhi	r16,r16,8
   4c804:	10bfffc4 	addi	r2,r2,-1
   4c808:	80a0703a 	and	r16,r16,r2
   4c80c:	a00d883a 	mov	r6,r20
   4c810:	003fd006 	br	4c754 <__muldf3+0x4dc>
   4c814:	0040e5c0 	call	40e5c <__clzsi2>
   4c818:	11000544 	addi	r4,r2,21
   4c81c:	21400748 	cmpgei	r5,r4,29
   4c820:	1007883a 	mov	r3,r2
   4c824:	d9c00017 	ldw	r7,0(sp)
   4c828:	10800804 	addi	r2,r2,32
   4c82c:	283f9526 	beq	r5,zero,4c684 <__muldf3+0x40c>
   4c830:	18fffe04 	addi	r3,r3,-8
   4c834:	98e0983a 	sll	r16,r19,r3
   4c838:	0025883a 	mov	r18,zero
   4c83c:	003f9806 	br	4c6a0 <__muldf3+0x428>
   4c840:	e009883a 	mov	r4,fp
   4c844:	0040e5c0 	call	40e5c <__clzsi2>
   4c848:	11800544 	addi	r6,r2,21
   4c84c:	31000748 	cmpgei	r4,r6,29
   4c850:	1007883a 	mov	r3,r2
   4c854:	10800804 	addi	r2,r2,32
   4c858:	203f7726 	beq	r4,zero,4c638 <__muldf3+0x3c0>
   4c85c:	1c7ffe04 	addi	r17,r3,-8
   4c860:	e462983a 	sll	r17,fp,r17
   4c864:	000b883a 	mov	r5,zero
   4c868:	003f7a06 	br	4c654 <__muldf3+0x3dc>
   4c86c:	9811883a 	mov	r8,r19
   4c870:	003f5106 	br	4c5b8 <__muldf3+0x340>
   4c874:	00fff844 	movi	r3,-31
   4c878:	1907c83a 	sub	r3,r3,r4
   4c87c:	10800820 	cmpeqi	r2,r2,32
   4c880:	80c6d83a 	srl	r3,r16,r3
   4c884:	1000031e 	bne	r2,zero,4c894 <__muldf3+0x61c>
   4c888:	42010f84 	addi	r8,r8,1086
   4c88c:	8220983a 	sll	r16,r16,r8
   4c890:	9424b03a 	or	r18,r18,r16
   4c894:	9024c03a 	cmpne	r18,r18,zero
   4c898:	90c4b03a 	or	r2,r18,r3
   4c89c:	148001cc 	andi	r18,r2,7
   4c8a0:	9000051e 	bne	r18,zero,4c8b8 <__muldf3+0x640>
   4c8a4:	0021883a 	mov	r16,zero
   4c8a8:	1004d0fa 	srli	r2,r2,3
   4c8ac:	0007883a 	mov	r3,zero
   4c8b0:	14a4b03a 	or	r18,r2,r18
   4c8b4:	003ec506 	br	4c3cc <__muldf3+0x154>
   4c8b8:	10c003cc 	andi	r3,r2,15
   4c8bc:	18c00118 	cmpnei	r3,r3,4
   4c8c0:	0021883a 	mov	r16,zero
   4c8c4:	183fb81e 	bne	r3,zero,4c7a8 <__muldf3+0x530>
   4c8c8:	8006927a 	slli	r3,r16,9
   4c8cc:	8024977a 	slli	r18,r16,29
   4c8d0:	1820d33a 	srli	r16,r3,12
   4c8d4:	003ff406 	br	4c8a8 <__muldf3+0x630>
   4c8d8:	00800434 	movhi	r2,16
   4c8dc:	84000234 	orhi	r16,r16,8
   4c8e0:	10bfffc4 	addi	r2,r2,-1
   4c8e4:	80a0703a 	and	r16,r16,r2
   4c8e8:	003f9a06 	br	4c754 <__muldf3+0x4dc>

0004c8ec <__subdf3>:
   4c8ec:	00800434 	movhi	r2,16
   4c8f0:	3810d53a 	srli	r8,r7,20
   4c8f4:	10bfffc4 	addi	r2,r2,-1
   4c8f8:	2806d53a 	srli	r3,r5,20
   4c8fc:	2892703a 	and	r9,r5,r2
   4c900:	3884703a 	and	r2,r7,r2
   4c904:	280ad7fa 	srli	r5,r5,31
   4c908:	481290fa 	slli	r9,r9,3
   4c90c:	2018d77a 	srli	r12,r4,29
   4c910:	100490fa 	slli	r2,r2,3
   4c914:	3016d77a 	srli	r11,r6,29
   4c918:	defffb04 	addi	sp,sp,-20
   4c91c:	4201ffcc 	andi	r8,r8,2047
   4c920:	dc800215 	stw	r18,8(sp)
   4c924:	dc400115 	stw	r17,4(sp)
   4c928:	1c81ffcc 	andi	r18,r3,2047
   4c92c:	dfc00415 	stw	ra,16(sp)
   4c930:	dcc00315 	stw	r19,12(sp)
   4c934:	dc000015 	stw	r16,0(sp)
   4c938:	4281ffd8 	cmpnei	r10,r8,2047
   4c93c:	2823883a 	mov	r17,r5
   4c940:	201c90fa 	slli	r14,r4,3
   4c944:	380ed7fa 	srli	r7,r7,31
   4c948:	301a90fa 	slli	r13,r6,3
   4c94c:	29403fcc 	andi	r5,r5,255
   4c950:	6252b03a 	or	r9,r12,r9
   4c954:	589eb03a 	or	r15,r11,r2
   4c958:	9207c83a 	sub	r3,r18,r8
   4c95c:	50006826 	beq	r10,zero,4cb00 <__subdf3+0x214>
   4c960:	3ac0005c 	xori	r11,r7,1
   4c964:	2ac07326 	beq	r5,r11,4cb34 <__subdf3+0x248>
   4c968:	00c0590e 	bge	zero,r3,4cad0 <__subdf3+0x1e4>
   4c96c:	4000691e 	bne	r8,zero,4cb14 <__subdf3+0x228>
   4c970:	7b44b03a 	or	r2,r15,r13
   4c974:	1000fb26 	beq	r2,zero,4cd64 <__subdf3+0x478>
   4c978:	18bfffc4 	addi	r2,r3,-1
   4c97c:	10019126 	beq	r2,zero,4cfc4 <__subdf3+0x6d8>
   4c980:	18c1ffd8 	cmpnei	r3,r3,2047
   4c984:	1800c326 	beq	r3,zero,4cc94 <__subdf3+0x3a8>
   4c988:	1007883a 	mov	r3,r2
   4c98c:	18800e48 	cmpgei	r2,r3,57
   4c990:	1000651e 	bne	r2,zero,4cb28 <__subdf3+0x23c>
   4c994:	18800808 	cmpgei	r2,r3,32
   4c998:	1001331e 	bne	r2,zero,4ce68 <__subdf3+0x57c>
   4c99c:	00800804 	movi	r2,32
   4c9a0:	10c5c83a 	sub	r2,r2,r3
   4c9a4:	78a0983a 	sll	r16,r15,r2
   4c9a8:	68c8d83a 	srl	r4,r13,r3
   4c9ac:	689a983a 	sll	r13,r13,r2
   4c9b0:	78c4d83a 	srl	r2,r15,r3
   4c9b4:	8120b03a 	or	r16,r16,r4
   4c9b8:	681ac03a 	cmpne	r13,r13,zero
   4c9bc:	8360b03a 	or	r16,r16,r13
   4c9c0:	4893c83a 	sub	r9,r9,r2
   4c9c4:	7421c83a 	sub	r16,r14,r16
   4c9c8:	7409803a 	cmpltu	r4,r14,r16
   4c9cc:	4909c83a 	sub	r4,r9,r4
   4c9d0:	2080202c 	andhi	r2,r4,128
   4c9d4:	10009326 	beq	r2,zero,4cc24 <__subdf3+0x338>
   4c9d8:	04c02034 	movhi	r19,128
   4c9dc:	9cffffc4 	addi	r19,r19,-1
   4c9e0:	24e6703a 	and	r19,r4,r19
   4c9e4:	9800b926 	beq	r19,zero,4cccc <__subdf3+0x3e0>
   4c9e8:	9809883a 	mov	r4,r19
   4c9ec:	0040e5c0 	call	40e5c <__clzsi2>
   4c9f0:	10fffe04 	addi	r3,r2,-8
   4c9f4:	01000804 	movi	r4,32
   4c9f8:	20c9c83a 	sub	r4,r4,r3
   4c9fc:	8108d83a 	srl	r4,r16,r4
   4ca00:	98e6983a 	sll	r19,r19,r3
   4ca04:	80e0983a 	sll	r16,r16,r3
   4ca08:	24c8b03a 	or	r4,r4,r19
   4ca0c:	1c80b816 	blt	r3,r18,4ccf0 <__subdf3+0x404>
   4ca10:	1c87c83a 	sub	r3,r3,r18
   4ca14:	19400044 	addi	r5,r3,1
   4ca18:	28800808 	cmpgei	r2,r5,32
   4ca1c:	1000751e 	bne	r2,zero,4cbf4 <__subdf3+0x308>
   4ca20:	00800804 	movi	r2,32
   4ca24:	1145c83a 	sub	r2,r2,r5
   4ca28:	8146d83a 	srl	r3,r16,r5
   4ca2c:	80a0983a 	sll	r16,r16,r2
   4ca30:	2084983a 	sll	r2,r4,r2
   4ca34:	2148d83a 	srl	r4,r4,r5
   4ca38:	8020c03a 	cmpne	r16,r16,zero
   4ca3c:	10c4b03a 	or	r2,r2,r3
   4ca40:	1420b03a 	or	r16,r2,r16
   4ca44:	0025883a 	mov	r18,zero
   4ca48:	808001cc 	andi	r2,r16,7
   4ca4c:	10000726 	beq	r2,zero,4ca6c <__subdf3+0x180>
   4ca50:	808003cc 	andi	r2,r16,15
   4ca54:	10800120 	cmpeqi	r2,r2,4
   4ca58:	1000041e 	bne	r2,zero,4ca6c <__subdf3+0x180>
   4ca5c:	80800104 	addi	r2,r16,4
   4ca60:	1421803a 	cmpltu	r16,r2,r16
   4ca64:	2409883a 	add	r4,r4,r16
   4ca68:	1021883a 	mov	r16,r2
   4ca6c:	2080202c 	andhi	r2,r4,128
   4ca70:	10006e26 	beq	r2,zero,4cc2c <__subdf3+0x340>
   4ca74:	90c00044 	addi	r3,r18,1
   4ca78:	1881ffe0 	cmpeqi	r2,r3,2047
   4ca7c:	18c1ffcc 	andi	r3,r3,2047
   4ca80:	1000801e 	bne	r2,zero,4cc84 <__subdf3+0x398>
   4ca84:	00bfe034 	movhi	r2,65408
   4ca88:	10bfffc4 	addi	r2,r2,-1
   4ca8c:	2088703a 	and	r4,r4,r2
   4ca90:	2004977a 	slli	r2,r4,29
   4ca94:	2008927a 	slli	r4,r4,9
   4ca98:	8020d0fa 	srli	r16,r16,3
   4ca9c:	2008d33a 	srli	r4,r4,12
   4caa0:	1404b03a 	or	r2,r2,r16
   4caa4:	1806953a 	slli	r3,r3,20
   4caa8:	882297fa 	slli	r17,r17,31
   4caac:	1906b03a 	or	r3,r3,r4
   4cab0:	1c46b03a 	or	r3,r3,r17
   4cab4:	dfc00417 	ldw	ra,16(sp)
   4cab8:	dcc00317 	ldw	r19,12(sp)
   4cabc:	dc800217 	ldw	r18,8(sp)
   4cac0:	dc400117 	ldw	r17,4(sp)
   4cac4:	dc000017 	ldw	r16,0(sp)
   4cac8:	dec00504 	addi	sp,sp,20
   4cacc:	f800283a 	ret
   4cad0:	18002c26 	beq	r3,zero,4cb84 <__subdf3+0x298>
   4cad4:	4487c83a 	sub	r3,r8,r18
   4cad8:	5823883a 	mov	r17,r11
   4cadc:	9000bb1e 	bne	r18,zero,4cdcc <__subdf3+0x4e0>
   4cae0:	4b84b03a 	or	r2,r9,r14
   4cae4:	10011726 	beq	r2,zero,4cf44 <__subdf3+0x658>
   4cae8:	18bfffc4 	addi	r2,r3,-1
   4caec:	10016326 	beq	r2,zero,4d07c <__subdf3+0x790>
   4caf0:	18c1ffd8 	cmpnei	r3,r3,2047
   4caf4:	18012c26 	beq	r3,zero,4cfa8 <__subdf3+0x6bc>
   4caf8:	1007883a 	mov	r3,r2
   4cafc:	0000b506 	br	4cdd4 <__subdf3+0x4e8>
   4cb00:	7b44b03a 	or	r2,r15,r13
   4cb04:	103f9626 	beq	r2,zero,4c960 <__subdf3+0x74>
   4cb08:	3ac03fcc 	andi	r11,r7,255
   4cb0c:	29c07d26 	beq	r5,r7,4cd04 <__subdf3+0x418>
   4cb10:	00ffef0e 	bge	zero,r3,4cad0 <__subdf3+0x1e4>
   4cb14:	9081ffd8 	cmpnei	r2,r18,2047
   4cb18:	10005e26 	beq	r2,zero,4cc94 <__subdf3+0x3a8>
   4cb1c:	18800e48 	cmpgei	r2,r3,57
   4cb20:	7bc02034 	orhi	r15,r15,128
   4cb24:	103f9b26 	beq	r2,zero,4c994 <__subdf3+0xa8>
   4cb28:	7b60b03a 	or	r16,r15,r13
   4cb2c:	8020c03a 	cmpne	r16,r16,zero
   4cb30:	003fa406 	br	4c9c4 <__subdf3+0xd8>
   4cb34:	00c0730e 	bge	zero,r3,4cd04 <__subdf3+0x418>
   4cb38:	40002626 	beq	r8,zero,4cbd4 <__subdf3+0x2e8>
   4cb3c:	9081ffd8 	cmpnei	r2,r18,2047
   4cb40:	10005426 	beq	r2,zero,4cc94 <__subdf3+0x3a8>
   4cb44:	7bc02034 	orhi	r15,r15,128
   4cb48:	18800e48 	cmpgei	r2,r3,57
   4cb4c:	1000431e 	bne	r2,zero,4cc5c <__subdf3+0x370>
   4cb50:	18800808 	cmpgei	r2,r3,32
   4cb54:	1000de26 	beq	r2,zero,4ced0 <__subdf3+0x5e4>
   4cb58:	1c3ff804 	addi	r16,r3,-32
   4cb5c:	18800820 	cmpeqi	r2,r3,32
   4cb60:	7c0ad83a 	srl	r5,r15,r16
   4cb64:	1000041e 	bne	r2,zero,4cb78 <__subdf3+0x28c>
   4cb68:	00801004 	movi	r2,64
   4cb6c:	10c5c83a 	sub	r2,r2,r3
   4cb70:	7884983a 	sll	r2,r15,r2
   4cb74:	689ab03a 	or	r13,r13,r2
   4cb78:	6820c03a 	cmpne	r16,r13,zero
   4cb7c:	8160b03a 	or	r16,r16,r5
   4cb80:	00003806 	br	4cc64 <__subdf3+0x378>
   4cb84:	90800044 	addi	r2,r18,1
   4cb88:	1081ff8c 	andi	r2,r2,2046
   4cb8c:	1000a01e 	bne	r2,zero,4ce10 <__subdf3+0x524>
   4cb90:	4b8ab03a 	or	r5,r9,r14
   4cb94:	7b44b03a 	or	r2,r15,r13
   4cb98:	9000f11e 	bne	r18,zero,4cf60 <__subdf3+0x674>
   4cb9c:	28012e26 	beq	r5,zero,4d058 <__subdf3+0x76c>
   4cba0:	10010e26 	beq	r2,zero,4cfdc <__subdf3+0x6f0>
   4cba4:	7361c83a 	sub	r16,r14,r13
   4cba8:	7405803a 	cmpltu	r2,r14,r16
   4cbac:	4bc9c83a 	sub	r4,r9,r15
   4cbb0:	2089c83a 	sub	r4,r4,r2
   4cbb4:	2080202c 	andhi	r2,r4,128
   4cbb8:	10016d26 	beq	r2,zero,4d170 <__subdf3+0x884>
   4cbbc:	6ba1c83a 	sub	r16,r13,r14
   4cbc0:	7a49c83a 	sub	r4,r15,r9
   4cbc4:	6c1b803a 	cmpltu	r13,r13,r16
   4cbc8:	2349c83a 	sub	r4,r4,r13
   4cbcc:	5823883a 	mov	r17,r11
   4cbd0:	003f9d06 	br	4ca48 <__subdf3+0x15c>
   4cbd4:	7b44b03a 	or	r2,r15,r13
   4cbd8:	10006226 	beq	r2,zero,4cd64 <__subdf3+0x478>
   4cbdc:	18bfffc4 	addi	r2,r3,-1
   4cbe0:	1000e926 	beq	r2,zero,4cf88 <__subdf3+0x69c>
   4cbe4:	18c1ffd8 	cmpnei	r3,r3,2047
   4cbe8:	18012a26 	beq	r3,zero,4d094 <__subdf3+0x7a8>
   4cbec:	1007883a 	mov	r3,r2
   4cbf0:	003fd506 	br	4cb48 <__subdf3+0x25c>
   4cbf4:	18fff844 	addi	r3,r3,-31
   4cbf8:	28800820 	cmpeqi	r2,r5,32
   4cbfc:	20c6d83a 	srl	r3,r4,r3
   4cc00:	1000041e 	bne	r2,zero,4cc14 <__subdf3+0x328>
   4cc04:	00801004 	movi	r2,64
   4cc08:	114bc83a 	sub	r5,r2,r5
   4cc0c:	2148983a 	sll	r4,r4,r5
   4cc10:	8120b03a 	or	r16,r16,r4
   4cc14:	8020c03a 	cmpne	r16,r16,zero
   4cc18:	80e0b03a 	or	r16,r16,r3
   4cc1c:	0009883a 	mov	r4,zero
   4cc20:	0025883a 	mov	r18,zero
   4cc24:	808001cc 	andi	r2,r16,7
   4cc28:	103f891e 	bne	r2,zero,4ca50 <__subdf3+0x164>
   4cc2c:	8020d0fa 	srli	r16,r16,3
   4cc30:	2004977a 	slli	r2,r4,29
   4cc34:	2012d0fa 	srli	r9,r4,3
   4cc38:	9007883a 	mov	r3,r18
   4cc3c:	8084b03a 	or	r2,r16,r2
   4cc40:	1901ffe0 	cmpeqi	r4,r3,2047
   4cc44:	2000191e 	bne	r4,zero,4ccac <__subdf3+0x3c0>
   4cc48:	01000434 	movhi	r4,16
   4cc4c:	213fffc4 	addi	r4,r4,-1
   4cc50:	4908703a 	and	r4,r9,r4
   4cc54:	18c1ffcc 	andi	r3,r3,2047
   4cc58:	003f9206 	br	4caa4 <__subdf3+0x1b8>
   4cc5c:	7b60b03a 	or	r16,r15,r13
   4cc60:	8020c03a 	cmpne	r16,r16,zero
   4cc64:	83a1883a 	add	r16,r16,r14
   4cc68:	8389803a 	cmpltu	r4,r16,r14
   4cc6c:	2249883a 	add	r4,r4,r9
   4cc70:	2080202c 	andhi	r2,r4,128
   4cc74:	103feb26 	beq	r2,zero,4cc24 <__subdf3+0x338>
   4cc78:	94800044 	addi	r18,r18,1
   4cc7c:	9081ffe0 	cmpeqi	r2,r18,2047
   4cc80:	10006f26 	beq	r2,zero,4ce40 <__subdf3+0x554>
   4cc84:	00c1ffc4 	movi	r3,2047
   4cc88:	0009883a 	mov	r4,zero
   4cc8c:	0005883a 	mov	r2,zero
   4cc90:	003f8406 	br	4caa4 <__subdf3+0x1b8>
   4cc94:	4806977a 	slli	r3,r9,29
   4cc98:	00880034 	movhi	r2,8192
   4cc9c:	10bfffc4 	addi	r2,r2,-1
   4cca0:	4812d0fa 	srli	r9,r9,3
   4cca4:	2088703a 	and	r4,r4,r2
   4cca8:	20c4b03a 	or	r2,r4,r3
   4ccac:	4886b03a 	or	r3,r9,r2
   4ccb0:	18013726 	beq	r3,zero,4d190 <__subdf3+0x8a4>
   4ccb4:	00c00434 	movhi	r3,16
   4ccb8:	18ffffc4 	addi	r3,r3,-1
   4ccbc:	49000234 	orhi	r4,r9,8
   4ccc0:	20c8703a 	and	r4,r4,r3
   4ccc4:	00c1ffc4 	movi	r3,2047
   4ccc8:	003f7606 	br	4caa4 <__subdf3+0x1b8>
   4cccc:	8009883a 	mov	r4,r16
   4ccd0:	0040e5c0 	call	40e5c <__clzsi2>
   4ccd4:	10c00604 	addi	r3,r2,24
   4ccd8:	19000808 	cmpgei	r4,r3,32
   4ccdc:	203f4526 	beq	r4,zero,4c9f4 <__subdf3+0x108>
   4cce0:	113ffe04 	addi	r4,r2,-8
   4cce4:	8108983a 	sll	r4,r16,r4
   4cce8:	0021883a 	mov	r16,zero
   4ccec:	1cbf480e 	bge	r3,r18,4ca10 <__subdf3+0x124>
   4ccf0:	00bfe034 	movhi	r2,65408
   4ccf4:	10bfffc4 	addi	r2,r2,-1
   4ccf8:	90e5c83a 	sub	r18,r18,r3
   4ccfc:	2088703a 	and	r4,r4,r2
   4cd00:	003f5106 	br	4ca48 <__subdf3+0x15c>
   4cd04:	18001e26 	beq	r3,zero,4cd80 <__subdf3+0x494>
   4cd08:	4487c83a 	sub	r3,r8,r18
   4cd0c:	90006826 	beq	r18,zero,4ceb0 <__subdf3+0x5c4>
   4cd10:	5000a526 	beq	r10,zero,4cfa8 <__subdf3+0x6bc>
   4cd14:	4a402034 	orhi	r9,r9,128
   4cd18:	18800e48 	cmpgei	r2,r3,57
   4cd1c:	1000b61e 	bne	r2,zero,4cff8 <__subdf3+0x70c>
   4cd20:	18800808 	cmpgei	r2,r3,32
   4cd24:	1001021e 	bne	r2,zero,4d130 <__subdf3+0x844>
   4cd28:	00800804 	movi	r2,32
   4cd2c:	10c5c83a 	sub	r2,r2,r3
   4cd30:	48a0983a 	sll	r16,r9,r2
   4cd34:	70c8d83a 	srl	r4,r14,r3
   4cd38:	7084983a 	sll	r2,r14,r2
   4cd3c:	48d2d83a 	srl	r9,r9,r3
   4cd40:	8120b03a 	or	r16,r16,r4
   4cd44:	1004c03a 	cmpne	r2,r2,zero
   4cd48:	80a0b03a 	or	r16,r16,r2
   4cd4c:	7a5f883a 	add	r15,r15,r9
   4cd50:	8361883a 	add	r16,r16,r13
   4cd54:	8349803a 	cmpltu	r4,r16,r13
   4cd58:	23c9883a 	add	r4,r4,r15
   4cd5c:	4025883a 	mov	r18,r8
   4cd60:	003fc306 	br	4cc70 <__subdf3+0x384>
   4cd64:	480a977a 	slli	r5,r9,29
   4cd68:	00880034 	movhi	r2,8192
   4cd6c:	10bfffc4 	addi	r2,r2,-1
   4cd70:	2088703a 	and	r4,r4,r2
   4cd74:	4812d0fa 	srli	r9,r9,3
   4cd78:	2144b03a 	or	r2,r4,r5
   4cd7c:	003fb006 	br	4cc40 <__subdf3+0x354>
   4cd80:	90800044 	addi	r2,r18,1
   4cd84:	1141ff8c 	andi	r5,r2,2046
   4cd88:	28005c1e 	bne	r5,zero,4cefc <__subdf3+0x610>
   4cd8c:	4b84b03a 	or	r2,r9,r14
   4cd90:	9000a71e 	bne	r18,zero,4d030 <__subdf3+0x744>
   4cd94:	1000df26 	beq	r2,zero,4d114 <__subdf3+0x828>
   4cd98:	7b44b03a 	or	r2,r15,r13
   4cd9c:	10008f26 	beq	r2,zero,4cfdc <__subdf3+0x6f0>
   4cda0:	7361883a 	add	r16,r14,r13
   4cda4:	4bc9883a 	add	r4,r9,r15
   4cda8:	839d803a 	cmpltu	r14,r16,r14
   4cdac:	2389883a 	add	r4,r4,r14
   4cdb0:	2080202c 	andhi	r2,r4,128
   4cdb4:	103f9b26 	beq	r2,zero,4cc24 <__subdf3+0x338>
   4cdb8:	00bfe034 	movhi	r2,65408
   4cdbc:	10bfffc4 	addi	r2,r2,-1
   4cdc0:	2088703a 	and	r4,r4,r2
   4cdc4:	04800044 	movi	r18,1
   4cdc8:	003f9606 	br	4cc24 <__subdf3+0x338>
   4cdcc:	50007626 	beq	r10,zero,4cfa8 <__subdf3+0x6bc>
   4cdd0:	4a402034 	orhi	r9,r9,128
   4cdd4:	18800e48 	cmpgei	r2,r3,57
   4cdd8:	10002e1e 	bne	r2,zero,4ce94 <__subdf3+0x5a8>
   4cddc:	18800808 	cmpgei	r2,r3,32
   4cde0:	1000881e 	bne	r2,zero,4d004 <__subdf3+0x718>
   4cde4:	00800804 	movi	r2,32
   4cde8:	10c5c83a 	sub	r2,r2,r3
   4cdec:	48a0983a 	sll	r16,r9,r2
   4cdf0:	70c8d83a 	srl	r4,r14,r3
   4cdf4:	709c983a 	sll	r14,r14,r2
   4cdf8:	48d2d83a 	srl	r9,r9,r3
   4cdfc:	8120b03a 	or	r16,r16,r4
   4ce00:	701cc03a 	cmpne	r14,r14,zero
   4ce04:	83a0b03a 	or	r16,r16,r14
   4ce08:	7a5fc83a 	sub	r15,r15,r9
   4ce0c:	00002306 	br	4ce9c <__subdf3+0x5b0>
   4ce10:	7361c83a 	sub	r16,r14,r13
   4ce14:	4be7c83a 	sub	r19,r9,r15
   4ce18:	7409803a 	cmpltu	r4,r14,r16
   4ce1c:	9927c83a 	sub	r19,r19,r4
   4ce20:	9880202c 	andhi	r2,r19,128
   4ce24:	1000411e 	bne	r2,zero,4cf2c <__subdf3+0x640>
   4ce28:	84c4b03a 	or	r2,r16,r19
   4ce2c:	103eed1e 	bne	r2,zero,4c9e4 <__subdf3+0xf8>
   4ce30:	0013883a 	mov	r9,zero
   4ce34:	0023883a 	mov	r17,zero
   4ce38:	003f8306 	br	4cc48 <__subdf3+0x35c>
   4ce3c:	04800084 	movi	r18,2
   4ce40:	00bfe034 	movhi	r2,65408
   4ce44:	10bfffc4 	addi	r2,r2,-1
   4ce48:	8006d07a 	srli	r3,r16,1
   4ce4c:	2088703a 	and	r4,r4,r2
   4ce50:	200497fa 	slli	r2,r4,31
   4ce54:	8400004c 	andi	r16,r16,1
   4ce58:	1c20b03a 	or	r16,r3,r16
   4ce5c:	2008d07a 	srli	r4,r4,1
   4ce60:	1420b03a 	or	r16,r2,r16
   4ce64:	003ef806 	br	4ca48 <__subdf3+0x15c>
   4ce68:	1c3ff804 	addi	r16,r3,-32
   4ce6c:	18800820 	cmpeqi	r2,r3,32
   4ce70:	7c0ad83a 	srl	r5,r15,r16
   4ce74:	1000041e 	bne	r2,zero,4ce88 <__subdf3+0x59c>
   4ce78:	00801004 	movi	r2,64
   4ce7c:	10c5c83a 	sub	r2,r2,r3
   4ce80:	7884983a 	sll	r2,r15,r2
   4ce84:	689ab03a 	or	r13,r13,r2
   4ce88:	6820c03a 	cmpne	r16,r13,zero
   4ce8c:	8160b03a 	or	r16,r16,r5
   4ce90:	003ecc06 	br	4c9c4 <__subdf3+0xd8>
   4ce94:	4b92b03a 	or	r9,r9,r14
   4ce98:	4820c03a 	cmpne	r16,r9,zero
   4ce9c:	6c21c83a 	sub	r16,r13,r16
   4cea0:	6c09803a 	cmpltu	r4,r13,r16
   4cea4:	7909c83a 	sub	r4,r15,r4
   4cea8:	4025883a 	mov	r18,r8
   4ceac:	003ec806 	br	4c9d0 <__subdf3+0xe4>
   4ceb0:	4b84b03a 	or	r2,r9,r14
   4ceb4:	10007e26 	beq	r2,zero,4d0b0 <__subdf3+0x7c4>
   4ceb8:	18bfffc4 	addi	r2,r3,-1
   4cebc:	1000a726 	beq	r2,zero,4d15c <__subdf3+0x870>
   4cec0:	18c1ffd8 	cmpnei	r3,r3,2047
   4cec4:	18003826 	beq	r3,zero,4cfa8 <__subdf3+0x6bc>
   4cec8:	1007883a 	mov	r3,r2
   4cecc:	003f9206 	br	4cd18 <__subdf3+0x42c>
   4ced0:	00800804 	movi	r2,32
   4ced4:	10c5c83a 	sub	r2,r2,r3
   4ced8:	78a0983a 	sll	r16,r15,r2
   4cedc:	68c8d83a 	srl	r4,r13,r3
   4cee0:	689a983a 	sll	r13,r13,r2
   4cee4:	78c4d83a 	srl	r2,r15,r3
   4cee8:	8120b03a 	or	r16,r16,r4
   4ceec:	681ac03a 	cmpne	r13,r13,zero
   4cef0:	8360b03a 	or	r16,r16,r13
   4cef4:	4893883a 	add	r9,r9,r2
   4cef8:	003f5a06 	br	4cc64 <__subdf3+0x378>
   4cefc:	10c1ffe0 	cmpeqi	r3,r2,2047
   4cf00:	183f601e 	bne	r3,zero,4cc84 <__subdf3+0x398>
   4cf04:	735b883a 	add	r13,r14,r13
   4cf08:	6b9d803a 	cmpltu	r14,r13,r14
   4cf0c:	4bc9883a 	add	r4,r9,r15
   4cf10:	2389883a 	add	r4,r4,r14
   4cf14:	202097fa 	slli	r16,r4,31
   4cf18:	681ad07a 	srli	r13,r13,1
   4cf1c:	2008d07a 	srli	r4,r4,1
   4cf20:	1025883a 	mov	r18,r2
   4cf24:	8360b03a 	or	r16,r16,r13
   4cf28:	003f3e06 	br	4cc24 <__subdf3+0x338>
   4cf2c:	6ba1c83a 	sub	r16,r13,r14
   4cf30:	7a49c83a 	sub	r4,r15,r9
   4cf34:	6c1b803a 	cmpltu	r13,r13,r16
   4cf38:	2367c83a 	sub	r19,r4,r13
   4cf3c:	5823883a 	mov	r17,r11
   4cf40:	003ea806 	br	4c9e4 <__subdf3+0xf8>
   4cf44:	7808977a 	slli	r4,r15,29
   4cf48:	00880034 	movhi	r2,8192
   4cf4c:	10bfffc4 	addi	r2,r2,-1
   4cf50:	308c703a 	and	r6,r6,r2
   4cf54:	7812d0fa 	srli	r9,r15,3
   4cf58:	3104b03a 	or	r2,r6,r4
   4cf5c:	003f3806 	br	4cc40 <__subdf3+0x354>
   4cf60:	28005a1e 	bne	r5,zero,4d0cc <__subdf3+0x7e0>
   4cf64:	10008526 	beq	r2,zero,4d17c <__subdf3+0x890>
   4cf68:	7806977a 	slli	r3,r15,29
   4cf6c:	00880034 	movhi	r2,8192
   4cf70:	10bfffc4 	addi	r2,r2,-1
   4cf74:	3084703a 	and	r2,r6,r2
   4cf78:	7812d0fa 	srli	r9,r15,3
   4cf7c:	10c4b03a 	or	r2,r2,r3
   4cf80:	5823883a 	mov	r17,r11
   4cf84:	003f4906 	br	4ccac <__subdf3+0x3c0>
   4cf88:	7361883a 	add	r16,r14,r13
   4cf8c:	4bc9883a 	add	r4,r9,r15
   4cf90:	839d803a 	cmpltu	r14,r16,r14
   4cf94:	2389883a 	add	r4,r4,r14
   4cf98:	2080202c 	andhi	r2,r4,128
   4cf9c:	103fa71e 	bne	r2,zero,4ce3c <__subdf3+0x550>
   4cfa0:	04800044 	movi	r18,1
   4cfa4:	003f1f06 	br	4cc24 <__subdf3+0x338>
   4cfa8:	7806977a 	slli	r3,r15,29
   4cfac:	00880034 	movhi	r2,8192
   4cfb0:	10bfffc4 	addi	r2,r2,-1
   4cfb4:	3084703a 	and	r2,r6,r2
   4cfb8:	7812d0fa 	srli	r9,r15,3
   4cfbc:	10c4b03a 	or	r2,r2,r3
   4cfc0:	003f3a06 	br	4ccac <__subdf3+0x3c0>
   4cfc4:	7361c83a 	sub	r16,r14,r13
   4cfc8:	4bc9c83a 	sub	r4,r9,r15
   4cfcc:	741d803a 	cmpltu	r14,r14,r16
   4cfd0:	2389c83a 	sub	r4,r4,r14
   4cfd4:	04800044 	movi	r18,1
   4cfd8:	003e7d06 	br	4c9d0 <__subdf3+0xe4>
   4cfdc:	480a977a 	slli	r5,r9,29
   4cfe0:	00880034 	movhi	r2,8192
   4cfe4:	10bfffc4 	addi	r2,r2,-1
   4cfe8:	2084703a 	and	r2,r4,r2
   4cfec:	4812d0fa 	srli	r9,r9,3
   4cff0:	1144b03a 	or	r2,r2,r5
   4cff4:	003f1406 	br	4cc48 <__subdf3+0x35c>
   4cff8:	4b92b03a 	or	r9,r9,r14
   4cffc:	4820c03a 	cmpne	r16,r9,zero
   4d000:	003f5306 	br	4cd50 <__subdf3+0x464>
   4d004:	1c3ff804 	addi	r16,r3,-32
   4d008:	19000820 	cmpeqi	r4,r3,32
   4d00c:	4c04d83a 	srl	r2,r9,r16
   4d010:	2000041e 	bne	r4,zero,4d024 <__subdf3+0x738>
   4d014:	01001004 	movi	r4,64
   4d018:	20c7c83a 	sub	r3,r4,r3
   4d01c:	48d2983a 	sll	r9,r9,r3
   4d020:	725cb03a 	or	r14,r14,r9
   4d024:	7020c03a 	cmpne	r16,r14,zero
   4d028:	80a0b03a 	or	r16,r16,r2
   4d02c:	003f9b06 	br	4ce9c <__subdf3+0x5b0>
   4d030:	103fdd26 	beq	r2,zero,4cfa8 <__subdf3+0x6bc>
   4d034:	7b5ab03a 	or	r13,r15,r13
   4d038:	480a977a 	slli	r5,r9,29
   4d03c:	4812d0fa 	srli	r9,r9,3
   4d040:	6800251e 	bne	r13,zero,4d0d8 <__subdf3+0x7ec>
   4d044:	00880034 	movhi	r2,8192
   4d048:	10bfffc4 	addi	r2,r2,-1
   4d04c:	2084703a 	and	r2,r4,r2
   4d050:	1144b03a 	or	r2,r2,r5
   4d054:	003f1506 	br	4ccac <__subdf3+0x3c0>
   4d058:	103f7526 	beq	r2,zero,4ce30 <__subdf3+0x544>
   4d05c:	7808977a 	slli	r4,r15,29
   4d060:	00880034 	movhi	r2,8192
   4d064:	10bfffc4 	addi	r2,r2,-1
   4d068:	3084703a 	and	r2,r6,r2
   4d06c:	7812d0fa 	srli	r9,r15,3
   4d070:	1104b03a 	or	r2,r2,r4
   4d074:	5823883a 	mov	r17,r11
   4d078:	003ef306 	br	4cc48 <__subdf3+0x35c>
   4d07c:	6ba1c83a 	sub	r16,r13,r14
   4d080:	7a49c83a 	sub	r4,r15,r9
   4d084:	6c1b803a 	cmpltu	r13,r13,r16
   4d088:	2349c83a 	sub	r4,r4,r13
   4d08c:	04800044 	movi	r18,1
   4d090:	003e4f06 	br	4c9d0 <__subdf3+0xe4>
   4d094:	4806977a 	slli	r3,r9,29
   4d098:	00880034 	movhi	r2,8192
   4d09c:	10bfffc4 	addi	r2,r2,-1
   4d0a0:	2084703a 	and	r2,r4,r2
   4d0a4:	4812d0fa 	srli	r9,r9,3
   4d0a8:	10c4b03a 	or	r2,r2,r3
   4d0ac:	003eff06 	br	4ccac <__subdf3+0x3c0>
   4d0b0:	7808977a 	slli	r4,r15,29
   4d0b4:	00880034 	movhi	r2,8192
   4d0b8:	10bfffc4 	addi	r2,r2,-1
   4d0bc:	3084703a 	and	r2,r6,r2
   4d0c0:	7812d0fa 	srli	r9,r15,3
   4d0c4:	1104b03a 	or	r2,r2,r4
   4d0c8:	003edd06 	br	4cc40 <__subdf3+0x354>
   4d0cc:	480a977a 	slli	r5,r9,29
   4d0d0:	4812d0fa 	srli	r9,r9,3
   4d0d4:	103fdb26 	beq	r2,zero,4d044 <__subdf3+0x758>
   4d0d8:	00c80034 	movhi	r3,8192
   4d0dc:	18ffffc4 	addi	r3,r3,-1
   4d0e0:	20c4703a 	and	r2,r4,r3
   4d0e4:	4900022c 	andhi	r4,r9,8
   4d0e8:	1144b03a 	or	r2,r2,r5
   4d0ec:	203eef26 	beq	r4,zero,4ccac <__subdf3+0x3c0>
   4d0f0:	7808d0fa 	srli	r4,r15,3
   4d0f4:	2140022c 	andhi	r5,r4,8
   4d0f8:	283eec1e 	bne	r5,zero,4ccac <__subdf3+0x3c0>
   4d0fc:	7804977a 	slli	r2,r15,29
   4d100:	30cc703a 	and	r6,r6,r3
   4d104:	5823883a 	mov	r17,r11
   4d108:	3084b03a 	or	r2,r6,r2
   4d10c:	2013883a 	mov	r9,r4
   4d110:	003ee606 	br	4ccac <__subdf3+0x3c0>
   4d114:	7808977a 	slli	r4,r15,29
   4d118:	00880034 	movhi	r2,8192
   4d11c:	10bfffc4 	addi	r2,r2,-1
   4d120:	3084703a 	and	r2,r6,r2
   4d124:	7812d0fa 	srli	r9,r15,3
   4d128:	1104b03a 	or	r2,r2,r4
   4d12c:	003ec606 	br	4cc48 <__subdf3+0x35c>
   4d130:	18bff804 	addi	r2,r3,-32
   4d134:	19000820 	cmpeqi	r4,r3,32
   4d138:	4884d83a 	srl	r2,r9,r2
   4d13c:	2000041e 	bne	r4,zero,4d150 <__subdf3+0x864>
   4d140:	01001004 	movi	r4,64
   4d144:	20c7c83a 	sub	r3,r4,r3
   4d148:	48d2983a 	sll	r9,r9,r3
   4d14c:	725cb03a 	or	r14,r14,r9
   4d150:	7020c03a 	cmpne	r16,r14,zero
   4d154:	80a0b03a 	or	r16,r16,r2
   4d158:	003efd06 	br	4cd50 <__subdf3+0x464>
   4d15c:	7361883a 	add	r16,r14,r13
   4d160:	4bc9883a 	add	r4,r9,r15
   4d164:	835b803a 	cmpltu	r13,r16,r13
   4d168:	2349883a 	add	r4,r4,r13
   4d16c:	003f8a06 	br	4cf98 <__subdf3+0x6ac>
   4d170:	8104b03a 	or	r2,r16,r4
   4d174:	103f2e26 	beq	r2,zero,4ce30 <__subdf3+0x544>
   4d178:	003eaa06 	br	4cc24 <__subdf3+0x338>
   4d17c:	02400434 	movhi	r9,16
   4d180:	0023883a 	mov	r17,zero
   4d184:	00bfffc4 	movi	r2,-1
   4d188:	4a7fffc4 	addi	r9,r9,-1
   4d18c:	003ec906 	br	4ccb4 <__subdf3+0x3c8>
   4d190:	0005883a 	mov	r2,zero
   4d194:	00c1ffc4 	movi	r3,2047
   4d198:	0009883a 	mov	r4,zero
   4d19c:	003e4106 	br	4caa4 <__subdf3+0x1b8>

0004d1a0 <__unorddf2>:
   4d1a0:	2806d53a 	srli	r3,r5,20
   4d1a4:	3810d53a 	srli	r8,r7,20
   4d1a8:	02400434 	movhi	r9,16
   4d1ac:	18c1ffcc 	andi	r3,r3,2047
   4d1b0:	4a7fffc4 	addi	r9,r9,-1
   4d1b4:	18c1ffd8 	cmpnei	r3,r3,2047
   4d1b8:	2a4a703a 	and	r5,r5,r9
   4d1bc:	3a4e703a 	and	r7,r7,r9
   4d1c0:	4201ffcc 	andi	r8,r8,2047
   4d1c4:	18000426 	beq	r3,zero,4d1d8 <__unorddf2+0x38>
   4d1c8:	4201ffd8 	cmpnei	r8,r8,2047
   4d1cc:	40000626 	beq	r8,zero,4d1e8 <__unorddf2+0x48>
   4d1d0:	0005883a 	mov	r2,zero
   4d1d4:	f800283a 	ret
   4d1d8:	290ab03a 	or	r5,r5,r4
   4d1dc:	283ffa26 	beq	r5,zero,4d1c8 <__unorddf2+0x28>
   4d1e0:	00800044 	movi	r2,1
   4d1e4:	f800283a 	ret
   4d1e8:	398eb03a 	or	r7,r7,r6
   4d1ec:	3804c03a 	cmpne	r2,r7,zero
   4d1f0:	f800283a 	ret

0004d1f4 <__fixdfsi>:
   4d1f4:	2806d53a 	srli	r3,r5,20
   4d1f8:	01800434 	movhi	r6,16
   4d1fc:	31bfffc4 	addi	r6,r6,-1
   4d200:	18c1ffcc 	andi	r3,r3,2047
   4d204:	19c0ffd0 	cmplti	r7,r3,1023
   4d208:	2810d7fa 	srli	r8,r5,31
   4d20c:	298a703a 	and	r5,r5,r6
   4d210:	3800061e 	bne	r7,zero,4d22c <__fixdfsi+0x38>
   4d214:	18810790 	cmplti	r2,r3,1054
   4d218:	1000061e 	bne	r2,zero,4d234 <__fixdfsi+0x40>
   4d21c:	00a00034 	movhi	r2,32768
   4d220:	10bfffc4 	addi	r2,r2,-1
   4d224:	4085883a 	add	r2,r8,r2
   4d228:	f800283a 	ret
   4d22c:	0005883a 	mov	r2,zero
   4d230:	f800283a 	ret
   4d234:	01810cc4 	movi	r6,1075
   4d238:	30cdc83a 	sub	r6,r6,r3
   4d23c:	30800808 	cmpgei	r2,r6,32
   4d240:	29400434 	orhi	r5,r5,16
   4d244:	1000071e 	bne	r2,zero,4d264 <__fixdfsi+0x70>
   4d248:	18befb44 	addi	r2,r3,-1043
   4d24c:	2884983a 	sll	r2,r5,r2
   4d250:	2188d83a 	srl	r4,r4,r6
   4d254:	1104b03a 	or	r2,r2,r4
   4d258:	403ff526 	beq	r8,zero,4d230 <__fixdfsi+0x3c>
   4d25c:	0085c83a 	sub	r2,zero,r2
   4d260:	f800283a 	ret
   4d264:	008104c4 	movi	r2,1043
   4d268:	10c5c83a 	sub	r2,r2,r3
   4d26c:	2884d83a 	srl	r2,r5,r2
   4d270:	003ff906 	br	4d258 <__fixdfsi+0x64>

0004d274 <__floatsidf>:
   4d274:	defffd04 	addi	sp,sp,-12
   4d278:	dfc00215 	stw	ra,8(sp)
   4d27c:	dc400115 	stw	r17,4(sp)
   4d280:	dc000015 	stw	r16,0(sp)
   4d284:	20001326 	beq	r4,zero,4d2d4 <__floatsidf+0x60>
   4d288:	2022d7fa 	srli	r17,r4,31
   4d28c:	2021883a 	mov	r16,r4
   4d290:	20002416 	blt	r4,zero,4d324 <__floatsidf+0xb0>
   4d294:	8009883a 	mov	r4,r16
   4d298:	0040e5c0 	call	40e5c <__clzsi2>
   4d29c:	01010784 	movi	r4,1054
   4d2a0:	2089c83a 	sub	r4,r4,r2
   4d2a4:	114002c8 	cmpgei	r5,r2,11
   4d2a8:	20c1ffcc 	andi	r3,r4,2047
   4d2ac:	2800161e 	bne	r5,zero,4d308 <__floatsidf+0x94>
   4d2b0:	010002c4 	movi	r4,11
   4d2b4:	2089c83a 	sub	r4,r4,r2
   4d2b8:	810ad83a 	srl	r5,r16,r4
   4d2bc:	01000434 	movhi	r4,16
   4d2c0:	10800544 	addi	r2,r2,21
   4d2c4:	213fffc4 	addi	r4,r4,-1
   4d2c8:	8084983a 	sll	r2,r16,r2
   4d2cc:	290a703a 	and	r5,r5,r4
   4d2d0:	00000406 	br	4d2e4 <__floatsidf+0x70>
   4d2d4:	0023883a 	mov	r17,zero
   4d2d8:	0007883a 	mov	r3,zero
   4d2dc:	000b883a 	mov	r5,zero
   4d2e0:	0005883a 	mov	r2,zero
   4d2e4:	1808953a 	slli	r4,r3,20
   4d2e8:	880697fa 	slli	r3,r17,31
   4d2ec:	2148b03a 	or	r4,r4,r5
   4d2f0:	20c6b03a 	or	r3,r4,r3
   4d2f4:	dfc00217 	ldw	ra,8(sp)
   4d2f8:	dc400117 	ldw	r17,4(sp)
   4d2fc:	dc000017 	ldw	r16,0(sp)
   4d300:	dec00304 	addi	sp,sp,12
   4d304:	f800283a 	ret
   4d308:	10bffd44 	addi	r2,r2,-11
   4d30c:	808a983a 	sll	r5,r16,r2
   4d310:	00800434 	movhi	r2,16
   4d314:	10bfffc4 	addi	r2,r2,-1
   4d318:	288a703a 	and	r5,r5,r2
   4d31c:	0005883a 	mov	r2,zero
   4d320:	003ff006 	br	4d2e4 <__floatsidf+0x70>
   4d324:	0121c83a 	sub	r16,zero,r4
   4d328:	003fda06 	br	4d294 <__floatsidf+0x20>

0004d32c <__floatunsidf>:
   4d32c:	defffe04 	addi	sp,sp,-8
   4d330:	dc000015 	stw	r16,0(sp)
   4d334:	dfc00115 	stw	ra,4(sp)
   4d338:	2021883a 	mov	r16,r4
   4d33c:	20000f26 	beq	r4,zero,4d37c <__floatunsidf+0x50>
   4d340:	0040e5c0 	call	40e5c <__clzsi2>
   4d344:	00c10784 	movi	r3,1054
   4d348:	1887c83a 	sub	r3,r3,r2
   4d34c:	110002c8 	cmpgei	r4,r2,11
   4d350:	18c1ffcc 	andi	r3,r3,2047
   4d354:	2000121e 	bne	r4,zero,4d3a0 <__floatunsidf+0x74>
   4d358:	014002c4 	movi	r5,11
   4d35c:	288bc83a 	sub	r5,r5,r2
   4d360:	814ad83a 	srl	r5,r16,r5
   4d364:	01000434 	movhi	r4,16
   4d368:	10800544 	addi	r2,r2,21
   4d36c:	213fffc4 	addi	r4,r4,-1
   4d370:	80a0983a 	sll	r16,r16,r2
   4d374:	290a703a 	and	r5,r5,r4
   4d378:	00000206 	br	4d384 <__floatunsidf+0x58>
   4d37c:	0007883a 	mov	r3,zero
   4d380:	000b883a 	mov	r5,zero
   4d384:	1806953a 	slli	r3,r3,20
   4d388:	8005883a 	mov	r2,r16
   4d38c:	1946b03a 	or	r3,r3,r5
   4d390:	dfc00117 	ldw	ra,4(sp)
   4d394:	dc000017 	ldw	r16,0(sp)
   4d398:	dec00204 	addi	sp,sp,8
   4d39c:	f800283a 	ret
   4d3a0:	117ffd44 	addi	r5,r2,-11
   4d3a4:	814a983a 	sll	r5,r16,r5
   4d3a8:	00800434 	movhi	r2,16
   4d3ac:	10bfffc4 	addi	r2,r2,-1
   4d3b0:	288a703a 	and	r5,r5,r2
   4d3b4:	0021883a 	mov	r16,zero
   4d3b8:	003ff206 	br	4d384 <__floatunsidf+0x58>

0004d3bc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d3bc:	defffe04 	addi	sp,sp,-8
   4d3c0:	dfc00115 	stw	ra,4(sp)
   4d3c4:	df000015 	stw	fp,0(sp)
   4d3c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d3cc:	d0a00917 	ldw	r2,-32732(gp)
   4d3d0:	10000326 	beq	r2,zero,4d3e0 <alt_get_errno+0x24>
   4d3d4:	d0a00917 	ldw	r2,-32732(gp)
   4d3d8:	103ee83a 	callr	r2
   4d3dc:	00000106 	br	4d3e4 <alt_get_errno+0x28>
   4d3e0:	d0a70704 	addi	r2,gp,-25572
}
   4d3e4:	e037883a 	mov	sp,fp
   4d3e8:	dfc00117 	ldw	ra,4(sp)
   4d3ec:	df000017 	ldw	fp,0(sp)
   4d3f0:	dec00204 	addi	sp,sp,8
   4d3f4:	f800283a 	ret

0004d3f8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4d3f8:	defffb04 	addi	sp,sp,-20
   4d3fc:	dfc00415 	stw	ra,16(sp)
   4d400:	df000315 	stw	fp,12(sp)
   4d404:	df000304 	addi	fp,sp,12
   4d408:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4d40c:	e0bffd17 	ldw	r2,-12(fp)
   4d410:	10000616 	blt	r2,zero,4d42c <close+0x34>
   4d414:	e0bffd17 	ldw	r2,-12(fp)
   4d418:	10c00324 	muli	r3,r2,12
   4d41c:	00800174 	movhi	r2,5
   4d420:	10833404 	addi	r2,r2,3280
   4d424:	1885883a 	add	r2,r3,r2
   4d428:	00000106 	br	4d430 <close+0x38>
   4d42c:	0005883a 	mov	r2,zero
   4d430:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   4d434:	e0bfff17 	ldw	r2,-4(fp)
   4d438:	10001926 	beq	r2,zero,4d4a0 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4d43c:	e0bfff17 	ldw	r2,-4(fp)
   4d440:	10800017 	ldw	r2,0(r2)
   4d444:	10800417 	ldw	r2,16(r2)
   4d448:	10000626 	beq	r2,zero,4d464 <close+0x6c>
   4d44c:	e0bfff17 	ldw	r2,-4(fp)
   4d450:	10800017 	ldw	r2,0(r2)
   4d454:	10800417 	ldw	r2,16(r2)
   4d458:	e13fff17 	ldw	r4,-4(fp)
   4d45c:	103ee83a 	callr	r2
   4d460:	00000106 	br	4d468 <close+0x70>
   4d464:	0005883a 	mov	r2,zero
   4d468:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4d46c:	e13ffd17 	ldw	r4,-12(fp)
   4d470:	004dc780 	call	4dc78 <alt_release_fd>
    if (rval < 0)
   4d474:	e0bffe17 	ldw	r2,-8(fp)
   4d478:	1000070e 	bge	r2,zero,4d498 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   4d47c:	004d3bc0 	call	4d3bc <alt_get_errno>
   4d480:	1007883a 	mov	r3,r2
   4d484:	e0bffe17 	ldw	r2,-8(fp)
   4d488:	0085c83a 	sub	r2,zero,r2
   4d48c:	18800015 	stw	r2,0(r3)
      return -1;
   4d490:	00bfffc4 	movi	r2,-1
   4d494:	00000706 	br	4d4b4 <close+0xbc>
    }
    return 0;
   4d498:	0005883a 	mov	r2,zero
   4d49c:	00000506 	br	4d4b4 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d4a0:	004d3bc0 	call	4d3bc <alt_get_errno>
   4d4a4:	1007883a 	mov	r3,r2
   4d4a8:	00801444 	movi	r2,81
   4d4ac:	18800015 	stw	r2,0(r3)
    return -1;
   4d4b0:	00bfffc4 	movi	r2,-1
  }
}
   4d4b4:	e037883a 	mov	sp,fp
   4d4b8:	dfc00117 	ldw	ra,4(sp)
   4d4bc:	df000017 	ldw	fp,0(sp)
   4d4c0:	dec00204 	addi	sp,sp,8
   4d4c4:	f800283a 	ret

0004d4c8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4d4c8:	defffc04 	addi	sp,sp,-16
   4d4cc:	df000315 	stw	fp,12(sp)
   4d4d0:	df000304 	addi	fp,sp,12
   4d4d4:	e13fff15 	stw	r4,-4(fp)
   4d4d8:	e17ffe15 	stw	r5,-8(fp)
   4d4dc:	e1bffd15 	stw	r6,-12(fp)
  return len;
   4d4e0:	e0bffd17 	ldw	r2,-12(fp)
}
   4d4e4:	e037883a 	mov	sp,fp
   4d4e8:	df000017 	ldw	fp,0(sp)
   4d4ec:	dec00104 	addi	sp,sp,4
   4d4f0:	f800283a 	ret

0004d4f4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   4d4f4:	defffd04 	addi	sp,sp,-12
   4d4f8:	df000215 	stw	fp,8(sp)
   4d4fc:	df000204 	addi	fp,sp,8
   4d500:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   4d504:	0001883a 	nop
   4d508:	e0bffe17 	ldw	r2,-8(fp)
   4d50c:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   4d510:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   4d514:	10000226 	beq	r2,zero,4d520 <_exit+0x2c>
    ALT_SIM_FAIL();
   4d518:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   4d51c:	00000106 	br	4d524 <_exit+0x30>
    ALT_SIM_PASS();
   4d520:	002af0b0 	cmpltui	zero,zero,43970
}
   4d524:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   4d528:	003fff06 	br	4d528 <_exit+0x34>

0004d52c <alt_get_errno>:
{
   4d52c:	defffe04 	addi	sp,sp,-8
   4d530:	dfc00115 	stw	ra,4(sp)
   4d534:	df000015 	stw	fp,0(sp)
   4d538:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d53c:	d0a00917 	ldw	r2,-32732(gp)
   4d540:	10000326 	beq	r2,zero,4d550 <alt_get_errno+0x24>
   4d544:	d0a00917 	ldw	r2,-32732(gp)
   4d548:	103ee83a 	callr	r2
   4d54c:	00000106 	br	4d554 <alt_get_errno+0x28>
   4d550:	d0a70704 	addi	r2,gp,-25572
}
   4d554:	e037883a 	mov	sp,fp
   4d558:	dfc00117 	ldw	ra,4(sp)
   4d55c:	df000017 	ldw	fp,0(sp)
   4d560:	dec00204 	addi	sp,sp,8
   4d564:	f800283a 	ret

0004d568 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4d568:	defffb04 	addi	sp,sp,-20
   4d56c:	dfc00415 	stw	ra,16(sp)
   4d570:	df000315 	stw	fp,12(sp)
   4d574:	df000304 	addi	fp,sp,12
   4d578:	e13ffe15 	stw	r4,-8(fp)
   4d57c:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d580:	e0bffe17 	ldw	r2,-8(fp)
   4d584:	10000616 	blt	r2,zero,4d5a0 <fstat+0x38>
   4d588:	e0bffe17 	ldw	r2,-8(fp)
   4d58c:	10c00324 	muli	r3,r2,12
   4d590:	00800174 	movhi	r2,5
   4d594:	10833404 	addi	r2,r2,3280
   4d598:	1885883a 	add	r2,r3,r2
   4d59c:	00000106 	br	4d5a4 <fstat+0x3c>
   4d5a0:	0005883a 	mov	r2,zero
   4d5a4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4d5a8:	e0bfff17 	ldw	r2,-4(fp)
   4d5ac:	10001026 	beq	r2,zero,4d5f0 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4d5b0:	e0bfff17 	ldw	r2,-4(fp)
   4d5b4:	10800017 	ldw	r2,0(r2)
   4d5b8:	10800817 	ldw	r2,32(r2)
   4d5bc:	10000726 	beq	r2,zero,4d5dc <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   4d5c0:	e0bfff17 	ldw	r2,-4(fp)
   4d5c4:	10800017 	ldw	r2,0(r2)
   4d5c8:	10800817 	ldw	r2,32(r2)
   4d5cc:	e17ffd17 	ldw	r5,-12(fp)
   4d5d0:	e13fff17 	ldw	r4,-4(fp)
   4d5d4:	103ee83a 	callr	r2
   4d5d8:	00000a06 	br	4d604 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4d5dc:	e0bffd17 	ldw	r2,-12(fp)
   4d5e0:	00c80004 	movi	r3,8192
   4d5e4:	10c00115 	stw	r3,4(r2)
      return 0;
   4d5e8:	0005883a 	mov	r2,zero
   4d5ec:	00000506 	br	4d604 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d5f0:	004d52c0 	call	4d52c <alt_get_errno>
   4d5f4:	1007883a 	mov	r3,r2
   4d5f8:	00801444 	movi	r2,81
   4d5fc:	18800015 	stw	r2,0(r3)
    return -1;
   4d600:	00bfffc4 	movi	r2,-1
  }
}
   4d604:	e037883a 	mov	sp,fp
   4d608:	dfc00117 	ldw	ra,4(sp)
   4d60c:	df000017 	ldw	fp,0(sp)
   4d610:	dec00204 	addi	sp,sp,8
   4d614:	f800283a 	ret

0004d618 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   4d618:	deffff04 	addi	sp,sp,-4
   4d61c:	df000015 	stw	fp,0(sp)
   4d620:	d839883a 	mov	fp,sp
  return 0;
   4d624:	0005883a 	mov	r2,zero
}
   4d628:	e037883a 	mov	sp,fp
   4d62c:	df000017 	ldw	fp,0(sp)
   4d630:	dec00104 	addi	sp,sp,4
   4d634:	f800283a 	ret

0004d638 <alt_get_errno>:
{
   4d638:	defffe04 	addi	sp,sp,-8
   4d63c:	dfc00115 	stw	ra,4(sp)
   4d640:	df000015 	stw	fp,0(sp)
   4d644:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d648:	d0a00917 	ldw	r2,-32732(gp)
   4d64c:	10000326 	beq	r2,zero,4d65c <alt_get_errno+0x24>
   4d650:	d0a00917 	ldw	r2,-32732(gp)
   4d654:	103ee83a 	callr	r2
   4d658:	00000106 	br	4d660 <alt_get_errno+0x28>
   4d65c:	d0a70704 	addi	r2,gp,-25572
}
   4d660:	e037883a 	mov	sp,fp
   4d664:	dfc00117 	ldw	ra,4(sp)
   4d668:	df000017 	ldw	fp,0(sp)
   4d66c:	dec00204 	addi	sp,sp,8
   4d670:	f800283a 	ret

0004d674 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4d674:	deffea04 	addi	sp,sp,-88
   4d678:	dfc01515 	stw	ra,84(sp)
   4d67c:	df001415 	stw	fp,80(sp)
   4d680:	df001404 	addi	fp,sp,80
   4d684:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d688:	e0bfec17 	ldw	r2,-80(fp)
   4d68c:	10000616 	blt	r2,zero,4d6a8 <isatty+0x34>
   4d690:	e0bfec17 	ldw	r2,-80(fp)
   4d694:	10c00324 	muli	r3,r2,12
   4d698:	00800174 	movhi	r2,5
   4d69c:	10833404 	addi	r2,r2,3280
   4d6a0:	1885883a 	add	r2,r3,r2
   4d6a4:	00000106 	br	4d6ac <isatty+0x38>
   4d6a8:	0005883a 	mov	r2,zero
   4d6ac:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4d6b0:	e0bfff17 	ldw	r2,-4(fp)
   4d6b4:	10000e26 	beq	r2,zero,4d6f0 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4d6b8:	e0bfff17 	ldw	r2,-4(fp)
   4d6bc:	10800017 	ldw	r2,0(r2)
   4d6c0:	10800817 	ldw	r2,32(r2)
   4d6c4:	1000021e 	bne	r2,zero,4d6d0 <isatty+0x5c>
    {
      return 1;
   4d6c8:	00800044 	movi	r2,1
   4d6cc:	00000d06 	br	4d704 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4d6d0:	e0bfed04 	addi	r2,fp,-76
   4d6d4:	100b883a 	mov	r5,r2
   4d6d8:	e13fec17 	ldw	r4,-80(fp)
   4d6dc:	004d5680 	call	4d568 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4d6e0:	e0bfee17 	ldw	r2,-72(fp)
   4d6e4:	10880020 	cmpeqi	r2,r2,8192
   4d6e8:	10803fcc 	andi	r2,r2,255
   4d6ec:	00000506 	br	4d704 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d6f0:	004d6380 	call	4d638 <alt_get_errno>
   4d6f4:	1007883a 	mov	r3,r2
   4d6f8:	00801444 	movi	r2,81
   4d6fc:	18800015 	stw	r2,0(r3)
    return 0;
   4d700:	0005883a 	mov	r2,zero
  }
}
   4d704:	e037883a 	mov	sp,fp
   4d708:	dfc00117 	ldw	ra,4(sp)
   4d70c:	df000017 	ldw	fp,0(sp)
   4d710:	dec00204 	addi	sp,sp,8
   4d714:	f800283a 	ret

0004d718 <alt_get_errno>:
{
   4d718:	defffe04 	addi	sp,sp,-8
   4d71c:	dfc00115 	stw	ra,4(sp)
   4d720:	df000015 	stw	fp,0(sp)
   4d724:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d728:	d0a00917 	ldw	r2,-32732(gp)
   4d72c:	10000326 	beq	r2,zero,4d73c <alt_get_errno+0x24>
   4d730:	d0a00917 	ldw	r2,-32732(gp)
   4d734:	103ee83a 	callr	r2
   4d738:	00000106 	br	4d740 <alt_get_errno+0x28>
   4d73c:	d0a70704 	addi	r2,gp,-25572
}
   4d740:	e037883a 	mov	sp,fp
   4d744:	dfc00117 	ldw	ra,4(sp)
   4d748:	df000017 	ldw	fp,0(sp)
   4d74c:	dec00204 	addi	sp,sp,8
   4d750:	f800283a 	ret

0004d754 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   4d754:	defffb04 	addi	sp,sp,-20
   4d758:	dfc00415 	stw	ra,16(sp)
   4d75c:	df000315 	stw	fp,12(sp)
   4d760:	df000304 	addi	fp,sp,12
   4d764:	e13ffe15 	stw	r4,-8(fp)
   4d768:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   4d76c:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   4d770:	e0bffe17 	ldw	r2,-8(fp)
   4d774:	00802e16 	blt	zero,r2,4d830 <kill+0xdc>
   4d778:	e0bffd17 	ldw	r2,-12(fp)
   4d77c:	10800828 	cmpgeui	r2,r2,32
   4d780:	1000281e 	bne	r2,zero,4d824 <kill+0xd0>
   4d784:	e0bffd17 	ldw	r2,-12(fp)
   4d788:	100690ba 	slli	r3,r2,2
   4d78c:	00800174 	movhi	r2,5
   4d790:	1885883a 	add	r2,r3,r2
   4d794:	10b5e717 	ldw	r2,-10340(r2)
   4d798:	1000683a 	jmp	r2
   4d79c:	0004d844 	movi	zero,4961
   4d7a0:	0004d824 	muli	zero,zero,4960
   4d7a4:	0004d824 	muli	zero,zero,4960
   4d7a8:	0004d81c 	xori	zero,zero,4960
   4d7ac:	0004d81c 	xori	zero,zero,4960
   4d7b0:	0004d81c 	xori	zero,zero,4960
   4d7b4:	0004d81c 	xori	zero,zero,4960
   4d7b8:	0004d824 	muli	zero,zero,4960
   4d7bc:	0004d81c 	xori	zero,zero,4960
   4d7c0:	0004d81c 	xori	zero,zero,4960
   4d7c4:	0004d81c 	xori	zero,zero,4960
   4d7c8:	0004d81c 	xori	zero,zero,4960
   4d7cc:	0004d81c 	xori	zero,zero,4960
   4d7d0:	0004d81c 	xori	zero,zero,4960
   4d7d4:	0004d81c 	xori	zero,zero,4960
   4d7d8:	0004d81c 	xori	zero,zero,4960
   4d7dc:	0004d844 	movi	zero,4961
   4d7e0:	0004d824 	muli	zero,zero,4960
   4d7e4:	0004d824 	muli	zero,zero,4960
   4d7e8:	0004d824 	muli	zero,zero,4960
   4d7ec:	0004d844 	movi	zero,4961
   4d7f0:	0004d824 	muli	zero,zero,4960
   4d7f4:	0004d824 	muli	zero,zero,4960
   4d7f8:	0004d81c 	xori	zero,zero,4960
   4d7fc:	0004d81c 	xori	zero,zero,4960
   4d800:	0004d81c 	xori	zero,zero,4960
   4d804:	0004d81c 	xori	zero,zero,4960
   4d808:	0004d81c 	xori	zero,zero,4960
   4d80c:	0004d824 	muli	zero,zero,4960
   4d810:	0004d824 	muli	zero,zero,4960
   4d814:	0004d81c 	xori	zero,zero,4960
   4d818:	0004d81c 	xori	zero,zero,4960
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   4d81c:	0009883a 	mov	r4,zero
   4d820:	004d4f40 	call	4d4f4 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   4d824:	00800584 	movi	r2,22
   4d828:	e0bfff15 	stw	r2,-4(fp)
   4d82c:	00000606 	br	4d848 <kill+0xf4>
    }
  }

  else if (pid > 0)
   4d830:	e0bffe17 	ldw	r2,-8(fp)
   4d834:	0080040e 	bge	zero,r2,4d848 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   4d838:	008000c4 	movi	r2,3
   4d83c:	e0bfff15 	stw	r2,-4(fp)
   4d840:	00000106 	br	4d848 <kill+0xf4>
      break;
   4d844:	0001883a 	nop
  }

  if (status)
   4d848:	e0bfff17 	ldw	r2,-4(fp)
   4d84c:	10000626 	beq	r2,zero,4d868 <kill+0x114>
  {
    ALT_ERRNO = status;
   4d850:	004d7180 	call	4d718 <alt_get_errno>
   4d854:	1007883a 	mov	r3,r2
   4d858:	e0bfff17 	ldw	r2,-4(fp)
   4d85c:	18800015 	stw	r2,0(r3)
    return -1;
   4d860:	00bfffc4 	movi	r2,-1
   4d864:	00000106 	br	4d86c <kill+0x118>
  }

  return 0;
   4d868:	0005883a 	mov	r2,zero
}
   4d86c:	e037883a 	mov	sp,fp
   4d870:	dfc00117 	ldw	ra,4(sp)
   4d874:	df000017 	ldw	fp,0(sp)
   4d878:	dec00204 	addi	sp,sp,8
   4d87c:	f800283a 	ret

0004d880 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4d880:	defffc04 	addi	sp,sp,-16
   4d884:	df000315 	stw	fp,12(sp)
   4d888:	df000304 	addi	fp,sp,12
   4d88c:	e13fff15 	stw	r4,-4(fp)
   4d890:	e17ffe15 	stw	r5,-8(fp)
   4d894:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   4d898:	e0fffe17 	ldw	r3,-8(fp)
   4d89c:	e0bfff17 	ldw	r2,-4(fp)
   4d8a0:	18800c26 	beq	r3,r2,4d8d4 <alt_load_section+0x54>
  {
    while( to != end )
   4d8a4:	00000806 	br	4d8c8 <alt_load_section+0x48>
    {
      *to++ = *from++;
   4d8a8:	e0ffff17 	ldw	r3,-4(fp)
   4d8ac:	18800104 	addi	r2,r3,4
   4d8b0:	e0bfff15 	stw	r2,-4(fp)
   4d8b4:	e0bffe17 	ldw	r2,-8(fp)
   4d8b8:	11000104 	addi	r4,r2,4
   4d8bc:	e13ffe15 	stw	r4,-8(fp)
   4d8c0:	18c00017 	ldw	r3,0(r3)
   4d8c4:	10c00015 	stw	r3,0(r2)
    while( to != end )
   4d8c8:	e0fffe17 	ldw	r3,-8(fp)
   4d8cc:	e0bffd17 	ldw	r2,-12(fp)
   4d8d0:	18bff51e 	bne	r3,r2,4d8a8 <alt_load_section+0x28>
    }
  }
}
   4d8d4:	0001883a 	nop
   4d8d8:	e037883a 	mov	sp,fp
   4d8dc:	df000017 	ldw	fp,0(sp)
   4d8e0:	dec00104 	addi	sp,sp,4
   4d8e4:	f800283a 	ret

0004d8e8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4d8e8:	defffe04 	addi	sp,sp,-8
   4d8ec:	dfc00115 	stw	ra,4(sp)
   4d8f0:	df000015 	stw	fp,0(sp)
   4d8f4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4d8f8:	01800174 	movhi	r6,5
   4d8fc:	3187ba04 	addi	r6,r6,7912
   4d900:	01400174 	movhi	r5,5
   4d904:	2940c404 	addi	r5,r5,784
   4d908:	01000174 	movhi	r4,5
   4d90c:	2107ba04 	addi	r4,r4,7912
   4d910:	004d8800 	call	4d880 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4d914:	01800134 	movhi	r6,4
   4d918:	31808e04 	addi	r6,r6,568
   4d91c:	01400134 	movhi	r5,4
   4d920:	29400804 	addi	r5,r5,32
   4d924:	01000134 	movhi	r4,4
   4d928:	21000804 	addi	r4,r4,32
   4d92c:	004d8800 	call	4d880 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4d930:	01800174 	movhi	r6,5
   4d934:	3180c404 	addi	r6,r6,784
   4d938:	01400174 	movhi	r5,5
   4d93c:	297f2004 	addi	r5,r5,-896
   4d940:	01000174 	movhi	r4,5
   4d944:	213f2004 	addi	r4,r4,-896
   4d948:	004d8800 	call	4d880 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4d94c:	004eca80 	call	4eca8 <alt_dcache_flush_all>
  alt_icache_flush_all();
   4d950:	004eea00 	call	4eea0 <alt_icache_flush_all>
}
   4d954:	0001883a 	nop
   4d958:	e037883a 	mov	sp,fp
   4d95c:	dfc00117 	ldw	ra,4(sp)
   4d960:	df000017 	ldw	fp,0(sp)
   4d964:	dec00204 	addi	sp,sp,8
   4d968:	f800283a 	ret

0004d96c <alt_get_errno>:
{
   4d96c:	defffe04 	addi	sp,sp,-8
   4d970:	dfc00115 	stw	ra,4(sp)
   4d974:	df000015 	stw	fp,0(sp)
   4d978:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d97c:	d0a00917 	ldw	r2,-32732(gp)
   4d980:	10000326 	beq	r2,zero,4d990 <alt_get_errno+0x24>
   4d984:	d0a00917 	ldw	r2,-32732(gp)
   4d988:	103ee83a 	callr	r2
   4d98c:	00000106 	br	4d994 <alt_get_errno+0x28>
   4d990:	d0a70704 	addi	r2,gp,-25572
}
   4d994:	e037883a 	mov	sp,fp
   4d998:	dfc00117 	ldw	ra,4(sp)
   4d99c:	df000017 	ldw	fp,0(sp)
   4d9a0:	dec00204 	addi	sp,sp,8
   4d9a4:	f800283a 	ret

0004d9a8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4d9a8:	defff904 	addi	sp,sp,-28
   4d9ac:	dfc00615 	stw	ra,24(sp)
   4d9b0:	df000515 	stw	fp,20(sp)
   4d9b4:	df000504 	addi	fp,sp,20
   4d9b8:	e13ffd15 	stw	r4,-12(fp)
   4d9bc:	e17ffc15 	stw	r5,-16(fp)
   4d9c0:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4d9c4:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d9c8:	e0bffd17 	ldw	r2,-12(fp)
   4d9cc:	10000616 	blt	r2,zero,4d9e8 <lseek+0x40>
   4d9d0:	e0bffd17 	ldw	r2,-12(fp)
   4d9d4:	10c00324 	muli	r3,r2,12
   4d9d8:	00800174 	movhi	r2,5
   4d9dc:	10833404 	addi	r2,r2,3280
   4d9e0:	1885883a 	add	r2,r3,r2
   4d9e4:	00000106 	br	4d9ec <lseek+0x44>
   4d9e8:	0005883a 	mov	r2,zero
   4d9ec:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   4d9f0:	e0bffe17 	ldw	r2,-8(fp)
   4d9f4:	10001026 	beq	r2,zero,4da38 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4d9f8:	e0bffe17 	ldw	r2,-8(fp)
   4d9fc:	10800017 	ldw	r2,0(r2)
   4da00:	10800717 	ldw	r2,28(r2)
   4da04:	10000926 	beq	r2,zero,4da2c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4da08:	e0bffe17 	ldw	r2,-8(fp)
   4da0c:	10800017 	ldw	r2,0(r2)
   4da10:	10800717 	ldw	r2,28(r2)
   4da14:	e1bffb17 	ldw	r6,-20(fp)
   4da18:	e17ffc17 	ldw	r5,-16(fp)
   4da1c:	e13ffe17 	ldw	r4,-8(fp)
   4da20:	103ee83a 	callr	r2
   4da24:	e0bfff15 	stw	r2,-4(fp)
   4da28:	00000506 	br	4da40 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4da2c:	00bfde84 	movi	r2,-134
   4da30:	e0bfff15 	stw	r2,-4(fp)
   4da34:	00000206 	br	4da40 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   4da38:	00bfebc4 	movi	r2,-81
   4da3c:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   4da40:	e0bfff17 	ldw	r2,-4(fp)
   4da44:	1000070e 	bge	r2,zero,4da64 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   4da48:	004d96c0 	call	4d96c <alt_get_errno>
   4da4c:	1007883a 	mov	r3,r2
   4da50:	e0bfff17 	ldw	r2,-4(fp)
   4da54:	0085c83a 	sub	r2,zero,r2
   4da58:	18800015 	stw	r2,0(r3)
    rc = -1;
   4da5c:	00bfffc4 	movi	r2,-1
   4da60:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   4da64:	e0bfff17 	ldw	r2,-4(fp)
}
   4da68:	e037883a 	mov	sp,fp
   4da6c:	dfc00117 	ldw	ra,4(sp)
   4da70:	df000017 	ldw	fp,0(sp)
   4da74:	dec00204 	addi	sp,sp,8
   4da78:	f800283a 	ret

0004da7c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4da7c:	defffd04 	addi	sp,sp,-12
   4da80:	dfc00215 	stw	ra,8(sp)
   4da84:	df000115 	stw	fp,4(sp)
   4da88:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4da8c:	0009883a 	mov	r4,zero
   4da90:	004df200 	call	4df20 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4da94:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4da98:	004df5c0 	call	4df5c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4da9c:	01800174 	movhi	r6,5
   4daa0:	3180bc04 	addi	r6,r6,752
   4daa4:	01400174 	movhi	r5,5
   4daa8:	2940bc04 	addi	r5,r5,752
   4daac:	01000174 	movhi	r4,5
   4dab0:	2100bc04 	addi	r4,r4,752
   4dab4:	004f21c0 	call	4f21c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4dab8:	004edd80 	call	4edd8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4dabc:	01000174 	movhi	r4,5
   4dac0:	213b8f04 	addi	r4,r4,-4548
   4dac4:	004fa100 	call	4fa10 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4dac8:	d0a70917 	ldw	r2,-25564(gp)
   4dacc:	d0e70a17 	ldw	r3,-25560(gp)
   4dad0:	d1270b17 	ldw	r4,-25556(gp)
   4dad4:	200d883a 	mov	r6,r4
   4dad8:	180b883a 	mov	r5,r3
   4dadc:	1009883a 	mov	r4,r2
   4dae0:	00402840 	call	40284 <main>
   4dae4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4dae8:	01000044 	movi	r4,1
   4daec:	004d3f80 	call	4d3f8 <close>
  exit (result);
   4daf0:	e13fff17 	ldw	r4,-4(fp)
   4daf4:	004fa240 	call	4fa24 <exit>

0004daf8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4daf8:	defffe04 	addi	sp,sp,-8
   4dafc:	df000115 	stw	fp,4(sp)
   4db00:	df000104 	addi	fp,sp,4
   4db04:	e13fff15 	stw	r4,-4(fp)
}
   4db08:	0001883a 	nop
   4db0c:	e037883a 	mov	sp,fp
   4db10:	df000017 	ldw	fp,0(sp)
   4db14:	dec00104 	addi	sp,sp,4
   4db18:	f800283a 	ret

0004db1c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4db1c:	defffe04 	addi	sp,sp,-8
   4db20:	df000115 	stw	fp,4(sp)
   4db24:	df000104 	addi	fp,sp,4
   4db28:	e13fff15 	stw	r4,-4(fp)
}
   4db2c:	0001883a 	nop
   4db30:	e037883a 	mov	sp,fp
   4db34:	df000017 	ldw	fp,0(sp)
   4db38:	dec00104 	addi	sp,sp,4
   4db3c:	f800283a 	ret

0004db40 <alt_get_errno>:
{
   4db40:	defffe04 	addi	sp,sp,-8
   4db44:	dfc00115 	stw	ra,4(sp)
   4db48:	df000015 	stw	fp,0(sp)
   4db4c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4db50:	d0a00917 	ldw	r2,-32732(gp)
   4db54:	10000326 	beq	r2,zero,4db64 <alt_get_errno+0x24>
   4db58:	d0a00917 	ldw	r2,-32732(gp)
   4db5c:	103ee83a 	callr	r2
   4db60:	00000106 	br	4db68 <alt_get_errno+0x28>
   4db64:	d0a70704 	addi	r2,gp,-25572
}
   4db68:	e037883a 	mov	sp,fp
   4db6c:	dfc00117 	ldw	ra,4(sp)
   4db70:	df000017 	ldw	fp,0(sp)
   4db74:	dec00204 	addi	sp,sp,8
   4db78:	f800283a 	ret

0004db7c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4db7c:	defff904 	addi	sp,sp,-28
   4db80:	dfc00615 	stw	ra,24(sp)
   4db84:	df000515 	stw	fp,20(sp)
   4db88:	df000504 	addi	fp,sp,20
   4db8c:	e13ffd15 	stw	r4,-12(fp)
   4db90:	e17ffc15 	stw	r5,-16(fp)
   4db94:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4db98:	e0bffd17 	ldw	r2,-12(fp)
   4db9c:	10000616 	blt	r2,zero,4dbb8 <read+0x3c>
   4dba0:	e0bffd17 	ldw	r2,-12(fp)
   4dba4:	10c00324 	muli	r3,r2,12
   4dba8:	00800174 	movhi	r2,5
   4dbac:	10833404 	addi	r2,r2,3280
   4dbb0:	1885883a 	add	r2,r3,r2
   4dbb4:	00000106 	br	4dbbc <read+0x40>
   4dbb8:	0005883a 	mov	r2,zero
   4dbbc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4dbc0:	e0bfff17 	ldw	r2,-4(fp)
   4dbc4:	10002226 	beq	r2,zero,4dc50 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4dbc8:	e0bfff17 	ldw	r2,-4(fp)
   4dbcc:	10800217 	ldw	r2,8(r2)
   4dbd0:	108000cc 	andi	r2,r2,3
   4dbd4:	10800060 	cmpeqi	r2,r2,1
   4dbd8:	1000181e 	bne	r2,zero,4dc3c <read+0xc0>
        (fd->dev->read))
   4dbdc:	e0bfff17 	ldw	r2,-4(fp)
   4dbe0:	10800017 	ldw	r2,0(r2)
   4dbe4:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4dbe8:	10001426 	beq	r2,zero,4dc3c <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4dbec:	e0bfff17 	ldw	r2,-4(fp)
   4dbf0:	10800017 	ldw	r2,0(r2)
   4dbf4:	10800517 	ldw	r2,20(r2)
   4dbf8:	e0fffb17 	ldw	r3,-20(fp)
   4dbfc:	180d883a 	mov	r6,r3
   4dc00:	e17ffc17 	ldw	r5,-16(fp)
   4dc04:	e13fff17 	ldw	r4,-4(fp)
   4dc08:	103ee83a 	callr	r2
   4dc0c:	e0bffe15 	stw	r2,-8(fp)
   4dc10:	e0bffe17 	ldw	r2,-8(fp)
   4dc14:	1000070e 	bge	r2,zero,4dc34 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   4dc18:	004db400 	call	4db40 <alt_get_errno>
   4dc1c:	1007883a 	mov	r3,r2
   4dc20:	e0bffe17 	ldw	r2,-8(fp)
   4dc24:	0085c83a 	sub	r2,zero,r2
   4dc28:	18800015 	stw	r2,0(r3)
          return -1;
   4dc2c:	00bfffc4 	movi	r2,-1
   4dc30:	00000c06 	br	4dc64 <read+0xe8>
        }
        return rval;
   4dc34:	e0bffe17 	ldw	r2,-8(fp)
   4dc38:	00000a06 	br	4dc64 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4dc3c:	004db400 	call	4db40 <alt_get_errno>
   4dc40:	1007883a 	mov	r3,r2
   4dc44:	00800344 	movi	r2,13
   4dc48:	18800015 	stw	r2,0(r3)
   4dc4c:	00000406 	br	4dc60 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4dc50:	004db400 	call	4db40 <alt_get_errno>
   4dc54:	1007883a 	mov	r3,r2
   4dc58:	00801444 	movi	r2,81
   4dc5c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4dc60:	00bfffc4 	movi	r2,-1
}
   4dc64:	e037883a 	mov	sp,fp
   4dc68:	dfc00117 	ldw	ra,4(sp)
   4dc6c:	df000017 	ldw	fp,0(sp)
   4dc70:	dec00204 	addi	sp,sp,8
   4dc74:	f800283a 	ret

0004dc78 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4dc78:	defffe04 	addi	sp,sp,-8
   4dc7c:	df000115 	stw	fp,4(sp)
   4dc80:	df000104 	addi	fp,sp,4
   4dc84:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   4dc88:	e0bfff17 	ldw	r2,-4(fp)
   4dc8c:	108000d0 	cmplti	r2,r2,3
   4dc90:	10000a1e 	bne	r2,zero,4dcbc <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
   4dc94:	e0bfff17 	ldw	r2,-4(fp)
   4dc98:	10c00324 	muli	r3,r2,12
   4dc9c:	00800174 	movhi	r2,5
   4dca0:	1885883a 	add	r2,r3,r2
   4dca4:	10033615 	stw	zero,3288(r2)
    alt_fd_list[fd].dev      = 0;
   4dca8:	e0bfff17 	ldw	r2,-4(fp)
   4dcac:	10c00324 	muli	r3,r2,12
   4dcb0:	00800174 	movhi	r2,5
   4dcb4:	1885883a 	add	r2,r3,r2
   4dcb8:	10033415 	stw	zero,3280(r2)
  }
}
   4dcbc:	0001883a 	nop
   4dcc0:	e037883a 	mov	sp,fp
   4dcc4:	df000017 	ldw	fp,0(sp)
   4dcc8:	dec00104 	addi	sp,sp,4
   4dccc:	f800283a 	ret

0004dcd0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4dcd0:	defff904 	addi	sp,sp,-28
   4dcd4:	df000615 	stw	fp,24(sp)
   4dcd8:	df000604 	addi	fp,sp,24
   4dcdc:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   4dce0:	0005303a 	rdctl	r2,status
   4dce4:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4dce8:	e0fffd17 	ldw	r3,-12(fp)
   4dcec:	00bfff84 	movi	r2,-2
   4dcf0:	1884703a 	and	r2,r3,r2
   4dcf4:	1001703a 	wrctl	status,r2
  return context;
   4dcf8:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4dcfc:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4dd00:	d0a00a17 	ldw	r2,-32728(gp)
   4dd04:	10c000c4 	addi	r3,r2,3
   4dd08:	00bfff04 	movi	r2,-4
   4dd0c:	1884703a 	and	r2,r3,r2
   4dd10:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4dd14:	d0e00a17 	ldw	r3,-32728(gp)
   4dd18:	e0bffa17 	ldw	r2,-24(fp)
   4dd1c:	1887883a 	add	r3,r3,r2
   4dd20:	008001b4 	movhi	r2,6
   4dd24:	109c4004 	addi	r2,r2,28928
   4dd28:	10c0072e 	bgeu	r2,r3,4dd48 <sbrk+0x78>
   4dd2c:	e0bfff17 	ldw	r2,-4(fp)
   4dd30:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4dd34:	e0bffc17 	ldw	r2,-16(fp)
   4dd38:	1001703a 	wrctl	status,r2
}
   4dd3c:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4dd40:	00bfffc4 	movi	r2,-1
   4dd44:	00000c06 	br	4dd78 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   4dd48:	d0a00a17 	ldw	r2,-32728(gp)
   4dd4c:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   4dd50:	d0e00a17 	ldw	r3,-32728(gp)
   4dd54:	e0bffa17 	ldw	r2,-24(fp)
   4dd58:	1885883a 	add	r2,r3,r2
   4dd5c:	d0a00a15 	stw	r2,-32728(gp)
   4dd60:	e0bfff17 	ldw	r2,-4(fp)
   4dd64:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   4dd68:	e0bffb17 	ldw	r2,-20(fp)
   4dd6c:	1001703a 	wrctl	status,r2
}
   4dd70:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4dd74:	e0bffe17 	ldw	r2,-8(fp)
} 
   4dd78:	e037883a 	mov	sp,fp
   4dd7c:	df000017 	ldw	fp,0(sp)
   4dd80:	dec00104 	addi	sp,sp,4
   4dd84:	f800283a 	ret

0004dd88 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   4dd88:	defffd04 	addi	sp,sp,-12
   4dd8c:	dfc00215 	stw	ra,8(sp)
   4dd90:	df000115 	stw	fp,4(sp)
   4dd94:	df000104 	addi	fp,sp,4
   4dd98:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   4dd9c:	e13fff17 	ldw	r4,-4(fp)
   4dda0:	004eb500 	call	4eb50 <alt_busy_sleep>
}
   4dda4:	e037883a 	mov	sp,fp
   4dda8:	dfc00117 	ldw	ra,4(sp)
   4ddac:	df000017 	ldw	fp,0(sp)
   4ddb0:	dec00204 	addi	sp,sp,8
   4ddb4:	f800283a 	ret

0004ddb8 <alt_get_errno>:
{
   4ddb8:	defffe04 	addi	sp,sp,-8
   4ddbc:	dfc00115 	stw	ra,4(sp)
   4ddc0:	df000015 	stw	fp,0(sp)
   4ddc4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ddc8:	d0a00917 	ldw	r2,-32732(gp)
   4ddcc:	10000326 	beq	r2,zero,4dddc <alt_get_errno+0x24>
   4ddd0:	d0a00917 	ldw	r2,-32732(gp)
   4ddd4:	103ee83a 	callr	r2
   4ddd8:	00000106 	br	4dde0 <alt_get_errno+0x28>
   4dddc:	d0a70704 	addi	r2,gp,-25572
}
   4dde0:	e037883a 	mov	sp,fp
   4dde4:	dfc00117 	ldw	ra,4(sp)
   4dde8:	df000017 	ldw	fp,0(sp)
   4ddec:	dec00204 	addi	sp,sp,8
   4ddf0:	f800283a 	ret

0004ddf4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4ddf4:	defff904 	addi	sp,sp,-28
   4ddf8:	dfc00615 	stw	ra,24(sp)
   4ddfc:	df000515 	stw	fp,20(sp)
   4de00:	df000504 	addi	fp,sp,20
   4de04:	e13ffd15 	stw	r4,-12(fp)
   4de08:	e17ffc15 	stw	r5,-16(fp)
   4de0c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4de10:	e0bffd17 	ldw	r2,-12(fp)
   4de14:	10000616 	blt	r2,zero,4de30 <write+0x3c>
   4de18:	e0bffd17 	ldw	r2,-12(fp)
   4de1c:	10c00324 	muli	r3,r2,12
   4de20:	00800174 	movhi	r2,5
   4de24:	10833404 	addi	r2,r2,3280
   4de28:	1885883a 	add	r2,r3,r2
   4de2c:	00000106 	br	4de34 <write+0x40>
   4de30:	0005883a 	mov	r2,zero
   4de34:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4de38:	e0bfff17 	ldw	r2,-4(fp)
   4de3c:	10002126 	beq	r2,zero,4dec4 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4de40:	e0bfff17 	ldw	r2,-4(fp)
   4de44:	10800217 	ldw	r2,8(r2)
   4de48:	108000cc 	andi	r2,r2,3
   4de4c:	10001826 	beq	r2,zero,4deb0 <write+0xbc>
   4de50:	e0bfff17 	ldw	r2,-4(fp)
   4de54:	10800017 	ldw	r2,0(r2)
   4de58:	10800617 	ldw	r2,24(r2)
   4de5c:	10001426 	beq	r2,zero,4deb0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4de60:	e0bfff17 	ldw	r2,-4(fp)
   4de64:	10800017 	ldw	r2,0(r2)
   4de68:	10800617 	ldw	r2,24(r2)
   4de6c:	e0fffb17 	ldw	r3,-20(fp)
   4de70:	180d883a 	mov	r6,r3
   4de74:	e17ffc17 	ldw	r5,-16(fp)
   4de78:	e13fff17 	ldw	r4,-4(fp)
   4de7c:	103ee83a 	callr	r2
   4de80:	e0bffe15 	stw	r2,-8(fp)
   4de84:	e0bffe17 	ldw	r2,-8(fp)
   4de88:	1000070e 	bge	r2,zero,4dea8 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   4de8c:	004ddb80 	call	4ddb8 <alt_get_errno>
   4de90:	1007883a 	mov	r3,r2
   4de94:	e0bffe17 	ldw	r2,-8(fp)
   4de98:	0085c83a 	sub	r2,zero,r2
   4de9c:	18800015 	stw	r2,0(r3)
        return -1;
   4dea0:	00bfffc4 	movi	r2,-1
   4dea4:	00000c06 	br	4ded8 <write+0xe4>
      }
      return rval;
   4dea8:	e0bffe17 	ldw	r2,-8(fp)
   4deac:	00000a06 	br	4ded8 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4deb0:	004ddb80 	call	4ddb8 <alt_get_errno>
   4deb4:	1007883a 	mov	r3,r2
   4deb8:	00800344 	movi	r2,13
   4debc:	18800015 	stw	r2,0(r3)
   4dec0:	00000406 	br	4ded4 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4dec4:	004ddb80 	call	4ddb8 <alt_get_errno>
   4dec8:	1007883a 	mov	r3,r2
   4decc:	00801444 	movi	r2,81
   4ded0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4ded4:	00bfffc4 	movi	r2,-1
}
   4ded8:	e037883a 	mov	sp,fp
   4dedc:	dfc00117 	ldw	ra,4(sp)
   4dee0:	df000017 	ldw	fp,0(sp)
   4dee4:	dec00204 	addi	sp,sp,8
   4dee8:	f800283a 	ret

0004deec <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4deec:	defffd04 	addi	sp,sp,-12
   4def0:	dfc00215 	stw	ra,8(sp)
   4def4:	df000115 	stw	fp,4(sp)
   4def8:	df000104 	addi	fp,sp,4
   4defc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4df00:	d1600604 	addi	r5,gp,-32744
   4df04:	e13fff17 	ldw	r4,-4(fp)
   4df08:	004ed300 	call	4ed30 <alt_dev_llist_insert>
}
   4df0c:	e037883a 	mov	sp,fp
   4df10:	dfc00117 	ldw	ra,4(sp)
   4df14:	df000017 	ldw	fp,0(sp)
   4df18:	dec00204 	addi	sp,sp,8
   4df1c:	f800283a 	ret

0004df20 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4df20:	defffd04 	addi	sp,sp,-12
   4df24:	dfc00215 	stw	ra,8(sp)
   4df28:	df000115 	stw	fp,4(sp)
   4df2c:	df000104 	addi	fp,sp,4
   4df30:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   4df34:	004f68c0 	call	4f68c <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4df38:	00800044 	movi	r2,1
   4df3c:	1001703a 	wrctl	status,r2
}
   4df40:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   4df44:	0001883a 	nop
   4df48:	e037883a 	mov	sp,fp
   4df4c:	dfc00117 	ldw	ra,4(sp)
   4df50:	df000017 	ldw	fp,0(sp)
   4df54:	dec00204 	addi	sp,sp,8
   4df58:	f800283a 	ret

0004df5c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4df5c:	defffe04 	addi	sp,sp,-8
   4df60:	dfc00115 	stw	ra,4(sp)
   4df64:	df000015 	stw	fp,0(sp)
   4df68:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   4df6c:	000d883a 	mov	r6,zero
   4df70:	000b883a 	mov	r5,zero
   4df74:	01000174 	movhi	r4,5
   4df78:	21039e04 	addi	r4,r4,3704
   4df7c:	004e10c0 	call	4e10c <altera_avalon_jtag_uart_init>
   4df80:	01000174 	movhi	r4,5
   4df84:	21039404 	addi	r4,r4,3664
   4df88:	004deec0 	call	4deec <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
   4df8c:	0001883a 	nop
}
   4df90:	0001883a 	nop
   4df94:	e037883a 	mov	sp,fp
   4df98:	dfc00117 	ldw	ra,4(sp)
   4df9c:	df000017 	ldw	fp,0(sp)
   4dfa0:	dec00204 	addi	sp,sp,8
   4dfa4:	f800283a 	ret

0004dfa8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4dfa8:	defffa04 	addi	sp,sp,-24
   4dfac:	dfc00515 	stw	ra,20(sp)
   4dfb0:	df000415 	stw	fp,16(sp)
   4dfb4:	df000404 	addi	fp,sp,16
   4dfb8:	e13ffe15 	stw	r4,-8(fp)
   4dfbc:	e17ffd15 	stw	r5,-12(fp)
   4dfc0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4dfc4:	e0bffe17 	ldw	r2,-8(fp)
   4dfc8:	10800017 	ldw	r2,0(r2)
   4dfcc:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4dfd0:	e0bfff17 	ldw	r2,-4(fp)
   4dfd4:	10c00a04 	addi	r3,r2,40
   4dfd8:	e0bffe17 	ldw	r2,-8(fp)
   4dfdc:	10800217 	ldw	r2,8(r2)
   4dfe0:	100f883a 	mov	r7,r2
   4dfe4:	e1bffc17 	ldw	r6,-16(fp)
   4dfe8:	e17ffd17 	ldw	r5,-12(fp)
   4dfec:	1809883a 	mov	r4,r3
   4dff0:	004e5d40 	call	4e5d4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4dff4:	e037883a 	mov	sp,fp
   4dff8:	dfc00117 	ldw	ra,4(sp)
   4dffc:	df000017 	ldw	fp,0(sp)
   4e000:	dec00204 	addi	sp,sp,8
   4e004:	f800283a 	ret

0004e008 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4e008:	defffa04 	addi	sp,sp,-24
   4e00c:	dfc00515 	stw	ra,20(sp)
   4e010:	df000415 	stw	fp,16(sp)
   4e014:	df000404 	addi	fp,sp,16
   4e018:	e13ffe15 	stw	r4,-8(fp)
   4e01c:	e17ffd15 	stw	r5,-12(fp)
   4e020:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4e024:	e0bffe17 	ldw	r2,-8(fp)
   4e028:	10800017 	ldw	r2,0(r2)
   4e02c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4e030:	e0bfff17 	ldw	r2,-4(fp)
   4e034:	10c00a04 	addi	r3,r2,40
   4e038:	e0bffe17 	ldw	r2,-8(fp)
   4e03c:	10800217 	ldw	r2,8(r2)
   4e040:	100f883a 	mov	r7,r2
   4e044:	e1bffc17 	ldw	r6,-16(fp)
   4e048:	e17ffd17 	ldw	r5,-12(fp)
   4e04c:	1809883a 	mov	r4,r3
   4e050:	004e7f40 	call	4e7f4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4e054:	e037883a 	mov	sp,fp
   4e058:	dfc00117 	ldw	ra,4(sp)
   4e05c:	df000017 	ldw	fp,0(sp)
   4e060:	dec00204 	addi	sp,sp,8
   4e064:	f800283a 	ret

0004e068 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4e068:	defffc04 	addi	sp,sp,-16
   4e06c:	dfc00315 	stw	ra,12(sp)
   4e070:	df000215 	stw	fp,8(sp)
   4e074:	df000204 	addi	fp,sp,8
   4e078:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4e07c:	e0bffe17 	ldw	r2,-8(fp)
   4e080:	10800017 	ldw	r2,0(r2)
   4e084:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4e088:	e0bfff17 	ldw	r2,-4(fp)
   4e08c:	10c00a04 	addi	r3,r2,40
   4e090:	e0bffe17 	ldw	r2,-8(fp)
   4e094:	10800217 	ldw	r2,8(r2)
   4e098:	100b883a 	mov	r5,r2
   4e09c:	1809883a 	mov	r4,r3
   4e0a0:	004e4780 	call	4e478 <altera_avalon_jtag_uart_close>
}
   4e0a4:	e037883a 	mov	sp,fp
   4e0a8:	dfc00117 	ldw	ra,4(sp)
   4e0ac:	df000017 	ldw	fp,0(sp)
   4e0b0:	dec00204 	addi	sp,sp,8
   4e0b4:	f800283a 	ret

0004e0b8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4e0b8:	defffa04 	addi	sp,sp,-24
   4e0bc:	dfc00515 	stw	ra,20(sp)
   4e0c0:	df000415 	stw	fp,16(sp)
   4e0c4:	df000404 	addi	fp,sp,16
   4e0c8:	e13ffe15 	stw	r4,-8(fp)
   4e0cc:	e17ffd15 	stw	r5,-12(fp)
   4e0d0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4e0d4:	e0bffe17 	ldw	r2,-8(fp)
   4e0d8:	10800017 	ldw	r2,0(r2)
   4e0dc:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4e0e0:	e0bfff17 	ldw	r2,-4(fp)
   4e0e4:	10800a04 	addi	r2,r2,40
   4e0e8:	e1bffc17 	ldw	r6,-16(fp)
   4e0ec:	e17ffd17 	ldw	r5,-12(fp)
   4e0f0:	1009883a 	mov	r4,r2
   4e0f4:	004e4e00 	call	4e4e0 <altera_avalon_jtag_uart_ioctl>
}
   4e0f8:	e037883a 	mov	sp,fp
   4e0fc:	dfc00117 	ldw	ra,4(sp)
   4e100:	df000017 	ldw	fp,0(sp)
   4e104:	dec00204 	addi	sp,sp,8
   4e108:	f800283a 	ret

0004e10c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4e10c:	defffa04 	addi	sp,sp,-24
   4e110:	dfc00515 	stw	ra,20(sp)
   4e114:	df000415 	stw	fp,16(sp)
   4e118:	df000404 	addi	fp,sp,16
   4e11c:	e13fff15 	stw	r4,-4(fp)
   4e120:	e17ffe15 	stw	r5,-8(fp)
   4e124:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e128:	e0bfff17 	ldw	r2,-4(fp)
   4e12c:	00c00044 	movi	r3,1
   4e130:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4e134:	e0bfff17 	ldw	r2,-4(fp)
   4e138:	10800017 	ldw	r2,0(r2)
   4e13c:	10800104 	addi	r2,r2,4
   4e140:	1007883a 	mov	r3,r2
   4e144:	e0bfff17 	ldw	r2,-4(fp)
   4e148:	10800817 	ldw	r2,32(r2)
   4e14c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4e150:	e0bffe17 	ldw	r2,-8(fp)
   4e154:	e0fffd17 	ldw	r3,-12(fp)
   4e158:	d8000015 	stw	zero,0(sp)
   4e15c:	e1ffff17 	ldw	r7,-4(fp)
   4e160:	01800174 	movhi	r6,5
   4e164:	31b87304 	addi	r6,r6,-7732
   4e168:	180b883a 	mov	r5,r3
   4e16c:	1009883a 	mov	r4,r2
   4e170:	004eed40 	call	4eed4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4e174:	e0bfff17 	ldw	r2,-4(fp)
   4e178:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4e17c:	e0bfff17 	ldw	r2,-4(fp)
   4e180:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4e184:	d0e70d17 	ldw	r3,-25548(gp)
   4e188:	e1ffff17 	ldw	r7,-4(fp)
   4e18c:	01800174 	movhi	r6,5
   4e190:	31b8f604 	addi	r6,r6,-7208
   4e194:	180b883a 	mov	r5,r3
   4e198:	1009883a 	mov	r4,r2
   4e19c:	004ea1c0 	call	4ea1c <alt_alarm_start>
   4e1a0:	1000040e 	bge	r2,zero,4e1b4 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4e1a4:	e0ffff17 	ldw	r3,-4(fp)
   4e1a8:	00a00034 	movhi	r2,32768
   4e1ac:	10bfffc4 	addi	r2,r2,-1
   4e1b0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4e1b4:	0001883a 	nop
   4e1b8:	e037883a 	mov	sp,fp
   4e1bc:	dfc00117 	ldw	ra,4(sp)
   4e1c0:	df000017 	ldw	fp,0(sp)
   4e1c4:	dec00204 	addi	sp,sp,8
   4e1c8:	f800283a 	ret

0004e1cc <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4e1cc:	defff804 	addi	sp,sp,-32
   4e1d0:	df000715 	stw	fp,28(sp)
   4e1d4:	df000704 	addi	fp,sp,28
   4e1d8:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4e1dc:	e0bff917 	ldw	r2,-28(fp)
   4e1e0:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
   4e1e4:	e0bffd17 	ldw	r2,-12(fp)
   4e1e8:	10800017 	ldw	r2,0(r2)
   4e1ec:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e1f0:	e0bffc17 	ldw	r2,-16(fp)
   4e1f4:	10800104 	addi	r2,r2,4
   4e1f8:	10800037 	ldwio	r2,0(r2)
   4e1fc:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4e200:	e0bffb17 	ldw	r2,-20(fp)
   4e204:	1080c00c 	andi	r2,r2,768
   4e208:	10006d26 	beq	r2,zero,4e3c0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4e20c:	e0bffb17 	ldw	r2,-20(fp)
   4e210:	1080400c 	andi	r2,r2,256
   4e214:	10003526 	beq	r2,zero,4e2ec <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4e218:	00800074 	movhi	r2,1
   4e21c:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e220:	e0bffd17 	ldw	r2,-12(fp)
   4e224:	10800a17 	ldw	r2,40(r2)
   4e228:	10800044 	addi	r2,r2,1
   4e22c:	1081ffcc 	andi	r2,r2,2047
   4e230:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   4e234:	e0bffd17 	ldw	r2,-12(fp)
   4e238:	10800b17 	ldw	r2,44(r2)
   4e23c:	e0fffa17 	ldw	r3,-24(fp)
   4e240:	18801526 	beq	r3,r2,4e298 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4e244:	e0bffc17 	ldw	r2,-16(fp)
   4e248:	10800037 	ldwio	r2,0(r2)
   4e24c:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4e250:	e0bfff17 	ldw	r2,-4(fp)
   4e254:	10a0000c 	andi	r2,r2,32768
   4e258:	10001126 	beq	r2,zero,4e2a0 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4e25c:	e0bffd17 	ldw	r2,-12(fp)
   4e260:	10800a17 	ldw	r2,40(r2)
   4e264:	e0ffff17 	ldw	r3,-4(fp)
   4e268:	1809883a 	mov	r4,r3
   4e26c:	e0fffd17 	ldw	r3,-12(fp)
   4e270:	1885883a 	add	r2,r3,r2
   4e274:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e278:	e0bffd17 	ldw	r2,-12(fp)
   4e27c:	10800a17 	ldw	r2,40(r2)
   4e280:	10800044 	addi	r2,r2,1
   4e284:	10c1ffcc 	andi	r3,r2,2047
   4e288:	e0bffd17 	ldw	r2,-12(fp)
   4e28c:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   4e290:	0001883a 	nop
      {
   4e294:	003fe206 	br	4e220 <altera_avalon_jtag_uart_irq+0x54>
          break;
   4e298:	0001883a 	nop
   4e29c:	00000106 	br	4e2a4 <altera_avalon_jtag_uart_irq+0xd8>
          break;
   4e2a0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4e2a4:	e0bfff17 	ldw	r2,-4(fp)
   4e2a8:	10bfffec 	andhi	r2,r2,65535
   4e2ac:	10000f26 	beq	r2,zero,4e2ec <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e2b0:	e0bffd17 	ldw	r2,-12(fp)
   4e2b4:	10c00817 	ldw	r3,32(r2)
   4e2b8:	00bfff84 	movi	r2,-2
   4e2bc:	1886703a 	and	r3,r3,r2
   4e2c0:	e0bffd17 	ldw	r2,-12(fp)
   4e2c4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4e2c8:	e0bffc17 	ldw	r2,-16(fp)
   4e2cc:	10800104 	addi	r2,r2,4
   4e2d0:	1007883a 	mov	r3,r2
   4e2d4:	e0bffd17 	ldw	r2,-12(fp)
   4e2d8:	10800817 	ldw	r2,32(r2)
   4e2dc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e2e0:	e0bffc17 	ldw	r2,-16(fp)
   4e2e4:	10800104 	addi	r2,r2,4
   4e2e8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4e2ec:	e0bffb17 	ldw	r2,-20(fp)
   4e2f0:	1080800c 	andi	r2,r2,512
   4e2f4:	103fbe26 	beq	r2,zero,4e1f0 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4e2f8:	e0bffb17 	ldw	r2,-20(fp)
   4e2fc:	1004d43a 	srli	r2,r2,16
   4e300:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4e304:	00001406 	br	4e358 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4e308:	e0bffc17 	ldw	r2,-16(fp)
   4e30c:	e0fffd17 	ldw	r3,-12(fp)
   4e310:	18c00d17 	ldw	r3,52(r3)
   4e314:	e13ffd17 	ldw	r4,-12(fp)
   4e318:	20c7883a 	add	r3,r4,r3
   4e31c:	18c20e03 	ldbu	r3,2104(r3)
   4e320:	18c03fcc 	andi	r3,r3,255
   4e324:	18c0201c 	xori	r3,r3,128
   4e328:	18ffe004 	addi	r3,r3,-128
   4e32c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e330:	e0bffd17 	ldw	r2,-12(fp)
   4e334:	10800d17 	ldw	r2,52(r2)
   4e338:	10800044 	addi	r2,r2,1
   4e33c:	10c1ffcc 	andi	r3,r2,2047
   4e340:	e0bffd17 	ldw	r2,-12(fp)
   4e344:	10c00d15 	stw	r3,52(r2)
   4e348:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   4e34c:	e0bffe17 	ldw	r2,-8(fp)
   4e350:	10bfffc4 	addi	r2,r2,-1
   4e354:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   4e358:	e0bffe17 	ldw	r2,-8(fp)
   4e35c:	10000526 	beq	r2,zero,4e374 <altera_avalon_jtag_uart_irq+0x1a8>
   4e360:	e0bffd17 	ldw	r2,-12(fp)
   4e364:	10c00d17 	ldw	r3,52(r2)
   4e368:	e0bffd17 	ldw	r2,-12(fp)
   4e36c:	10800c17 	ldw	r2,48(r2)
   4e370:	18bfe51e 	bne	r3,r2,4e308 <altera_avalon_jtag_uart_irq+0x13c>
      }

      if (space > 0)
   4e374:	e0bffe17 	ldw	r2,-8(fp)
   4e378:	103f9d26 	beq	r2,zero,4e1f0 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e37c:	e0bffd17 	ldw	r2,-12(fp)
   4e380:	10c00817 	ldw	r3,32(r2)
   4e384:	00bfff44 	movi	r2,-3
   4e388:	1886703a 	and	r3,r3,r2
   4e38c:	e0bffd17 	ldw	r2,-12(fp)
   4e390:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e394:	e0bffd17 	ldw	r2,-12(fp)
   4e398:	10800017 	ldw	r2,0(r2)
   4e39c:	10800104 	addi	r2,r2,4
   4e3a0:	1007883a 	mov	r3,r2
   4e3a4:	e0bffd17 	ldw	r2,-12(fp)
   4e3a8:	10800817 	ldw	r2,32(r2)
   4e3ac:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e3b0:	e0bffc17 	ldw	r2,-16(fp)
   4e3b4:	10800104 	addi	r2,r2,4
   4e3b8:	10800037 	ldwio	r2,0(r2)
  {
   4e3bc:	003f8c06 	br	4e1f0 <altera_avalon_jtag_uart_irq+0x24>
      break;
   4e3c0:	0001883a 	nop
      }
    }
  }
}
   4e3c4:	0001883a 	nop
   4e3c8:	e037883a 	mov	sp,fp
   4e3cc:	df000017 	ldw	fp,0(sp)
   4e3d0:	dec00104 	addi	sp,sp,4
   4e3d4:	f800283a 	ret

0004e3d8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4e3d8:	defffc04 	addi	sp,sp,-16
   4e3dc:	df000315 	stw	fp,12(sp)
   4e3e0:	df000304 	addi	fp,sp,12
   4e3e4:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4e3e8:	e0bffd17 	ldw	r2,-12(fp)
   4e3ec:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4e3f0:	e0bfff17 	ldw	r2,-4(fp)
   4e3f4:	10800017 	ldw	r2,0(r2)
   4e3f8:	10800104 	addi	r2,r2,4
   4e3fc:	10800037 	ldwio	r2,0(r2)
   4e400:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4e404:	e0bffe17 	ldw	r2,-8(fp)
   4e408:	1081000c 	andi	r2,r2,1024
   4e40c:	10000b26 	beq	r2,zero,4e43c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4e410:	e0bfff17 	ldw	r2,-4(fp)
   4e414:	10800017 	ldw	r2,0(r2)
   4e418:	10800104 	addi	r2,r2,4
   4e41c:	1007883a 	mov	r3,r2
   4e420:	e0bfff17 	ldw	r2,-4(fp)
   4e424:	10800817 	ldw	r2,32(r2)
   4e428:	10810014 	ori	r2,r2,1024
   4e42c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4e430:	e0bfff17 	ldw	r2,-4(fp)
   4e434:	10000915 	stw	zero,36(r2)
   4e438:	00000a06 	br	4e464 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4e43c:	e0bfff17 	ldw	r2,-4(fp)
   4e440:	10c00917 	ldw	r3,36(r2)
   4e444:	00a00034 	movhi	r2,32768
   4e448:	10bfff04 	addi	r2,r2,-4
   4e44c:	10c00536 	bltu	r2,r3,4e464 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   4e450:	e0bfff17 	ldw	r2,-4(fp)
   4e454:	10800917 	ldw	r2,36(r2)
   4e458:	10c00044 	addi	r3,r2,1
   4e45c:	e0bfff17 	ldw	r2,-4(fp)
   4e460:	10c00915 	stw	r3,36(r2)
   4e464:	d0a70d17 	ldw	r2,-25548(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4e468:	e037883a 	mov	sp,fp
   4e46c:	df000017 	ldw	fp,0(sp)
   4e470:	dec00104 	addi	sp,sp,4
   4e474:	f800283a 	ret

0004e478 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4e478:	defffd04 	addi	sp,sp,-12
   4e47c:	df000215 	stw	fp,8(sp)
   4e480:	df000204 	addi	fp,sp,8
   4e484:	e13fff15 	stw	r4,-4(fp)
   4e488:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4e48c:	00000506 	br	4e4a4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4e490:	e0bffe17 	ldw	r2,-8(fp)
   4e494:	1090000c 	andi	r2,r2,16384
   4e498:	10000226 	beq	r2,zero,4e4a4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4e49c:	00bffd44 	movi	r2,-11
   4e4a0:	00000b06 	br	4e4d0 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4e4a4:	e0bfff17 	ldw	r2,-4(fp)
   4e4a8:	10c00d17 	ldw	r3,52(r2)
   4e4ac:	e0bfff17 	ldw	r2,-4(fp)
   4e4b0:	10800c17 	ldw	r2,48(r2)
   4e4b4:	18800526 	beq	r3,r2,4e4cc <altera_avalon_jtag_uart_close+0x54>
   4e4b8:	e0bfff17 	ldw	r2,-4(fp)
   4e4bc:	10c00917 	ldw	r3,36(r2)
   4e4c0:	e0bfff17 	ldw	r2,-4(fp)
   4e4c4:	10800117 	ldw	r2,4(r2)
   4e4c8:	18bff136 	bltu	r3,r2,4e490 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   4e4cc:	0005883a 	mov	r2,zero
}
   4e4d0:	e037883a 	mov	sp,fp
   4e4d4:	df000017 	ldw	fp,0(sp)
   4e4d8:	dec00104 	addi	sp,sp,4
   4e4dc:	f800283a 	ret

0004e4e0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4e4e0:	defffa04 	addi	sp,sp,-24
   4e4e4:	df000515 	stw	fp,20(sp)
   4e4e8:	df000504 	addi	fp,sp,20
   4e4ec:	e13ffd15 	stw	r4,-12(fp)
   4e4f0:	e17ffc15 	stw	r5,-16(fp)
   4e4f4:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   4e4f8:	00bff9c4 	movi	r2,-25
   4e4fc:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   4e500:	e0bffc17 	ldw	r2,-16(fp)
   4e504:	109a8060 	cmpeqi	r2,r2,27137
   4e508:	1000041e 	bne	r2,zero,4e51c <altera_avalon_jtag_uart_ioctl+0x3c>
   4e50c:	e0bffc17 	ldw	r2,-16(fp)
   4e510:	109a80a0 	cmpeqi	r2,r2,27138
   4e514:	1000181e 	bne	r2,zero,4e578 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   4e518:	00002906 	br	4e5c0 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   4e51c:	e0bffd17 	ldw	r2,-12(fp)
   4e520:	10c00117 	ldw	r3,4(r2)
   4e524:	00a00034 	movhi	r2,32768
   4e528:	10bfffc4 	addi	r2,r2,-1
   4e52c:	18802126 	beq	r3,r2,4e5b4 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   4e530:	e0bffb17 	ldw	r2,-20(fp)
   4e534:	10800017 	ldw	r2,0(r2)
   4e538:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4e53c:	e0bffe17 	ldw	r2,-8(fp)
   4e540:	10800090 	cmplti	r2,r2,2
   4e544:	1000061e 	bne	r2,zero,4e560 <altera_avalon_jtag_uart_ioctl+0x80>
   4e548:	e0fffe17 	ldw	r3,-8(fp)
   4e54c:	00a00034 	movhi	r2,32768
   4e550:	10bfffc4 	addi	r2,r2,-1
   4e554:	18800226 	beq	r3,r2,4e560 <altera_avalon_jtag_uart_ioctl+0x80>
   4e558:	e0bffe17 	ldw	r2,-8(fp)
   4e55c:	00000206 	br	4e568 <altera_avalon_jtag_uart_ioctl+0x88>
   4e560:	00a00034 	movhi	r2,32768
   4e564:	10bfff84 	addi	r2,r2,-2
   4e568:	e0fffd17 	ldw	r3,-12(fp)
   4e56c:	18800115 	stw	r2,4(r3)
      rc = 0;
   4e570:	e03fff15 	stw	zero,-4(fp)
    break;
   4e574:	00000f06 	br	4e5b4 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   4e578:	e0bffd17 	ldw	r2,-12(fp)
   4e57c:	10c00117 	ldw	r3,4(r2)
   4e580:	00a00034 	movhi	r2,32768
   4e584:	10bfffc4 	addi	r2,r2,-1
   4e588:	18800c26 	beq	r3,r2,4e5bc <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4e58c:	e0bffd17 	ldw	r2,-12(fp)
   4e590:	10c00917 	ldw	r3,36(r2)
   4e594:	e0bffd17 	ldw	r2,-12(fp)
   4e598:	10800117 	ldw	r2,4(r2)
   4e59c:	1885803a 	cmpltu	r2,r3,r2
   4e5a0:	10c03fcc 	andi	r3,r2,255
   4e5a4:	e0bffb17 	ldw	r2,-20(fp)
   4e5a8:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4e5ac:	e03fff15 	stw	zero,-4(fp)
    break;
   4e5b0:	00000206 	br	4e5bc <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   4e5b4:	0001883a 	nop
   4e5b8:	00000106 	br	4e5c0 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   4e5bc:	0001883a 	nop
  }

  return rc;
   4e5c0:	e0bfff17 	ldw	r2,-4(fp)
}
   4e5c4:	e037883a 	mov	sp,fp
   4e5c8:	df000017 	ldw	fp,0(sp)
   4e5cc:	dec00104 	addi	sp,sp,4
   4e5d0:	f800283a 	ret

0004e5d4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4e5d4:	defff304 	addi	sp,sp,-52
   4e5d8:	dfc00c15 	stw	ra,48(sp)
   4e5dc:	df000b15 	stw	fp,44(sp)
   4e5e0:	df000b04 	addi	fp,sp,44
   4e5e4:	e13ff815 	stw	r4,-32(fp)
   4e5e8:	e17ff715 	stw	r5,-36(fp)
   4e5ec:	e1bff615 	stw	r6,-40(fp)
   4e5f0:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   4e5f4:	e0bff717 	ldw	r2,-36(fp)
   4e5f8:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e5fc:	00004706 	br	4e71c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4e600:	e0bff817 	ldw	r2,-32(fp)
   4e604:	10800a17 	ldw	r2,40(r2)
   4e608:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   4e60c:	e0bff817 	ldw	r2,-32(fp)
   4e610:	10800b17 	ldw	r2,44(r2)
   4e614:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   4e618:	e0fffd17 	ldw	r3,-12(fp)
   4e61c:	e0bffc17 	ldw	r2,-16(fp)
   4e620:	18800536 	bltu	r3,r2,4e638 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4e624:	e0fffd17 	ldw	r3,-12(fp)
   4e628:	e0bffc17 	ldw	r2,-16(fp)
   4e62c:	1885c83a 	sub	r2,r3,r2
   4e630:	e0bffe15 	stw	r2,-8(fp)
   4e634:	00000406 	br	4e648 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4e638:	00c20004 	movi	r3,2048
   4e63c:	e0bffc17 	ldw	r2,-16(fp)
   4e640:	1885c83a 	sub	r2,r3,r2
   4e644:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   4e648:	e0bffe17 	ldw	r2,-8(fp)
   4e64c:	10001e26 	beq	r2,zero,4e6c8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4e650:	e0fff617 	ldw	r3,-40(fp)
   4e654:	e0bffe17 	ldw	r2,-8(fp)
   4e658:	1880022e 	bgeu	r3,r2,4e664 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4e65c:	e0bff617 	ldw	r2,-40(fp)
   4e660:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4e664:	e0bff817 	ldw	r2,-32(fp)
   4e668:	10c00e04 	addi	r3,r2,56
   4e66c:	e0bffc17 	ldw	r2,-16(fp)
   4e670:	1885883a 	add	r2,r3,r2
   4e674:	e1bffe17 	ldw	r6,-8(fp)
   4e678:	100b883a 	mov	r5,r2
   4e67c:	e13fff17 	ldw	r4,-4(fp)
   4e680:	0046a880 	call	46a88 <memcpy>
      ptr   += n;
   4e684:	e0ffff17 	ldw	r3,-4(fp)
   4e688:	e0bffe17 	ldw	r2,-8(fp)
   4e68c:	1885883a 	add	r2,r3,r2
   4e690:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   4e694:	e0fff617 	ldw	r3,-40(fp)
   4e698:	e0bffe17 	ldw	r2,-8(fp)
   4e69c:	1885c83a 	sub	r2,r3,r2
   4e6a0:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e6a4:	e0fffc17 	ldw	r3,-16(fp)
   4e6a8:	e0bffe17 	ldw	r2,-8(fp)
   4e6ac:	1885883a 	add	r2,r3,r2
   4e6b0:	10c1ffcc 	andi	r3,r2,2047
   4e6b4:	e0bff817 	ldw	r2,-32(fp)
   4e6b8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4e6bc:	e0bff617 	ldw	r2,-40(fp)
   4e6c0:	00bfcf16 	blt	zero,r2,4e600 <altera_avalon_jtag_uart_read+0x2c>
   4e6c4:	00000106 	br	4e6cc <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   4e6c8:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   4e6cc:	e0ffff17 	ldw	r3,-4(fp)
   4e6d0:	e0bff717 	ldw	r2,-36(fp)
   4e6d4:	1880141e 	bne	r3,r2,4e728 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4e6d8:	e0bff517 	ldw	r2,-44(fp)
   4e6dc:	1090000c 	andi	r2,r2,16384
   4e6e0:	1000131e 	bne	r2,zero,4e730 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4e6e4:	0001883a 	nop
   4e6e8:	e0bff817 	ldw	r2,-32(fp)
   4e6ec:	10800a17 	ldw	r2,40(r2)
   4e6f0:	e0fffd17 	ldw	r3,-12(fp)
   4e6f4:	1880051e 	bne	r3,r2,4e70c <altera_avalon_jtag_uart_read+0x138>
   4e6f8:	e0bff817 	ldw	r2,-32(fp)
   4e6fc:	10c00917 	ldw	r3,36(r2)
   4e700:	e0bff817 	ldw	r2,-32(fp)
   4e704:	10800117 	ldw	r2,4(r2)
   4e708:	18bff736 	bltu	r3,r2,4e6e8 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4e70c:	e0bff817 	ldw	r2,-32(fp)
   4e710:	10800a17 	ldw	r2,40(r2)
   4e714:	e0fffd17 	ldw	r3,-12(fp)
   4e718:	18800726 	beq	r3,r2,4e738 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   4e71c:	e0bff617 	ldw	r2,-40(fp)
   4e720:	00bfb716 	blt	zero,r2,4e600 <altera_avalon_jtag_uart_read+0x2c>
   4e724:	00000506 	br	4e73c <altera_avalon_jtag_uart_read+0x168>
      break;
   4e728:	0001883a 	nop
   4e72c:	00000306 	br	4e73c <altera_avalon_jtag_uart_read+0x168>
      break;
   4e730:	0001883a 	nop
   4e734:	00000106 	br	4e73c <altera_avalon_jtag_uart_read+0x168>
      break;
   4e738:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4e73c:	e0ffff17 	ldw	r3,-4(fp)
   4e740:	e0bff717 	ldw	r2,-36(fp)
   4e744:	18801926 	beq	r3,r2,4e7ac <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   4e748:	0005303a 	rdctl	r2,status
   4e74c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e750:	e0fff917 	ldw	r3,-28(fp)
   4e754:	00bfff84 	movi	r2,-2
   4e758:	1884703a 	and	r2,r3,r2
   4e75c:	1001703a 	wrctl	status,r2
  return context;
   4e760:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4e764:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e768:	e0bff817 	ldw	r2,-32(fp)
   4e76c:	10800817 	ldw	r2,32(r2)
   4e770:	10c00054 	ori	r3,r2,1
   4e774:	e0bff817 	ldw	r2,-32(fp)
   4e778:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e77c:	e0bff817 	ldw	r2,-32(fp)
   4e780:	10800017 	ldw	r2,0(r2)
   4e784:	10800104 	addi	r2,r2,4
   4e788:	1007883a 	mov	r3,r2
   4e78c:	e0bff817 	ldw	r2,-32(fp)
   4e790:	10800817 	ldw	r2,32(r2)
   4e794:	18800035 	stwio	r2,0(r3)
   4e798:	e0bffb17 	ldw	r2,-20(fp)
   4e79c:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   4e7a0:	e0bffa17 	ldw	r2,-24(fp)
   4e7a4:	1001703a 	wrctl	status,r2
}
   4e7a8:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4e7ac:	e0ffff17 	ldw	r3,-4(fp)
   4e7b0:	e0bff717 	ldw	r2,-36(fp)
   4e7b4:	18800426 	beq	r3,r2,4e7c8 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   4e7b8:	e0ffff17 	ldw	r3,-4(fp)
   4e7bc:	e0bff717 	ldw	r2,-36(fp)
   4e7c0:	1885c83a 	sub	r2,r3,r2
   4e7c4:	00000606 	br	4e7e0 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   4e7c8:	e0bff517 	ldw	r2,-44(fp)
   4e7cc:	1090000c 	andi	r2,r2,16384
   4e7d0:	10000226 	beq	r2,zero,4e7dc <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   4e7d4:	00bffd44 	movi	r2,-11
   4e7d8:	00000106 	br	4e7e0 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   4e7dc:	00bffec4 	movi	r2,-5
}
   4e7e0:	e037883a 	mov	sp,fp
   4e7e4:	dfc00117 	ldw	ra,4(sp)
   4e7e8:	df000017 	ldw	fp,0(sp)
   4e7ec:	dec00204 	addi	sp,sp,8
   4e7f0:	f800283a 	ret

0004e7f4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4e7f4:	defff304 	addi	sp,sp,-52
   4e7f8:	dfc00c15 	stw	ra,48(sp)
   4e7fc:	df000b15 	stw	fp,44(sp)
   4e800:	df000b04 	addi	fp,sp,44
   4e804:	e13ff815 	stw	r4,-32(fp)
   4e808:	e17ff715 	stw	r5,-36(fp)
   4e80c:	e1bff615 	stw	r6,-40(fp)
   4e810:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4e814:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4e818:	e0bff717 	ldw	r2,-36(fp)
   4e81c:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e820:	00003706 	br	4e900 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4e824:	e0bff817 	ldw	r2,-32(fp)
   4e828:	10800c17 	ldw	r2,48(r2)
   4e82c:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   4e830:	e0bff817 	ldw	r2,-32(fp)
   4e834:	10800d17 	ldw	r2,52(r2)
   4e838:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   4e83c:	e0fffc17 	ldw	r3,-16(fp)
   4e840:	e0bfff17 	ldw	r2,-4(fp)
   4e844:	1880062e 	bgeu	r3,r2,4e860 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4e848:	e0ffff17 	ldw	r3,-4(fp)
   4e84c:	e0bffc17 	ldw	r2,-16(fp)
   4e850:	1885c83a 	sub	r2,r3,r2
   4e854:	10bfffc4 	addi	r2,r2,-1
   4e858:	e0bffe15 	stw	r2,-8(fp)
   4e85c:	00000b06 	br	4e88c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4e860:	e0bfff17 	ldw	r2,-4(fp)
   4e864:	10000526 	beq	r2,zero,4e87c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4e868:	00c20004 	movi	r3,2048
   4e86c:	e0bffc17 	ldw	r2,-16(fp)
   4e870:	1885c83a 	sub	r2,r3,r2
   4e874:	e0bffe15 	stw	r2,-8(fp)
   4e878:	00000406 	br	4e88c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4e87c:	00c1ffc4 	movi	r3,2047
   4e880:	e0bffc17 	ldw	r2,-16(fp)
   4e884:	1885c83a 	sub	r2,r3,r2
   4e888:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   4e88c:	e0bffe17 	ldw	r2,-8(fp)
   4e890:	10001e26 	beq	r2,zero,4e90c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4e894:	e0fff617 	ldw	r3,-40(fp)
   4e898:	e0bffe17 	ldw	r2,-8(fp)
   4e89c:	1880022e 	bgeu	r3,r2,4e8a8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4e8a0:	e0bff617 	ldw	r2,-40(fp)
   4e8a4:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4e8a8:	e0bff817 	ldw	r2,-32(fp)
   4e8ac:	10c20e04 	addi	r3,r2,2104
   4e8b0:	e0bffc17 	ldw	r2,-16(fp)
   4e8b4:	1885883a 	add	r2,r3,r2
   4e8b8:	e1bffe17 	ldw	r6,-8(fp)
   4e8bc:	e17ff717 	ldw	r5,-36(fp)
   4e8c0:	1009883a 	mov	r4,r2
   4e8c4:	0046a880 	call	46a88 <memcpy>
      ptr   += n;
   4e8c8:	e0fff717 	ldw	r3,-36(fp)
   4e8cc:	e0bffe17 	ldw	r2,-8(fp)
   4e8d0:	1885883a 	add	r2,r3,r2
   4e8d4:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   4e8d8:	e0fff617 	ldw	r3,-40(fp)
   4e8dc:	e0bffe17 	ldw	r2,-8(fp)
   4e8e0:	1885c83a 	sub	r2,r3,r2
   4e8e4:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e8e8:	e0fffc17 	ldw	r3,-16(fp)
   4e8ec:	e0bffe17 	ldw	r2,-8(fp)
   4e8f0:	1885883a 	add	r2,r3,r2
   4e8f4:	10c1ffcc 	andi	r3,r2,2047
   4e8f8:	e0bff817 	ldw	r2,-32(fp)
   4e8fc:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   4e900:	e0bff617 	ldw	r2,-40(fp)
   4e904:	00bfc716 	blt	zero,r2,4e824 <altera_avalon_jtag_uart_write+0x30>
   4e908:	00000106 	br	4e910 <altera_avalon_jtag_uart_write+0x11c>
        break;
   4e90c:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   4e910:	0005303a 	rdctl	r2,status
   4e914:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e918:	e0fff917 	ldw	r3,-28(fp)
   4e91c:	00bfff84 	movi	r2,-2
   4e920:	1884703a 	and	r2,r3,r2
   4e924:	1001703a 	wrctl	status,r2
  return context;
   4e928:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4e92c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e930:	e0bff817 	ldw	r2,-32(fp)
   4e934:	10800817 	ldw	r2,32(r2)
   4e938:	10c00094 	ori	r3,r2,2
   4e93c:	e0bff817 	ldw	r2,-32(fp)
   4e940:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e944:	e0bff817 	ldw	r2,-32(fp)
   4e948:	10800017 	ldw	r2,0(r2)
   4e94c:	10800104 	addi	r2,r2,4
   4e950:	1007883a 	mov	r3,r2
   4e954:	e0bff817 	ldw	r2,-32(fp)
   4e958:	10800817 	ldw	r2,32(r2)
   4e95c:	18800035 	stwio	r2,0(r3)
   4e960:	e0bffb17 	ldw	r2,-20(fp)
   4e964:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   4e968:	e0bffa17 	ldw	r2,-24(fp)
   4e96c:	1001703a 	wrctl	status,r2
}
   4e970:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4e974:	e0bff617 	ldw	r2,-40(fp)
   4e978:	0080100e 	bge	zero,r2,4e9bc <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   4e97c:	e0bff517 	ldw	r2,-44(fp)
   4e980:	1090000c 	andi	r2,r2,16384
   4e984:	1000101e 	bne	r2,zero,4e9c8 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4e988:	0001883a 	nop
   4e98c:	e0bff817 	ldw	r2,-32(fp)
   4e990:	10800d17 	ldw	r2,52(r2)
   4e994:	e0ffff17 	ldw	r3,-4(fp)
   4e998:	1880051e 	bne	r3,r2,4e9b0 <altera_avalon_jtag_uart_write+0x1bc>
   4e99c:	e0bff817 	ldw	r2,-32(fp)
   4e9a0:	10c00917 	ldw	r3,36(r2)
   4e9a4:	e0bff817 	ldw	r2,-32(fp)
   4e9a8:	10800117 	ldw	r2,4(r2)
   4e9ac:	18bff736 	bltu	r3,r2,4e98c <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4e9b0:	e0bff817 	ldw	r2,-32(fp)
   4e9b4:	10800917 	ldw	r2,36(r2)
   4e9b8:	1000051e 	bne	r2,zero,4e9d0 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   4e9bc:	e0bff617 	ldw	r2,-40(fp)
   4e9c0:	00bfcf16 	blt	zero,r2,4e900 <altera_avalon_jtag_uart_write+0x10c>
   4e9c4:	00000306 	br	4e9d4 <altera_avalon_jtag_uart_write+0x1e0>
        break;
   4e9c8:	0001883a 	nop
   4e9cc:	00000106 	br	4e9d4 <altera_avalon_jtag_uart_write+0x1e0>
         break;
   4e9d0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4e9d4:	e0fff717 	ldw	r3,-36(fp)
   4e9d8:	e0bffd17 	ldw	r2,-12(fp)
   4e9dc:	18800426 	beq	r3,r2,4e9f0 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   4e9e0:	e0fff717 	ldw	r3,-36(fp)
   4e9e4:	e0bffd17 	ldw	r2,-12(fp)
   4e9e8:	1885c83a 	sub	r2,r3,r2
   4e9ec:	00000606 	br	4ea08 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   4e9f0:	e0bff517 	ldw	r2,-44(fp)
   4e9f4:	1090000c 	andi	r2,r2,16384
   4e9f8:	10000226 	beq	r2,zero,4ea04 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   4e9fc:	00bffd44 	movi	r2,-11
   4ea00:	00000106 	br	4ea08 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4ea04:	00bffec4 	movi	r2,-5
}
   4ea08:	e037883a 	mov	sp,fp
   4ea0c:	dfc00117 	ldw	ra,4(sp)
   4ea10:	df000017 	ldw	fp,0(sp)
   4ea14:	dec00204 	addi	sp,sp,8
   4ea18:	f800283a 	ret

0004ea1c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   4ea1c:	defff504 	addi	sp,sp,-44
   4ea20:	df000a15 	stw	fp,40(sp)
   4ea24:	df000a04 	addi	fp,sp,40
   4ea28:	e13ff915 	stw	r4,-28(fp)
   4ea2c:	e17ff815 	stw	r5,-32(fp)
   4ea30:	e1bff715 	stw	r6,-36(fp)
   4ea34:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   4ea38:	e03fff15 	stw	zero,-4(fp)
   4ea3c:	d0a70d17 	ldw	r2,-25548(gp)
  
  if (alt_ticks_per_second ())
   4ea40:	10003e26 	beq	r2,zero,4eb3c <alt_alarm_start+0x120>
  {
    if (alarm)
   4ea44:	e0bff917 	ldw	r2,-28(fp)
   4ea48:	10003a26 	beq	r2,zero,4eb34 <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
   4ea4c:	e0bff917 	ldw	r2,-28(fp)
   4ea50:	e0fff717 	ldw	r3,-36(fp)
   4ea54:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   4ea58:	e0bff917 	ldw	r2,-28(fp)
   4ea5c:	e0fff617 	ldw	r3,-40(fp)
   4ea60:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   4ea64:	0005303a 	rdctl	r2,status
   4ea68:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ea6c:	e0fffd17 	ldw	r3,-12(fp)
   4ea70:	00bfff84 	movi	r2,-2
   4ea74:	1884703a 	and	r2,r3,r2
   4ea78:	1001703a 	wrctl	status,r2
  return context;
   4ea7c:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
   4ea80:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   4ea84:	d0a70e17 	ldw	r2,-25544(gp)
      
      current_nticks = alt_nticks();
   4ea88:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   4ea8c:	e0fff817 	ldw	r3,-32(fp)
   4ea90:	e0bfff17 	ldw	r2,-4(fp)
   4ea94:	1885883a 	add	r2,r3,r2
   4ea98:	10c00044 	addi	r3,r2,1
   4ea9c:	e0bff917 	ldw	r2,-28(fp)
   4eaa0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   4eaa4:	e0bff917 	ldw	r2,-28(fp)
   4eaa8:	10c00217 	ldw	r3,8(r2)
   4eaac:	e0bfff17 	ldw	r2,-4(fp)
   4eab0:	1880042e 	bgeu	r3,r2,4eac4 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   4eab4:	e0bff917 	ldw	r2,-28(fp)
   4eab8:	00c00044 	movi	r3,1
   4eabc:	10c00405 	stb	r3,16(r2)
   4eac0:	00000206 	br	4eacc <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   4eac4:	e0bff917 	ldw	r2,-28(fp)
   4eac8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   4eacc:	e0bff917 	ldw	r2,-28(fp)
   4ead0:	d0e00c04 	addi	r3,gp,-32720
   4ead4:	e0fffb15 	stw	r3,-20(fp)
   4ead8:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4eadc:	e0bffa17 	ldw	r2,-24(fp)
   4eae0:	e0fffb17 	ldw	r3,-20(fp)
   4eae4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4eae8:	e0bffb17 	ldw	r2,-20(fp)
   4eaec:	10c00017 	ldw	r3,0(r2)
   4eaf0:	e0bffa17 	ldw	r2,-24(fp)
   4eaf4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4eaf8:	e0bffb17 	ldw	r2,-20(fp)
   4eafc:	10800017 	ldw	r2,0(r2)
   4eb00:	e0fffa17 	ldw	r3,-24(fp)
   4eb04:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4eb08:	e0bffb17 	ldw	r2,-20(fp)
   4eb0c:	e0fffa17 	ldw	r3,-24(fp)
   4eb10:	10c00015 	stw	r3,0(r2)
}
   4eb14:	0001883a 	nop
   4eb18:	e0bffe17 	ldw	r2,-8(fp)
   4eb1c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4eb20:	e0bffc17 	ldw	r2,-16(fp)
   4eb24:	1001703a 	wrctl	status,r2
}
   4eb28:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   4eb2c:	0005883a 	mov	r2,zero
   4eb30:	00000306 	br	4eb40 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
   4eb34:	00bffa84 	movi	r2,-22
   4eb38:	00000106 	br	4eb40 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
   4eb3c:	00bfde84 	movi	r2,-134
  }
}
   4eb40:	e037883a 	mov	sp,fp
   4eb44:	df000017 	ldw	fp,0(sp)
   4eb48:	dec00104 	addi	sp,sp,4
   4eb4c:	f800283a 	ret

0004eb50 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   4eb50:	defffa04 	addi	sp,sp,-24
   4eb54:	dfc00515 	stw	ra,20(sp)
   4eb58:	df000415 	stw	fp,16(sp)
   4eb5c:	df000404 	addi	fp,sp,16
   4eb60:	e13ffc15 	stw	r4,-16(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   4eb64:	008000c4 	movi	r2,3
   4eb68:	e0bffe15 	stw	r2,-8(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   4eb6c:	e0fffe17 	ldw	r3,-8(fp)
   4eb70:	008003f4 	movhi	r2,15
   4eb74:	10909004 	addi	r2,r2,16960
   4eb78:	1885383a 	mul	r2,r3,r2
   4eb7c:	100b883a 	mov	r5,r2
   4eb80:	01017db4 	movhi	r4,1526
   4eb84:	21384004 	addi	r4,r4,-7936
   4eb88:	0040fa40 	call	40fa4 <__udivsi3>
  big_loops = us / (INT_MAX/
   4eb8c:	100b883a 	mov	r5,r2
   4eb90:	01200034 	movhi	r4,32768
   4eb94:	213fffc4 	addi	r4,r4,-1
   4eb98:	0040fa40 	call	40fa4 <__udivsi3>
   4eb9c:	100b883a 	mov	r5,r2
   4eba0:	e13ffc17 	ldw	r4,-16(fp)
   4eba4:	0040fa40 	call	40fa4 <__udivsi3>
   4eba8:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
   4ebac:	e0bffd17 	ldw	r2,-12(fp)
   4ebb0:	10002a26 	beq	r2,zero,4ec5c <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   4ebb4:	e03fff15 	stw	zero,-4(fp)
   4ebb8:	00001706 	br	4ec18 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   4ebbc:	00a00034 	movhi	r2,32768
   4ebc0:	10bfffc4 	addi	r2,r2,-1
   4ebc4:	10bfffc4 	addi	r2,r2,-1
   4ebc8:	103ffe1e 	bne	r2,zero,4ebc4 <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   4ebcc:	e0fffe17 	ldw	r3,-8(fp)
   4ebd0:	008003f4 	movhi	r2,15
   4ebd4:	10909004 	addi	r2,r2,16960
   4ebd8:	1885383a 	mul	r2,r3,r2
      us -= (INT_MAX/(ALT_CPU_FREQ/
   4ebdc:	100b883a 	mov	r5,r2
   4ebe0:	01017db4 	movhi	r4,1526
   4ebe4:	21384004 	addi	r4,r4,-7936
   4ebe8:	0040fa40 	call	40fa4 <__udivsi3>
   4ebec:	100b883a 	mov	r5,r2
   4ebf0:	01200034 	movhi	r4,32768
   4ebf4:	213fffc4 	addi	r4,r4,-1
   4ebf8:	0040fa40 	call	40fa4 <__udivsi3>
   4ebfc:	1007883a 	mov	r3,r2
   4ec00:	e0bffc17 	ldw	r2,-16(fp)
   4ec04:	10c5c83a 	sub	r2,r2,r3
   4ec08:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
   4ec0c:	e0bfff17 	ldw	r2,-4(fp)
   4ec10:	10800044 	addi	r2,r2,1
   4ec14:	e0bfff15 	stw	r2,-4(fp)
   4ec18:	e0ffff17 	ldw	r3,-4(fp)
   4ec1c:	e0bffd17 	ldw	r2,-12(fp)
   4ec20:	18bfe616 	blt	r3,r2,4ebbc <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4ec24:	e0fffe17 	ldw	r3,-8(fp)
   4ec28:	008003f4 	movhi	r2,15
   4ec2c:	10909004 	addi	r2,r2,16960
   4ec30:	1885383a 	mul	r2,r3,r2
   4ec34:	100b883a 	mov	r5,r2
   4ec38:	01017db4 	movhi	r4,1526
   4ec3c:	21384004 	addi	r4,r4,-7936
   4ec40:	0040fa40 	call	40fa4 <__udivsi3>
   4ec44:	1007883a 	mov	r3,r2
   4ec48:	e0bffc17 	ldw	r2,-16(fp)
   4ec4c:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
   4ec50:	10bfffc4 	addi	r2,r2,-1
   4ec54:	103ffe1e 	bne	r2,zero,4ec50 <alt_busy_sleep+0x100>
   4ec58:	00000d06 	br	4ec90 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4ec5c:	e0fffe17 	ldw	r3,-8(fp)
   4ec60:	008003f4 	movhi	r2,15
   4ec64:	10909004 	addi	r2,r2,16960
   4ec68:	1885383a 	mul	r2,r3,r2
   4ec6c:	100b883a 	mov	r5,r2
   4ec70:	01017db4 	movhi	r4,1526
   4ec74:	21384004 	addi	r4,r4,-7936
   4ec78:	0040fa40 	call	40fa4 <__udivsi3>
   4ec7c:	1007883a 	mov	r3,r2
   4ec80:	e0bffc17 	ldw	r2,-16(fp)
   4ec84:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
   4ec88:	10bfffc4 	addi	r2,r2,-1
   4ec8c:	00bffe16 	blt	zero,r2,4ec88 <alt_busy_sleep+0x138>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   4ec90:	0005883a 	mov	r2,zero
}
   4ec94:	e037883a 	mov	sp,fp
   4ec98:	dfc00117 	ldw	ra,4(sp)
   4ec9c:	df000017 	ldw	fp,0(sp)
   4eca0:	dec00204 	addi	sp,sp,8
   4eca4:	f800283a 	ret

0004eca8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   4eca8:	defffe04 	addi	sp,sp,-8
   4ecac:	df000115 	stw	fp,4(sp)
   4ecb0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4ecb4:	e03fff15 	stw	zero,-4(fp)
   4ecb8:	00000506 	br	4ecd0 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   4ecbc:	e0bfff17 	ldw	r2,-4(fp)
   4ecc0:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4ecc4:	e0bfff17 	ldw	r2,-4(fp)
   4ecc8:	10800804 	addi	r2,r2,32
   4eccc:	e0bfff15 	stw	r2,-4(fp)
   4ecd0:	e0bfff17 	ldw	r2,-4(fp)
   4ecd4:	10820030 	cmpltui	r2,r2,2048
   4ecd8:	103ff81e 	bne	r2,zero,4ecbc <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   4ecdc:	0001883a 	nop
   4ece0:	0001883a 	nop
   4ece4:	e037883a 	mov	sp,fp
   4ece8:	df000017 	ldw	fp,0(sp)
   4ecec:	dec00104 	addi	sp,sp,4
   4ecf0:	f800283a 	ret

0004ecf4 <alt_get_errno>:
{
   4ecf4:	defffe04 	addi	sp,sp,-8
   4ecf8:	dfc00115 	stw	ra,4(sp)
   4ecfc:	df000015 	stw	fp,0(sp)
   4ed00:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ed04:	d0a00917 	ldw	r2,-32732(gp)
   4ed08:	10000326 	beq	r2,zero,4ed18 <alt_get_errno+0x24>
   4ed0c:	d0a00917 	ldw	r2,-32732(gp)
   4ed10:	103ee83a 	callr	r2
   4ed14:	00000106 	br	4ed1c <alt_get_errno+0x28>
   4ed18:	d0a70704 	addi	r2,gp,-25572
}
   4ed1c:	e037883a 	mov	sp,fp
   4ed20:	dfc00117 	ldw	ra,4(sp)
   4ed24:	df000017 	ldw	fp,0(sp)
   4ed28:	dec00204 	addi	sp,sp,8
   4ed2c:	f800283a 	ret

0004ed30 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   4ed30:	defffa04 	addi	sp,sp,-24
   4ed34:	dfc00515 	stw	ra,20(sp)
   4ed38:	df000415 	stw	fp,16(sp)
   4ed3c:	df000404 	addi	fp,sp,16
   4ed40:	e13ffd15 	stw	r4,-12(fp)
   4ed44:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   4ed48:	e0bffd17 	ldw	r2,-12(fp)
   4ed4c:	10000326 	beq	r2,zero,4ed5c <alt_dev_llist_insert+0x2c>
   4ed50:	e0bffd17 	ldw	r2,-12(fp)
   4ed54:	10800217 	ldw	r2,8(r2)
   4ed58:	1000061e 	bne	r2,zero,4ed74 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   4ed5c:	004ecf40 	call	4ecf4 <alt_get_errno>
   4ed60:	1007883a 	mov	r3,r2
   4ed64:	00800584 	movi	r2,22
   4ed68:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   4ed6c:	00bffa84 	movi	r2,-22
   4ed70:	00001406 	br	4edc4 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   4ed74:	e0bffd17 	ldw	r2,-12(fp)
   4ed78:	e0fffc17 	ldw	r3,-16(fp)
   4ed7c:	e0ffff15 	stw	r3,-4(fp)
   4ed80:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   4ed84:	e0bffe17 	ldw	r2,-8(fp)
   4ed88:	e0ffff17 	ldw	r3,-4(fp)
   4ed8c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4ed90:	e0bfff17 	ldw	r2,-4(fp)
   4ed94:	10c00017 	ldw	r3,0(r2)
   4ed98:	e0bffe17 	ldw	r2,-8(fp)
   4ed9c:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   4eda0:	e0bfff17 	ldw	r2,-4(fp)
   4eda4:	10800017 	ldw	r2,0(r2)
   4eda8:	e0fffe17 	ldw	r3,-8(fp)
   4edac:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4edb0:	e0bfff17 	ldw	r2,-4(fp)
   4edb4:	e0fffe17 	ldw	r3,-8(fp)
   4edb8:	10c00015 	stw	r3,0(r2)
}
   4edbc:	0001883a 	nop

  return 0;  
   4edc0:	0005883a 	mov	r2,zero
}
   4edc4:	e037883a 	mov	sp,fp
   4edc8:	dfc00117 	ldw	ra,4(sp)
   4edcc:	df000017 	ldw	fp,0(sp)
   4edd0:	dec00204 	addi	sp,sp,8
   4edd4:	f800283a 	ret

0004edd8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   4edd8:	defffd04 	addi	sp,sp,-12
   4eddc:	dfc00215 	stw	ra,8(sp)
   4ede0:	df000115 	stw	fp,4(sp)
   4ede4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4ede8:	00800174 	movhi	r2,5
   4edec:	10bf1f04 	addi	r2,r2,-900
   4edf0:	e0bfff15 	stw	r2,-4(fp)
   4edf4:	00000606 	br	4ee10 <_do_ctors+0x38>
        (*ctor) (); 
   4edf8:	e0bfff17 	ldw	r2,-4(fp)
   4edfc:	10800017 	ldw	r2,0(r2)
   4ee00:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4ee04:	e0bfff17 	ldw	r2,-4(fp)
   4ee08:	10bfff04 	addi	r2,r2,-4
   4ee0c:	e0bfff15 	stw	r2,-4(fp)
   4ee10:	e0ffff17 	ldw	r3,-4(fp)
   4ee14:	00800174 	movhi	r2,5
   4ee18:	10bf2004 	addi	r2,r2,-896
   4ee1c:	18bff62e 	bgeu	r3,r2,4edf8 <_do_ctors+0x20>
}
   4ee20:	0001883a 	nop
   4ee24:	0001883a 	nop
   4ee28:	e037883a 	mov	sp,fp
   4ee2c:	dfc00117 	ldw	ra,4(sp)
   4ee30:	df000017 	ldw	fp,0(sp)
   4ee34:	dec00204 	addi	sp,sp,8
   4ee38:	f800283a 	ret

0004ee3c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   4ee3c:	defffd04 	addi	sp,sp,-12
   4ee40:	dfc00215 	stw	ra,8(sp)
   4ee44:	df000115 	stw	fp,4(sp)
   4ee48:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4ee4c:	00800174 	movhi	r2,5
   4ee50:	10bf1f04 	addi	r2,r2,-900
   4ee54:	e0bfff15 	stw	r2,-4(fp)
   4ee58:	00000606 	br	4ee74 <_do_dtors+0x38>
        (*dtor) (); 
   4ee5c:	e0bfff17 	ldw	r2,-4(fp)
   4ee60:	10800017 	ldw	r2,0(r2)
   4ee64:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4ee68:	e0bfff17 	ldw	r2,-4(fp)
   4ee6c:	10bfff04 	addi	r2,r2,-4
   4ee70:	e0bfff15 	stw	r2,-4(fp)
   4ee74:	e0ffff17 	ldw	r3,-4(fp)
   4ee78:	00800174 	movhi	r2,5
   4ee7c:	10bf2004 	addi	r2,r2,-896
   4ee80:	18bff62e 	bgeu	r3,r2,4ee5c <_do_dtors+0x20>
}
   4ee84:	0001883a 	nop
   4ee88:	0001883a 	nop
   4ee8c:	e037883a 	mov	sp,fp
   4ee90:	dfc00117 	ldw	ra,4(sp)
   4ee94:	df000017 	ldw	fp,0(sp)
   4ee98:	dec00204 	addi	sp,sp,8
   4ee9c:	f800283a 	ret

0004eea0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   4eea0:	defffe04 	addi	sp,sp,-8
   4eea4:	dfc00115 	stw	ra,4(sp)
   4eea8:	df000015 	stw	fp,0(sp)
   4eeac:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   4eeb0:	01440004 	movi	r5,4096
   4eeb4:	0009883a 	mov	r4,zero
   4eeb8:	004f8e80 	call	4f8e8 <alt_icache_flush>
#endif
}
   4eebc:	0001883a 	nop
   4eec0:	e037883a 	mov	sp,fp
   4eec4:	dfc00117 	ldw	ra,4(sp)
   4eec8:	df000017 	ldw	fp,0(sp)
   4eecc:	dec00204 	addi	sp,sp,8
   4eed0:	f800283a 	ret

0004eed4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4eed4:	defff904 	addi	sp,sp,-28
   4eed8:	dfc00615 	stw	ra,24(sp)
   4eedc:	df000515 	stw	fp,20(sp)
   4eee0:	df000504 	addi	fp,sp,20
   4eee4:	e13fff15 	stw	r4,-4(fp)
   4eee8:	e17ffe15 	stw	r5,-8(fp)
   4eeec:	e1bffd15 	stw	r6,-12(fp)
   4eef0:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   4eef4:	e0800217 	ldw	r2,8(fp)
   4eef8:	d8800015 	stw	r2,0(sp)
   4eefc:	e1fffc17 	ldw	r7,-16(fp)
   4ef00:	e1bffd17 	ldw	r6,-12(fp)
   4ef04:	e17ffe17 	ldw	r5,-8(fp)
   4ef08:	e13fff17 	ldw	r4,-4(fp)
   4ef0c:	004f0840 	call	4f084 <alt_iic_isr_register>
}  
   4ef10:	e037883a 	mov	sp,fp
   4ef14:	dfc00117 	ldw	ra,4(sp)
   4ef18:	df000017 	ldw	fp,0(sp)
   4ef1c:	dec00204 	addi	sp,sp,8
   4ef20:	f800283a 	ret

0004ef24 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   4ef24:	defff904 	addi	sp,sp,-28
   4ef28:	df000615 	stw	fp,24(sp)
   4ef2c:	df000604 	addi	fp,sp,24
   4ef30:	e13ffb15 	stw	r4,-20(fp)
   4ef34:	e17ffa15 	stw	r5,-24(fp)
   4ef38:	e0bffa17 	ldw	r2,-24(fp)
   4ef3c:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
   4ef40:	0005303a 	rdctl	r2,status
   4ef44:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ef48:	e0fffe17 	ldw	r3,-8(fp)
   4ef4c:	00bfff84 	movi	r2,-2
   4ef50:	1884703a 	and	r2,r3,r2
   4ef54:	1001703a 	wrctl	status,r2
  return context;
   4ef58:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4ef5c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   4ef60:	00c00044 	movi	r3,1
   4ef64:	e0bfff17 	ldw	r2,-4(fp)
   4ef68:	1884983a 	sll	r2,r3,r2
   4ef6c:	1007883a 	mov	r3,r2
   4ef70:	d0a70c17 	ldw	r2,-25552(gp)
   4ef74:	1884b03a 	or	r2,r3,r2
   4ef78:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4ef7c:	d0a70c17 	ldw	r2,-25552(gp)
   4ef80:	100170fa 	wrctl	ienable,r2
   4ef84:	e0bffd17 	ldw	r2,-12(fp)
   4ef88:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4ef8c:	e0bffc17 	ldw	r2,-16(fp)
   4ef90:	1001703a 	wrctl	status,r2
}
   4ef94:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   4ef98:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   4ef9c:	e037883a 	mov	sp,fp
   4efa0:	df000017 	ldw	fp,0(sp)
   4efa4:	dec00104 	addi	sp,sp,4
   4efa8:	f800283a 	ret

0004efac <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   4efac:	defff904 	addi	sp,sp,-28
   4efb0:	df000615 	stw	fp,24(sp)
   4efb4:	df000604 	addi	fp,sp,24
   4efb8:	e13ffb15 	stw	r4,-20(fp)
   4efbc:	e17ffa15 	stw	r5,-24(fp)
   4efc0:	e0bffa17 	ldw	r2,-24(fp)
   4efc4:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
   4efc8:	0005303a 	rdctl	r2,status
   4efcc:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4efd0:	e0fffe17 	ldw	r3,-8(fp)
   4efd4:	00bfff84 	movi	r2,-2
   4efd8:	1884703a 	and	r2,r3,r2
   4efdc:	1001703a 	wrctl	status,r2
  return context;
   4efe0:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
   4efe4:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
   4efe8:	00c00044 	movi	r3,1
   4efec:	e0bfff17 	ldw	r2,-4(fp)
   4eff0:	1884983a 	sll	r2,r3,r2
   4eff4:	0084303a 	nor	r2,zero,r2
   4eff8:	1007883a 	mov	r3,r2
   4effc:	d0a70c17 	ldw	r2,-25552(gp)
   4f000:	1884703a 	and	r2,r3,r2
   4f004:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4f008:	d0a70c17 	ldw	r2,-25552(gp)
   4f00c:	100170fa 	wrctl	ienable,r2
   4f010:	e0bffd17 	ldw	r2,-12(fp)
   4f014:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4f018:	e0bffc17 	ldw	r2,-16(fp)
   4f01c:	1001703a 	wrctl	status,r2
}
   4f020:	0001883a 	nop
  return 0;
   4f024:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   4f028:	e037883a 	mov	sp,fp
   4f02c:	df000017 	ldw	fp,0(sp)
   4f030:	dec00104 	addi	sp,sp,4
   4f034:	f800283a 	ret

0004f038 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   4f038:	defffc04 	addi	sp,sp,-16
   4f03c:	df000315 	stw	fp,12(sp)
   4f040:	df000304 	addi	fp,sp,12
   4f044:	e13ffe15 	stw	r4,-8(fp)
   4f048:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   4f04c:	000530fa 	rdctl	r2,ienable
   4f050:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   4f054:	00c00044 	movi	r3,1
   4f058:	e0bffd17 	ldw	r2,-12(fp)
   4f05c:	1884983a 	sll	r2,r3,r2
   4f060:	1007883a 	mov	r3,r2
   4f064:	e0bfff17 	ldw	r2,-4(fp)
   4f068:	1884703a 	and	r2,r3,r2
   4f06c:	1004c03a 	cmpne	r2,r2,zero
   4f070:	10803fcc 	andi	r2,r2,255
}
   4f074:	e037883a 	mov	sp,fp
   4f078:	df000017 	ldw	fp,0(sp)
   4f07c:	dec00104 	addi	sp,sp,4
   4f080:	f800283a 	ret

0004f084 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4f084:	defff504 	addi	sp,sp,-44
   4f088:	dfc00a15 	stw	ra,40(sp)
   4f08c:	df000915 	stw	fp,36(sp)
   4f090:	df000904 	addi	fp,sp,36
   4f094:	e13ffa15 	stw	r4,-24(fp)
   4f098:	e17ff915 	stw	r5,-28(fp)
   4f09c:	e1bff815 	stw	r6,-32(fp)
   4f0a0:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
   4f0a4:	00bffa84 	movi	r2,-22
   4f0a8:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   4f0ac:	e0bff917 	ldw	r2,-28(fp)
   4f0b0:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   4f0b4:	e0bffe17 	ldw	r2,-8(fp)
   4f0b8:	10800808 	cmpgei	r2,r2,32
   4f0bc:	1000251e 	bne	r2,zero,4f154 <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
   4f0c0:	0005303a 	rdctl	r2,status
   4f0c4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f0c8:	e0fffc17 	ldw	r3,-16(fp)
   4f0cc:	00bfff84 	movi	r2,-2
   4f0d0:	1884703a 	and	r2,r3,r2
   4f0d4:	1001703a 	wrctl	status,r2
  return context;
   4f0d8:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   4f0dc:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
   4f0e0:	e0bffe17 	ldw	r2,-8(fp)
   4f0e4:	100890fa 	slli	r4,r2,3
   4f0e8:	e0fff817 	ldw	r3,-32(fp)
   4f0ec:	00800174 	movhi	r2,5
   4f0f0:	2085883a 	add	r2,r4,r2
   4f0f4:	10cec615 	stw	r3,15128(r2)
    alt_irq[id].context = isr_context;
   4f0f8:	e0bffe17 	ldw	r2,-8(fp)
   4f0fc:	100890fa 	slli	r4,r2,3
   4f100:	e0fff717 	ldw	r3,-36(fp)
   4f104:	00800174 	movhi	r2,5
   4f108:	2085883a 	add	r2,r4,r2
   4f10c:	10cec715 	stw	r3,15132(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   4f110:	e0bff817 	ldw	r2,-32(fp)
   4f114:	10000526 	beq	r2,zero,4f12c <alt_iic_isr_register+0xa8>
   4f118:	e0bffe17 	ldw	r2,-8(fp)
   4f11c:	100b883a 	mov	r5,r2
   4f120:	e13ffa17 	ldw	r4,-24(fp)
   4f124:	004ef240 	call	4ef24 <alt_ic_irq_enable>
   4f128:	00000406 	br	4f13c <alt_iic_isr_register+0xb8>
   4f12c:	e0bffe17 	ldw	r2,-8(fp)
   4f130:	100b883a 	mov	r5,r2
   4f134:	e13ffa17 	ldw	r4,-24(fp)
   4f138:	004efac0 	call	4efac <alt_ic_irq_disable>
   4f13c:	e0bfff15 	stw	r2,-4(fp)
   4f140:	e0bffd17 	ldw	r2,-12(fp)
   4f144:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   4f148:	e0bffb17 	ldw	r2,-20(fp)
   4f14c:	1001703a 	wrctl	status,r2
}
   4f150:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
   4f154:	e0bfff17 	ldw	r2,-4(fp)
}
   4f158:	e037883a 	mov	sp,fp
   4f15c:	dfc00117 	ldw	ra,4(sp)
   4f160:	df000017 	ldw	fp,0(sp)
   4f164:	dec00204 	addi	sp,sp,8
   4f168:	f800283a 	ret

0004f16c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   4f16c:	defff904 	addi	sp,sp,-28
   4f170:	dfc00615 	stw	ra,24(sp)
   4f174:	df000515 	stw	fp,20(sp)
   4f178:	df000504 	addi	fp,sp,20
   4f17c:	e13ffe15 	stw	r4,-8(fp)
   4f180:	e17ffd15 	stw	r5,-12(fp)
   4f184:	e1bffc15 	stw	r6,-16(fp)
   4f188:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   4f18c:	e1bffb17 	ldw	r6,-20(fp)
   4f190:	e17ffc17 	ldw	r5,-16(fp)
   4f194:	e13ffd17 	ldw	r4,-12(fp)
   4f198:	004f38c0 	call	4f38c <open>
   4f19c:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   4f1a0:	e0bfff17 	ldw	r2,-4(fp)
   4f1a4:	10001716 	blt	r2,zero,4f204 <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
   4f1a8:	e0bfff17 	ldw	r2,-4(fp)
   4f1ac:	10c00324 	muli	r3,r2,12
   4f1b0:	00800174 	movhi	r2,5
   4f1b4:	1885883a 	add	r2,r3,r2
   4f1b8:	10c33417 	ldw	r3,3280(r2)
   4f1bc:	e0bffe17 	ldw	r2,-8(fp)
   4f1c0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   4f1c4:	e0bfff17 	ldw	r2,-4(fp)
   4f1c8:	10c00324 	muli	r3,r2,12
   4f1cc:	00800174 	movhi	r2,5
   4f1d0:	1885883a 	add	r2,r3,r2
   4f1d4:	10c33517 	ldw	r3,3284(r2)
   4f1d8:	e0bffe17 	ldw	r2,-8(fp)
   4f1dc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   4f1e0:	e0bfff17 	ldw	r2,-4(fp)
   4f1e4:	10c00324 	muli	r3,r2,12
   4f1e8:	00800174 	movhi	r2,5
   4f1ec:	1885883a 	add	r2,r3,r2
   4f1f0:	10c33617 	ldw	r3,3288(r2)
   4f1f4:	e0bffe17 	ldw	r2,-8(fp)
   4f1f8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   4f1fc:	e13fff17 	ldw	r4,-4(fp)
   4f200:	004dc780 	call	4dc78 <alt_release_fd>
  }
} 
   4f204:	0001883a 	nop
   4f208:	e037883a 	mov	sp,fp
   4f20c:	dfc00117 	ldw	ra,4(sp)
   4f210:	df000017 	ldw	fp,0(sp)
   4f214:	dec00204 	addi	sp,sp,8
   4f218:	f800283a 	ret

0004f21c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   4f21c:	defffb04 	addi	sp,sp,-20
   4f220:	dfc00415 	stw	ra,16(sp)
   4f224:	df000315 	stw	fp,12(sp)
   4f228:	df000304 	addi	fp,sp,12
   4f22c:	e13fff15 	stw	r4,-4(fp)
   4f230:	e17ffe15 	stw	r5,-8(fp)
   4f234:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   4f238:	01c07fc4 	movi	r7,511
   4f23c:	01800044 	movi	r6,1
   4f240:	e17fff17 	ldw	r5,-4(fp)
   4f244:	01000174 	movhi	r4,5
   4f248:	21033704 	addi	r4,r4,3292
   4f24c:	004f16c0 	call	4f16c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   4f250:	01c07fc4 	movi	r7,511
   4f254:	000d883a 	mov	r6,zero
   4f258:	e17ffe17 	ldw	r5,-8(fp)
   4f25c:	01000174 	movhi	r4,5
   4f260:	21033404 	addi	r4,r4,3280
   4f264:	004f16c0 	call	4f16c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   4f268:	01c07fc4 	movi	r7,511
   4f26c:	01800044 	movi	r6,1
   4f270:	e17ffd17 	ldw	r5,-12(fp)
   4f274:	01000174 	movhi	r4,5
   4f278:	21033a04 	addi	r4,r4,3304
   4f27c:	004f16c0 	call	4f16c <alt_open_fd>
}  
   4f280:	0001883a 	nop
   4f284:	e037883a 	mov	sp,fp
   4f288:	dfc00117 	ldw	ra,4(sp)
   4f28c:	df000017 	ldw	fp,0(sp)
   4f290:	dec00204 	addi	sp,sp,8
   4f294:	f800283a 	ret

0004f298 <alt_get_errno>:
{
   4f298:	defffe04 	addi	sp,sp,-8
   4f29c:	dfc00115 	stw	ra,4(sp)
   4f2a0:	df000015 	stw	fp,0(sp)
   4f2a4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4f2a8:	d0a00917 	ldw	r2,-32732(gp)
   4f2ac:	10000326 	beq	r2,zero,4f2bc <alt_get_errno+0x24>
   4f2b0:	d0a00917 	ldw	r2,-32732(gp)
   4f2b4:	103ee83a 	callr	r2
   4f2b8:	00000106 	br	4f2c0 <alt_get_errno+0x28>
   4f2bc:	d0a70704 	addi	r2,gp,-25572
}
   4f2c0:	e037883a 	mov	sp,fp
   4f2c4:	dfc00117 	ldw	ra,4(sp)
   4f2c8:	df000017 	ldw	fp,0(sp)
   4f2cc:	dec00204 	addi	sp,sp,8
   4f2d0:	f800283a 	ret

0004f2d4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   4f2d4:	defffd04 	addi	sp,sp,-12
   4f2d8:	df000215 	stw	fp,8(sp)
   4f2dc:	df000204 	addi	fp,sp,8
   4f2e0:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   4f2e4:	e0bffe17 	ldw	r2,-8(fp)
   4f2e8:	10800217 	ldw	r2,8(r2)
   4f2ec:	10d00034 	orhi	r3,r2,16384
   4f2f0:	e0bffe17 	ldw	r2,-8(fp)
   4f2f4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4f2f8:	e03fff15 	stw	zero,-4(fp)
   4f2fc:	00001a06 	br	4f368 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4f300:	e0bfff17 	ldw	r2,-4(fp)
   4f304:	10c00324 	muli	r3,r2,12
   4f308:	00800174 	movhi	r2,5
   4f30c:	1885883a 	add	r2,r3,r2
   4f310:	10c33417 	ldw	r3,3280(r2)
   4f314:	e0bffe17 	ldw	r2,-8(fp)
   4f318:	10800017 	ldw	r2,0(r2)
   4f31c:	18800f1e 	bne	r3,r2,4f35c <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4f320:	e0bfff17 	ldw	r2,-4(fp)
   4f324:	10c00324 	muli	r3,r2,12
   4f328:	00800174 	movhi	r2,5
   4f32c:	1885883a 	add	r2,r3,r2
   4f330:	10833617 	ldw	r2,3288(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
   4f334:	1000090e 	bge	r2,zero,4f35c <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
   4f338:	e0bfff17 	ldw	r2,-4(fp)
   4f33c:	10c00324 	muli	r3,r2,12
   4f340:	00800174 	movhi	r2,5
   4f344:	10833404 	addi	r2,r2,3280
   4f348:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4f34c:	e0fffe17 	ldw	r3,-8(fp)
   4f350:	18800226 	beq	r3,r2,4f35c <alt_file_locked+0x88>
    {
      return -EACCES;
   4f354:	00bffcc4 	movi	r2,-13
   4f358:	00000806 	br	4f37c <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
   4f35c:	e0bfff17 	ldw	r2,-4(fp)
   4f360:	10800044 	addi	r2,r2,1
   4f364:	e0bfff15 	stw	r2,-4(fp)
   4f368:	d0a00817 	ldw	r2,-32736(gp)
   4f36c:	1007883a 	mov	r3,r2
   4f370:	e0bfff17 	ldw	r2,-4(fp)
   4f374:	18bfe22e 	bgeu	r3,r2,4f300 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   4f378:	0005883a 	mov	r2,zero
}
   4f37c:	e037883a 	mov	sp,fp
   4f380:	df000017 	ldw	fp,0(sp)
   4f384:	dec00104 	addi	sp,sp,4
   4f388:	f800283a 	ret

0004f38c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   4f38c:	defff604 	addi	sp,sp,-40
   4f390:	dfc00915 	stw	ra,36(sp)
   4f394:	df000815 	stw	fp,32(sp)
   4f398:	df000804 	addi	fp,sp,32
   4f39c:	e13ffa15 	stw	r4,-24(fp)
   4f3a0:	e17ff915 	stw	r5,-28(fp)
   4f3a4:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   4f3a8:	00bfffc4 	movi	r2,-1
   4f3ac:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   4f3b0:	00bffb44 	movi	r2,-19
   4f3b4:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   4f3b8:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   4f3bc:	d1600604 	addi	r5,gp,-32744
   4f3c0:	e13ffa17 	ldw	r4,-24(fp)
   4f3c4:	004f6b00 	call	4f6b0 <alt_find_dev>
   4f3c8:	e0bfff15 	stw	r2,-4(fp)
   4f3cc:	e0bfff17 	ldw	r2,-4(fp)
   4f3d0:	1000051e 	bne	r2,zero,4f3e8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   4f3d4:	e13ffa17 	ldw	r4,-24(fp)
   4f3d8:	004f7400 	call	4f740 <alt_find_file>
   4f3dc:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   4f3e0:	00800044 	movi	r2,1
   4f3e4:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   4f3e8:	e0bfff17 	ldw	r2,-4(fp)
   4f3ec:	10002926 	beq	r2,zero,4f494 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   4f3f0:	e13fff17 	ldw	r4,-4(fp)
   4f3f4:	004f8480 	call	4f848 <alt_get_fd>
   4f3f8:	e0bffe15 	stw	r2,-8(fp)
   4f3fc:	e0bffe17 	ldw	r2,-8(fp)
   4f400:	1000030e 	bge	r2,zero,4f410 <open+0x84>
    {
      status = index;
   4f404:	e0bffe17 	ldw	r2,-8(fp)
   4f408:	e0bffd15 	stw	r2,-12(fp)
   4f40c:	00002306 	br	4f49c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   4f410:	e0bffe17 	ldw	r2,-8(fp)
   4f414:	10c00324 	muli	r3,r2,12
   4f418:	00800174 	movhi	r2,5
   4f41c:	10833404 	addi	r2,r2,3280
   4f420:	1885883a 	add	r2,r3,r2
   4f424:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   4f428:	e0fff917 	ldw	r3,-28(fp)
   4f42c:	00900034 	movhi	r2,16384
   4f430:	10bfffc4 	addi	r2,r2,-1
   4f434:	1886703a 	and	r3,r3,r2
   4f438:	e0bffb17 	ldw	r2,-20(fp)
   4f43c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   4f440:	e0bffc17 	ldw	r2,-16(fp)
   4f444:	1000051e 	bne	r2,zero,4f45c <open+0xd0>
   4f448:	e13ffb17 	ldw	r4,-20(fp)
   4f44c:	004f2d40 	call	4f2d4 <alt_file_locked>
   4f450:	e0bffd15 	stw	r2,-12(fp)
   4f454:	e0bffd17 	ldw	r2,-12(fp)
   4f458:	10001016 	blt	r2,zero,4f49c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   4f45c:	e0bfff17 	ldw	r2,-4(fp)
   4f460:	10800317 	ldw	r2,12(r2)
   4f464:	10000826 	beq	r2,zero,4f488 <open+0xfc>
   4f468:	e0bfff17 	ldw	r2,-4(fp)
   4f46c:	10800317 	ldw	r2,12(r2)
   4f470:	e1fff817 	ldw	r7,-32(fp)
   4f474:	e1bff917 	ldw	r6,-28(fp)
   4f478:	e17ffa17 	ldw	r5,-24(fp)
   4f47c:	e13ffb17 	ldw	r4,-20(fp)
   4f480:	103ee83a 	callr	r2
   4f484:	00000106 	br	4f48c <open+0x100>
   4f488:	0005883a 	mov	r2,zero
   4f48c:	e0bffd15 	stw	r2,-12(fp)
   4f490:	00000206 	br	4f49c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   4f494:	00bffb44 	movi	r2,-19
   4f498:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   4f49c:	e0bffd17 	ldw	r2,-12(fp)
   4f4a0:	1000090e 	bge	r2,zero,4f4c8 <open+0x13c>
  {
    alt_release_fd (index);  
   4f4a4:	e13ffe17 	ldw	r4,-8(fp)
   4f4a8:	004dc780 	call	4dc78 <alt_release_fd>
    ALT_ERRNO = -status;
   4f4ac:	004f2980 	call	4f298 <alt_get_errno>
   4f4b0:	1007883a 	mov	r3,r2
   4f4b4:	e0bffd17 	ldw	r2,-12(fp)
   4f4b8:	0085c83a 	sub	r2,zero,r2
   4f4bc:	18800015 	stw	r2,0(r3)
    return -1;
   4f4c0:	00bfffc4 	movi	r2,-1
   4f4c4:	00000106 	br	4f4cc <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   4f4c8:	e0bffe17 	ldw	r2,-8(fp)
}
   4f4cc:	e037883a 	mov	sp,fp
   4f4d0:	dfc00117 	ldw	ra,4(sp)
   4f4d4:	df000017 	ldw	fp,0(sp)
   4f4d8:	dec00204 	addi	sp,sp,8
   4f4dc:	f800283a 	ret

0004f4e0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   4f4e0:	defffa04 	addi	sp,sp,-24
   4f4e4:	df000515 	stw	fp,20(sp)
   4f4e8:	df000504 	addi	fp,sp,20
   4f4ec:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   4f4f0:	0005303a 	rdctl	r2,status
   4f4f4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f4f8:	e0fffc17 	ldw	r3,-16(fp)
   4f4fc:	00bfff84 	movi	r2,-2
   4f500:	1884703a 	and	r2,r3,r2
   4f504:	1001703a 	wrctl	status,r2
  return context;
   4f508:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   4f50c:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   4f510:	e0bffb17 	ldw	r2,-20(fp)
   4f514:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   4f518:	e0bffd17 	ldw	r2,-12(fp)
   4f51c:	10800017 	ldw	r2,0(r2)
   4f520:	e0fffd17 	ldw	r3,-12(fp)
   4f524:	18c00117 	ldw	r3,4(r3)
   4f528:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   4f52c:	e0bffd17 	ldw	r2,-12(fp)
   4f530:	10800117 	ldw	r2,4(r2)
   4f534:	e0fffd17 	ldw	r3,-12(fp)
   4f538:	18c00017 	ldw	r3,0(r3)
   4f53c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   4f540:	e0bffd17 	ldw	r2,-12(fp)
   4f544:	e0fffd17 	ldw	r3,-12(fp)
   4f548:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   4f54c:	e0bffd17 	ldw	r2,-12(fp)
   4f550:	e0fffd17 	ldw	r3,-12(fp)
   4f554:	10c00015 	stw	r3,0(r2)
} 
   4f558:	0001883a 	nop
   4f55c:	e0bfff17 	ldw	r2,-4(fp)
   4f560:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   4f564:	e0bffe17 	ldw	r2,-8(fp)
   4f568:	1001703a 	wrctl	status,r2
}
   4f56c:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   4f570:	0001883a 	nop
   4f574:	e037883a 	mov	sp,fp
   4f578:	df000017 	ldw	fp,0(sp)
   4f57c:	dec00104 	addi	sp,sp,4
   4f580:	f800283a 	ret

0004f584 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   4f584:	defffb04 	addi	sp,sp,-20
   4f588:	dfc00415 	stw	ra,16(sp)
   4f58c:	df000315 	stw	fp,12(sp)
   4f590:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   4f594:	d0a00c17 	ldw	r2,-32720(gp)
   4f598:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   4f59c:	d0a70e17 	ldw	r2,-25544(gp)
   4f5a0:	10800044 	addi	r2,r2,1
   4f5a4:	d0a70e15 	stw	r2,-25544(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f5a8:	00002e06 	br	4f664 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   4f5ac:	e0bfff17 	ldw	r2,-4(fp)
   4f5b0:	10800017 	ldw	r2,0(r2)
   4f5b4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   4f5b8:	e0bfff17 	ldw	r2,-4(fp)
   4f5bc:	10800403 	ldbu	r2,16(r2)
   4f5c0:	10803fcc 	andi	r2,r2,255
   4f5c4:	10000426 	beq	r2,zero,4f5d8 <alt_tick+0x54>
   4f5c8:	d0a70e17 	ldw	r2,-25544(gp)
   4f5cc:	1000021e 	bne	r2,zero,4f5d8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   4f5d0:	e0bfff17 	ldw	r2,-4(fp)
   4f5d4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   4f5d8:	e0bfff17 	ldw	r2,-4(fp)
   4f5dc:	10800217 	ldw	r2,8(r2)
   4f5e0:	d0e70e17 	ldw	r3,-25544(gp)
   4f5e4:	18801d36 	bltu	r3,r2,4f65c <alt_tick+0xd8>
   4f5e8:	e0bfff17 	ldw	r2,-4(fp)
   4f5ec:	10800403 	ldbu	r2,16(r2)
   4f5f0:	10803fcc 	andi	r2,r2,255
   4f5f4:	1000191e 	bne	r2,zero,4f65c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   4f5f8:	e0bfff17 	ldw	r2,-4(fp)
   4f5fc:	10800317 	ldw	r2,12(r2)
   4f600:	e0ffff17 	ldw	r3,-4(fp)
   4f604:	18c00517 	ldw	r3,20(r3)
   4f608:	1809883a 	mov	r4,r3
   4f60c:	103ee83a 	callr	r2
   4f610:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   4f614:	e0bffd17 	ldw	r2,-12(fp)
   4f618:	1000031e 	bne	r2,zero,4f628 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   4f61c:	e13fff17 	ldw	r4,-4(fp)
   4f620:	004f4e00 	call	4f4e0 <alt_alarm_stop>
   4f624:	00000d06 	br	4f65c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   4f628:	e0bfff17 	ldw	r2,-4(fp)
   4f62c:	10c00217 	ldw	r3,8(r2)
   4f630:	e0bffd17 	ldw	r2,-12(fp)
   4f634:	1887883a 	add	r3,r3,r2
   4f638:	e0bfff17 	ldw	r2,-4(fp)
   4f63c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   4f640:	e0bfff17 	ldw	r2,-4(fp)
   4f644:	10c00217 	ldw	r3,8(r2)
   4f648:	d0a70e17 	ldw	r2,-25544(gp)
   4f64c:	1880032e 	bgeu	r3,r2,4f65c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   4f650:	e0bfff17 	ldw	r2,-4(fp)
   4f654:	00c00044 	movi	r3,1
   4f658:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   4f65c:	e0bffe17 	ldw	r2,-8(fp)
   4f660:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f664:	e0ffff17 	ldw	r3,-4(fp)
   4f668:	d0a00c04 	addi	r2,gp,-32720
   4f66c:	18bfcf1e 	bne	r3,r2,4f5ac <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   4f670:	0001883a 	nop
}
   4f674:	0001883a 	nop
   4f678:	e037883a 	mov	sp,fp
   4f67c:	dfc00117 	ldw	ra,4(sp)
   4f680:	df000017 	ldw	fp,0(sp)
   4f684:	dec00204 	addi	sp,sp,8
   4f688:	f800283a 	ret

0004f68c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   4f68c:	deffff04 	addi	sp,sp,-4
   4f690:	df000015 	stw	fp,0(sp)
   4f694:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   4f698:	000170fa 	wrctl	ienable,zero
}
   4f69c:	0001883a 	nop
   4f6a0:	e037883a 	mov	sp,fp
   4f6a4:	df000017 	ldw	fp,0(sp)
   4f6a8:	dec00104 	addi	sp,sp,4
   4f6ac:	f800283a 	ret

0004f6b0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   4f6b0:	defffa04 	addi	sp,sp,-24
   4f6b4:	dfc00515 	stw	ra,20(sp)
   4f6b8:	df000415 	stw	fp,16(sp)
   4f6bc:	df000404 	addi	fp,sp,16
   4f6c0:	e13ffd15 	stw	r4,-12(fp)
   4f6c4:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   4f6c8:	e0bffc17 	ldw	r2,-16(fp)
   4f6cc:	10800017 	ldw	r2,0(r2)
   4f6d0:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   4f6d4:	e13ffd17 	ldw	r4,-12(fp)
   4f6d8:	00411a80 	call	411a8 <strlen>
   4f6dc:	10800044 	addi	r2,r2,1
   4f6e0:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f6e4:	00000d06 	br	4f71c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   4f6e8:	e0bfff17 	ldw	r2,-4(fp)
   4f6ec:	10800217 	ldw	r2,8(r2)
   4f6f0:	e0fffe17 	ldw	r3,-8(fp)
   4f6f4:	180d883a 	mov	r6,r3
   4f6f8:	e17ffd17 	ldw	r5,-12(fp)
   4f6fc:	1009883a 	mov	r4,r2
   4f700:	004fa580 	call	4fa58 <memcmp>
   4f704:	1000021e 	bne	r2,zero,4f710 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   4f708:	e0bfff17 	ldw	r2,-4(fp)
   4f70c:	00000706 	br	4f72c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   4f710:	e0bfff17 	ldw	r2,-4(fp)
   4f714:	10800017 	ldw	r2,0(r2)
   4f718:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   4f71c:	e0ffff17 	ldw	r3,-4(fp)
   4f720:	e0bffc17 	ldw	r2,-16(fp)
   4f724:	18bff01e 	bne	r3,r2,4f6e8 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   4f728:	0005883a 	mov	r2,zero
}
   4f72c:	e037883a 	mov	sp,fp
   4f730:	dfc00117 	ldw	ra,4(sp)
   4f734:	df000017 	ldw	fp,0(sp)
   4f738:	dec00204 	addi	sp,sp,8
   4f73c:	f800283a 	ret

0004f740 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   4f740:	defffb04 	addi	sp,sp,-20
   4f744:	dfc00415 	stw	ra,16(sp)
   4f748:	df000315 	stw	fp,12(sp)
   4f74c:	df000304 	addi	fp,sp,12
   4f750:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   4f754:	d0a00417 	ldw	r2,-32752(gp)
   4f758:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f75c:	00003106 	br	4f824 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   4f760:	e0bfff17 	ldw	r2,-4(fp)
   4f764:	10800217 	ldw	r2,8(r2)
   4f768:	1009883a 	mov	r4,r2
   4f76c:	00411a80 	call	411a8 <strlen>
   4f770:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   4f774:	e0bfff17 	ldw	r2,-4(fp)
   4f778:	10c00217 	ldw	r3,8(r2)
   4f77c:	e0bffe17 	ldw	r2,-8(fp)
   4f780:	10bfffc4 	addi	r2,r2,-1
   4f784:	1885883a 	add	r2,r3,r2
   4f788:	10800003 	ldbu	r2,0(r2)
   4f78c:	10803fcc 	andi	r2,r2,255
   4f790:	1080201c 	xori	r2,r2,128
   4f794:	10bfe004 	addi	r2,r2,-128
   4f798:	10800bd8 	cmpnei	r2,r2,47
   4f79c:	1000031e 	bne	r2,zero,4f7ac <alt_find_file+0x6c>
    {
      len -= 1;
   4f7a0:	e0bffe17 	ldw	r2,-8(fp)
   4f7a4:	10bfffc4 	addi	r2,r2,-1
   4f7a8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f7ac:	e0bffe17 	ldw	r2,-8(fp)
   4f7b0:	e0fffd17 	ldw	r3,-12(fp)
   4f7b4:	1885883a 	add	r2,r3,r2
   4f7b8:	10800003 	ldbu	r2,0(r2)
   4f7bc:	10803fcc 	andi	r2,r2,255
   4f7c0:	1080201c 	xori	r2,r2,128
   4f7c4:	10bfe004 	addi	r2,r2,-128
   4f7c8:	10800be0 	cmpeqi	r2,r2,47
   4f7cc:	1000081e 	bne	r2,zero,4f7f0 <alt_find_file+0xb0>
   4f7d0:	e0bffe17 	ldw	r2,-8(fp)
   4f7d4:	e0fffd17 	ldw	r3,-12(fp)
   4f7d8:	1885883a 	add	r2,r3,r2
   4f7dc:	10800003 	ldbu	r2,0(r2)
   4f7e0:	10803fcc 	andi	r2,r2,255
   4f7e4:	1080201c 	xori	r2,r2,128
   4f7e8:	10bfe004 	addi	r2,r2,-128
   4f7ec:	10000a1e 	bne	r2,zero,4f818 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   4f7f0:	e0bfff17 	ldw	r2,-4(fp)
   4f7f4:	10800217 	ldw	r2,8(r2)
   4f7f8:	e0fffe17 	ldw	r3,-8(fp)
   4f7fc:	180d883a 	mov	r6,r3
   4f800:	e17ffd17 	ldw	r5,-12(fp)
   4f804:	1009883a 	mov	r4,r2
   4f808:	004fa580 	call	4fa58 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f80c:	1000021e 	bne	r2,zero,4f818 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   4f810:	e0bfff17 	ldw	r2,-4(fp)
   4f814:	00000706 	br	4f834 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   4f818:	e0bfff17 	ldw	r2,-4(fp)
   4f81c:	10800017 	ldw	r2,0(r2)
   4f820:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   4f824:	e0ffff17 	ldw	r3,-4(fp)
   4f828:	d0a00404 	addi	r2,gp,-32752
   4f82c:	18bfcc1e 	bne	r3,r2,4f760 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   4f830:	0005883a 	mov	r2,zero
}
   4f834:	e037883a 	mov	sp,fp
   4f838:	dfc00117 	ldw	ra,4(sp)
   4f83c:	df000017 	ldw	fp,0(sp)
   4f840:	dec00204 	addi	sp,sp,8
   4f844:	f800283a 	ret

0004f848 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   4f848:	defffc04 	addi	sp,sp,-16
   4f84c:	df000315 	stw	fp,12(sp)
   4f850:	df000304 	addi	fp,sp,12
   4f854:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   4f858:	00bffa04 	movi	r2,-24
   4f85c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f860:	e03fff15 	stw	zero,-4(fp)
   4f864:	00001706 	br	4f8c4 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
   4f868:	e0bfff17 	ldw	r2,-4(fp)
   4f86c:	10c00324 	muli	r3,r2,12
   4f870:	00800174 	movhi	r2,5
   4f874:	1885883a 	add	r2,r3,r2
   4f878:	10833417 	ldw	r2,3280(r2)
   4f87c:	10000e1e 	bne	r2,zero,4f8b8 <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
   4f880:	e0bfff17 	ldw	r2,-4(fp)
   4f884:	11000324 	muli	r4,r2,12
   4f888:	e0fffd17 	ldw	r3,-12(fp)
   4f88c:	00800174 	movhi	r2,5
   4f890:	2085883a 	add	r2,r4,r2
   4f894:	10c33415 	stw	r3,3280(r2)
      if (i > alt_max_fd)
   4f898:	d0e00817 	ldw	r3,-32736(gp)
   4f89c:	e0bfff17 	ldw	r2,-4(fp)
   4f8a0:	1880020e 	bge	r3,r2,4f8ac <alt_get_fd+0x64>
      {
        alt_max_fd = i;
   4f8a4:	e0bfff17 	ldw	r2,-4(fp)
   4f8a8:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
   4f8ac:	e0bfff17 	ldw	r2,-4(fp)
   4f8b0:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   4f8b4:	00000706 	br	4f8d4 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
   4f8b8:	e0bfff17 	ldw	r2,-4(fp)
   4f8bc:	10800044 	addi	r2,r2,1
   4f8c0:	e0bfff15 	stw	r2,-4(fp)
   4f8c4:	e0bfff17 	ldw	r2,-4(fp)
   4f8c8:	10800810 	cmplti	r2,r2,32
   4f8cc:	103fe61e 	bne	r2,zero,4f868 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   4f8d0:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   4f8d4:	e0bffe17 	ldw	r2,-8(fp)
}
   4f8d8:	e037883a 	mov	sp,fp
   4f8dc:	df000017 	ldw	fp,0(sp)
   4f8e0:	dec00104 	addi	sp,sp,4
   4f8e4:	f800283a 	ret

0004f8e8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   4f8e8:	defffb04 	addi	sp,sp,-20
   4f8ec:	df000415 	stw	fp,16(sp)
   4f8f0:	df000404 	addi	fp,sp,16
   4f8f4:	e13ffd15 	stw	r4,-12(fp)
   4f8f8:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   4f8fc:	e0bffc17 	ldw	r2,-16(fp)
   4f900:	10840070 	cmpltui	r2,r2,4097
   4f904:	1000021e 	bne	r2,zero,4f910 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   4f908:	00840004 	movi	r2,4096
   4f90c:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
   4f910:	e0fffd17 	ldw	r3,-12(fp)
   4f914:	e0bffc17 	ldw	r2,-16(fp)
   4f918:	1885883a 	add	r2,r3,r2
   4f91c:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   4f920:	e0bffd17 	ldw	r2,-12(fp)
   4f924:	e0bfff15 	stw	r2,-4(fp)
   4f928:	00000506 	br	4f940 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   4f92c:	e0bfff17 	ldw	r2,-4(fp)
   4f930:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   4f934:	e0bfff17 	ldw	r2,-4(fp)
   4f938:	10800804 	addi	r2,r2,32
   4f93c:	e0bfff15 	stw	r2,-4(fp)
   4f940:	e0ffff17 	ldw	r3,-4(fp)
   4f944:	e0bffe17 	ldw	r2,-8(fp)
   4f948:	18bff836 	bltu	r3,r2,4f92c <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   4f94c:	e0bffd17 	ldw	r2,-12(fp)
   4f950:	108007cc 	andi	r2,r2,31
   4f954:	10000226 	beq	r2,zero,4f960 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   4f958:	e0bfff17 	ldw	r2,-4(fp)
   4f95c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   4f960:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   4f964:	0001883a 	nop
   4f968:	e037883a 	mov	sp,fp
   4f96c:	df000017 	ldw	fp,0(sp)
   4f970:	dec00104 	addi	sp,sp,4
   4f974:	f800283a 	ret

0004f978 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   4f978:	defffe04 	addi	sp,sp,-8
   4f97c:	df000115 	stw	fp,4(sp)
   4f980:	df000104 	addi	fp,sp,4
   4f984:	e13fff15 	stw	r4,-4(fp)
   4f988:	e0bfff17 	ldw	r2,-4(fp)
   4f98c:	10bffe84 	addi	r2,r2,-6
   4f990:	10c00428 	cmpgeui	r3,r2,16
   4f994:	1800191e 	bne	r3,zero,4f9fc <alt_exception_cause_generated_bad_addr+0x84>
   4f998:	100690ba 	slli	r3,r2,2
   4f99c:	00800174 	movhi	r2,5
   4f9a0:	1885883a 	add	r2,r3,r2
   4f9a4:	10be6b17 	ldw	r2,-1620(r2)
   4f9a8:	1000683a 	jmp	r2
   4f9ac:	0004f9ec 	andhi	zero,zero,5095
   4f9b0:	0004f9ec 	andhi	zero,zero,5095
   4f9b4:	0004f9fc 	xorhi	zero,zero,5095
   4f9b8:	0004f9fc 	xorhi	zero,zero,5095
   4f9bc:	0004f9fc 	xorhi	zero,zero,5095
   4f9c0:	0004f9ec 	andhi	zero,zero,5095
   4f9c4:	0004f9f4 	movhi	zero,5095
   4f9c8:	0004f9fc 	xorhi	zero,zero,5095
   4f9cc:	0004f9ec 	andhi	zero,zero,5095
   4f9d0:	0004f9ec 	andhi	zero,zero,5095
   4f9d4:	0004f9fc 	xorhi	zero,zero,5095
   4f9d8:	0004f9ec 	andhi	zero,zero,5095
   4f9dc:	0004f9f4 	movhi	zero,5095
   4f9e0:	0004f9fc 	xorhi	zero,zero,5095
   4f9e4:	0004f9fc 	xorhi	zero,zero,5095
   4f9e8:	0004f9ec 	andhi	zero,zero,5095
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   4f9ec:	00800044 	movi	r2,1
   4f9f0:	00000306 	br	4fa00 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   4f9f4:	0005883a 	mov	r2,zero
   4f9f8:	00000106 	br	4fa00 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
   4f9fc:	0005883a 	mov	r2,zero
  }
}
   4fa00:	e037883a 	mov	sp,fp
   4fa04:	df000017 	ldw	fp,0(sp)
   4fa08:	dec00104 	addi	sp,sp,4
   4fa0c:	f800283a 	ret

0004fa10 <atexit>:
   4fa10:	200b883a 	mov	r5,r4
   4fa14:	000f883a 	mov	r7,zero
   4fa18:	000d883a 	mov	r6,zero
   4fa1c:	0009883a 	mov	r4,zero
   4fa20:	004fad01 	jmpi	4fad0 <__register_exitproc>

0004fa24 <exit>:
   4fa24:	defffe04 	addi	sp,sp,-8
   4fa28:	000b883a 	mov	r5,zero
   4fa2c:	dc000015 	stw	r16,0(sp)
   4fa30:	dfc00115 	stw	ra,4(sp)
   4fa34:	2021883a 	mov	r16,r4
   4fa38:	004fb600 	call	4fb60 <__call_exitprocs>
   4fa3c:	00800174 	movhi	r2,5
   4fa40:	1107ac17 	ldw	r4,7856(r2)
   4fa44:	20800f17 	ldw	r2,60(r4)
   4fa48:	10000126 	beq	r2,zero,4fa50 <exit+0x2c>
   4fa4c:	103ee83a 	callr	r2
   4fa50:	8009883a 	mov	r4,r16
   4fa54:	004d4f40 	call	4d4f4 <_exit>

0004fa58 <memcmp>:
   4fa58:	30800130 	cmpltui	r2,r6,4
   4fa5c:	10000b1e 	bne	r2,zero,4fa8c <memcmp+0x34>
   4fa60:	2144b03a 	or	r2,r4,r5
   4fa64:	108000cc 	andi	r2,r2,3
   4fa68:	1000171e 	bne	r2,zero,4fac8 <memcmp+0x70>
   4fa6c:	20c00017 	ldw	r3,0(r4)
   4fa70:	28800017 	ldw	r2,0(r5)
   4fa74:	1880141e 	bne	r3,r2,4fac8 <memcmp+0x70>
   4fa78:	31bfff04 	addi	r6,r6,-4
   4fa7c:	30800128 	cmpgeui	r2,r6,4
   4fa80:	21000104 	addi	r4,r4,4
   4fa84:	29400104 	addi	r5,r5,4
   4fa88:	103ff81e 	bne	r2,zero,4fa6c <memcmp+0x14>
   4fa8c:	30bfffc4 	addi	r2,r6,-1
   4fa90:	30000b26 	beq	r6,zero,4fac0 <memcmp+0x68>
   4fa94:	11800044 	addi	r6,r2,1
   4fa98:	218d883a 	add	r6,r4,r6
   4fa9c:	00000106 	br	4faa4 <memcmp+0x4c>
   4faa0:	21800726 	beq	r4,r6,4fac0 <memcmp+0x68>
   4faa4:	20800003 	ldbu	r2,0(r4)
   4faa8:	28c00003 	ldbu	r3,0(r5)
   4faac:	21000044 	addi	r4,r4,1
   4fab0:	29400044 	addi	r5,r5,1
   4fab4:	10fffa26 	beq	r2,r3,4faa0 <memcmp+0x48>
   4fab8:	10c5c83a 	sub	r2,r2,r3
   4fabc:	f800283a 	ret
   4fac0:	0005883a 	mov	r2,zero
   4fac4:	f800283a 	ret
   4fac8:	30bfffc4 	addi	r2,r6,-1
   4facc:	003ff106 	br	4fa94 <memcmp+0x3c>

0004fad0 <__register_exitproc>:
   4fad0:	00800174 	movhi	r2,5
   4fad4:	10c7ac17 	ldw	r3,7856(r2)
   4fad8:	18805217 	ldw	r2,328(r3)
   4fadc:	10001726 	beq	r2,zero,4fb3c <__register_exitproc+0x6c>
   4fae0:	10c00117 	ldw	r3,4(r2)
   4fae4:	1a000808 	cmpgei	r8,r3,32
   4fae8:	40001b1e 	bne	r8,zero,4fb58 <__register_exitproc+0x88>
   4faec:	20000b26 	beq	r4,zero,4fb1c <__register_exitproc+0x4c>
   4faf0:	181090ba 	slli	r8,r3,2
   4faf4:	02400044 	movi	r9,1
   4faf8:	48d2983a 	sll	r9,r9,r3
   4fafc:	1211883a 	add	r8,r2,r8
   4fb00:	41802215 	stw	r6,136(r8)
   4fb04:	11806217 	ldw	r6,392(r2)
   4fb08:	21000098 	cmpnei	r4,r4,2
   4fb0c:	324cb03a 	or	r6,r6,r9
   4fb10:	11806215 	stw	r6,392(r2)
   4fb14:	41c04215 	stw	r7,264(r8)
   4fb18:	20000b26 	beq	r4,zero,4fb48 <__register_exitproc+0x78>
   4fb1c:	19000084 	addi	r4,r3,2
   4fb20:	200890ba 	slli	r4,r4,2
   4fb24:	18c00044 	addi	r3,r3,1
   4fb28:	10c00115 	stw	r3,4(r2)
   4fb2c:	1105883a 	add	r2,r2,r4
   4fb30:	11400015 	stw	r5,0(r2)
   4fb34:	0005883a 	mov	r2,zero
   4fb38:	f800283a 	ret
   4fb3c:	18805304 	addi	r2,r3,332
   4fb40:	18805215 	stw	r2,328(r3)
   4fb44:	003fe606 	br	4fae0 <__register_exitproc+0x10>
   4fb48:	11006317 	ldw	r4,396(r2)
   4fb4c:	2252b03a 	or	r9,r4,r9
   4fb50:	12406315 	stw	r9,396(r2)
   4fb54:	003ff106 	br	4fb1c <__register_exitproc+0x4c>
   4fb58:	00bfffc4 	movi	r2,-1
   4fb5c:	f800283a 	ret

0004fb60 <__call_exitprocs>:
   4fb60:	defff704 	addi	sp,sp,-36
   4fb64:	00800174 	movhi	r2,5
   4fb68:	dcc00315 	stw	r19,12(sp)
   4fb6c:	14c7ac17 	ldw	r19,7856(r2)
   4fb70:	dc800215 	stw	r18,8(sp)
   4fb74:	dfc00815 	stw	ra,32(sp)
   4fb78:	9c805217 	ldw	r18,328(r19)
   4fb7c:	ddc00715 	stw	r23,28(sp)
   4fb80:	dd800615 	stw	r22,24(sp)
   4fb84:	dd400515 	stw	r21,20(sp)
   4fb88:	dd000415 	stw	r20,16(sp)
   4fb8c:	dc400115 	stw	r17,4(sp)
   4fb90:	dc000015 	stw	r16,0(sp)
   4fb94:	90001026 	beq	r18,zero,4fbd8 <__call_exitprocs+0x78>
   4fb98:	202b883a 	mov	r21,r4
   4fb9c:	282d883a 	mov	r22,r5
   4fba0:	05000044 	movi	r20,1
   4fba4:	94000117 	ldw	r16,4(r18)
   4fba8:	847fffc4 	addi	r17,r16,-1
   4fbac:	88000a16 	blt	r17,zero,4fbd8 <__call_exitprocs+0x78>
   4fbb0:	84000044 	addi	r16,r16,1
   4fbb4:	802090ba 	slli	r16,r16,2
   4fbb8:	9421883a 	add	r16,r18,r16
   4fbbc:	b0001126 	beq	r22,zero,4fc04 <__call_exitprocs+0xa4>
   4fbc0:	80804017 	ldw	r2,256(r16)
   4fbc4:	15800f26 	beq	r2,r22,4fc04 <__call_exitprocs+0xa4>
   4fbc8:	8c7fffc4 	addi	r17,r17,-1
   4fbcc:	88bfffd8 	cmpnei	r2,r17,-1
   4fbd0:	843fff04 	addi	r16,r16,-4
   4fbd4:	103ff91e 	bne	r2,zero,4fbbc <__call_exitprocs+0x5c>
   4fbd8:	dfc00817 	ldw	ra,32(sp)
   4fbdc:	ddc00717 	ldw	r23,28(sp)
   4fbe0:	dd800617 	ldw	r22,24(sp)
   4fbe4:	dd400517 	ldw	r21,20(sp)
   4fbe8:	dd000417 	ldw	r20,16(sp)
   4fbec:	dcc00317 	ldw	r19,12(sp)
   4fbf0:	dc800217 	ldw	r18,8(sp)
   4fbf4:	dc400117 	ldw	r17,4(sp)
   4fbf8:	dc000017 	ldw	r16,0(sp)
   4fbfc:	dec00904 	addi	sp,sp,36
   4fc00:	f800283a 	ret
   4fc04:	90800117 	ldw	r2,4(r18)
   4fc08:	81800017 	ldw	r6,0(r16)
   4fc0c:	10bfffc4 	addi	r2,r2,-1
   4fc10:	14401726 	beq	r2,r17,4fc70 <__call_exitprocs+0x110>
   4fc14:	80000015 	stw	zero,0(r16)
   4fc18:	303feb26 	beq	r6,zero,4fbc8 <__call_exitprocs+0x68>
   4fc1c:	a446983a 	sll	r3,r20,r17
   4fc20:	90806217 	ldw	r2,392(r18)
   4fc24:	95c00117 	ldw	r23,4(r18)
   4fc28:	1884703a 	and	r2,r3,r2
   4fc2c:	1000081e 	bne	r2,zero,4fc50 <__call_exitprocs+0xf0>
   4fc30:	303ee83a 	callr	r6
   4fc34:	90c00117 	ldw	r3,4(r18)
   4fc38:	98805217 	ldw	r2,328(r19)
   4fc3c:	1dc0011e 	bne	r3,r23,4fc44 <__call_exitprocs+0xe4>
   4fc40:	90bfe126 	beq	r18,r2,4fbc8 <__call_exitprocs+0x68>
   4fc44:	103fe426 	beq	r2,zero,4fbd8 <__call_exitprocs+0x78>
   4fc48:	1025883a 	mov	r18,r2
   4fc4c:	003fd506 	br	4fba4 <__call_exitprocs+0x44>
   4fc50:	90806317 	ldw	r2,396(r18)
   4fc54:	81002017 	ldw	r4,128(r16)
   4fc58:	1886703a 	and	r3,r3,r2
   4fc5c:	1800061e 	bne	r3,zero,4fc78 <__call_exitprocs+0x118>
   4fc60:	200b883a 	mov	r5,r4
   4fc64:	a809883a 	mov	r4,r21
   4fc68:	303ee83a 	callr	r6
   4fc6c:	003ff106 	br	4fc34 <__call_exitprocs+0xd4>
   4fc70:	94400115 	stw	r17,4(r18)
   4fc74:	003fe806 	br	4fc18 <__call_exitprocs+0xb8>
   4fc78:	303ee83a 	callr	r6
   4fc7c:	003fed06 	br	4fc34 <__call_exitprocs+0xd4>
