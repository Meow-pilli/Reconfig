$date
	Sat Sep 09 17:58:18 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench_four $end
$var wire 4 ! Sum [3:0] $end
$var wire 1 " Cout $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % Cin $end
$var reg 1 & clk $end
$scope module dut $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 1 % Cin $end
$var wire 1 ) c3 $end
$var wire 1 * c2 $end
$var wire 1 + c1 $end
$var wire 4 , Sum [3:0] $end
$var wire 1 " Cout $end
$scope module fa0 $end
$var wire 1 - A $end
$var wire 1 . B $end
$var wire 1 % Cin $end
$var wire 1 + Cout $end
$var wire 1 / Sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 0 A $end
$var wire 1 1 B $end
$var wire 1 + Cin $end
$var wire 1 * Cout $end
$var wire 1 2 Sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 3 A $end
$var wire 1 4 B $end
$var wire 1 * Cin $end
$var wire 1 ) Cout $end
$var wire 1 5 Sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 6 A $end
$var wire 1 7 B $end
$var wire 1 ) Cin $end
$var wire 1 " Cout $end
$var wire 1 8 Sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
08
07
06
05
04
03
02
01
00
0/
0.
0-
b0 ,
0+
0*
0)
b0 (
b0 '
0&
0%
b0 $
b0 #
0"
b0 !
$end
#5
1&
#10
15
b1100 !
b1100 ,
18
1*
1)
11
14
10
13
0&
b110 $
b110 (
b110 #
b110 '
#15
1&
#20
b1110 !
b1110 ,
12
1+
1.
1-
0&
b111 $
b111 (
b111 #
b111 '
#25
1&
#30
b110 !
b110 ,
08
0)
1"
04
17
03
16
0&
b1011 $
b1011 (
b1011 #
b1011 '
#35
1&
#40
02
05
0+
0*
b1000 !
b1000 ,
18
1)
0.
01
14
0-
00
13
0&
b1100 $
b1100 (
b1100 #
b1100 '
#45
1&
#50
15
1*
12
1+
b1111 !
b1111 ,
1/
1.
11
1-
10
0&
1%
b1111 $
b1111 (
b1111 #
b1111 '
#55
1&
#60
0&
